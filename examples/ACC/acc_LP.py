import cvxpy as cp
import numpy as np
import numpy.random as npr
import scipy.sparse as sp
import torch
from cvxpylayers.torch.cvxpylayer import CvxpyLayer
import matplotlib.pyplot as plt
from sympy import MatrixSymbol, Matrix
from sympy import *
import numpy.linalg as LA
from itertools import *
import matplotlib.patches as mpatches
from handelman_utils import *
from timer import *

class ACC:
	deltaT = 0.1
	max_iteration = 100 # 5 seconds simulation
	mu = 0.0001

	def __init__(self):
		self.t = 0
		x_l = np.random.uniform(100,102)
		v_l = np.random.uniform(20,30)
		r_l = 0
		x_e = np.random.uniform(30,31)
		v_e = np.random.uniform(30,30.5)
		r_e = 0
		
		self.state = np.array([x_l, v_l, r_l, x_e, v_e, r_e])

	def reset(self):
		x_l = np.random.uniform(100,102)
		v_l = np.random.uniform(20,30)
		r_l = 0
		x_e = np.random.uniform(30,31)
		v_e = np.random.uniform(30,30.5)
		r_e = 0
		
		self.t = 0
		self.state = np.array([x_l, v_l, r_l, x_e, v_e, r_e])
		return self.state

	def step(self, a_e):
		dt = self.deltaT
		x_l, v_l, r_l, x_e, v_e, r_e = self.state

		x_l_new = x_l + v_l*dt
		v_l_new = v_l + r_l*dt
		r_l_new = r_l + (-2*r_l-25*np.sin(v_l)-self.mu*v_l**2)*dt
		x_e_new = x_e + v_e*dt
		v_e_new = v_e + r_e*dt
		r_e_new = r_e + (-2*r_e+2*a_e-self.mu*v_e**2)*dt
	
		self.state = np.array([x_l_new, v_l_new, r_l_new, x_e_new, v_e_new, r_e_new])
		self.t += 1
		# similar to tracking or stablizing to origin point design
		reward = -(x_l_new - x_e_new - 10 - 1.4 * v_e_new)**2 - (v_l_new - v_e_new)**2 - (r_l_new - r_e_new)**2 
		# print(reward)
		return self.state, reward, self.t == self.max_iteration


def SVG(control_param, view=False, V=None):
	np.set_printoptions(precision=2)
	env = ACC()
	state_tra = []
	control_tra = []
	distance_tra = []
	state, done = env.reset(), False
	dt = env.deltaT
	reward = 0
	while not done:
		x_l, v_l, r_l, x_e, v_e, r_e = state[0], state[1], state[2], state[3], state[4], state[5]
		a_e = control_param[0].dot(np.array([x_l - x_e - 1.4 * v_e, v_l - v_e, r_l - r_e]))
		state_tra.append(state)
		control_tra.append(np.array([a_e]))
		
		next_state, reward, done = env.step(a_e)
		distance_tra.append(-reward)
		state = next_state

	if view:
		# print('trajectory of SVG controllrt: ', state_tra)
		x_diff = [s[0] - s[3] for s in state_tra]
		safety_margin = [10 + 1.4*s[4] for s in state_tra]
		v_l = [s[1] for s in state_tra]
		v_e = [s[4] for s in state_tra]
		# x = [s[3] for s in state_tra]
		fig = plt.figure()
		ax1 = fig.add_subplot(3,1,1)
		ax1.plot(x_diff, label='$x_diff$')
		ax1.plot(safety_margin, label='margin')
		ax2 = fig.add_subplot(3,1,2)
		ax2.plot(v_l, label='v_l')
		ax2.plot(v_e, label='v_e')
		# plt.plot(z_diff, label='$\delta z$')
		# plt.plot(x, label='ego')
		ax1.legend()
		ax2.legend()
		if V is not None:
			BarrierList = []
			for i in range(len(state_tra)):
				x_l, v_l, r_l, x_e, v_e, r_l = state_tra[i]
				x, y = np.sin(v_l), np.cos(v_l)
				barrier_value = r_e**2*V[0, 11] + r_e*r_l*V[0, 29] + r_e*v_e*V[0, 22] + r_e*v_l*V[0, 34] + r_e*x*V[0, 19] + r_e*x_e*V[0, 25] + r_e*x_l*V[0, 40] + r_e*y*V[0, 18] + r_e*V[0, 3] + r_l**2*V[0, 14] + r_l*v_e*V[0, 30] + r_l*v_l*V[0, 37] + r_l*x*V[0, 28] + r_l*x_e*V[0, 31] + r_l*x_l*V[0, 43] + r_l*y*V[0, 27] + r_l*V[0, 6] + v_e**2*V[0, 12] + v_e*v_l*V[0, 35] + v_e*x*V[0, 21] + v_e*x_e*V[0, 26] + v_e*x_l*V[0, 41] + v_e*y*V[0, 20] + v_e*V[0, 4] + v_l**2*V[0, 15] + v_l*x*V[0, 33] + v_l*x_e*V[0, 36] + v_l*x_l*V[0, 44] + v_l*y*V[0, 32] + v_l*V[0, 7] + x**2*V[0, 10] + x*x_e*V[0, 24] + x*x_l*V[0, 39] + x*y*V[0, 17] + x*V[0, 2] + x_e**2*V[0, 13] + x_e*x_l*V[0, 42] + x_e*y*V[0, 23] + x_e*V[0, 5] + x_l**2*V[0, 16] + x_l*y*V[0, 38] + x_l*V[0, 8] + y**2*V[0, 9] + y*V[0, 1] + V[0, 0]
				BarrierList.append(barrier_value)
			ax3 = fig.add_subplot(3, 1, 3)
			ax3.plot(BarrierList, label='B(s)')
			ax3.legend()
		fig.savefig('test_deg3.jpg')

	vs_prime = np.array([0.0] * 6)
	vtheta_prime = np.array([[0.0] * 3])
	gamma = 0.99

	for i in range(len(state_tra)-1, -1, -1):
		x_l, v_l, r_l, x_e, v_e, r_e = state_tra[i]
		a_e = control_tra[i]


		rs = np.array([
			-2*(x_l - x_e - 10 - 1.4 * v_e), 
			-2*(v_l - v_e), 
			-2*(r_l - r_e), 
			2*(x_l - x_e - 10 - 1.4 * v_e),
			2.8*(x_l - x_e - 10 - 1.4 * v_e) + 2*(v_l - v_e),
			2*(r_l - r_e),
			])

		c1 = np.reshape(control_param, (1, 3))

		pis = np.array([
					   [c1[0,0], c1[0,1], c1[0,2], -c1[0,0], -1.4*c1[0,0]-c1[0,1], -c1[0,2]]
						])
		fs = np.array([
			[1,dt,0,0,0,0],
			[0,1,dt,0,0,0],
			[0,-25*np.cos(v_l)-2*env.mu*v_l*dt,1-2*dt,0,0,0],
			[0,0,0,1,dt,0],
			[0,0,0,0,1,dt],
			[0,0,0,0,-2*env.mu*v_e*dt,1-2*dt]	
			])	

		fa = np.array([
			[0],[0],[0],[0],[0],[2*dt]
			])
		vs = rs + gamma * vs_prime.dot(fs + fa.dot(pis))
		pitheta = np.array(
			[[x_l-x_e-1.4*v_e, v_l-v_e, r_l-r_e]]
			)
		vtheta =  gamma * vs_prime.dot(fa).dot(pitheta) + gamma * vtheta_prime
		vs_prime = vs
		vtheta_prime = vtheta

	return vtheta, state


def BarrierConstraints():

	def generateConstraints(exp1, exp2, file, degree):
		for h in range(degree+1):
			for k in range(degree+1):
				for z in range(degree+1):
					for m in range(degree+1):
						for n in range(degree+1):
							for p in range(degree+1):
								for q in range(degree+1):
									for r in range(degree+1):
										if h + k + z + m + n + p + q + r<= degree:
											if exp1.coeff(x_l,h).coeff(v_l,k).coeff(r_l,z).coeff(x_e,m).coeff(v_e,n).coeff(r_e,p).coeff(x,q).coeff(y,r) != 0:
												if exp2.coeff(x_l,h).coeff(v_l,k).coeff(r_l,z).coeff(x_e,m).coeff(v_e,n).coeff(r_e,p).coeff(x,q).coeff(y,r) != 0:
													file.write('constraints += [' + str(exp1.coeff(x_l,h).coeff(v_l,k).coeff(r_l,z).coeff(x_e,m).coeff(v_e,n).coeff(r_e,p).coeff(x,q).coeff(y,r)) + ' >= ' + str(exp2.coeff(x_l,h).coeff(v_l,k).coeff(r_l,z).coeff(x_e,m).coeff(v_e,n).coeff(r_e,p).coeff(x,q).coeff(y,r)) + '- objc' + ']\n')
													file.write('constraints += [' + str(exp1.coeff(x_l,h).coeff(v_l,k).coeff(r_l,z).coeff(x_e,m).coeff(v_e,n).coeff(r_e,p).coeff(x,q).coeff(y,r)) + ' <= ' + str(exp2.coeff(x_l,h).coeff(v_l,k).coeff(r_l,z).coeff(x_e,m).coeff(v_e,n).coeff(r_e,p).coeff(x,q).coeff(y,r)) + '+ objc' + ']\n')
														# print('constraints += [', exp1.coeff(x,a).coeff(y,b).coeff(z,c).coeff(m,d).coeff(n,e).coeff(p,f), ' == ', exp2.coeff(x,a).coeff(y,b).coeff(z,c).coeff(m,d).coeff(n,e).coeff(p,f), ']')
												else:
													file.write('constraints += [' + str(exp1.coeff(x_l,h).coeff(v_l,k).coeff(r_l,z).coeff(x_e,m).coeff(v_e,n).coeff(r_e,p).coeff(x,q).coeff(y,r)) + ' == ' + str(exp2.coeff(x_l,h).coeff(v_l,k).coeff(r_l,z).coeff(x_e,m).coeff(v_e,n).coeff(r_e,p).coeff(x,q).coeff(y,r)) + ']\n')

	x_l, v_l, r_l, x_e, v_e, r_e, x, y, l = symbols('x_l, v_l, r_l, x_e, v_e, r_e, x, y, l')
	# Confined in the [-2,2]^6 spaces
	initial_set = [x_l-100, x_e-30, v_l-20, v_e-30, r_l, r_e, x+1, y+1]
	X = [x_l, v_l, r_l, x_e, v_e, r_e, x, y]
	# print("setting up")
	# Generate the possible handelman product to the power defined
	init_poly_list = Matrix(possible_handelman_generation(3, initial_set))
	# print("generating poly_list")
	# incorporate the interval with handelman basis
	monomial = monomial_generation(3, X)
	# monomial.remove(1)
	monomial_list = Matrix(monomial)
	# print("generating monomial terms")
	# print(monomial_list)
	V = MatrixSymbol('V', 1, len(monomial_list))
	lambda_poly_init = MatrixSymbol('lambda_1', 1, len(init_poly_list))
	print("the length of the lambda_1 is", len(init_poly_list))
	lhs_init = V * monomial_list
	# lhs_init = V * monomial_list
	lhs_init = lhs_init[0, 0].expand()
	# print("Get done the left hand side mul")
	
	rhs_init = lambda_poly_init * init_poly_list
	# print("Get done the right hand side mul")
	rhs_init = rhs_init[0, 0].expand()
	file = open("barrier.txt","w")
	file.write("#-------------------The Initial Set Conditions-------------------\n")
	generateConstraints(rhs_init, lhs_init, file, degree=3)
		# f.close()
	# theta = MatrixSymbol('theta',1 ,2)
	u0Base = Matrix([[x_l - x_e - 1.4 * v_e, v_l - v_e, r_l - r_e]])
	t0 = MatrixSymbol('t0', 1, 3)
	a_e = t0*u0Base.T
	a_e = expand(a_e[0, 0])

	dynamics = [v_l, 
				r_l, 
				-2*r_l-25*x-0.0001*v_l**2, 
				v_e, 
				r_e, 
				-2*r_e+2*a_e-0.0001*v_e**2,
				y*r_l,
				-x*r_l]
	# lhs_der= -gradVtox*dynamics - n*Matrix([2 - a**2 - b**2 - c**2 - d**2 - e**2 - f**2])
	# lhs_der = expand(lhs_der[0, 0])
	# temp = monomial_generation(2, X)
	monomial_der = GetDerivative(dynamics, monomial, X)
	lhs_der = V * monomial_der - l*V*monomial_list - Matrix([0.001*(r_l**2+r_e**2+v_l**2+v_e**2+x_l**2+x_e**2)])
	lhs_der = lhs_der[0,0].expand()

	lie_poly_list = [500-x_l, 500-x_e, 40-v_l, 40-v_e, 10-r_l, 10-r_e, 1-x, 1-y]
	lie_poly = Matrix(possible_handelman_generation(4, lie_poly_list))
	lambda_poly_der = MatrixSymbol('lambda_2', 1, len(lie_poly))
	print("the length of the lambda_2 is", len(lie_poly))
	rhs_der = lambda_poly_der * lie_poly
	rhs_der = rhs_der[0,0].expand()

	# with open('cons.txt', 'a+') as f:
	file.write("\n")
	file.write("#------------------The Lie Derivative conditions------------------\n")
	generateConstraints(rhs_der, lhs_der, file, degree=4)
	file.write("\n")

	unsafe_poly_list = [x_e+10+1.4*v_e-x_l, v_l-40, v_e-40, r_l-10, r_e-10, x-1, y-1]
	unsafe_poly = Matrix(possible_handelman_generation(3, unsafe_poly_list))
	lambda_poly_unsafe = MatrixSymbol('lambda_3', 1, len(unsafe_poly))
	print("the length of the lambda_3 is", len(unsafe_poly))

	rhs_unsafe = lambda_poly_unsafe * unsafe_poly
	rhs_unsafe = rhs_unsafe[0,0].expand()

	lhs_unsafe = -V*monomial_list - Matrix([0.0001*(r_l**2+r_e**2+v_l**2+v_e**2+x_l**2+x_e**2)])
	lhs_unsafe = lhs_unsafe[0,0].expand()

	file.write("\n")
	file.write("#------------------The Unsafe conditions------------------\n")
	generateConstraints(rhs_unsafe, lhs_unsafe, file, degree=3)
	file.write("\n")


	file.write("#------------------Monomial and Polynomial Terms------------------\n")
	file.write("polynomial terms:"+str(monomial)+"\n")
	file.write("lhs_init terms:"+str(lhs_init)+"\n")
	file.write("number of polynomial terms:"+str(len(monomial_list))+"\n")
	# file.write(str(len(monomial))+"\n")
	file.write("\n")
	file.write("#------------------Lie Derivative test------------------\n")
	temp1 = V*monomial_der
	temp2 = l*V*monomial_list
	file.write(str(expand(temp1[0, 0])-expand(temp2[0, 0]))+"\n")
	file.close()



def BarrierTest(V, control_param, l):
	# initial space
	t0 = np.reshape(control_param, (1, 3))
	InitCnt, UnsafeCnt, LieCnt = 0, 0, 0
	InitTest, UnsafeTest, LieTest = True, True, True
	# Unsafe_min = 10000
	for i in range(10000):
		initstate = np.random.normal(0, 1, size=(6,))
		initstate = initstate / LA.norm(initstate)
		x_l, v_l, r_l, x_e, v_e, r_e = initstate
		x_l += 101
		v_l = 5 * v_l + 25
		r_l = 0
		x_e = x_e * 0.5 + 30.5
		v_e = v_e * 0.25 + 30.25
		r_e = 0
		x = np.sin(v_l)
		y = np.cos(v_l)
		# print("Break 1")
		
		
		# init = r_e**2*V[0, 11] + r_e*r_l*V[0, 29] + r_e*v_e*V[0, 22] + r_e*v_l*V[0, 34] + r_e*x*V[0, 19] + r_e*x_e*V[0, 25] + r_e*x_l*V[0, 40] + r_e*y*V[0, 18] + r_e*V[0, 3] + r_l**2*V[0, 14] + r_l*v_e*V[0, 30] + r_l*v_l*V[0, 37] + r_l*x*V[0, 28] + r_l*x_e*V[0, 31] + r_l*x_l*V[0, 43] + r_l*y*V[0, 27] + r_l*V[0, 6] + v_e**2*V[0, 12] + v_e*v_l*V[0, 35] + v_e*x*V[0, 21] + v_e*x_e*V[0, 26] + v_e*x_l*V[0, 41] + v_e*y*V[0, 20] + v_e*V[0, 4] + v_l**2*V[0, 15] + v_l*x*V[0, 33] + v_l*x_e*V[0, 36] + v_l*x_l*V[0, 44] + v_l*y*V[0, 32] + v_l*V[0, 7] + x**2*V[0, 10] + x*x_e*V[0, 24] + x*x_l*V[0, 39] + x*y*V[0, 17] + x*V[0, 2] + x_e**2*V[0, 13] + x_e*x_l*V[0, 42] + x_e*y*V[0, 23] + x_e*V[0, 5] + x_l**2*V[0, 16] + x_l*y*V[0, 38] + x_l*V[0, 8] + y**2*V[0, 9] + y*V[0, 1] + V[0, 0]
		init = r_e**3*V[0, 19] + r_e**2*r_l*V[0, 75] + r_e**2*v_e*V[0, 61] + r_e**2*v_l*V[0, 85] + r_e**2*x*V[0, 58] + r_e**2*x_e*V[0, 67] + r_e**2*x_l*V[0, 97] + r_e**2*y*V[0, 57] + r_e**2*V[0, 11] + r_e*r_l**2*V[0, 80] + r_e*r_l*v_e*V[0, 124] + r_e*r_l*v_l*V[0, 141] + r_e*r_l*x*V[0, 121] + r_e*r_l*x_e*V[0, 127] + r_e*r_l*x_l*V[0, 156] + r_e*r_l*y*V[0, 120] + r_e*r_l*V[0, 37] + r_e*v_e**2*V[0, 64] + r_e*v_e*v_l*V[0, 134] + r_e*v_e*x*V[0, 112] + r_e*v_e*x_e*V[0, 118] + r_e*v_e*x_l*V[0, 149] + r_e*v_e*y*V[0, 111] + r_e*v_e*V[0, 30] + r_e*v_l**2*V[0, 91] + r_e*v_l*x*V[0, 131] + r_e*v_l*x_e*V[0, 137] + r_e*v_l*x_l*V[0, 161] + r_e*v_l*y*V[0, 130] + r_e*v_l*V[0, 42] + r_e*x**2*V[0, 56] + r_e*x*x_e*V[0, 115] + r_e*x*x_l*V[0, 146] + r_e*x*y*V[0, 109] + r_e*x*V[0, 27] + r_e*x_e**2*V[0, 71] + r_e*x_e*x_l*V[0, 152] + r_e*x_e*y*V[0, 114] + r_e*x_e*V[0, 33] + r_e*x_l**2*V[0, 104] + r_e*x_l*y*V[0, 145] + r_e*x_l*V[0, 48] + r_e*y**2*V[0, 55] + r_e*y*V[0, 26] + r_e*V[0, 3] + r_l**3*V[0, 22] + r_l**2*v_e*V[0, 81] + r_l**2*v_l*V[0, 88] + r_l**2*x*V[0, 79] + r_l**2*x_e*V[0, 82] + r_l**2*x_l*V[0, 100] + r_l**2*y*V[0, 78] + r_l**2*V[0, 14] + r_l*v_e**2*V[0, 76] + r_l*v_e*v_l*V[0, 142] + r_l*v_e*x*V[0, 123] + r_l*v_e*x_e*V[0, 128] + r_l*v_e*x_l*V[0, 157] + r_l*v_e*y*V[0, 122] + r_l*v_e*V[0, 38] + r_l*v_l**2*V[0, 94] + r_l*v_l*x*V[0, 140] + r_l*v_l*x_e*V[0, 143] + r_l*v_l*x_l*V[0, 164] + r_l*v_l*y*V[0, 139] + r_l*v_l*V[0, 45] + r_l*x**2*V[0, 74] + r_l*x*x_e*V[0, 126] + r_l*x*x_l*V[0, 155] + r_l*x*y*V[0, 119] + r_l*x*V[0, 36] + r_l*x_e**2*V[0, 77] + r_l*x_e*x_l*V[0, 158] + r_l*x_e*y*V[0, 125] + r_l*x_e*V[0, 39] + r_l*x_l**2*V[0, 107] + r_l*x_l*y*V[0, 154] + r_l*x_l*V[0, 51] + r_l*y**2*V[0, 73] + r_l*y*V[0, 35] + r_l*V[0, 6] + v_e**3*V[0, 20] + v_e**2*v_l*V[0, 86] + v_e**2*x*V[0, 63] + v_e**2*x_e*V[0, 68] + v_e**2*x_l*V[0, 98] + v_e**2*y*V[0, 62] + v_e**2*V[0, 12] + v_e*v_l**2*V[0, 92] + v_e*v_l*x*V[0, 133] + v_e*v_l*x_e*V[0, 138] + v_e*v_l*x_l*V[0, 162] + v_e*v_l*y*V[0, 132] + v_e*v_l*V[0, 43] + v_e*x**2*V[0, 60] + v_e*x*x_e*V[0, 117] + v_e*x*x_l*V[0, 148] + v_e*x*y*V[0, 110] + v_e*x*V[0, 29] + v_e*x_e**2*V[0, 72] + v_e*x_e*x_l*V[0, 153] + v_e*x_e*y*V[0, 116] + v_e*x_e*V[0, 34] + v_e*x_l**2*V[0, 105] + v_e*x_l*y*V[0, 147] + v_e*x_l*V[0, 49] + v_e*y**2*V[0, 59] + v_e*y*V[0, 28] + v_e*V[0, 4] + v_l**3*V[0, 23] + v_l**2*x*V[0, 90] + v_l**2*x_e*V[0, 93] + v_l**2*x_l*V[0, 101] + v_l**2*y*V[0, 89] + v_l**2*V[0, 15] + v_l*x**2*V[0, 84] + v_l*x*x_e*V[0, 136] + v_l*x*x_l*V[0, 160] + v_l*x*y*V[0, 129] + v_l*x*V[0, 41] + v_l*x_e**2*V[0, 87] + v_l*x_e*x_l*V[0, 163] + v_l*x_e*y*V[0, 135] + v_l*x_e*V[0, 44] + v_l*x_l**2*V[0, 108] + v_l*x_l*y*V[0, 159] + v_l*x_l*V[0, 52] + v_l*y**2*V[0, 83] + v_l*y*V[0, 40] + v_l*V[0, 7] + x**3*V[0, 18] + x**2*x_e*V[0, 66] + x**2*x_l*V[0, 96] + x**2*y*V[0, 54] + x**2*V[0, 10] + x*x_e**2*V[0, 70] + x*x_e*x_l*V[0, 151] + x*x_e*y*V[0, 113] + x*x_e*V[0, 32] + x*x_l**2*V[0, 103] + x*x_l*y*V[0, 144] + x*x_l*V[0, 47] + x*y**2*V[0, 53] + x*y*V[0, 25] + x*V[0, 2] + x_e**3*V[0, 21] + x_e**2*x_l*V[0, 99] + x_e**2*y*V[0, 69] + x_e**2*V[0, 13] + x_e*x_l**2*V[0, 106] + x_e*x_l*y*V[0, 150] + x_e*x_l*V[0, 50] + x_e*y**2*V[0, 65] + x_e*y*V[0, 31] + x_e*V[0, 5] + x_l**3*V[0, 24] + x_l**2*y*V[0, 102] + x_l**2*V[0, 16] + x_l*y**2*V[0, 95] + x_l*y*V[0, 46] + x_l*V[0, 8] + y**3*V[0, 17] + y**2*V[0, 9] + y*V[0, 1] + V[0, 0]
		# print("The problem is here Init!")
		if init <= 0:
			InitCnt += 1
			InitTest = False

		statespace = np.random.normal(0, 1, size=(6,))
		statespace = statespace / LA.norm(statespace)
		x_l, v_l, r_l, x_e, v_e, r_e = statespace

		x_l = x_l * 155 + 345 
		v_l = v_l * 10 + 30
		r_l = r_l * 10
		x_e = x_e * 185 + 315
		v_e = v_e * 10 + 30
		r_e = r_e * 10
		x = np.sin(v_l)
		y = np.cos(v_l)

		unsafe = 0
		
		if 10 + 1.4*v_e > x_l - x_e:
			unsafe = r_e**3*V[0, 19] + r_e**2*r_l*V[0, 75] + r_e**2*v_e*V[0, 61] + r_e**2*v_l*V[0, 85] + r_e**2*x*V[0, 58] + r_e**2*x_e*V[0, 67] + r_e**2*x_l*V[0, 97] + r_e**2*y*V[0, 57] + r_e**2*V[0, 11] + r_e*r_l**2*V[0, 80] + r_e*r_l*v_e*V[0, 124] + r_e*r_l*v_l*V[0, 141] + r_e*r_l*x*V[0, 121] + r_e*r_l*x_e*V[0, 127] + r_e*r_l*x_l*V[0, 156] + r_e*r_l*y*V[0, 120] + r_e*r_l*V[0, 37] + r_e*v_e**2*V[0, 64] + r_e*v_e*v_l*V[0, 134] + r_e*v_e*x*V[0, 112] + r_e*v_e*x_e*V[0, 118] + r_e*v_e*x_l*V[0, 149] + r_e*v_e*y*V[0, 111] + r_e*v_e*V[0, 30] + r_e*v_l**2*V[0, 91] + r_e*v_l*x*V[0, 131] + r_e*v_l*x_e*V[0, 137] + r_e*v_l*x_l*V[0, 161] + r_e*v_l*y*V[0, 130] + r_e*v_l*V[0, 42] + r_e*x**2*V[0, 56] + r_e*x*x_e*V[0, 115] + r_e*x*x_l*V[0, 146] + r_e*x*y*V[0, 109] + r_e*x*V[0, 27] + r_e*x_e**2*V[0, 71] + r_e*x_e*x_l*V[0, 152] + r_e*x_e*y*V[0, 114] + r_e*x_e*V[0, 33] + r_e*x_l**2*V[0, 104] + r_e*x_l*y*V[0, 145] + r_e*x_l*V[0, 48] + r_e*y**2*V[0, 55] + r_e*y*V[0, 26] + r_e*V[0, 3] + r_l**3*V[0, 22] + r_l**2*v_e*V[0, 81] + r_l**2*v_l*V[0, 88] + r_l**2*x*V[0, 79] + r_l**2*x_e*V[0, 82] + r_l**2*x_l*V[0, 100] + r_l**2*y*V[0, 78] + r_l**2*V[0, 14] + r_l*v_e**2*V[0, 76] + r_l*v_e*v_l*V[0, 142] + r_l*v_e*x*V[0, 123] + r_l*v_e*x_e*V[0, 128] + r_l*v_e*x_l*V[0, 157] + r_l*v_e*y*V[0, 122] + r_l*v_e*V[0, 38] + r_l*v_l**2*V[0, 94] + r_l*v_l*x*V[0, 140] + r_l*v_l*x_e*V[0, 143] + r_l*v_l*x_l*V[0, 164] + r_l*v_l*y*V[0, 139] + r_l*v_l*V[0, 45] + r_l*x**2*V[0, 74] + r_l*x*x_e*V[0, 126] + r_l*x*x_l*V[0, 155] + r_l*x*y*V[0, 119] + r_l*x*V[0, 36] + r_l*x_e**2*V[0, 77] + r_l*x_e*x_l*V[0, 158] + r_l*x_e*y*V[0, 125] + r_l*x_e*V[0, 39] + r_l*x_l**2*V[0, 107] + r_l*x_l*y*V[0, 154] + r_l*x_l*V[0, 51] + r_l*y**2*V[0, 73] + r_l*y*V[0, 35] + r_l*V[0, 6] + v_e**3*V[0, 20] + v_e**2*v_l*V[0, 86] + v_e**2*x*V[0, 63] + v_e**2*x_e*V[0, 68] + v_e**2*x_l*V[0, 98] + v_e**2*y*V[0, 62] + v_e**2*V[0, 12] + v_e*v_l**2*V[0, 92] + v_e*v_l*x*V[0, 133] + v_e*v_l*x_e*V[0, 138] + v_e*v_l*x_l*V[0, 162] + v_e*v_l*y*V[0, 132] + v_e*v_l*V[0, 43] + v_e*x**2*V[0, 60] + v_e*x*x_e*V[0, 117] + v_e*x*x_l*V[0, 148] + v_e*x*y*V[0, 110] + v_e*x*V[0, 29] + v_e*x_e**2*V[0, 72] + v_e*x_e*x_l*V[0, 153] + v_e*x_e*y*V[0, 116] + v_e*x_e*V[0, 34] + v_e*x_l**2*V[0, 105] + v_e*x_l*y*V[0, 147] + v_e*x_l*V[0, 49] + v_e*y**2*V[0, 59] + v_e*y*V[0, 28] + v_e*V[0, 4] + v_l**3*V[0, 23] + v_l**2*x*V[0, 90] + v_l**2*x_e*V[0, 93] + v_l**2*x_l*V[0, 101] + v_l**2*y*V[0, 89] + v_l**2*V[0, 15] + v_l*x**2*V[0, 84] + v_l*x*x_e*V[0, 136] + v_l*x*x_l*V[0, 160] + v_l*x*y*V[0, 129] + v_l*x*V[0, 41] + v_l*x_e**2*V[0, 87] + v_l*x_e*x_l*V[0, 163] + v_l*x_e*y*V[0, 135] + v_l*x_e*V[0, 44] + v_l*x_l**2*V[0, 108] + v_l*x_l*y*V[0, 159] + v_l*x_l*V[0, 52] + v_l*y**2*V[0, 83] + v_l*y*V[0, 40] + v_l*V[0, 7] + x**3*V[0, 18] + x**2*x_e*V[0, 66] + x**2*x_l*V[0, 96] + x**2*y*V[0, 54] + x**2*V[0, 10] + x*x_e**2*V[0, 70] + x*x_e*x_l*V[0, 151] + x*x_e*y*V[0, 113] + x*x_e*V[0, 32] + x*x_l**2*V[0, 103] + x*x_l*y*V[0, 144] + x*x_l*V[0, 47] + x*y**2*V[0, 53] + x*y*V[0, 25] + x*V[0, 2] + x_e**3*V[0, 21] + x_e**2*x_l*V[0, 99] + x_e**2*y*V[0, 69] + x_e**2*V[0, 13] + x_e*x_l**2*V[0, 106] + x_e*x_l*y*V[0, 150] + x_e*x_l*V[0, 50] + x_e*y**2*V[0, 65] + x_e*y*V[0, 31] + x_e*V[0, 5] + x_l**3*V[0, 24] + x_l**2*y*V[0, 102] + x_l**2*V[0, 16] + x_l*y**2*V[0, 95] + x_l*y*V[0, 46] + x_l*V[0, 8] + y**3*V[0, 17] + y**2*V[0, 9] + y*V[0, 1] + V[0, 0]
			# unsafe = r_e**2*V[0, 11] + r_e*r_l*V[0, 29] + r_e*v_e*V[0, 22] + r_e*v_l*V[0, 34] + r_e*x*V[0, 19] + r_e*x_e*V[0, 25] + r_e*x_l*V[0, 40] + r_e*y*V[0, 18] + r_e*V[0, 3] + r_l**2*V[0, 14] + r_l*v_e*V[0, 30] + r_l*v_l*V[0, 37] + r_l*x*V[0, 28] + r_l*x_e*V[0, 31] + r_l*x_l*V[0, 43] + r_l*y*V[0, 27] + r_l*V[0, 6] + v_e**2*V[0, 12] + v_e*v_l*V[0, 35] + v_e*x*V[0, 21] + v_e*x_e*V[0, 26] + v_e*x_l*V[0, 41] + v_e*y*V[0, 20] + v_e*V[0, 4] + v_l**2*V[0, 15] + v_l*x*V[0, 33] + v_l*x_e*V[0, 36] + v_l*x_l*V[0, 44] + v_l*y*V[0, 32] + v_l*V[0, 7] + x**2*V[0, 10] + x*x_e*V[0, 24] + x*x_l*V[0, 39] + x*y*V[0, 17] + x*V[0, 2] + x_e**2*V[0, 13] + x_e*x_l*V[0, 42] + x_e*y*V[0, 23] + x_e*V[0, 5] + x_l**2*V[0, 16] + x_l*y*V[0, 38] + x_l*V[0, 8] + y**2*V[0, 9] + y*V[0, 1] + V[0, 0]
			# print("The problem is here Unsafe")
			if unsafe >= 0:
				UnsafeCnt += 1
				UnsafeTest = False
		
		# lie = -l*r_e**2*V[0, 11] - l*r_e*r_l*V[0, 29] - l*r_e*v_e*V[0, 22] - l*r_e*v_l*V[0, 34] - l*r_e*x*V[0, 19] - l*r_e*x_e*V[0, 25] - l*r_e*x_l*V[0, 40] - l*r_e*y*V[0, 18] - l*r_e*V[0, 3] - l*r_l**2*V[0, 14] - l*r_l*v_e*V[0, 30] - l*r_l*v_l*V[0, 37] - l*r_l*x*V[0, 28] - l*r_l*x_e*V[0, 31] - l*r_l*x_l*V[0, 43] - l*r_l*y*V[0, 27] - l*r_l*V[0, 6] - l*v_e**2*V[0, 12] - l*v_e*v_l*V[0, 35] - l*v_e*x*V[0, 21] - l*v_e*x_e*V[0, 26] - l*v_e*x_l*V[0, 41] - l*v_e*y*V[0, 20] - l*v_e*V[0, 4] - l*v_l**2*V[0, 15] - l*v_l*x*V[0, 33] - l*v_l*x_e*V[0, 36] - l*v_l*x_l*V[0, 44] - l*v_l*y*V[0, 32] - l*v_l*V[0, 7] - l*x**2*V[0, 10] - l*x*x_e*V[0, 24] - l*x*x_l*V[0, 39] - l*x*y*V[0, 17] - l*x*V[0, 2] - l*x_e**2*V[0, 13] - l*x_e*x_l*V[0, 42] - l*x_e*y*V[0, 23] - l*x_e*V[0, 5] - l*x_l**2*V[0, 16] - l*x_l*y*V[0, 38] - l*x_l*V[0, 8] - l*y**2*V[0, 9] - l*y*V[0, 1] - l*V[0, 0] - 4*r_e**2*V[0, 11]*t0[0, 2] - 4*r_e**2*V[0, 11] + r_e**2*V[0, 22] - r_e*r_l*x*V[0, 18] + r_e*r_l*y*V[0, 19] + 4*r_e*r_l*V[0, 11]*t0[0, 2] - 2*r_e*r_l*V[0, 29]*t0[0, 2] - 4*r_e*r_l*V[0, 29] + r_e*r_l*V[0, 30] + r_e*r_l*V[0, 34] - 0.0002*r_e*v_e**2*V[0, 11] - 5.6*r_e*v_e*V[0, 11]*t0[0, 0] - 4*r_e*v_e*V[0, 11]*t0[0, 1] + 2*r_e*v_e*V[0, 12] - 2*r_e*v_e*V[0, 22]*t0[0, 2] - 2*r_e*v_e*V[0, 22] + r_e*v_e*V[0, 25] - 0.0001*r_e*v_l**2*V[0, 29] + 4*r_e*v_l*V[0, 11]*t0[0, 1] - 2*r_e*v_l*V[0, 34]*t0[0, 2] - 2*r_e*v_l*V[0, 34] + r_e*v_l*V[0, 35] + r_e*v_l*V[0, 40] - 2*r_e*x*V[0, 19]*t0[0, 2] - 2*r_e*x*V[0, 19] + r_e*x*V[0, 21] - r_e*x*V[0, 29] - 4*r_e*x_e*V[0, 11]*t0[0, 0] - 2*r_e*x_e*V[0, 25]*t0[0, 2] - 2*r_e*x_e*V[0, 25] + r_e*x_e*V[0, 26] + 4*r_e*x_l*V[0, 11]*t0[0, 0] - 2*r_e*x_l*V[0, 40]*t0[0, 2] - 2*r_e*x_l*V[0, 40] + r_e*x_l*V[0, 41] - 2*r_e*y*V[0, 18]*t0[0, 2] - 2*r_e*y*V[0, 18] + r_e*y*V[0, 20] - 2*r_e*V[0, 3]*t0[0, 2] - 2*r_e*V[0, 3] + r_e*V[0, 4] - r_l**2*x*V[0, 27] + r_l**2*y*V[0, 28] - 4*r_l**2*V[0, 14] + 2*r_l**2*V[0, 29]*t0[0, 2] + r_l**2*V[0, 37] - 0.0001*r_l*v_e**2*V[0, 29] - r_l*v_e*x*V[0, 20] + r_l*v_e*y*V[0, 21] + 2*r_l*v_e*V[0, 22]*t0[0, 2] - 2.8*r_l*v_e*V[0, 29]*t0[0, 0] - 2*r_l*v_e*V[0, 29]*t0[0, 1] - 2*r_l*v_e*V[0, 30] + r_l*v_e*V[0, 31] + r_l*v_e*V[0, 35] - 0.0002*r_l*v_l**2*V[0, 14] - r_l*v_l*x*V[0, 32] + r_l*v_l*y*V[0, 33] + 2*r_l*v_l*V[0, 15] + 2*r_l*v_l*V[0, 29]*t0[0, 1] + 2*r_l*v_l*V[0, 34]*t0[0, 2] - 2*r_l*v_l*V[0, 37] + r_l*v_l*V[0, 43] - r_l*x**2*V[0, 17] - r_l*x*x_e*V[0, 23] - r_l*x*x_l*V[0, 38] - 2*r_l*x*y*V[0, 9] + 2*r_l*x*y*V[0, 10] - r_l*x*V[0, 1] - 2*r_l*x*V[0, 14] + 2*r_l*x*V[0, 19]*t0[0, 2] - 2*r_l*x*V[0, 28] + r_l*x*V[0, 33] + r_l*x_e*y*V[0, 24] + 2*r_l*x_e*V[0, 25]*t0[0, 2] - 2*r_l*x_e*V[0, 29]*t0[0, 0] - 2*r_l*x_e*V[0, 31] + r_l*x_e*V[0, 36] + r_l*x_l*y*V[0, 39] + 2*r_l*x_l*V[0, 29]*t0[0, 0] + 2*r_l*x_l*V[0, 40]*t0[0, 2] - 2*r_l*x_l*V[0, 43] + r_l*x_l*V[0, 44] + r_l*y**2*V[0, 17] + r_l*y*V[0, 2] + 2*r_l*y*V[0, 18]*t0[0, 2] - 2*r_l*y*V[0, 27] + r_l*y*V[0, 32] + 2*r_l*V[0, 3]*t0[0, 2] - 2*r_l*V[0, 6] + r_l*V[0, 7] - 0.0001*v_e**3*V[0, 22] - 0.0001*v_e**2*v_l*V[0, 34] - 0.0001*v_e**2*x*V[0, 19] - 0.0001*v_e**2*x_e*V[0, 25] - 0.0001*v_e**2*x_l*V[0, 40] - 0.0001*v_e**2*y*V[0, 18] - 0.0001*v_e**2*V[0, 3] - 2.8*v_e**2*V[0, 22]*t0[0, 0] - 2*v_e**2*V[0, 22]*t0[0, 1] + v_e**2*V[0, 26] - 0.0001*v_e*v_l**2*V[0, 30] + 2*v_e*v_l*V[0, 22]*t0[0, 1] - 2.8*v_e*v_l*V[0, 34]*t0[0, 0] - 2*v_e*v_l*V[0, 34]*t0[0, 1] + v_e*v_l*V[0, 36] + v_e*v_l*V[0, 41] - 2.8*v_e*x*V[0, 19]*t0[0, 0] - 2*v_e*x*V[0, 19]*t0[0, 1] + v_e*x*V[0, 24] - v_e*x*V[0, 30] + 2*v_e*x_e*V[0, 13] - 2*v_e*x_e*V[0, 22]*t0[0, 0] - 2.8*v_e*x_e*V[0, 25]*t0[0, 0] - 2*v_e*x_e*V[0, 25]*t0[0, 1] + 2*v_e*x_l*V[0, 22]*t0[0, 0] - 2.8*v_e*x_l*V[0, 40]*t0[0, 0] - 2*v_e*x_l*V[0, 40]*t0[0, 1] + v_e*x_l*V[0, 42] - 2.8*v_e*y*V[0, 18]*t0[0, 0] - 2*v_e*y*V[0, 18]*t0[0, 1] + v_e*y*V[0, 23] - 2.8*v_e*V[0, 3]*t0[0, 0] - 2*v_e*V[0, 3]*t0[0, 1] + v_e*V[0, 5] - 0.0001*v_l**3*V[0, 37] - 0.0001*v_l**2*x*V[0, 28] - 0.0001*v_l**2*x_e*V[0, 31] - 0.0001*v_l**2*x_l*V[0, 43] - 0.0001*v_l**2*y*V[0, 27] - 0.0001*v_l**2*V[0, 6] + 2*v_l**2*V[0, 34]*t0[0, 1] + v_l**2*V[0, 44] + 2*v_l*x*V[0, 19]*t0[0, 1] - v_l*x*V[0, 37] + v_l*x*V[0, 39] + 2*v_l*x_e*V[0, 25]*t0[0, 1] - 2*v_l*x_e*V[0, 34]*t0[0, 0] + v_l*x_e*V[0, 42] + 2*v_l*x_l*V[0, 16] + 2*v_l*x_l*V[0, 34]*t0[0, 0] + 2*v_l*x_l*V[0, 40]*t0[0, 1] + 2*v_l*y*V[0, 18]*t0[0, 1] + v_l*y*V[0, 38] + 2*v_l*V[0, 3]*t0[0, 1] + v_l*V[0, 8] - x**2*V[0, 28] - 2*x*x_e*V[0, 19]*t0[0, 0] - x*x_e*V[0, 31] + 2*x*x_l*V[0, 19]*t0[0, 0] - x*x_l*V[0, 43] - x*y*V[0, 27] - x*V[0, 6] - 2*x_e**2*V[0, 25]*t0[0, 0] + 2*x_e*x_l*V[0, 25]*t0[0, 0] - 2*x_e*x_l*V[0, 40]*t0[0, 0] - 2*x_e*y*V[0, 18]*t0[0, 0] - 2*x_e*V[0, 3]*t0[0, 0] + 2*x_l**2*V[0, 40]*t0[0, 0] + 2*x_l*y*V[0, 18]*t0[0, 0] + 2*x_l*V[0, 3]*t0[0, 0]
		lie = -l*r_e**3*V[0, 19] - l*r_e**2*r_l*V[0, 75] - l*r_e**2*v_e*V[0, 61] - l*r_e**2*v_l*V[0, 85] - l*r_e**2*x*V[0, 58] - l*r_e**2*x_e*V[0, 67] - l*r_e**2*x_l*V[0, 97] - l*r_e**2*y*V[0, 57] - l*r_e**2*V[0, 11] - l*r_e*r_l**2*V[0, 80] - l*r_e*r_l*v_e*V[0, 124] - l*r_e*r_l*v_l*V[0, 141] - l*r_e*r_l*x*V[0, 121] - l*r_e*r_l*x_e*V[0, 127] - l*r_e*r_l*x_l*V[0, 156] - l*r_e*r_l*y*V[0, 120] - l*r_e*r_l*V[0, 37] - l*r_e*v_e**2*V[0, 64] - l*r_e*v_e*v_l*V[0, 134] - l*r_e*v_e*x*V[0, 112] - l*r_e*v_e*x_e*V[0, 118] - l*r_e*v_e*x_l*V[0, 149] - l*r_e*v_e*y*V[0, 111] - l*r_e*v_e*V[0, 30] - l*r_e*v_l**2*V[0, 91] - l*r_e*v_l*x*V[0, 131] - l*r_e*v_l*x_e*V[0, 137] - l*r_e*v_l*x_l*V[0, 161] - l*r_e*v_l*y*V[0, 130] - l*r_e*v_l*V[0, 42] - l*r_e*x**2*V[0, 56] - l*r_e*x*x_e*V[0, 115] - l*r_e*x*x_l*V[0, 146] - l*r_e*x*y*V[0, 109] - l*r_e*x*V[0, 27] - l*r_e*x_e**2*V[0, 71] - l*r_e*x_e*x_l*V[0, 152] - l*r_e*x_e*y*V[0, 114] - l*r_e*x_e*V[0, 33] - l*r_e*x_l**2*V[0, 104] - l*r_e*x_l*y*V[0, 145] - l*r_e*x_l*V[0, 48] - l*r_e*y**2*V[0, 55] - l*r_e*y*V[0, 26] - l*r_e*V[0, 3] - l*r_l**3*V[0, 22] - l*r_l**2*v_e*V[0, 81] - l*r_l**2*v_l*V[0, 88] - l*r_l**2*x*V[0, 79] - l*r_l**2*x_e*V[0, 82] - l*r_l**2*x_l*V[0, 100] - l*r_l**2*y*V[0, 78] - l*r_l**2*V[0, 14] - l*r_l*v_e**2*V[0, 76] - l*r_l*v_e*v_l*V[0, 142] - l*r_l*v_e*x*V[0, 123] - l*r_l*v_e*x_e*V[0, 128] - l*r_l*v_e*x_l*V[0, 157] - l*r_l*v_e*y*V[0, 122] - l*r_l*v_e*V[0, 38] - l*r_l*v_l**2*V[0, 94] - l*r_l*v_l*x*V[0, 140] - l*r_l*v_l*x_e*V[0, 143] - l*r_l*v_l*x_l*V[0, 164] - l*r_l*v_l*y*V[0, 139] - l*r_l*v_l*V[0, 45] - l*r_l*x**2*V[0, 74] - l*r_l*x*x_e*V[0, 126] - l*r_l*x*x_l*V[0, 155] - l*r_l*x*y*V[0, 119] - l*r_l*x*V[0, 36] - l*r_l*x_e**2*V[0, 77] - l*r_l*x_e*x_l*V[0, 158] - l*r_l*x_e*y*V[0, 125] - l*r_l*x_e*V[0, 39] - l*r_l*x_l**2*V[0, 107] - l*r_l*x_l*y*V[0, 154] - l*r_l*x_l*V[0, 51] - l*r_l*y**2*V[0, 73] - l*r_l*y*V[0, 35] - l*r_l*V[0, 6] - l*v_e**3*V[0, 20] - l*v_e**2*v_l*V[0, 86] - l*v_e**2*x*V[0, 63] - l*v_e**2*x_e*V[0, 68] - l*v_e**2*x_l*V[0, 98] - l*v_e**2*y*V[0, 62] - l*v_e**2*V[0, 12] - l*v_e*v_l**2*V[0, 92] - l*v_e*v_l*x*V[0, 133] - l*v_e*v_l*x_e*V[0, 138] - l*v_e*v_l*x_l*V[0, 162] - l*v_e*v_l*y*V[0, 132] - l*v_e*v_l*V[0, 43] - l*v_e*x**2*V[0, 60] - l*v_e*x*x_e*V[0, 117] - l*v_e*x*x_l*V[0, 148] - l*v_e*x*y*V[0, 110] - l*v_e*x*V[0, 29] - l*v_e*x_e**2*V[0, 72] - l*v_e*x_e*x_l*V[0, 153] - l*v_e*x_e*y*V[0, 116] - l*v_e*x_e*V[0, 34] - l*v_e*x_l**2*V[0, 105] - l*v_e*x_l*y*V[0, 147] - l*v_e*x_l*V[0, 49] - l*v_e*y**2*V[0, 59] - l*v_e*y*V[0, 28] - l*v_e*V[0, 4] - l*v_l**3*V[0, 23] - l*v_l**2*x*V[0, 90] - l*v_l**2*x_e*V[0, 93] - l*v_l**2*x_l*V[0, 101] - l*v_l**2*y*V[0, 89] - l*v_l**2*V[0, 15] - l*v_l*x**2*V[0, 84] - l*v_l*x*x_e*V[0, 136] - l*v_l*x*x_l*V[0, 160] - l*v_l*x*y*V[0, 129] - l*v_l*x*V[0, 41] - l*v_l*x_e**2*V[0, 87] - l*v_l*x_e*x_l*V[0, 163] - l*v_l*x_e*y*V[0, 135] - l*v_l*x_e*V[0, 44] - l*v_l*x_l**2*V[0, 108] - l*v_l*x_l*y*V[0, 159] - l*v_l*x_l*V[0, 52] - l*v_l*y**2*V[0, 83] - l*v_l*y*V[0, 40] - l*v_l*V[0, 7] - l*x**3*V[0, 18] - l*x**2*x_e*V[0, 66] - l*x**2*x_l*V[0, 96] - l*x**2*y*V[0, 54] - l*x**2*V[0, 10] - l*x*x_e**2*V[0, 70] - l*x*x_e*x_l*V[0, 151] - l*x*x_e*y*V[0, 113] - l*x*x_e*V[0, 32] - l*x*x_l**2*V[0, 103] - l*x*x_l*y*V[0, 144] - l*x*x_l*V[0, 47] - l*x*y**2*V[0, 53] - l*x*y*V[0, 25] - l*x*V[0, 2] - l*x_e**3*V[0, 21] - l*x_e**2*x_l*V[0, 99] - l*x_e**2*y*V[0, 69] - l*x_e**2*V[0, 13] - l*x_e*x_l**2*V[0, 106] - l*x_e*x_l*y*V[0, 150] - l*x_e*x_l*V[0, 50] - l*x_e*y**2*V[0, 65] - l*x_e*y*V[0, 31] - l*x_e*V[0, 5] - l*x_l**3*V[0, 24] - l*x_l**2*y*V[0, 102] - l*x_l**2*V[0, 16] - l*x_l*y**2*V[0, 95] - l*x_l*y*V[0, 46] - l*x_l*V[0, 8] - l*y**3*V[0, 17] - l*y**2*V[0, 9] - l*y*V[0, 1] - l*V[0, 0] - 6*r_e**3*V[0, 19]*t0[0, 2] - 6*r_e**3*V[0, 19] + r_e**3*V[0, 61] - r_e**2*r_l*x*V[0, 57] + r_e**2*r_l*y*V[0, 58] + 6*r_e**2*r_l*V[0, 19]*t0[0, 2] - 4*r_e**2*r_l*V[0, 75]*t0[0, 2] - 6*r_e**2*r_l*V[0, 75] + r_e**2*r_l*V[0, 85] + r_e**2*r_l*V[0, 124] - 0.0003*r_e**2*v_e**2*V[0, 19] - 8.4*r_e**2*v_e*V[0, 19]*t0[0, 0] - 6*r_e**2*v_e*V[0, 19]*t0[0, 1] - 4*r_e**2*v_e*V[0, 61]*t0[0, 2] - 4*r_e**2*v_e*V[0, 61] + 2*r_e**2*v_e*V[0, 64] + r_e**2*v_e*V[0, 67] - 0.0001*r_e**2*v_l**2*V[0, 75] + 6*r_e**2*v_l*V[0, 19]*t0[0, 1] - 4*r_e**2*v_l*V[0, 85]*t0[0, 2] - 4*r_e**2*v_l*V[0, 85] + r_e**2*v_l*V[0, 97] + r_e**2*v_l*V[0, 134] - 4*r_e**2*x*V[0, 58]*t0[0, 2] - 4*r_e**2*x*V[0, 58] - 25*r_e**2*x*V[0, 75] + r_e**2*x*V[0, 112] - 6*r_e**2*x_e*V[0, 19]*t0[0, 0] - 4*r_e**2*x_e*V[0, 67]*t0[0, 2] - 4*r_e**2*x_e*V[0, 67] + r_e**2*x_e*V[0, 118] + 6*r_e**2*x_l*V[0, 19]*t0[0, 0] - 4*r_e**2*x_l*V[0, 97]*t0[0, 2] - 4*r_e**2*x_l*V[0, 97] + r_e**2*x_l*V[0, 149] - 4*r_e**2*y*V[0, 57]*t0[0, 2] - 4*r_e**2*y*V[0, 57] + r_e**2*y*V[0, 111] - 4*r_e**2*V[0, 11]*t0[0, 2] - 4*r_e**2*V[0, 11] + r_e**2*V[0, 30] - r_e*r_l**2*x*V[0, 120] + r_e*r_l**2*y*V[0, 121] + 4*r_e*r_l**2*V[0, 75]*t0[0, 2] - 2*r_e*r_l**2*V[0, 80]*t0[0, 2] - 6*r_e*r_l**2*V[0, 80] + r_e*r_l**2*V[0, 81] + r_e*r_l**2*V[0, 141] - 0.0002*r_e*r_l*v_e**2*V[0, 75] - r_e*r_l*v_e*x*V[0, 111] + r_e*r_l*v_e*y*V[0, 112] + 4*r_e*r_l*v_e*V[0, 61]*t0[0, 2] - 5.6*r_e*r_l*v_e*V[0, 75]*t0[0, 0] - 4*r_e*r_l*v_e*V[0, 75]*t0[0, 1] + 2*r_e*r_l*v_e*V[0, 76] - 2*r_e*r_l*v_e*V[0, 124]*t0[0, 2] - 4*r_e*r_l*v_e*V[0, 124] + r_e*r_l*v_e*V[0, 127] + r_e*r_l*v_e*V[0, 134] - 0.0002*r_e*r_l*v_l**2*V[0, 80] - r_e*r_l*v_l*x*V[0, 130] + r_e*r_l*v_l*y*V[0, 131] + 4*r_e*r_l*v_l*V[0, 75]*t0[0, 1] + 4*r_e*r_l*v_l*V[0, 85]*t0[0, 2] + 2*r_e*r_l*v_l*V[0, 91] - 2*r_e*r_l*v_l*V[0, 141]*t0[0, 2] - 4*r_e*r_l*v_l*V[0, 141] + r_e*r_l*v_l*V[0, 142] + r_e*r_l*v_l*V[0, 156] - r_e*r_l*x**2*V[0, 109] - r_e*r_l*x*x_e*V[0, 114] - r_e*r_l*x*x_l*V[0, 145] - 2*r_e*r_l*x*y*V[0, 55] + 2*r_e*r_l*x*y*V[0, 56] - r_e*r_l*x*V[0, 26] + 4*r_e*r_l*x*V[0, 58]*t0[0, 2] - 50*r_e*r_l*x*V[0, 80] - 2*r_e*r_l*x*V[0, 121]*t0[0, 2] - 4*r_e*r_l*x*V[0, 121] + r_e*r_l*x*V[0, 123] + r_e*r_l*x*V[0, 131] + r_e*r_l*x_e*y*V[0, 115] + 4*r_e*r_l*x_e*V[0, 67]*t0[0, 2] - 4*r_e*r_l*x_e*V[0, 75]*t0[0, 0] - 2*r_e*r_l*x_e*V[0, 127]*t0[0, 2] - 4*r_e*r_l*x_e*V[0, 127] + r_e*r_l*x_e*V[0, 128] + r_e*r_l*x_e*V[0, 137] + r_e*r_l*x_l*y*V[0, 146] + 4*r_e*r_l*x_l*V[0, 75]*t0[0, 0] + 4*r_e*r_l*x_l*V[0, 97]*t0[0, 2] - 2*r_e*r_l*x_l*V[0, 156]*t0[0, 2] - 4*r_e*r_l*x_l*V[0, 156] + r_e*r_l*x_l*V[0, 157] + r_e*r_l*x_l*V[0, 161] + r_e*r_l*y**2*V[0, 109] + r_e*r_l*y*V[0, 27] + 4*r_e*r_l*y*V[0, 57]*t0[0, 2] - 2*r_e*r_l*y*V[0, 120]*t0[0, 2] - 4*r_e*r_l*y*V[0, 120] + r_e*r_l*y*V[0, 122] + r_e*r_l*y*V[0, 130] + 4*r_e*r_l*V[0, 11]*t0[0, 2] - 2*r_e*r_l*V[0, 37]*t0[0, 2] - 4*r_e*r_l*V[0, 37] + r_e*r_l*V[0, 38] + r_e*r_l*V[0, 42] - 0.0002*r_e*v_e**3*V[0, 61] - 0.0002*r_e*v_e**2*v_l*V[0, 85] - 0.0002*r_e*v_e**2*x*V[0, 58] - 0.0002*r_e*v_e**2*x_e*V[0, 67] - 0.0002*r_e*v_e**2*x_l*V[0, 97] - 0.0002*r_e*v_e**2*y*V[0, 57] - 0.0002*r_e*v_e**2*V[0, 11] + 3*r_e*v_e**2*V[0, 20] - 5.6*r_e*v_e**2*V[0, 61]*t0[0, 0] - 4*r_e*v_e**2*V[0, 61]*t0[0, 1] - 2*r_e*v_e**2*V[0, 64]*t0[0, 2] - 2*r_e*v_e**2*V[0, 64] + r_e*v_e**2*V[0, 118] - 0.0001*r_e*v_e*v_l**2*V[0, 124] + 4*r_e*v_e*v_l*V[0, 61]*t0[0, 1] - 5.6*r_e*v_e*v_l*V[0, 85]*t0[0, 0] - 4*r_e*v_e*v_l*V[0, 85]*t0[0, 1] + 2*r_e*v_e*v_l*V[0, 86] - 2*r_e*v_e*v_l*V[0, 134]*t0[0, 2] - 2*r_e*v_e*v_l*V[0, 134] + r_e*v_e*v_l*V[0, 137] + r_e*v_e*v_l*V[0, 149] - 5.6*r_e*v_e*x*V[0, 58]*t0[0, 0] - 4*r_e*v_e*x*V[0, 58]*t0[0, 1] + 2*r_e*v_e*x*V[0, 63] - 2*r_e*v_e*x*V[0, 112]*t0[0, 2] - 2*r_e*v_e*x*V[0, 112] + r_e*v_e*x*V[0, 115] - 25*r_e*v_e*x*V[0, 124] - 4*r_e*v_e*x_e*V[0, 61]*t0[0, 0] - 5.6*r_e*v_e*x_e*V[0, 67]*t0[0, 0] - 4*r_e*v_e*x_e*V[0, 67]*t0[0, 1] + 2*r_e*v_e*x_e*V[0, 68] + 2*r_e*v_e*x_e*V[0, 71] - 2*r_e*v_e*x_e*V[0, 118]*t0[0, 2] - 2*r_e*v_e*x_e*V[0, 118] + 4*r_e*v_e*x_l*V[0, 61]*t0[0, 0] - 5.6*r_e*v_e*x_l*V[0, 97]*t0[0, 0] - 4*r_e*v_e*x_l*V[0, 97]*t0[0, 1] + 2*r_e*v_e*x_l*V[0, 98] - 2*r_e*v_e*x_l*V[0, 149]*t0[0, 2] - 2*r_e*v_e*x_l*V[0, 149] + r_e*v_e*x_l*V[0, 152] - 5.6*r_e*v_e*y*V[0, 57]*t0[0, 0] - 4*r_e*v_e*y*V[0, 57]*t0[0, 1] + 2*r_e*v_e*y*V[0, 62] - 2*r_e*v_e*y*V[0, 111]*t0[0, 2] - 2*r_e*v_e*y*V[0, 111] + r_e*v_e*y*V[0, 114] - 5.6*r_e*v_e*V[0, 11]*t0[0, 0] - 4*r_e*v_e*V[0, 11]*t0[0, 1] + 2*r_e*v_e*V[0, 12] - 2*r_e*v_e*V[0, 30]*t0[0, 2] - 2*r_e*v_e*V[0, 30] + r_e*v_e*V[0, 33] - 0.0001*r_e*v_l**3*V[0, 141] - 0.0001*r_e*v_l**2*x*V[0, 121] - 0.0001*r_e*v_l**2*x_e*V[0, 127] - 0.0001*r_e*v_l**2*x_l*V[0, 156] - 0.0001*r_e*v_l**2*y*V[0, 120] - 0.0001*r_e*v_l**2*V[0, 37] + 4*r_e*v_l**2*V[0, 85]*t0[0, 1] - 2*r_e*v_l**2*V[0, 91]*t0[0, 2] - 2*r_e*v_l**2*V[0, 91] + r_e*v_l**2*V[0, 92] + r_e*v_l**2*V[0, 161] + 4*r_e*v_l*x*V[0, 58]*t0[0, 1] - 2*r_e*v_l*x*V[0, 131]*t0[0, 2] - 2*r_e*v_l*x*V[0, 131] + r_e*v_l*x*V[0, 133] - 25*r_e*v_l*x*V[0, 141] + r_e*v_l*x*V[0, 146] + 4*r_e*v_l*x_e*V[0, 67]*t0[0, 1] - 4*r_e*v_l*x_e*V[0, 85]*t0[0, 0] - 2*r_e*v_l*x_e*V[0, 137]*t0[0, 2] - 2*r_e*v_l*x_e*V[0, 137] + r_e*v_l*x_e*V[0, 138] + r_e*v_l*x_e*V[0, 152] + 4*r_e*v_l*x_l*V[0, 85]*t0[0, 0] + 4*r_e*v_l*x_l*V[0, 97]*t0[0, 1] + 2*r_e*v_l*x_l*V[0, 104] - 2*r_e*v_l*x_l*V[0, 161]*t0[0, 2] - 2*r_e*v_l*x_l*V[0, 161] + r_e*v_l*x_l*V[0, 162] + 4*r_e*v_l*y*V[0, 57]*t0[0, 1] - 2*r_e*v_l*y*V[0, 130]*t0[0, 2] - 2*r_e*v_l*y*V[0, 130] + r_e*v_l*y*V[0, 132] + r_e*v_l*y*V[0, 145] + 4*r_e*v_l*V[0, 11]*t0[0, 1] - 2*r_e*v_l*V[0, 42]*t0[0, 2] - 2*r_e*v_l*V[0, 42] + r_e*v_l*V[0, 43] + r_e*v_l*V[0, 48] - 2*r_e*x**2*V[0, 56]*t0[0, 2] - 2*r_e*x**2*V[0, 56] + r_e*x**2*V[0, 60] - 25*r_e*x**2*V[0, 121] - 4*r_e*x*x_e*V[0, 58]*t0[0, 0] - 2*r_e*x*x_e*V[0, 115]*t0[0, 2] - 2*r_e*x*x_e*V[0, 115] + r_e*x*x_e*V[0, 117] - 25*r_e*x*x_e*V[0, 127] + 4*r_e*x*x_l*V[0, 58]*t0[0, 0] - 2*r_e*x*x_l*V[0, 146]*t0[0, 2] - 2*r_e*x*x_l*V[0, 146] + r_e*x*x_l*V[0, 148] - 25*r_e*x*x_l*V[0, 156] - 2*r_e*x*y*V[0, 109]*t0[0, 2] - 2*r_e*x*y*V[0, 109] + r_e*x*y*V[0, 110] - 25*r_e*x*y*V[0, 120] - 2*r_e*x*V[0, 27]*t0[0, 2] - 2*r_e*x*V[0, 27] + r_e*x*V[0, 29] - 25*r_e*x*V[0, 37] - 4*r_e*x_e**2*V[0, 67]*t0[0, 0] - 2*r_e*x_e**2*V[0, 71]*t0[0, 2] - 2*r_e*x_e**2*V[0, 71] + r_e*x_e**2*V[0, 72] + 4*r_e*x_e*x_l*V[0, 67]*t0[0, 0] - 4*r_e*x_e*x_l*V[0, 97]*t0[0, 0] - 2*r_e*x_e*x_l*V[0, 152]*t0[0, 2] - 2*r_e*x_e*x_l*V[0, 152] + r_e*x_e*x_l*V[0, 153] - 4*r_e*x_e*y*V[0, 57]*t0[0, 0] - 2*r_e*x_e*y*V[0, 114]*t0[0, 2] - 2*r_e*x_e*y*V[0, 114] + r_e*x_e*y*V[0, 116] - 4*r_e*x_e*V[0, 11]*t0[0, 0] - 2*r_e*x_e*V[0, 33]*t0[0, 2] - 2*r_e*x_e*V[0, 33] + r_e*x_e*V[0, 34] + 4*r_e*x_l**2*V[0, 97]*t0[0, 0] - 2*r_e*x_l**2*V[0, 104]*t0[0, 2] - 2*r_e*x_l**2*V[0, 104] + r_e*x_l**2*V[0, 105] + 4*r_e*x_l*y*V[0, 57]*t0[0, 0] - 2*r_e*x_l*y*V[0, 145]*t0[0, 2] - 2*r_e*x_l*y*V[0, 145] + r_e*x_l*y*V[0, 147] + 4*r_e*x_l*V[0, 11]*t0[0, 0] - 2*r_e*x_l*V[0, 48]*t0[0, 2] - 2*r_e*x_l*V[0, 48] + r_e*x_l*V[0, 49] - 2*r_e*y**2*V[0, 55]*t0[0, 2] - 2*r_e*y**2*V[0, 55] + r_e*y**2*V[0, 59] - 2*r_e*y*V[0, 26]*t0[0, 2] - 2*r_e*y*V[0, 26] + r_e*y*V[0, 28] - 2*r_e*V[0, 3]*t0[0, 2] - 2*r_e*V[0, 3] + r_e*V[0, 4] - r_l**3*x*V[0, 78] + r_l**3*y*V[0, 79] - 6*r_l**3*V[0, 22] + 2*r_l**3*V[0, 80]*t0[0, 2] + r_l**3*V[0, 88] - 0.0001*r_l**2*v_e**2*V[0, 80] - r_l**2*v_e*x*V[0, 122] + r_l**2*v_e*y*V[0, 123] - 2.8*r_l**2*v_e*V[0, 80]*t0[0, 0] - 2*r_l**2*v_e*V[0, 80]*t0[0, 1] - 4*r_l**2*v_e*V[0, 81] + r_l**2*v_e*V[0, 82] + 2*r_l**2*v_e*V[0, 124]*t0[0, 2] + r_l**2*v_e*V[0, 142] - 0.0003*r_l**2*v_l**2*V[0, 22] - r_l**2*v_l*x*V[0, 139] + r_l**2*v_l*y*V[0, 140] + 2*r_l**2*v_l*V[0, 80]*t0[0, 1] - 4*r_l**2*v_l*V[0, 88] + 2*r_l**2*v_l*V[0, 94] + r_l**2*v_l*V[0, 100] + 2*r_l**2*v_l*V[0, 141]*t0[0, 2] - r_l**2*x**2*V[0, 119] - r_l**2*x*x_e*V[0, 125] - r_l**2*x*x_l*V[0, 154] - 2*r_l**2*x*y*V[0, 73] + 2*r_l**2*x*y*V[0, 74] - 75*r_l**2*x*V[0, 22] - r_l**2*x*V[0, 35] - 4*r_l**2*x*V[0, 79] + 2*r_l**2*x*V[0, 121]*t0[0, 2] + r_l**2*x*V[0, 140] + r_l**2*x_e*y*V[0, 126] - 2*r_l**2*x_e*V[0, 80]*t0[0, 0] - 4*r_l**2*x_e*V[0, 82] + 2*r_l**2*x_e*V[0, 127]*t0[0, 2] + r_l**2*x_e*V[0, 143] + r_l**2*x_l*y*V[0, 155] + 2*r_l**2*x_l*V[0, 80]*t0[0, 0] - 4*r_l**2*x_l*V[0, 100] + 2*r_l**2*x_l*V[0, 156]*t0[0, 2] + r_l**2*x_l*V[0, 164] + r_l**2*y**2*V[0, 119] + r_l**2*y*V[0, 36] - 4*r_l**2*y*V[0, 78] + 2*r_l**2*y*V[0, 120]*t0[0, 2] + r_l**2*y*V[0, 139] - 4*r_l**2*V[0, 14] + 2*r_l**2*V[0, 37]*t0[0, 2] + r_l**2*V[0, 45] - 0.0001*r_l*v_e**3*V[0, 124] - 0.0001*r_l*v_e**2*v_l*V[0, 141] - r_l*v_e**2*x*V[0, 62] - 0.0001*r_l*v_e**2*x*V[0, 121] - 0.0001*r_l*v_e**2*x_e*V[0, 127] - 0.0001*r_l*v_e**2*x_l*V[0, 156] + r_l*v_e**2*y*V[0, 63] - 0.0001*r_l*v_e**2*y*V[0, 120] - 0.0001*r_l*v_e**2*V[0, 37] + 2*r_l*v_e**2*V[0, 64]*t0[0, 2] - 2*r_l*v_e**2*V[0, 76] + r_l*v_e**2*V[0, 86] - 2.8*r_l*v_e**2*V[0, 124]*t0[0, 0] - 2*r_l*v_e**2*V[0, 124]*t0[0, 1] + r_l*v_e**2*V[0, 128] - 0.0002*r_l*v_e*v_l**2*V[0, 81] - r_l*v_e*v_l*x*V[0, 132] + r_l*v_e*v_l*y*V[0, 133] + 2*r_l*v_e*v_l*V[0, 92] + 2*r_l*v_e*v_l*V[0, 124]*t0[0, 1] + 2*r_l*v_e*v_l*V[0, 134]*t0[0, 2] - 2.8*r_l*v_e*v_l*V[0, 141]*t0[0, 0] - 2*r_l*v_e*v_l*V[0, 141]*t0[0, 1] - 2*r_l*v_e*v_l*V[0, 142] + r_l*v_e*v_l*V[0, 143] + r_l*v_e*v_l*V[0, 157] - r_l*v_e*x**2*V[0, 110] - r_l*v_e*x*x_e*V[0, 116] - r_l*v_e*x*x_l*V[0, 147] - 2*r_l*v_e*x*y*V[0, 59] + 2*r_l*v_e*x*y*V[0, 60] - r_l*v_e*x*V[0, 28] - 50*r_l*v_e*x*V[0, 81] + 2*r_l*v_e*x*V[0, 112]*t0[0, 2] - 2.8*r_l*v_e*x*V[0, 121]*t0[0, 0] - 2*r_l*v_e*x*V[0, 121]*t0[0, 1] - 2*r_l*v_e*x*V[0, 123] + r_l*v_e*x*V[0, 126] + r_l*v_e*x*V[0, 133] + r_l*v_e*x_e*y*V[0, 117] + 2*r_l*v_e*x_e*V[0, 77] + 2*r_l*v_e*x_e*V[0, 118]*t0[0, 2] - 2*r_l*v_e*x_e*V[0, 124]*t0[0, 0] - 2.8*r_l*v_e*x_e*V[0, 127]*t0[0, 0] - 2*r_l*v_e*x_e*V[0, 127]*t0[0, 1] - 2*r_l*v_e*x_e*V[0, 128] + r_l*v_e*x_e*V[0, 138] + r_l*v_e*x_l*y*V[0, 148] + 2*r_l*v_e*x_l*V[0, 124]*t0[0, 0] + 2*r_l*v_e*x_l*V[0, 149]*t0[0, 2] - 2.8*r_l*v_e*x_l*V[0, 156]*t0[0, 0] - 2*r_l*v_e*x_l*V[0, 156]*t0[0, 1] - 2*r_l*v_e*x_l*V[0, 157] + r_l*v_e*x_l*V[0, 158] + r_l*v_e*x_l*V[0, 162] + r_l*v_e*y**2*V[0, 110] + r_l*v_e*y*V[0, 29] + 2*r_l*v_e*y*V[0, 111]*t0[0, 2] - 2.8*r_l*v_e*y*V[0, 120]*t0[0, 0] - 2*r_l*v_e*y*V[0, 120]*t0[0, 1] - 2*r_l*v_e*y*V[0, 122] + r_l*v_e*y*V[0, 125] + r_l*v_e*y*V[0, 132] + 2*r_l*v_e*V[0, 30]*t0[0, 2] - 2.8*r_l*v_e*V[0, 37]*t0[0, 0] - 2*r_l*v_e*V[0, 37]*t0[0, 1] - 2*r_l*v_e*V[0, 38] + r_l*v_e*V[0, 39] + r_l*v_e*V[0, 43] - 0.0002*r_l*v_l**3*V[0, 88] - 0.0002*r_l*v_l**2*x*V[0, 79] - r_l*v_l**2*x*V[0, 89] - 0.0002*r_l*v_l**2*x_e*V[0, 82] - 0.0002*r_l*v_l**2*x_l*V[0, 100] - 0.0002*r_l*v_l**2*y*V[0, 78] + r_l*v_l**2*y*V[0, 90] - 0.0002*r_l*v_l**2*V[0, 14] + 3*r_l*v_l**2*V[0, 23] + 2*r_l*v_l**2*V[0, 91]*t0[0, 2] - 2*r_l*v_l**2*V[0, 94] + 2*r_l*v_l**2*V[0, 141]*t0[0, 1] + r_l*v_l**2*V[0, 164] - r_l*v_l*x**2*V[0, 129] - r_l*v_l*x*x_e*V[0, 135] - r_l*v_l*x*x_l*V[0, 159] - 2*r_l*v_l*x*y*V[0, 83] + 2*r_l*v_l*x*y*V[0, 84] - r_l*v_l*x*V[0, 40] - 50*r_l*v_l*x*V[0, 88] + 2*r_l*v_l*x*V[0, 90] + 2*r_l*v_l*x*V[0, 121]*t0[0, 1] + 2*r_l*v_l*x*V[0, 131]*t0[0, 2] - 2*r_l*v_l*x*V[0, 140] + r_l*v_l*x*V[0, 155] + r_l*v_l*x_e*y*V[0, 136] + 2*r_l*v_l*x_e*V[0, 93] + 2*r_l*v_l*x_e*V[0, 127]*t0[0, 1] + 2*r_l*v_l*x_e*V[0, 137]*t0[0, 2] - 2*r_l*v_l*x_e*V[0, 141]*t0[0, 0] - 2*r_l*v_l*x_e*V[0, 143] + r_l*v_l*x_e*V[0, 158] + r_l*v_l*x_l*y*V[0, 160] + 2*r_l*v_l*x_l*V[0, 101] + 2*r_l*v_l*x_l*V[0, 107] + 2*r_l*v_l*x_l*V[0, 141]*t0[0, 0] + 2*r_l*v_l*x_l*V[0, 156]*t0[0, 1] + 2*r_l*v_l*x_l*V[0, 161]*t0[0, 2] - 2*r_l*v_l*x_l*V[0, 164] + r_l*v_l*y**2*V[0, 129] + r_l*v_l*y*V[0, 41] + 2*r_l*v_l*y*V[0, 89] + 2*r_l*v_l*y*V[0, 120]*t0[0, 1] + 2*r_l*v_l*y*V[0, 130]*t0[0, 2] - 2*r_l*v_l*y*V[0, 139] + r_l*v_l*y*V[0, 154] + 2*r_l*v_l*V[0, 15] + 2*r_l*v_l*V[0, 37]*t0[0, 1] + 2*r_l*v_l*V[0, 42]*t0[0, 2] - 2*r_l*v_l*V[0, 45] + r_l*v_l*V[0, 51] - r_l*x**3*V[0, 54] - r_l*x**2*x_e*V[0, 113] - r_l*x**2*x_l*V[0, 144] + 3*r_l*x**2*y*V[0, 18] - 2*r_l*x**2*y*V[0, 53] - r_l*x**2*V[0, 25] + 2*r_l*x**2*V[0, 56]*t0[0, 2] - 2*r_l*x**2*V[0, 74] - 50*r_l*x**2*V[0, 79] + r_l*x**2*V[0, 84] - r_l*x*x_e**2*V[0, 69] - r_l*x*x_e*x_l*V[0, 150] - 2*r_l*x*x_e*y*V[0, 65] + 2*r_l*x*x_e*y*V[0, 66] - r_l*x*x_e*V[0, 31] - 50*r_l*x*x_e*V[0, 82] + 2*r_l*x*x_e*V[0, 115]*t0[0, 2] - 2*r_l*x*x_e*V[0, 121]*t0[0, 0] - 2*r_l*x*x_e*V[0, 126] + r_l*x*x_e*V[0, 136] - r_l*x*x_l**2*V[0, 102] - 2*r_l*x*x_l*y*V[0, 95] + 2*r_l*x*x_l*y*V[0, 96] - r_l*x*x_l*V[0, 46] - 50*r_l*x*x_l*V[0, 100] + 2*r_l*x*x_l*V[0, 121]*t0[0, 0] + 2*r_l*x*x_l*V[0, 146]*t0[0, 2] - 2*r_l*x*x_l*V[0, 155] + r_l*x*x_l*V[0, 160] - 3*r_l*x*y**2*V[0, 17] + 2*r_l*x*y**2*V[0, 54] - 2*r_l*x*y*V[0, 9] + 2*r_l*x*y*V[0, 10] - 50*r_l*x*y*V[0, 78] + 2*r_l*x*y*V[0, 109]*t0[0, 2] - 2*r_l*x*y*V[0, 119] + r_l*x*y*V[0, 129] - r_l*x*V[0, 1] - 50*r_l*x*V[0, 14] + 2*r_l*x*V[0, 27]*t0[0, 2] - 2*r_l*x*V[0, 36] + r_l*x*V[0, 41] + r_l*x_e**2*y*V[0, 70] + 2*r_l*x_e**2*V[0, 71]*t0[0, 2] - 2*r_l*x_e**2*V[0, 77] + r_l*x_e**2*V[0, 87] - 2*r_l*x_e**2*V[0, 127]*t0[0, 0] + r_l*x_e*x_l*y*V[0, 151] + 2*r_l*x_e*x_l*V[0, 127]*t0[0, 0] + 2*r_l*x_e*x_l*V[0, 152]*t0[0, 2] - 2*r_l*x_e*x_l*V[0, 156]*t0[0, 0] - 2*r_l*x_e*x_l*V[0, 158] + r_l*x_e*x_l*V[0, 163] + r_l*x_e*y**2*V[0, 113] + r_l*x_e*y*V[0, 32] + 2*r_l*x_e*y*V[0, 114]*t0[0, 2] - 2*r_l*x_e*y*V[0, 120]*t0[0, 0] - 2*r_l*x_e*y*V[0, 125] + r_l*x_e*y*V[0, 135] + 2*r_l*x_e*V[0, 33]*t0[0, 2] - 2*r_l*x_e*V[0, 37]*t0[0, 0] - 2*r_l*x_e*V[0, 39] + r_l*x_e*V[0, 44] + r_l*x_l**2*y*V[0, 103] + 2*r_l*x_l**2*V[0, 104]*t0[0, 2] - 2*r_l*x_l**2*V[0, 107] + r_l*x_l**2*V[0, 108] + 2*r_l*x_l**2*V[0, 156]*t0[0, 0] + r_l*x_l*y**2*V[0, 144] + r_l*x_l*y*V[0, 47] + 2*r_l*x_l*y*V[0, 120]*t0[0, 0] + 2*r_l*x_l*y*V[0, 145]*t0[0, 2] - 2*r_l*x_l*y*V[0, 154] + r_l*x_l*y*V[0, 159] + 2*r_l*x_l*V[0, 37]*t0[0, 0] + 2*r_l*x_l*V[0, 48]*t0[0, 2] - 2*r_l*x_l*V[0, 51] + r_l*x_l*V[0, 52] + r_l*y**3*V[0, 53] + r_l*y**2*V[0, 25] + 2*r_l*y**2*V[0, 55]*t0[0, 2] - 2*r_l*y**2*V[0, 73] + r_l*y**2*V[0, 83] + r_l*y*V[0, 2] + 2*r_l*y*V[0, 26]*t0[0, 2] - 2*r_l*y*V[0, 35] + r_l*y*V[0, 40] + 2*r_l*V[0, 3]*t0[0, 2] - 2*r_l*V[0, 6] + r_l*V[0, 7] - 0.0001*v_e**4*V[0, 64] - 0.0001*v_e**3*v_l*V[0, 134] - 0.0001*v_e**3*x*V[0, 112] - 0.0001*v_e**3*x_e*V[0, 118] - 0.0001*v_e**3*x_l*V[0, 149] - 0.0001*v_e**3*y*V[0, 111] - 0.0001*v_e**3*V[0, 30] - 2.8*v_e**3*V[0, 64]*t0[0, 0] - 2*v_e**3*V[0, 64]*t0[0, 1] + v_e**3*V[0, 68] - 0.0001*v_e**2*v_l**2*V[0, 76] - 0.0001*v_e**2*v_l**2*V[0, 91] - 0.0001*v_e**2*v_l*x*V[0, 131] - 0.0001*v_e**2*v_l*x_e*V[0, 137] - 0.0001*v_e**2*v_l*x_l*V[0, 161] - 0.0001*v_e**2*v_l*y*V[0, 130] - 0.0001*v_e**2*v_l*V[0, 42] + 2*v_e**2*v_l*V[0, 64]*t0[0, 1] + v_e**2*v_l*V[0, 98] - 2.8*v_e**2*v_l*V[0, 134]*t0[0, 0] - 2*v_e**2*v_l*V[0, 134]*t0[0, 1] + v_e**2*v_l*V[0, 138] - 0.0001*v_e**2*x**2*V[0, 56] - 0.0001*v_e**2*x*x_e*V[0, 115] - 0.0001*v_e**2*x*x_l*V[0, 146] - 0.0001*v_e**2*x*y*V[0, 109] - 0.0001*v_e**2*x*V[0, 27] - 25*v_e**2*x*V[0, 76] - 2.8*v_e**2*x*V[0, 112]*t0[0, 0] - 2*v_e**2*x*V[0, 112]*t0[0, 1] + v_e**2*x*V[0, 117] - 0.0001*v_e**2*x_e**2*V[0, 71] - 0.0001*v_e**2*x_e*x_l*V[0, 152] - 0.0001*v_e**2*x_e*y*V[0, 114] - 0.0001*v_e**2*x_e*V[0, 33] - 2*v_e**2*x_e*V[0, 64]*t0[0, 0] + 2*v_e**2*x_e*V[0, 72] - 2.8*v_e**2*x_e*V[0, 118]*t0[0, 0] - 2*v_e**2*x_e*V[0, 118]*t0[0, 1] - 0.0001*v_e**2*x_l**2*V[0, 104] - 0.0001*v_e**2*x_l*y*V[0, 145] - 0.0001*v_e**2*x_l*V[0, 48] + 2*v_e**2*x_l*V[0, 64]*t0[0, 0] - 2.8*v_e**2*x_l*V[0, 149]*t0[0, 0] - 2*v_e**2*x_l*V[0, 149]*t0[0, 1] + v_e**2*x_l*V[0, 153] - 0.0001*v_e**2*y**2*V[0, 55] - 0.0001*v_e**2*y*V[0, 26] - 2.8*v_e**2*y*V[0, 111]*t0[0, 0] - 2*v_e**2*y*V[0, 111]*t0[0, 1] + v_e**2*y*V[0, 116] - 0.0001*v_e**2*V[0, 3] - 2.8*v_e**2*V[0, 30]*t0[0, 0] - 2*v_e**2*V[0, 30]*t0[0, 1] + v_e**2*V[0, 34] - 0.0001*v_e*v_l**3*V[0, 142] - 0.0001*v_e*v_l**2*x*V[0, 123] - 0.0001*v_e*v_l**2*x_e*V[0, 128] - 0.0001*v_e*v_l**2*x_l*V[0, 157] - 0.0001*v_e*v_l**2*y*V[0, 122] - 0.0001*v_e*v_l**2*V[0, 38] - 2.8*v_e*v_l**2*V[0, 91]*t0[0, 0] - 2*v_e*v_l**2*V[0, 91]*t0[0, 1] + v_e*v_l**2*V[0, 93] + 2*v_e*v_l**2*V[0, 134]*t0[0, 1] + v_e*v_l**2*V[0, 162] + 2*v_e*v_l*x*V[0, 112]*t0[0, 1] - 2.8*v_e*v_l*x*V[0, 131]*t0[0, 0] - 2*v_e*v_l*x*V[0, 131]*t0[0, 1] + v_e*v_l*x*V[0, 136] - 25*v_e*v_l*x*V[0, 142] + v_e*v_l*x*V[0, 148] + 2*v_e*v_l*x_e*V[0, 87] + 2*v_e*v_l*x_e*V[0, 118]*t0[0, 1] - 2*v_e*v_l*x_e*V[0, 134]*t0[0, 0] - 2.8*v_e*v_l*x_e*V[0, 137]*t0[0, 0] - 2*v_e*v_l*x_e*V[0, 137]*t0[0, 1] + v_e*v_l*x_e*V[0, 153] + 2*v_e*v_l*x_l*V[0, 105] + 2*v_e*v_l*x_l*V[0, 134]*t0[0, 0] + 2*v_e*v_l*x_l*V[0, 149]*t0[0, 1] - 2.8*v_e*v_l*x_l*V[0, 161]*t0[0, 0] - 2*v_e*v_l*x_l*V[0, 161]*t0[0, 1] + v_e*v_l*x_l*V[0, 163] + 2*v_e*v_l*y*V[0, 111]*t0[0, 1] - 2.8*v_e*v_l*y*V[0, 130]*t0[0, 0] - 2*v_e*v_l*y*V[0, 130]*t0[0, 1] + v_e*v_l*y*V[0, 135] + v_e*v_l*y*V[0, 147] + 2*v_e*v_l*V[0, 30]*t0[0, 1] - 2.8*v_e*v_l*V[0, 42]*t0[0, 0] - 2*v_e*v_l*V[0, 42]*t0[0, 1] + v_e*v_l*V[0, 44] + v_e*v_l*V[0, 49] - 2.8*v_e*x**2*V[0, 56]*t0[0, 0] - 2*v_e*x**2*V[0, 56]*t0[0, 1] + v_e*x**2*V[0, 66] - 25*v_e*x**2*V[0, 123] + 2*v_e*x*x_e*V[0, 70] - 2*v_e*x*x_e*V[0, 112]*t0[0, 0] - 2.8*v_e*x*x_e*V[0, 115]*t0[0, 0] - 2*v_e*x*x_e*V[0, 115]*t0[0, 1] - 25*v_e*x*x_e*V[0, 128] + 2*v_e*x*x_l*V[0, 112]*t0[0, 0] - 2.8*v_e*x*x_l*V[0, 146]*t0[0, 0] - 2*v_e*x*x_l*V[0, 146]*t0[0, 1] + v_e*x*x_l*V[0, 151] - 25*v_e*x*x_l*V[0, 157] - 2.8*v_e*x*y*V[0, 109]*t0[0, 0] - 2*v_e*x*y*V[0, 109]*t0[0, 1] + v_e*x*y*V[0, 113] - 25*v_e*x*y*V[0, 122] - 2.8*v_e*x*V[0, 27]*t0[0, 0] - 2*v_e*x*V[0, 27]*t0[0, 1] + v_e*x*V[0, 32] - 25*v_e*x*V[0, 38] + 3*v_e*x_e**2*V[0, 21] - 2.8*v_e*x_e**2*V[0, 71]*t0[0, 0] - 2*v_e*x_e**2*V[0, 71]*t0[0, 1] - 2*v_e*x_e**2*V[0, 118]*t0[0, 0] + 2*v_e*x_e*x_l*V[0, 99] + 2*v_e*x_e*x_l*V[0, 118]*t0[0, 0] - 2*v_e*x_e*x_l*V[0, 149]*t0[0, 0] - 2.8*v_e*x_e*x_l*V[0, 152]*t0[0, 0] - 2*v_e*x_e*x_l*V[0, 152]*t0[0, 1] + 2*v_e*x_e*y*V[0, 69] - 2*v_e*x_e*y*V[0, 111]*t0[0, 0] - 2.8*v_e*x_e*y*V[0, 114]*t0[0, 0] - 2*v_e*x_e*y*V[0, 114]*t0[0, 1] + 2*v_e*x_e*V[0, 13] - 2*v_e*x_e*V[0, 30]*t0[0, 0] - 2.8*v_e*x_e*V[0, 33]*t0[0, 0] - 2*v_e*x_e*V[0, 33]*t0[0, 1] - 2.8*v_e*x_l**2*V[0, 104]*t0[0, 0] - 2*v_e*x_l**2*V[0, 104]*t0[0, 1] + v_e*x_l**2*V[0, 106] + 2*v_e*x_l**2*V[0, 149]*t0[0, 0] + 2*v_e*x_l*y*V[0, 111]*t0[0, 0] - 2.8*v_e*x_l*y*V[0, 145]*t0[0, 0] - 2*v_e*x_l*y*V[0, 145]*t0[0, 1] + v_e*x_l*y*V[0, 150] + 2*v_e*x_l*V[0, 30]*t0[0, 0] - 2.8*v_e*x_l*V[0, 48]*t0[0, 0] - 2*v_e*x_l*V[0, 48]*t0[0, 1] + v_e*x_l*V[0, 50] - 2.8*v_e*y**2*V[0, 55]*t0[0, 0] - 2*v_e*y**2*V[0, 55]*t0[0, 1] + v_e*y**2*V[0, 65] - 2.8*v_e*y*V[0, 26]*t0[0, 0] - 2*v_e*y*V[0, 26]*t0[0, 1] + v_e*y*V[0, 31] - 2.8*v_e*V[0, 3]*t0[0, 0] - 2*v_e*V[0, 3]*t0[0, 1] + v_e*V[0, 5] - 0.0001*v_l**4*V[0, 94] - 0.0001*v_l**3*x*V[0, 140] - 0.0001*v_l**3*x_e*V[0, 143] - 0.0001*v_l**3*x_l*V[0, 164] - 0.0001*v_l**3*y*V[0, 139] - 0.0001*v_l**3*V[0, 45] + 2*v_l**3*V[0, 91]*t0[0, 1] + v_l**3*V[0, 101] - 0.0001*v_l**2*x**2*V[0, 74] - 0.0001*v_l**2*x*x_e*V[0, 126] - 0.0001*v_l**2*x*x_l*V[0, 155] - 0.0001*v_l**2*x*y*V[0, 119] - 0.0001*v_l**2*x*V[0, 36] - 25*v_l**2*x*V[0, 94] + 2*v_l**2*x*V[0, 131]*t0[0, 1] + v_l**2*x*V[0, 160] - 0.0001*v_l**2*x_e**2*V[0, 77] - 0.0001*v_l**2*x_e*x_l*V[0, 158] - 0.0001*v_l**2*x_e*y*V[0, 125] - 0.0001*v_l**2*x_e*V[0, 39] - 2*v_l**2*x_e*V[0, 91]*t0[0, 0] + 2*v_l**2*x_e*V[0, 137]*t0[0, 1] + v_l**2*x_e*V[0, 163] - 0.0001*v_l**2*x_l**2*V[0, 107] - 0.0001*v_l**2*x_l*y*V[0, 154] - 0.0001*v_l**2*x_l*V[0, 51] + 2*v_l**2*x_l*V[0, 91]*t0[0, 0] + 2*v_l**2*x_l*V[0, 108] + 2*v_l**2*x_l*V[0, 161]*t0[0, 1] - 0.0001*v_l**2*y**2*V[0, 73] - 0.0001*v_l**2*y*V[0, 35] + 2*v_l**2*y*V[0, 130]*t0[0, 1] + v_l**2*y*V[0, 159] - 0.0001*v_l**2*V[0, 6] + 2*v_l**2*V[0, 42]*t0[0, 1] + v_l**2*V[0, 52] + 2*v_l*x**2*V[0, 56]*t0[0, 1] + v_l*x**2*V[0, 96] - 25*v_l*x**2*V[0, 140] + 2*v_l*x*x_e*V[0, 115]*t0[0, 1] - 2*v_l*x*x_e*V[0, 131]*t0[0, 0] - 25*v_l*x*x_e*V[0, 143] + v_l*x*x_e*V[0, 151] + 2*v_l*x*x_l*V[0, 103] + 2*v_l*x*x_l*V[0, 131]*t0[0, 0] + 2*v_l*x*x_l*V[0, 146]*t0[0, 1] - 25*v_l*x*x_l*V[0, 164] + 2*v_l*x*y*V[0, 109]*t0[0, 1] - 25*v_l*x*y*V[0, 139] + v_l*x*y*V[0, 144] + 2*v_l*x*V[0, 27]*t0[0, 1] - 25*v_l*x*V[0, 45] + v_l*x*V[0, 47] + 2*v_l*x_e**2*V[0, 71]*t0[0, 1] + v_l*x_e**2*V[0, 99] - 2*v_l*x_e**2*V[0, 137]*t0[0, 0] + 2*v_l*x_e*x_l*V[0, 106] + 2*v_l*x_e*x_l*V[0, 137]*t0[0, 0] + 2*v_l*x_e*x_l*V[0, 152]*t0[0, 1] - 2*v_l*x_e*x_l*V[0, 161]*t0[0, 0] + 2*v_l*x_e*y*V[0, 114]*t0[0, 1] - 2*v_l*x_e*y*V[0, 130]*t0[0, 0] + v_l*x_e*y*V[0, 150] + 2*v_l*x_e*V[0, 33]*t0[0, 1] - 2*v_l*x_e*V[0, 42]*t0[0, 0] + v_l*x_e*V[0, 50] + 3*v_l*x_l**2*V[0, 24] + 2*v_l*x_l**2*V[0, 104]*t0[0, 1] + 2*v_l*x_l**2*V[0, 161]*t0[0, 0] + 2*v_l*x_l*y*V[0, 102] + 2*v_l*x_l*y*V[0, 130]*t0[0, 0] + 2*v_l*x_l*y*V[0, 145]*t0[0, 1] + 2*v_l*x_l*V[0, 16] + 2*v_l*x_l*V[0, 42]*t0[0, 0] + 2*v_l*x_l*V[0, 48]*t0[0, 1] + 2*v_l*y**2*V[0, 55]*t0[0, 1] + v_l*y**2*V[0, 95] + 2*v_l*y*V[0, 26]*t0[0, 1] + v_l*y*V[0, 46] + 2*v_l*V[0, 3]*t0[0, 1] + v_l*V[0, 8] - 25*x**3*V[0, 74] - 2*x**2*x_e*V[0, 56]*t0[0, 0] - 25*x**2*x_e*V[0, 126] + 2*x**2*x_l*V[0, 56]*t0[0, 0] - 25*x**2*x_l*V[0, 155] - 25*x**2*y*V[0, 119] - 25*x**2*V[0, 36] - 25*x*x_e**2*V[0, 77] - 2*x*x_e**2*V[0, 115]*t0[0, 0] + 2*x*x_e*x_l*V[0, 115]*t0[0, 0] - 2*x*x_e*x_l*V[0, 146]*t0[0, 0] - 25*x*x_e*x_l*V[0, 158] - 2*x*x_e*y*V[0, 109]*t0[0, 0] - 25*x*x_e*y*V[0, 125] - 2*x*x_e*V[0, 27]*t0[0, 0] - 25*x*x_e*V[0, 39] - 25*x*x_l**2*V[0, 107] + 2*x*x_l**2*V[0, 146]*t0[0, 0] + 2*x*x_l*y*V[0, 109]*t0[0, 0] - 25*x*x_l*y*V[0, 154] + 2*x*x_l*V[0, 27]*t0[0, 0] - 25*x*x_l*V[0, 51] - 25*x*y**2*V[0, 73] - 25*x*y*V[0, 35] - 25*x*V[0, 6] - 2*x_e**3*V[0, 71]*t0[0, 0] + 2*x_e**2*x_l*V[0, 71]*t0[0, 0] - 2*x_e**2*x_l*V[0, 152]*t0[0, 0] - 2*x_e**2*y*V[0, 114]*t0[0, 0] - 2*x_e**2*V[0, 33]*t0[0, 0] - 2*x_e*x_l**2*V[0, 104]*t0[0, 0] + 2*x_e*x_l**2*V[0, 152]*t0[0, 0] + 2*x_e*x_l*y*V[0, 114]*t0[0, 0] - 2*x_e*x_l*y*V[0, 145]*t0[0, 0] + 2*x_e*x_l*V[0, 33]*t0[0, 0] - 2*x_e*x_l*V[0, 48]*t0[0, 0] - 2*x_e*y**2*V[0, 55]*t0[0, 0] - 2*x_e*y*V[0, 26]*t0[0, 0] - 2*x_e*V[0, 3]*t0[0, 0] + 2*x_l**3*V[0, 104]*t0[0, 0] + 2*x_l**2*y*V[0, 145]*t0[0, 0] + 2*x_l**2*V[0, 48]*t0[0, 0] + 2*x_l*y**2*V[0, 55]*t0[0, 0] + 2*x_l*y*V[0, 26]*t0[0, 0] + 2*x_l*V[0, 3]*t0[0, 0]

		# print("The problem is here Lie!")
		if lie <= 0:
			LieCnt += 1
			LieTest = False

	print(InitCnt, UnsafeCnt, LieCnt)
	return InitTest, UnsafeTest, LieTest



def BarrierLP(c0, timer, l, SVG_only=False):
	# X = cp.Variable((6, 6), symmetric=True)
	# Y = cp.Variable((28, 28), symmetric=True)
	timer.start()
	V = cp.Variable((1, 165))
	# objc = cp.Variable()
	lambda_1 = cp.Variable((1, 164))
	lambda_2 = cp.Variable((1, 494))
	lambda_3 = cp.Variable((1, 119))
	objc = cp.Variable()
	objective = cp.Minimize(objc)
	t0 = cp.Parameter((1, 3))
	
	
	constraints = []

	# if SVG_only:
	# 	constraints += [ objc == 0 ]

	constraints += [objc >= 0]

	constraints += [ lambda_1 >= 0 ]
	constraints += [ lambda_2 >= 0 ]
	constraints += [ lambda_3 >= 0 ]

	#-------------------The Initial Set Conditions-------------------
	constraints += [lambda_1[0, 0] + lambda_1[0, 1] - 30*lambda_1[0, 4] - 20*lambda_1[0, 5] - 30*lambda_1[0, 6] - 100*lambda_1[0, 7] + lambda_1[0, 8] + lambda_1[0, 9] + 900*lambda_1[0, 12] + 400*lambda_1[0, 13] + 900*lambda_1[0, 14] + 10000*lambda_1[0, 15] + lambda_1[0, 16] + lambda_1[0, 17] - 27000*lambda_1[0, 20] - 8000*lambda_1[0, 21] - 27000*lambda_1[0, 22] - 1000000*lambda_1[0, 23] + lambda_1[0, 24] - 30*lambda_1[0, 30] - 30*lambda_1[0, 31] - 20*lambda_1[0, 34] - 20*lambda_1[0, 35] + 600*lambda_1[0, 38] - 30*lambda_1[0, 39] - 30*lambda_1[0, 40] + 900*lambda_1[0, 43] + 600*lambda_1[0, 44] - 100*lambda_1[0, 45] - 100*lambda_1[0, 46] + 3000*lambda_1[0, 49] + 2000*lambda_1[0, 50] + 3000*lambda_1[0, 51] + lambda_1[0, 52] + lambda_1[0, 53] - 30*lambda_1[0, 64] - 30*lambda_1[0, 65] + 900*lambda_1[0, 68] + 900*lambda_1[0, 69] - 20*lambda_1[0, 72] - 20*lambda_1[0, 73] - 18000*lambda_1[0, 76] + 400*lambda_1[0, 77] + 400*lambda_1[0, 78] - 12000*lambda_1[0, 81] - 30*lambda_1[0, 82] - 30*lambda_1[0, 83] - 27000*lambda_1[0, 86] - 12000*lambda_1[0, 87] + 900*lambda_1[0, 88] + 900*lambda_1[0, 89] - 27000*lambda_1[0, 92] - 18000*lambda_1[0, 93] - 100*lambda_1[0, 94] - 100*lambda_1[0, 95] - 90000*lambda_1[0, 98] - 40000*lambda_1[0, 99] - 90000*lambda_1[0, 100] + 10000*lambda_1[0, 101] + 10000*lambda_1[0, 102] - 300000*lambda_1[0, 105] - 200000*lambda_1[0, 106] - 300000*lambda_1[0, 107] - 30*lambda_1[0, 112] - 20*lambda_1[0, 118] + 600*lambda_1[0, 124] + 600*lambda_1[0, 125] - 30*lambda_1[0, 128] + 900*lambda_1[0, 134] + 900*lambda_1[0, 135] + 600*lambda_1[0, 138] + 600*lambda_1[0, 139] - 18000*lambda_1[0, 142] - 100*lambda_1[0, 143] + 3000*lambda_1[0, 149] + 3000*lambda_1[0, 150] + 2000*lambda_1[0, 153] + 2000*lambda_1[0, 154] - 60000*lambda_1[0, 157] + 3000*lambda_1[0, 158] + 3000*lambda_1[0, 159] - 90000*lambda_1[0, 162] - 60000*lambda_1[0, 163] >= V[0, 0]- objc]
	constraints += [lambda_1[0, 0] + lambda_1[0, 1] - 30*lambda_1[0, 4] - 20*lambda_1[0, 5] - 30*lambda_1[0, 6] - 100*lambda_1[0, 7] + lambda_1[0, 8] + lambda_1[0, 9] + 900*lambda_1[0, 12] + 400*lambda_1[0, 13] + 900*lambda_1[0, 14] + 10000*lambda_1[0, 15] + lambda_1[0, 16] + lambda_1[0, 17] - 27000*lambda_1[0, 20] - 8000*lambda_1[0, 21] - 27000*lambda_1[0, 22] - 1000000*lambda_1[0, 23] + lambda_1[0, 24] - 30*lambda_1[0, 30] - 30*lambda_1[0, 31] - 20*lambda_1[0, 34] - 20*lambda_1[0, 35] + 600*lambda_1[0, 38] - 30*lambda_1[0, 39] - 30*lambda_1[0, 40] + 900*lambda_1[0, 43] + 600*lambda_1[0, 44] - 100*lambda_1[0, 45] - 100*lambda_1[0, 46] + 3000*lambda_1[0, 49] + 2000*lambda_1[0, 50] + 3000*lambda_1[0, 51] + lambda_1[0, 52] + lambda_1[0, 53] - 30*lambda_1[0, 64] - 30*lambda_1[0, 65] + 900*lambda_1[0, 68] + 900*lambda_1[0, 69] - 20*lambda_1[0, 72] - 20*lambda_1[0, 73] - 18000*lambda_1[0, 76] + 400*lambda_1[0, 77] + 400*lambda_1[0, 78] - 12000*lambda_1[0, 81] - 30*lambda_1[0, 82] - 30*lambda_1[0, 83] - 27000*lambda_1[0, 86] - 12000*lambda_1[0, 87] + 900*lambda_1[0, 88] + 900*lambda_1[0, 89] - 27000*lambda_1[0, 92] - 18000*lambda_1[0, 93] - 100*lambda_1[0, 94] - 100*lambda_1[0, 95] - 90000*lambda_1[0, 98] - 40000*lambda_1[0, 99] - 90000*lambda_1[0, 100] + 10000*lambda_1[0, 101] + 10000*lambda_1[0, 102] - 300000*lambda_1[0, 105] - 200000*lambda_1[0, 106] - 300000*lambda_1[0, 107] - 30*lambda_1[0, 112] - 20*lambda_1[0, 118] + 600*lambda_1[0, 124] + 600*lambda_1[0, 125] - 30*lambda_1[0, 128] + 900*lambda_1[0, 134] + 900*lambda_1[0, 135] + 600*lambda_1[0, 138] + 600*lambda_1[0, 139] - 18000*lambda_1[0, 142] - 100*lambda_1[0, 143] + 3000*lambda_1[0, 149] + 3000*lambda_1[0, 150] + 2000*lambda_1[0, 153] + 2000*lambda_1[0, 154] - 60000*lambda_1[0, 157] + 3000*lambda_1[0, 158] + 3000*lambda_1[0, 159] - 90000*lambda_1[0, 162] - 60000*lambda_1[0, 163] <= V[0, 0]+ objc]
	constraints += [lambda_1[0, 0] + 2*lambda_1[0, 8] + 3*lambda_1[0, 16] + lambda_1[0, 24] - 30*lambda_1[0, 30] - 20*lambda_1[0, 34] - 30*lambda_1[0, 39] - 100*lambda_1[0, 45] + 2*lambda_1[0, 52] + lambda_1[0, 53] - 60*lambda_1[0, 64] + 900*lambda_1[0, 68] - 40*lambda_1[0, 72] + 400*lambda_1[0, 77] - 60*lambda_1[0, 82] + 900*lambda_1[0, 88] - 200*lambda_1[0, 94] + 10000*lambda_1[0, 101] - 30*lambda_1[0, 112] - 20*lambda_1[0, 118] + 600*lambda_1[0, 124] - 30*lambda_1[0, 128] + 900*lambda_1[0, 134] + 600*lambda_1[0, 138] - 100*lambda_1[0, 143] + 3000*lambda_1[0, 149] + 2000*lambda_1[0, 153] + 3000*lambda_1[0, 158] >= V[0, 1]- objc]
	constraints += [lambda_1[0, 0] + 2*lambda_1[0, 8] + 3*lambda_1[0, 16] + lambda_1[0, 24] - 30*lambda_1[0, 30] - 20*lambda_1[0, 34] - 30*lambda_1[0, 39] - 100*lambda_1[0, 45] + 2*lambda_1[0, 52] + lambda_1[0, 53] - 60*lambda_1[0, 64] + 900*lambda_1[0, 68] - 40*lambda_1[0, 72] + 400*lambda_1[0, 77] - 60*lambda_1[0, 82] + 900*lambda_1[0, 88] - 200*lambda_1[0, 94] + 10000*lambda_1[0, 101] - 30*lambda_1[0, 112] - 20*lambda_1[0, 118] + 600*lambda_1[0, 124] - 30*lambda_1[0, 128] + 900*lambda_1[0, 134] + 600*lambda_1[0, 138] - 100*lambda_1[0, 143] + 3000*lambda_1[0, 149] + 2000*lambda_1[0, 153] + 3000*lambda_1[0, 158] <= V[0, 1]+ objc]
	constraints += [lambda_1[0, 8] + 3*lambda_1[0, 16] + lambda_1[0, 52] - 30*lambda_1[0, 64] - 20*lambda_1[0, 72] - 30*lambda_1[0, 82] - 100*lambda_1[0, 94] >= V[0, 9]- objc]
	constraints += [lambda_1[0, 8] + 3*lambda_1[0, 16] + lambda_1[0, 52] - 30*lambda_1[0, 64] - 20*lambda_1[0, 72] - 30*lambda_1[0, 82] - 100*lambda_1[0, 94] <= V[0, 9]+ objc]
	constraints += [lambda_1[0, 16] >= V[0, 17]- objc]
	constraints += [lambda_1[0, 16] <= V[0, 17]+ objc]
	constraints += [lambda_1[0, 1] + 2*lambda_1[0, 9] + 3*lambda_1[0, 17] + lambda_1[0, 24] - 30*lambda_1[0, 31] - 20*lambda_1[0, 35] - 30*lambda_1[0, 40] - 100*lambda_1[0, 46] + lambda_1[0, 52] + 2*lambda_1[0, 53] - 60*lambda_1[0, 65] + 900*lambda_1[0, 69] - 40*lambda_1[0, 73] + 400*lambda_1[0, 78] - 60*lambda_1[0, 83] + 900*lambda_1[0, 89] - 200*lambda_1[0, 95] + 10000*lambda_1[0, 102] - 30*lambda_1[0, 112] - 20*lambda_1[0, 118] + 600*lambda_1[0, 125] - 30*lambda_1[0, 128] + 900*lambda_1[0, 135] + 600*lambda_1[0, 139] - 100*lambda_1[0, 143] + 3000*lambda_1[0, 150] + 2000*lambda_1[0, 154] + 3000*lambda_1[0, 159] >= V[0, 2]- objc]
	constraints += [lambda_1[0, 1] + 2*lambda_1[0, 9] + 3*lambda_1[0, 17] + lambda_1[0, 24] - 30*lambda_1[0, 31] - 20*lambda_1[0, 35] - 30*lambda_1[0, 40] - 100*lambda_1[0, 46] + lambda_1[0, 52] + 2*lambda_1[0, 53] - 60*lambda_1[0, 65] + 900*lambda_1[0, 69] - 40*lambda_1[0, 73] + 400*lambda_1[0, 78] - 60*lambda_1[0, 83] + 900*lambda_1[0, 89] - 200*lambda_1[0, 95] + 10000*lambda_1[0, 102] - 30*lambda_1[0, 112] - 20*lambda_1[0, 118] + 600*lambda_1[0, 125] - 30*lambda_1[0, 128] + 900*lambda_1[0, 135] + 600*lambda_1[0, 139] - 100*lambda_1[0, 143] + 3000*lambda_1[0, 150] + 2000*lambda_1[0, 154] + 3000*lambda_1[0, 159] <= V[0, 2]+ objc]
	constraints += [lambda_1[0, 24] + 2*lambda_1[0, 52] + 2*lambda_1[0, 53] - 30*lambda_1[0, 112] - 20*lambda_1[0, 118] - 30*lambda_1[0, 128] - 100*lambda_1[0, 143] >= V[0, 25]- objc]
	constraints += [lambda_1[0, 24] + 2*lambda_1[0, 52] + 2*lambda_1[0, 53] - 30*lambda_1[0, 112] - 20*lambda_1[0, 118] - 30*lambda_1[0, 128] - 100*lambda_1[0, 143] <= V[0, 25]+ objc]
	constraints += [lambda_1[0, 52] >= V[0, 53]- objc]
	constraints += [lambda_1[0, 52] <= V[0, 53]+ objc]
	constraints += [lambda_1[0, 9] + 3*lambda_1[0, 17] + lambda_1[0, 53] - 30*lambda_1[0, 65] - 20*lambda_1[0, 73] - 30*lambda_1[0, 83] - 100*lambda_1[0, 95] >= V[0, 10]- objc]
	constraints += [lambda_1[0, 9] + 3*lambda_1[0, 17] + lambda_1[0, 53] - 30*lambda_1[0, 65] - 20*lambda_1[0, 73] - 30*lambda_1[0, 83] - 100*lambda_1[0, 95] <= V[0, 10]+ objc]
	constraints += [lambda_1[0, 53] >= V[0, 54]- objc]
	constraints += [lambda_1[0, 53] <= V[0, 54]+ objc]
	constraints += [lambda_1[0, 17] >= V[0, 18]- objc]
	constraints += [lambda_1[0, 17] <= V[0, 18]+ objc]
	constraints += [lambda_1[0, 2] + lambda_1[0, 25] + lambda_1[0, 26] - 30*lambda_1[0, 32] - 20*lambda_1[0, 36] - 30*lambda_1[0, 41] - 100*lambda_1[0, 47] + lambda_1[0, 54] + lambda_1[0, 55] + 900*lambda_1[0, 70] + 400*lambda_1[0, 79] + 900*lambda_1[0, 90] + 10000*lambda_1[0, 103] + lambda_1[0, 108] - 30*lambda_1[0, 113] - 30*lambda_1[0, 114] - 20*lambda_1[0, 119] - 20*lambda_1[0, 120] + 600*lambda_1[0, 126] - 30*lambda_1[0, 129] - 30*lambda_1[0, 130] + 900*lambda_1[0, 136] + 600*lambda_1[0, 140] - 100*lambda_1[0, 144] - 100*lambda_1[0, 145] + 3000*lambda_1[0, 151] + 2000*lambda_1[0, 155] + 3000*lambda_1[0, 160] >= V[0, 3]- objc]
	constraints += [lambda_1[0, 2] + lambda_1[0, 25] + lambda_1[0, 26] - 30*lambda_1[0, 32] - 20*lambda_1[0, 36] - 30*lambda_1[0, 41] - 100*lambda_1[0, 47] + lambda_1[0, 54] + lambda_1[0, 55] + 900*lambda_1[0, 70] + 400*lambda_1[0, 79] + 900*lambda_1[0, 90] + 10000*lambda_1[0, 103] + lambda_1[0, 108] - 30*lambda_1[0, 113] - 30*lambda_1[0, 114] - 20*lambda_1[0, 119] - 20*lambda_1[0, 120] + 600*lambda_1[0, 126] - 30*lambda_1[0, 129] - 30*lambda_1[0, 130] + 900*lambda_1[0, 136] + 600*lambda_1[0, 140] - 100*lambda_1[0, 144] - 100*lambda_1[0, 145] + 3000*lambda_1[0, 151] + 2000*lambda_1[0, 155] + 3000*lambda_1[0, 160] <= V[0, 3]+ objc]
	constraints += [lambda_1[0, 25] + 2*lambda_1[0, 54] + lambda_1[0, 108] - 30*lambda_1[0, 113] - 20*lambda_1[0, 119] - 30*lambda_1[0, 129] - 100*lambda_1[0, 144] >= V[0, 26]- objc]
	constraints += [lambda_1[0, 25] + 2*lambda_1[0, 54] + lambda_1[0, 108] - 30*lambda_1[0, 113] - 20*lambda_1[0, 119] - 30*lambda_1[0, 129] - 100*lambda_1[0, 144] <= V[0, 26]+ objc]
	constraints += [lambda_1[0, 54] >= V[0, 55]- objc]
	constraints += [lambda_1[0, 54] <= V[0, 55]+ objc]
	constraints += [lambda_1[0, 26] + 2*lambda_1[0, 55] + lambda_1[0, 108] - 30*lambda_1[0, 114] - 20*lambda_1[0, 120] - 30*lambda_1[0, 130] - 100*lambda_1[0, 145] >= V[0, 27]- objc]
	constraints += [lambda_1[0, 26] + 2*lambda_1[0, 55] + lambda_1[0, 108] - 30*lambda_1[0, 114] - 20*lambda_1[0, 120] - 30*lambda_1[0, 130] - 100*lambda_1[0, 145] <= V[0, 27]+ objc]
	constraints += [lambda_1[0, 108] >= V[0, 109]- objc]
	constraints += [lambda_1[0, 108] <= V[0, 109]+ objc]
	constraints += [lambda_1[0, 55] >= V[0, 56]- objc]
	constraints += [lambda_1[0, 55] <= V[0, 56]+ objc]
	constraints += [lambda_1[0, 10] + lambda_1[0, 56] + lambda_1[0, 57] - 30*lambda_1[0, 66] - 20*lambda_1[0, 74] - 30*lambda_1[0, 84] - 100*lambda_1[0, 96] >= V[0, 11]- objc]
	constraints += [lambda_1[0, 10] + lambda_1[0, 56] + lambda_1[0, 57] - 30*lambda_1[0, 66] - 20*lambda_1[0, 74] - 30*lambda_1[0, 84] - 100*lambda_1[0, 96] <= V[0, 11]+ objc]
	constraints += [lambda_1[0, 56] >= V[0, 57]- objc]
	constraints += [lambda_1[0, 56] <= V[0, 57]+ objc]
	constraints += [lambda_1[0, 57] >= V[0, 58]- objc]
	constraints += [lambda_1[0, 57] <= V[0, 58]+ objc]
	constraints += [lambda_1[0, 18] >= V[0, 19]- objc]
	constraints += [lambda_1[0, 18] <= V[0, 19]+ objc]
	constraints += [lambda_1[0, 4] - 60*lambda_1[0, 12] + 2700*lambda_1[0, 20] + lambda_1[0, 30] + lambda_1[0, 31] - 20*lambda_1[0, 38] - 30*lambda_1[0, 43] - 100*lambda_1[0, 49] + lambda_1[0, 64] + lambda_1[0, 65] - 60*lambda_1[0, 68] - 60*lambda_1[0, 69] + 1200*lambda_1[0, 76] + 400*lambda_1[0, 81] + 1800*lambda_1[0, 86] + 900*lambda_1[0, 92] + 6000*lambda_1[0, 98] + 10000*lambda_1[0, 105] + lambda_1[0, 112] - 20*lambda_1[0, 124] - 20*lambda_1[0, 125] - 30*lambda_1[0, 134] - 30*lambda_1[0, 135] + 600*lambda_1[0, 142] - 100*lambda_1[0, 149] - 100*lambda_1[0, 150] + 2000*lambda_1[0, 157] + 3000*lambda_1[0, 162] >= V[0, 4]- objc]
	constraints += [lambda_1[0, 4] - 60*lambda_1[0, 12] + 2700*lambda_1[0, 20] + lambda_1[0, 30] + lambda_1[0, 31] - 20*lambda_1[0, 38] - 30*lambda_1[0, 43] - 100*lambda_1[0, 49] + lambda_1[0, 64] + lambda_1[0, 65] - 60*lambda_1[0, 68] - 60*lambda_1[0, 69] + 1200*lambda_1[0, 76] + 400*lambda_1[0, 81] + 1800*lambda_1[0, 86] + 900*lambda_1[0, 92] + 6000*lambda_1[0, 98] + 10000*lambda_1[0, 105] + lambda_1[0, 112] - 20*lambda_1[0, 124] - 20*lambda_1[0, 125] - 30*lambda_1[0, 134] - 30*lambda_1[0, 135] + 600*lambda_1[0, 142] - 100*lambda_1[0, 149] - 100*lambda_1[0, 150] + 2000*lambda_1[0, 157] + 3000*lambda_1[0, 162] <= V[0, 4]+ objc]
	constraints += [lambda_1[0, 30] + 2*lambda_1[0, 64] - 60*lambda_1[0, 68] + lambda_1[0, 112] - 20*lambda_1[0, 124] - 30*lambda_1[0, 134] - 100*lambda_1[0, 149] >= V[0, 28]- objc]
	constraints += [lambda_1[0, 30] + 2*lambda_1[0, 64] - 60*lambda_1[0, 68] + lambda_1[0, 112] - 20*lambda_1[0, 124] - 30*lambda_1[0, 134] - 100*lambda_1[0, 149] <= V[0, 28]+ objc]
	constraints += [lambda_1[0, 64] >= V[0, 59]- objc]
	constraints += [lambda_1[0, 64] <= V[0, 59]+ objc]
	constraints += [lambda_1[0, 31] + 2*lambda_1[0, 65] - 60*lambda_1[0, 69] + lambda_1[0, 112] - 20*lambda_1[0, 125] - 30*lambda_1[0, 135] - 100*lambda_1[0, 150] >= V[0, 29]- objc]
	constraints += [lambda_1[0, 31] + 2*lambda_1[0, 65] - 60*lambda_1[0, 69] + lambda_1[0, 112] - 20*lambda_1[0, 125] - 30*lambda_1[0, 135] - 100*lambda_1[0, 150] <= V[0, 29]+ objc]
	constraints += [lambda_1[0, 112] >= V[0, 110]- objc]
	constraints += [lambda_1[0, 112] <= V[0, 110]+ objc]
	constraints += [lambda_1[0, 65] >= V[0, 60]- objc]
	constraints += [lambda_1[0, 65] <= V[0, 60]+ objc]
	constraints += [lambda_1[0, 32] - 60*lambda_1[0, 70] + lambda_1[0, 113] + lambda_1[0, 114] - 20*lambda_1[0, 126] - 30*lambda_1[0, 136] - 100*lambda_1[0, 151] >= V[0, 30]- objc]
	constraints += [lambda_1[0, 32] - 60*lambda_1[0, 70] + lambda_1[0, 113] + lambda_1[0, 114] - 20*lambda_1[0, 126] - 30*lambda_1[0, 136] - 100*lambda_1[0, 151] <= V[0, 30]+ objc]
	constraints += [lambda_1[0, 113] >= V[0, 111]- objc]
	constraints += [lambda_1[0, 113] <= V[0, 111]+ objc]
	constraints += [lambda_1[0, 114] >= V[0, 112]- objc]
	constraints += [lambda_1[0, 114] <= V[0, 112]+ objc]
	constraints += [lambda_1[0, 66] >= V[0, 61]- objc]
	constraints += [lambda_1[0, 66] <= V[0, 61]+ objc]
	constraints += [lambda_1[0, 12] - 90*lambda_1[0, 20] + lambda_1[0, 68] + lambda_1[0, 69] - 20*lambda_1[0, 76] - 30*lambda_1[0, 86] - 100*lambda_1[0, 98] >= V[0, 12]- objc]
	constraints += [lambda_1[0, 12] - 90*lambda_1[0, 20] + lambda_1[0, 68] + lambda_1[0, 69] - 20*lambda_1[0, 76] - 30*lambda_1[0, 86] - 100*lambda_1[0, 98] <= V[0, 12]+ objc]
	constraints += [lambda_1[0, 68] >= V[0, 62]- objc]
	constraints += [lambda_1[0, 68] <= V[0, 62]+ objc]
	constraints += [lambda_1[0, 69] >= V[0, 63]- objc]
	constraints += [lambda_1[0, 69] <= V[0, 63]+ objc]
	constraints += [lambda_1[0, 70] >= V[0, 64]- objc]
	constraints += [lambda_1[0, 70] <= V[0, 64]+ objc]
	constraints += [lambda_1[0, 20] >= V[0, 20]- objc]
	constraints += [lambda_1[0, 20] <= V[0, 20]+ objc]
	constraints += [lambda_1[0, 6] - 60*lambda_1[0, 14] + 2700*lambda_1[0, 22] + lambda_1[0, 39] + lambda_1[0, 40] - 30*lambda_1[0, 43] - 20*lambda_1[0, 44] - 100*lambda_1[0, 51] + lambda_1[0, 82] + lambda_1[0, 83] + 900*lambda_1[0, 86] + 400*lambda_1[0, 87] - 60*lambda_1[0, 88] - 60*lambda_1[0, 89] + 1800*lambda_1[0, 92] + 1200*lambda_1[0, 93] + 6000*lambda_1[0, 100] + 10000*lambda_1[0, 107] + lambda_1[0, 128] - 30*lambda_1[0, 134] - 30*lambda_1[0, 135] - 20*lambda_1[0, 138] - 20*lambda_1[0, 139] + 600*lambda_1[0, 142] - 100*lambda_1[0, 158] - 100*lambda_1[0, 159] + 3000*lambda_1[0, 162] + 2000*lambda_1[0, 163] >= V[0, 5]- objc]
	constraints += [lambda_1[0, 6] - 60*lambda_1[0, 14] + 2700*lambda_1[0, 22] + lambda_1[0, 39] + lambda_1[0, 40] - 30*lambda_1[0, 43] - 20*lambda_1[0, 44] - 100*lambda_1[0, 51] + lambda_1[0, 82] + lambda_1[0, 83] + 900*lambda_1[0, 86] + 400*lambda_1[0, 87] - 60*lambda_1[0, 88] - 60*lambda_1[0, 89] + 1800*lambda_1[0, 92] + 1200*lambda_1[0, 93] + 6000*lambda_1[0, 100] + 10000*lambda_1[0, 107] + lambda_1[0, 128] - 30*lambda_1[0, 134] - 30*lambda_1[0, 135] - 20*lambda_1[0, 138] - 20*lambda_1[0, 139] + 600*lambda_1[0, 142] - 100*lambda_1[0, 158] - 100*lambda_1[0, 159] + 3000*lambda_1[0, 162] + 2000*lambda_1[0, 163] <= V[0, 5]+ objc]
	constraints += [lambda_1[0, 39] + 2*lambda_1[0, 82] - 60*lambda_1[0, 88] + lambda_1[0, 128] - 30*lambda_1[0, 134] - 20*lambda_1[0, 138] - 100*lambda_1[0, 158] >= V[0, 31]- objc]
	constraints += [lambda_1[0, 39] + 2*lambda_1[0, 82] - 60*lambda_1[0, 88] + lambda_1[0, 128] - 30*lambda_1[0, 134] - 20*lambda_1[0, 138] - 100*lambda_1[0, 158] <= V[0, 31]+ objc]
	constraints += [lambda_1[0, 82] >= V[0, 65]- objc]
	constraints += [lambda_1[0, 82] <= V[0, 65]+ objc]
	constraints += [lambda_1[0, 40] + 2*lambda_1[0, 83] - 60*lambda_1[0, 89] + lambda_1[0, 128] - 30*lambda_1[0, 135] - 20*lambda_1[0, 139] - 100*lambda_1[0, 159] >= V[0, 32]- objc]
	constraints += [lambda_1[0, 40] + 2*lambda_1[0, 83] - 60*lambda_1[0, 89] + lambda_1[0, 128] - 30*lambda_1[0, 135] - 20*lambda_1[0, 139] - 100*lambda_1[0, 159] <= V[0, 32]+ objc]
	constraints += [lambda_1[0, 128] >= V[0, 113]- objc]
	constraints += [lambda_1[0, 128] <= V[0, 113]+ objc]
	constraints += [lambda_1[0, 83] >= V[0, 66]- objc]
	constraints += [lambda_1[0, 83] <= V[0, 66]+ objc]
	constraints += [lambda_1[0, 41] - 60*lambda_1[0, 90] + lambda_1[0, 129] + lambda_1[0, 130] - 30*lambda_1[0, 136] - 20*lambda_1[0, 140] - 100*lambda_1[0, 160] >= V[0, 33]- objc]
	constraints += [lambda_1[0, 41] - 60*lambda_1[0, 90] + lambda_1[0, 129] + lambda_1[0, 130] - 30*lambda_1[0, 136] - 20*lambda_1[0, 140] - 100*lambda_1[0, 160] <= V[0, 33]+ objc]
	constraints += [lambda_1[0, 129] >= V[0, 114]- objc]
	constraints += [lambda_1[0, 129] <= V[0, 114]+ objc]
	constraints += [lambda_1[0, 130] >= V[0, 115]- objc]
	constraints += [lambda_1[0, 130] <= V[0, 115]+ objc]
	constraints += [lambda_1[0, 84] >= V[0, 67]- objc]
	constraints += [lambda_1[0, 84] <= V[0, 67]+ objc]
	constraints += [lambda_1[0, 43] - 60*lambda_1[0, 86] - 60*lambda_1[0, 92] + lambda_1[0, 134] + lambda_1[0, 135] - 20*lambda_1[0, 142] - 100*lambda_1[0, 162] >= V[0, 34]- objc]
	constraints += [lambda_1[0, 43] - 60*lambda_1[0, 86] - 60*lambda_1[0, 92] + lambda_1[0, 134] + lambda_1[0, 135] - 20*lambda_1[0, 142] - 100*lambda_1[0, 162] <= V[0, 34]+ objc]
	constraints += [lambda_1[0, 134] >= V[0, 116]- objc]
	constraints += [lambda_1[0, 134] <= V[0, 116]+ objc]
	constraints += [lambda_1[0, 135] >= V[0, 117]- objc]
	constraints += [lambda_1[0, 135] <= V[0, 117]+ objc]
	constraints += [lambda_1[0, 136] >= V[0, 118]- objc]
	constraints += [lambda_1[0, 136] <= V[0, 118]+ objc]
	constraints += [lambda_1[0, 86] >= V[0, 68]- objc]
	constraints += [lambda_1[0, 86] <= V[0, 68]+ objc]
	constraints += [lambda_1[0, 14] - 90*lambda_1[0, 22] + lambda_1[0, 88] + lambda_1[0, 89] - 30*lambda_1[0, 92] - 20*lambda_1[0, 93] - 100*lambda_1[0, 100] >= V[0, 13]- objc]
	constraints += [lambda_1[0, 14] - 90*lambda_1[0, 22] + lambda_1[0, 88] + lambda_1[0, 89] - 30*lambda_1[0, 92] - 20*lambda_1[0, 93] - 100*lambda_1[0, 100] <= V[0, 13]+ objc]
	constraints += [lambda_1[0, 88] >= V[0, 69]- objc]
	constraints += [lambda_1[0, 88] <= V[0, 69]+ objc]
	constraints += [lambda_1[0, 89] >= V[0, 70]- objc]
	constraints += [lambda_1[0, 89] <= V[0, 70]+ objc]
	constraints += [lambda_1[0, 90] >= V[0, 71]- objc]
	constraints += [lambda_1[0, 90] <= V[0, 71]+ objc]
	constraints += [lambda_1[0, 92] >= V[0, 72]- objc]
	constraints += [lambda_1[0, 92] <= V[0, 72]+ objc]
	constraints += [lambda_1[0, 22] >= V[0, 21]- objc]
	constraints += [lambda_1[0, 22] <= V[0, 21]+ objc]
	constraints += [lambda_1[0, 3] + lambda_1[0, 27] + lambda_1[0, 28] - 30*lambda_1[0, 33] - 20*lambda_1[0, 37] - 30*lambda_1[0, 42] - 100*lambda_1[0, 48] + lambda_1[0, 58] + lambda_1[0, 59] + 900*lambda_1[0, 71] + 400*lambda_1[0, 80] + 900*lambda_1[0, 91] + 10000*lambda_1[0, 104] + lambda_1[0, 109] - 30*lambda_1[0, 115] - 30*lambda_1[0, 116] - 20*lambda_1[0, 121] - 20*lambda_1[0, 122] + 600*lambda_1[0, 127] - 30*lambda_1[0, 131] - 30*lambda_1[0, 132] + 900*lambda_1[0, 137] + 600*lambda_1[0, 141] - 100*lambda_1[0, 146] - 100*lambda_1[0, 147] + 3000*lambda_1[0, 152] + 2000*lambda_1[0, 156] + 3000*lambda_1[0, 161] >= V[0, 6]- objc]
	constraints += [lambda_1[0, 3] + lambda_1[0, 27] + lambda_1[0, 28] - 30*lambda_1[0, 33] - 20*lambda_1[0, 37] - 30*lambda_1[0, 42] - 100*lambda_1[0, 48] + lambda_1[0, 58] + lambda_1[0, 59] + 900*lambda_1[0, 71] + 400*lambda_1[0, 80] + 900*lambda_1[0, 91] + 10000*lambda_1[0, 104] + lambda_1[0, 109] - 30*lambda_1[0, 115] - 30*lambda_1[0, 116] - 20*lambda_1[0, 121] - 20*lambda_1[0, 122] + 600*lambda_1[0, 127] - 30*lambda_1[0, 131] - 30*lambda_1[0, 132] + 900*lambda_1[0, 137] + 600*lambda_1[0, 141] - 100*lambda_1[0, 146] - 100*lambda_1[0, 147] + 3000*lambda_1[0, 152] + 2000*lambda_1[0, 156] + 3000*lambda_1[0, 161] <= V[0, 6]+ objc]
	constraints += [lambda_1[0, 27] + 2*lambda_1[0, 58] + lambda_1[0, 109] - 30*lambda_1[0, 115] - 20*lambda_1[0, 121] - 30*lambda_1[0, 131] - 100*lambda_1[0, 146] >= V[0, 35]- objc]
	constraints += [lambda_1[0, 27] + 2*lambda_1[0, 58] + lambda_1[0, 109] - 30*lambda_1[0, 115] - 20*lambda_1[0, 121] - 30*lambda_1[0, 131] - 100*lambda_1[0, 146] <= V[0, 35]+ objc]
	constraints += [lambda_1[0, 58] >= V[0, 73]- objc]
	constraints += [lambda_1[0, 58] <= V[0, 73]+ objc]
	constraints += [lambda_1[0, 28] + 2*lambda_1[0, 59] + lambda_1[0, 109] - 30*lambda_1[0, 116] - 20*lambda_1[0, 122] - 30*lambda_1[0, 132] - 100*lambda_1[0, 147] >= V[0, 36]- objc]
	constraints += [lambda_1[0, 28] + 2*lambda_1[0, 59] + lambda_1[0, 109] - 30*lambda_1[0, 116] - 20*lambda_1[0, 122] - 30*lambda_1[0, 132] - 100*lambda_1[0, 147] <= V[0, 36]+ objc]
	constraints += [lambda_1[0, 109] >= V[0, 119]- objc]
	constraints += [lambda_1[0, 109] <= V[0, 119]+ objc]
	constraints += [lambda_1[0, 59] >= V[0, 74]- objc]
	constraints += [lambda_1[0, 59] <= V[0, 74]+ objc]
	constraints += [lambda_1[0, 29] + lambda_1[0, 110] + lambda_1[0, 111] - 30*lambda_1[0, 117] - 20*lambda_1[0, 123] - 30*lambda_1[0, 133] - 100*lambda_1[0, 148] >= V[0, 37]- objc]
	constraints += [lambda_1[0, 29] + lambda_1[0, 110] + lambda_1[0, 111] - 30*lambda_1[0, 117] - 20*lambda_1[0, 123] - 30*lambda_1[0, 133] - 100*lambda_1[0, 148] <= V[0, 37]+ objc]
	constraints += [lambda_1[0, 110] >= V[0, 120]- objc]
	constraints += [lambda_1[0, 110] <= V[0, 120]+ objc]
	constraints += [lambda_1[0, 111] >= V[0, 121]- objc]
	constraints += [lambda_1[0, 111] <= V[0, 121]+ objc]
	constraints += [lambda_1[0, 60] >= V[0, 75]- objc]
	constraints += [lambda_1[0, 60] <= V[0, 75]+ objc]
	constraints += [lambda_1[0, 33] - 60*lambda_1[0, 71] + lambda_1[0, 115] + lambda_1[0, 116] - 20*lambda_1[0, 127] - 30*lambda_1[0, 137] - 100*lambda_1[0, 152] >= V[0, 38]- objc]
	constraints += [lambda_1[0, 33] - 60*lambda_1[0, 71] + lambda_1[0, 115] + lambda_1[0, 116] - 20*lambda_1[0, 127] - 30*lambda_1[0, 137] - 100*lambda_1[0, 152] <= V[0, 38]+ objc]
	constraints += [lambda_1[0, 115] >= V[0, 122]- objc]
	constraints += [lambda_1[0, 115] <= V[0, 122]+ objc]
	constraints += [lambda_1[0, 116] >= V[0, 123]- objc]
	constraints += [lambda_1[0, 116] <= V[0, 123]+ objc]
	constraints += [lambda_1[0, 117] >= V[0, 124]- objc]
	constraints += [lambda_1[0, 117] <= V[0, 124]+ objc]
	constraints += [lambda_1[0, 71] >= V[0, 76]- objc]
	constraints += [lambda_1[0, 71] <= V[0, 76]+ objc]
	constraints += [lambda_1[0, 42] - 60*lambda_1[0, 91] + lambda_1[0, 131] + lambda_1[0, 132] - 30*lambda_1[0, 137] - 20*lambda_1[0, 141] - 100*lambda_1[0, 161] >= V[0, 39]- objc]
	constraints += [lambda_1[0, 42] - 60*lambda_1[0, 91] + lambda_1[0, 131] + lambda_1[0, 132] - 30*lambda_1[0, 137] - 20*lambda_1[0, 141] - 100*lambda_1[0, 161] <= V[0, 39]+ objc]
	constraints += [lambda_1[0, 131] >= V[0, 125]- objc]
	constraints += [lambda_1[0, 131] <= V[0, 125]+ objc]
	constraints += [lambda_1[0, 132] >= V[0, 126]- objc]
	constraints += [lambda_1[0, 132] <= V[0, 126]+ objc]
	constraints += [lambda_1[0, 133] >= V[0, 127]- objc]
	constraints += [lambda_1[0, 133] <= V[0, 127]+ objc]
	constraints += [lambda_1[0, 137] >= V[0, 128]- objc]
	constraints += [lambda_1[0, 137] <= V[0, 128]+ objc]
	constraints += [lambda_1[0, 91] >= V[0, 77]- objc]
	constraints += [lambda_1[0, 91] <= V[0, 77]+ objc]
	constraints += [lambda_1[0, 11] + lambda_1[0, 61] + lambda_1[0, 62] - 30*lambda_1[0, 67] - 20*lambda_1[0, 75] - 30*lambda_1[0, 85] - 100*lambda_1[0, 97] >= V[0, 14]- objc]
	constraints += [lambda_1[0, 11] + lambda_1[0, 61] + lambda_1[0, 62] - 30*lambda_1[0, 67] - 20*lambda_1[0, 75] - 30*lambda_1[0, 85] - 100*lambda_1[0, 97] <= V[0, 14]+ objc]
	constraints += [lambda_1[0, 61] >= V[0, 78]- objc]
	constraints += [lambda_1[0, 61] <= V[0, 78]+ objc]
	constraints += [lambda_1[0, 62] >= V[0, 79]- objc]
	constraints += [lambda_1[0, 62] <= V[0, 79]+ objc]
	constraints += [lambda_1[0, 63] >= V[0, 80]- objc]
	constraints += [lambda_1[0, 63] <= V[0, 80]+ objc]
	constraints += [lambda_1[0, 67] >= V[0, 81]- objc]
	constraints += [lambda_1[0, 67] <= V[0, 81]+ objc]
	constraints += [lambda_1[0, 85] >= V[0, 82]- objc]
	constraints += [lambda_1[0, 85] <= V[0, 82]+ objc]
	constraints += [lambda_1[0, 19] >= V[0, 22]- objc]
	constraints += [lambda_1[0, 19] <= V[0, 22]+ objc]
	constraints += [lambda_1[0, 5] - 40*lambda_1[0, 13] + 1200*lambda_1[0, 21] + lambda_1[0, 34] + lambda_1[0, 35] - 30*lambda_1[0, 38] - 30*lambda_1[0, 44] - 100*lambda_1[0, 50] + lambda_1[0, 72] + lambda_1[0, 73] + 900*lambda_1[0, 76] - 40*lambda_1[0, 77] - 40*lambda_1[0, 78] + 1200*lambda_1[0, 81] + 1200*lambda_1[0, 87] + 900*lambda_1[0, 93] + 4000*lambda_1[0, 99] + 10000*lambda_1[0, 106] + lambda_1[0, 118] - 30*lambda_1[0, 124] - 30*lambda_1[0, 125] - 30*lambda_1[0, 138] - 30*lambda_1[0, 139] + 900*lambda_1[0, 142] - 100*lambda_1[0, 153] - 100*lambda_1[0, 154] + 3000*lambda_1[0, 157] + 3000*lambda_1[0, 163] >= V[0, 7]- objc]
	constraints += [lambda_1[0, 5] - 40*lambda_1[0, 13] + 1200*lambda_1[0, 21] + lambda_1[0, 34] + lambda_1[0, 35] - 30*lambda_1[0, 38] - 30*lambda_1[0, 44] - 100*lambda_1[0, 50] + lambda_1[0, 72] + lambda_1[0, 73] + 900*lambda_1[0, 76] - 40*lambda_1[0, 77] - 40*lambda_1[0, 78] + 1200*lambda_1[0, 81] + 1200*lambda_1[0, 87] + 900*lambda_1[0, 93] + 4000*lambda_1[0, 99] + 10000*lambda_1[0, 106] + lambda_1[0, 118] - 30*lambda_1[0, 124] - 30*lambda_1[0, 125] - 30*lambda_1[0, 138] - 30*lambda_1[0, 139] + 900*lambda_1[0, 142] - 100*lambda_1[0, 153] - 100*lambda_1[0, 154] + 3000*lambda_1[0, 157] + 3000*lambda_1[0, 163] <= V[0, 7]+ objc]
	constraints += [lambda_1[0, 34] + 2*lambda_1[0, 72] - 40*lambda_1[0, 77] + lambda_1[0, 118] - 30*lambda_1[0, 124] - 30*lambda_1[0, 138] - 100*lambda_1[0, 153] >= V[0, 40]- objc]
	constraints += [lambda_1[0, 34] + 2*lambda_1[0, 72] - 40*lambda_1[0, 77] + lambda_1[0, 118] - 30*lambda_1[0, 124] - 30*lambda_1[0, 138] - 100*lambda_1[0, 153] <= V[0, 40]+ objc]
	constraints += [lambda_1[0, 72] >= V[0, 83]- objc]
	constraints += [lambda_1[0, 72] <= V[0, 83]+ objc]
	constraints += [lambda_1[0, 35] + 2*lambda_1[0, 73] - 40*lambda_1[0, 78] + lambda_1[0, 118] - 30*lambda_1[0, 125] - 30*lambda_1[0, 139] - 100*lambda_1[0, 154] >= V[0, 41]- objc]
	constraints += [lambda_1[0, 35] + 2*lambda_1[0, 73] - 40*lambda_1[0, 78] + lambda_1[0, 118] - 30*lambda_1[0, 125] - 30*lambda_1[0, 139] - 100*lambda_1[0, 154] <= V[0, 41]+ objc]
	constraints += [lambda_1[0, 118] >= V[0, 129]- objc]
	constraints += [lambda_1[0, 118] <= V[0, 129]+ objc]
	constraints += [lambda_1[0, 73] >= V[0, 84]- objc]
	constraints += [lambda_1[0, 73] <= V[0, 84]+ objc]
	constraints += [lambda_1[0, 36] - 40*lambda_1[0, 79] + lambda_1[0, 119] + lambda_1[0, 120] - 30*lambda_1[0, 126] - 30*lambda_1[0, 140] - 100*lambda_1[0, 155] >= V[0, 42]- objc]
	constraints += [lambda_1[0, 36] - 40*lambda_1[0, 79] + lambda_1[0, 119] + lambda_1[0, 120] - 30*lambda_1[0, 126] - 30*lambda_1[0, 140] - 100*lambda_1[0, 155] <= V[0, 42]+ objc]
	constraints += [lambda_1[0, 119] >= V[0, 130]- objc]
	constraints += [lambda_1[0, 119] <= V[0, 130]+ objc]
	constraints += [lambda_1[0, 120] >= V[0, 131]- objc]
	constraints += [lambda_1[0, 120] <= V[0, 131]+ objc]
	constraints += [lambda_1[0, 74] >= V[0, 85]- objc]
	constraints += [lambda_1[0, 74] <= V[0, 85]+ objc]
	constraints += [lambda_1[0, 38] - 60*lambda_1[0, 76] - 40*lambda_1[0, 81] + lambda_1[0, 124] + lambda_1[0, 125] - 30*lambda_1[0, 142] - 100*lambda_1[0, 157] >= V[0, 43]- objc]
	constraints += [lambda_1[0, 38] - 60*lambda_1[0, 76] - 40*lambda_1[0, 81] + lambda_1[0, 124] + lambda_1[0, 125] - 30*lambda_1[0, 142] - 100*lambda_1[0, 157] <= V[0, 43]+ objc]
	constraints += [lambda_1[0, 124] >= V[0, 132]- objc]
	constraints += [lambda_1[0, 124] <= V[0, 132]+ objc]
	constraints += [lambda_1[0, 125] >= V[0, 133]- objc]
	constraints += [lambda_1[0, 125] <= V[0, 133]+ objc]
	constraints += [lambda_1[0, 126] >= V[0, 134]- objc]
	constraints += [lambda_1[0, 126] <= V[0, 134]+ objc]
	constraints += [lambda_1[0, 76] >= V[0, 86]- objc]
	constraints += [lambda_1[0, 76] <= V[0, 86]+ objc]
	constraints += [lambda_1[0, 44] - 40*lambda_1[0, 87] - 60*lambda_1[0, 93] + lambda_1[0, 138] + lambda_1[0, 139] - 30*lambda_1[0, 142] - 100*lambda_1[0, 163] >= V[0, 44]- objc]
	constraints += [lambda_1[0, 44] - 40*lambda_1[0, 87] - 60*lambda_1[0, 93] + lambda_1[0, 138] + lambda_1[0, 139] - 30*lambda_1[0, 142] - 100*lambda_1[0, 163] <= V[0, 44]+ objc]
	constraints += [lambda_1[0, 138] >= V[0, 135]- objc]
	constraints += [lambda_1[0, 138] <= V[0, 135]+ objc]
	constraints += [lambda_1[0, 139] >= V[0, 136]- objc]
	constraints += [lambda_1[0, 139] <= V[0, 136]+ objc]
	constraints += [lambda_1[0, 140] >= V[0, 137]- objc]
	constraints += [lambda_1[0, 140] <= V[0, 137]+ objc]
	constraints += [lambda_1[0, 142] >= V[0, 138]- objc]
	constraints += [lambda_1[0, 142] <= V[0, 138]+ objc]
	constraints += [lambda_1[0, 93] >= V[0, 87]- objc]
	constraints += [lambda_1[0, 93] <= V[0, 87]+ objc]
	constraints += [lambda_1[0, 37] - 40*lambda_1[0, 80] + lambda_1[0, 121] + lambda_1[0, 122] - 30*lambda_1[0, 127] - 30*lambda_1[0, 141] - 100*lambda_1[0, 156] >= V[0, 45]- objc]
	constraints += [lambda_1[0, 37] - 40*lambda_1[0, 80] + lambda_1[0, 121] + lambda_1[0, 122] - 30*lambda_1[0, 127] - 30*lambda_1[0, 141] - 100*lambda_1[0, 156] <= V[0, 45]+ objc]
	constraints += [lambda_1[0, 121] >= V[0, 139]- objc]
	constraints += [lambda_1[0, 121] <= V[0, 139]+ objc]
	constraints += [lambda_1[0, 122] >= V[0, 140]- objc]
	constraints += [lambda_1[0, 122] <= V[0, 140]+ objc]
	constraints += [lambda_1[0, 123] >= V[0, 141]- objc]
	constraints += [lambda_1[0, 123] <= V[0, 141]+ objc]
	constraints += [lambda_1[0, 127] >= V[0, 142]- objc]
	constraints += [lambda_1[0, 127] <= V[0, 142]+ objc]
	constraints += [lambda_1[0, 141] >= V[0, 143]- objc]
	constraints += [lambda_1[0, 141] <= V[0, 143]+ objc]
	constraints += [lambda_1[0, 75] >= V[0, 88]- objc]
	constraints += [lambda_1[0, 75] <= V[0, 88]+ objc]
	constraints += [lambda_1[0, 13] - 60*lambda_1[0, 21] + lambda_1[0, 77] + lambda_1[0, 78] - 30*lambda_1[0, 81] - 30*lambda_1[0, 87] - 100*lambda_1[0, 99] >= V[0, 15]- objc]
	constraints += [lambda_1[0, 13] - 60*lambda_1[0, 21] + lambda_1[0, 77] + lambda_1[0, 78] - 30*lambda_1[0, 81] - 30*lambda_1[0, 87] - 100*lambda_1[0, 99] <= V[0, 15]+ objc]
	constraints += [lambda_1[0, 77] >= V[0, 89]- objc]
	constraints += [lambda_1[0, 77] <= V[0, 89]+ objc]
	constraints += [lambda_1[0, 78] >= V[0, 90]- objc]
	constraints += [lambda_1[0, 78] <= V[0, 90]+ objc]
	constraints += [lambda_1[0, 79] >= V[0, 91]- objc]
	constraints += [lambda_1[0, 79] <= V[0, 91]+ objc]
	constraints += [lambda_1[0, 81] >= V[0, 92]- objc]
	constraints += [lambda_1[0, 81] <= V[0, 92]+ objc]
	constraints += [lambda_1[0, 87] >= V[0, 93]- objc]
	constraints += [lambda_1[0, 87] <= V[0, 93]+ objc]
	constraints += [lambda_1[0, 80] >= V[0, 94]- objc]
	constraints += [lambda_1[0, 80] <= V[0, 94]+ objc]
	constraints += [lambda_1[0, 21] >= V[0, 23]- objc]
	constraints += [lambda_1[0, 21] <= V[0, 23]+ objc]
	constraints += [lambda_1[0, 7] - 200*lambda_1[0, 15] + 30000*lambda_1[0, 23] + lambda_1[0, 45] + lambda_1[0, 46] - 30*lambda_1[0, 49] - 20*lambda_1[0, 50] - 30*lambda_1[0, 51] + lambda_1[0, 94] + lambda_1[0, 95] + 900*lambda_1[0, 98] + 400*lambda_1[0, 99] + 900*lambda_1[0, 100] - 200*lambda_1[0, 101] - 200*lambda_1[0, 102] + 6000*lambda_1[0, 105] + 4000*lambda_1[0, 106] + 6000*lambda_1[0, 107] + lambda_1[0, 143] - 30*lambda_1[0, 149] - 30*lambda_1[0, 150] - 20*lambda_1[0, 153] - 20*lambda_1[0, 154] + 600*lambda_1[0, 157] - 30*lambda_1[0, 158] - 30*lambda_1[0, 159] + 900*lambda_1[0, 162] + 600*lambda_1[0, 163] >= V[0, 8]- objc]
	constraints += [lambda_1[0, 7] - 200*lambda_1[0, 15] + 30000*lambda_1[0, 23] + lambda_1[0, 45] + lambda_1[0, 46] - 30*lambda_1[0, 49] - 20*lambda_1[0, 50] - 30*lambda_1[0, 51] + lambda_1[0, 94] + lambda_1[0, 95] + 900*lambda_1[0, 98] + 400*lambda_1[0, 99] + 900*lambda_1[0, 100] - 200*lambda_1[0, 101] - 200*lambda_1[0, 102] + 6000*lambda_1[0, 105] + 4000*lambda_1[0, 106] + 6000*lambda_1[0, 107] + lambda_1[0, 143] - 30*lambda_1[0, 149] - 30*lambda_1[0, 150] - 20*lambda_1[0, 153] - 20*lambda_1[0, 154] + 600*lambda_1[0, 157] - 30*lambda_1[0, 158] - 30*lambda_1[0, 159] + 900*lambda_1[0, 162] + 600*lambda_1[0, 163] <= V[0, 8]+ objc]
	constraints += [lambda_1[0, 45] + 2*lambda_1[0, 94] - 200*lambda_1[0, 101] + lambda_1[0, 143] - 30*lambda_1[0, 149] - 20*lambda_1[0, 153] - 30*lambda_1[0, 158] >= V[0, 46]- objc]
	constraints += [lambda_1[0, 45] + 2*lambda_1[0, 94] - 200*lambda_1[0, 101] + lambda_1[0, 143] - 30*lambda_1[0, 149] - 20*lambda_1[0, 153] - 30*lambda_1[0, 158] <= V[0, 46]+ objc]
	constraints += [lambda_1[0, 94] >= V[0, 95]- objc]
	constraints += [lambda_1[0, 94] <= V[0, 95]+ objc]
	constraints += [lambda_1[0, 46] + 2*lambda_1[0, 95] - 200*lambda_1[0, 102] + lambda_1[0, 143] - 30*lambda_1[0, 150] - 20*lambda_1[0, 154] - 30*lambda_1[0, 159] >= V[0, 47]- objc]
	constraints += [lambda_1[0, 46] + 2*lambda_1[0, 95] - 200*lambda_1[0, 102] + lambda_1[0, 143] - 30*lambda_1[0, 150] - 20*lambda_1[0, 154] - 30*lambda_1[0, 159] <= V[0, 47]+ objc]
	constraints += [lambda_1[0, 143] >= V[0, 144]- objc]
	constraints += [lambda_1[0, 143] <= V[0, 144]+ objc]
	constraints += [lambda_1[0, 95] >= V[0, 96]- objc]
	constraints += [lambda_1[0, 95] <= V[0, 96]+ objc]
	constraints += [lambda_1[0, 47] - 200*lambda_1[0, 103] + lambda_1[0, 144] + lambda_1[0, 145] - 30*lambda_1[0, 151] - 20*lambda_1[0, 155] - 30*lambda_1[0, 160] >= V[0, 48]- objc]
	constraints += [lambda_1[0, 47] - 200*lambda_1[0, 103] + lambda_1[0, 144] + lambda_1[0, 145] - 30*lambda_1[0, 151] - 20*lambda_1[0, 155] - 30*lambda_1[0, 160] <= V[0, 48]+ objc]
	constraints += [lambda_1[0, 144] >= V[0, 145]- objc]
	constraints += [lambda_1[0, 144] <= V[0, 145]+ objc]
	constraints += [lambda_1[0, 145] >= V[0, 146]- objc]
	constraints += [lambda_1[0, 145] <= V[0, 146]+ objc]
	constraints += [lambda_1[0, 96] >= V[0, 97]- objc]
	constraints += [lambda_1[0, 96] <= V[0, 97]+ objc]
	constraints += [lambda_1[0, 49] - 60*lambda_1[0, 98] - 200*lambda_1[0, 105] + lambda_1[0, 149] + lambda_1[0, 150] - 20*lambda_1[0, 157] - 30*lambda_1[0, 162] >= V[0, 49]- objc]
	constraints += [lambda_1[0, 49] - 60*lambda_1[0, 98] - 200*lambda_1[0, 105] + lambda_1[0, 149] + lambda_1[0, 150] - 20*lambda_1[0, 157] - 30*lambda_1[0, 162] <= V[0, 49]+ objc]
	constraints += [lambda_1[0, 149] >= V[0, 147]- objc]
	constraints += [lambda_1[0, 149] <= V[0, 147]+ objc]
	constraints += [lambda_1[0, 150] >= V[0, 148]- objc]
	constraints += [lambda_1[0, 150] <= V[0, 148]+ objc]
	constraints += [lambda_1[0, 151] >= V[0, 149]- objc]
	constraints += [lambda_1[0, 151] <= V[0, 149]+ objc]
	constraints += [lambda_1[0, 98] >= V[0, 98]- objc]
	constraints += [lambda_1[0, 98] <= V[0, 98]+ objc]
	constraints += [lambda_1[0, 51] - 60*lambda_1[0, 100] - 200*lambda_1[0, 107] + lambda_1[0, 158] + lambda_1[0, 159] - 30*lambda_1[0, 162] - 20*lambda_1[0, 163] >= V[0, 50]- objc]
	constraints += [lambda_1[0, 51] - 60*lambda_1[0, 100] - 200*lambda_1[0, 107] + lambda_1[0, 158] + lambda_1[0, 159] - 30*lambda_1[0, 162] - 20*lambda_1[0, 163] <= V[0, 50]+ objc]
	constraints += [lambda_1[0, 158] >= V[0, 150]- objc]
	constraints += [lambda_1[0, 158] <= V[0, 150]+ objc]
	constraints += [lambda_1[0, 159] >= V[0, 151]- objc]
	constraints += [lambda_1[0, 159] <= V[0, 151]+ objc]
	constraints += [lambda_1[0, 160] >= V[0, 152]- objc]
	constraints += [lambda_1[0, 160] <= V[0, 152]+ objc]
	constraints += [lambda_1[0, 162] >= V[0, 153]- objc]
	constraints += [lambda_1[0, 162] <= V[0, 153]+ objc]
	constraints += [lambda_1[0, 100] >= V[0, 99]- objc]
	constraints += [lambda_1[0, 100] <= V[0, 99]+ objc]
	constraints += [lambda_1[0, 48] - 200*lambda_1[0, 104] + lambda_1[0, 146] + lambda_1[0, 147] - 30*lambda_1[0, 152] - 20*lambda_1[0, 156] - 30*lambda_1[0, 161] >= V[0, 51]- objc]
	constraints += [lambda_1[0, 48] - 200*lambda_1[0, 104] + lambda_1[0, 146] + lambda_1[0, 147] - 30*lambda_1[0, 152] - 20*lambda_1[0, 156] - 30*lambda_1[0, 161] <= V[0, 51]+ objc]
	constraints += [lambda_1[0, 146] >= V[0, 154]- objc]
	constraints += [lambda_1[0, 146] <= V[0, 154]+ objc]
	constraints += [lambda_1[0, 147] >= V[0, 155]- objc]
	constraints += [lambda_1[0, 147] <= V[0, 155]+ objc]
	constraints += [lambda_1[0, 148] >= V[0, 156]- objc]
	constraints += [lambda_1[0, 148] <= V[0, 156]+ objc]
	constraints += [lambda_1[0, 152] >= V[0, 157]- objc]
	constraints += [lambda_1[0, 152] <= V[0, 157]+ objc]
	constraints += [lambda_1[0, 161] >= V[0, 158]- objc]
	constraints += [lambda_1[0, 161] <= V[0, 158]+ objc]
	constraints += [lambda_1[0, 97] >= V[0, 100]- objc]
	constraints += [lambda_1[0, 97] <= V[0, 100]+ objc]
	constraints += [lambda_1[0, 50] - 40*lambda_1[0, 99] - 200*lambda_1[0, 106] + lambda_1[0, 153] + lambda_1[0, 154] - 30*lambda_1[0, 157] - 30*lambda_1[0, 163] >= V[0, 52]- objc]
	constraints += [lambda_1[0, 50] - 40*lambda_1[0, 99] - 200*lambda_1[0, 106] + lambda_1[0, 153] + lambda_1[0, 154] - 30*lambda_1[0, 157] - 30*lambda_1[0, 163] <= V[0, 52]+ objc]
	constraints += [lambda_1[0, 153] >= V[0, 159]- objc]
	constraints += [lambda_1[0, 153] <= V[0, 159]+ objc]
	constraints += [lambda_1[0, 154] >= V[0, 160]- objc]
	constraints += [lambda_1[0, 154] <= V[0, 160]+ objc]
	constraints += [lambda_1[0, 155] >= V[0, 161]- objc]
	constraints += [lambda_1[0, 155] <= V[0, 161]+ objc]
	constraints += [lambda_1[0, 157] >= V[0, 162]- objc]
	constraints += [lambda_1[0, 157] <= V[0, 162]+ objc]
	constraints += [lambda_1[0, 163] >= V[0, 163]- objc]
	constraints += [lambda_1[0, 163] <= V[0, 163]+ objc]
	constraints += [lambda_1[0, 156] >= V[0, 164]- objc]
	constraints += [lambda_1[0, 156] <= V[0, 164]+ objc]
	constraints += [lambda_1[0, 99] >= V[0, 101]- objc]
	constraints += [lambda_1[0, 99] <= V[0, 101]+ objc]
	constraints += [lambda_1[0, 15] - 300*lambda_1[0, 23] + lambda_1[0, 101] + lambda_1[0, 102] - 30*lambda_1[0, 105] - 20*lambda_1[0, 106] - 30*lambda_1[0, 107] >= V[0, 16]- objc]
	constraints += [lambda_1[0, 15] - 300*lambda_1[0, 23] + lambda_1[0, 101] + lambda_1[0, 102] - 30*lambda_1[0, 105] - 20*lambda_1[0, 106] - 30*lambda_1[0, 107] <= V[0, 16]+ objc]
	constraints += [lambda_1[0, 101] >= V[0, 102]- objc]
	constraints += [lambda_1[0, 101] <= V[0, 102]+ objc]
	constraints += [lambda_1[0, 102] >= V[0, 103]- objc]
	constraints += [lambda_1[0, 102] <= V[0, 103]+ objc]
	constraints += [lambda_1[0, 103] >= V[0, 104]- objc]
	constraints += [lambda_1[0, 103] <= V[0, 104]+ objc]
	constraints += [lambda_1[0, 105] >= V[0, 105]- objc]
	constraints += [lambda_1[0, 105] <= V[0, 105]+ objc]
	constraints += [lambda_1[0, 107] >= V[0, 106]- objc]
	constraints += [lambda_1[0, 107] <= V[0, 106]+ objc]
	constraints += [lambda_1[0, 104] >= V[0, 107]- objc]
	constraints += [lambda_1[0, 104] <= V[0, 107]+ objc]
	constraints += [lambda_1[0, 106] >= V[0, 108]- objc]
	constraints += [lambda_1[0, 106] <= V[0, 108]+ objc]
	constraints += [lambda_1[0, 23] >= V[0, 24]- objc]
	constraints += [lambda_1[0, 23] <= V[0, 24]+ objc]

	#------------------The Lie Derivative conditions------------------

	constraints += [lambda_2[0, 0] + lambda_2[0, 1] + 10*lambda_2[0, 2] + 10*lambda_2[0, 3] + 40*lambda_2[0, 4] + 40*lambda_2[0, 5] + 500*lambda_2[0, 6] + 500*lambda_2[0, 7] + lambda_2[0, 8] + lambda_2[0, 9] + 100*lambda_2[0, 10] + 100*lambda_2[0, 11] + 1600*lambda_2[0, 12] + 1600*lambda_2[0, 13] + 250000*lambda_2[0, 14] + 250000*lambda_2[0, 15] + lambda_2[0, 16] + lambda_2[0, 17] + 1000*lambda_2[0, 18] + 1000*lambda_2[0, 19] + 64000*lambda_2[0, 20] + 64000*lambda_2[0, 21] + 125000000*lambda_2[0, 22] + 125000000*lambda_2[0, 23] + lambda_2[0, 24] + lambda_2[0, 25] + 10000*lambda_2[0, 26] + 10000*lambda_2[0, 27] + 2560000*lambda_2[0, 28] + 2560000*lambda_2[0, 29] + 62500000000*lambda_2[0, 30] + 62500000000*lambda_2[0, 31] + lambda_2[0, 32] + 10*lambda_2[0, 33] + 10*lambda_2[0, 34] + 10*lambda_2[0, 35] + 10*lambda_2[0, 36] + 100*lambda_2[0, 37] + 40*lambda_2[0, 38] + 40*lambda_2[0, 39] + 400*lambda_2[0, 40] + 400*lambda_2[0, 41] + 40*lambda_2[0, 42] + 40*lambda_2[0, 43] + 400*lambda_2[0, 44] + 400*lambda_2[0, 45] + 1600*lambda_2[0, 46] + 500*lambda_2[0, 47] + 500*lambda_2[0, 48] + 5000*lambda_2[0, 49] + 5000*lambda_2[0, 50] + 20000*lambda_2[0, 51] + 20000*lambda_2[0, 52] + 500*lambda_2[0, 53] + 500*lambda_2[0, 54] + 5000*lambda_2[0, 55] + 5000*lambda_2[0, 56] + 20000*lambda_2[0, 57] + 20000*lambda_2[0, 58] + 250000*lambda_2[0, 59] + lambda_2[0, 60] + lambda_2[0, 61] + 10*lambda_2[0, 62] + 10*lambda_2[0, 63] + 100*lambda_2[0, 64] + 100*lambda_2[0, 65] + 10*lambda_2[0, 66] + 10*lambda_2[0, 67] + 1000*lambda_2[0, 68] + 100*lambda_2[0, 69] + 100*lambda_2[0, 70] + 1000*lambda_2[0, 71] + 40*lambda_2[0, 72] + 40*lambda_2[0, 73] + 4000*lambda_2[0, 74] + 4000*lambda_2[0, 75] + 1600*lambda_2[0, 76] + 1600*lambda_2[0, 77] + 16000*lambda_2[0, 78] + 16000*lambda_2[0, 79] + 40*lambda_2[0, 80] + 40*lambda_2[0, 81] + 4000*lambda_2[0, 82] + 4000*lambda_2[0, 83] + 64000*lambda_2[0, 84] + 1600*lambda_2[0, 85] + 1600*lambda_2[0, 86] + 16000*lambda_2[0, 87] + 16000*lambda_2[0, 88] + 64000*lambda_2[0, 89] + 500*lambda_2[0, 90] + 500*lambda_2[0, 91] + 50000*lambda_2[0, 92] + 50000*lambda_2[0, 93] + 800000*lambda_2[0, 94] + 800000*lambda_2[0, 95] + 250000*lambda_2[0, 96] + 250000*lambda_2[0, 97] + 2500000*lambda_2[0, 98] + 2500000*lambda_2[0, 99] + 10000000*lambda_2[0, 100] + 10000000*lambda_2[0, 101] + 500*lambda_2[0, 102] + 500*lambda_2[0, 103] + 50000*lambda_2[0, 104] + 50000*lambda_2[0, 105] + 800000*lambda_2[0, 106] + 800000*lambda_2[0, 107] + 125000000*lambda_2[0, 108] + 250000*lambda_2[0, 109] + 250000*lambda_2[0, 110] + 2500000*lambda_2[0, 111] + 2500000*lambda_2[0, 112] + 10000000*lambda_2[0, 113] + 10000000*lambda_2[0, 114] + 125000000*lambda_2[0, 115] + lambda_2[0, 116] + lambda_2[0, 117] + 10*lambda_2[0, 118] + 10*lambda_2[0, 119] + 1000*lambda_2[0, 120] + 1000*lambda_2[0, 121] + 10*lambda_2[0, 122] + 10*lambda_2[0, 123] + 10000*lambda_2[0, 124] + 1000*lambda_2[0, 125] + 1000*lambda_2[0, 126] + 10000*lambda_2[0, 127] + 40*lambda_2[0, 128] + 40*lambda_2[0, 129] + 40000*lambda_2[0, 130] + 40000*lambda_2[0, 131] + 64000*lambda_2[0, 132] + 64000*lambda_2[0, 133] + 640000*lambda_2[0, 134] + 640000*lambda_2[0, 135] + 40*lambda_2[0, 136] + 40*lambda_2[0, 137] + 40000*lambda_2[0, 138] + 40000*lambda_2[0, 139] + 2560000*lambda_2[0, 140] + 64000*lambda_2[0, 141] + 64000*lambda_2[0, 142] + 640000*lambda_2[0, 143] + 640000*lambda_2[0, 144] + 2560000*lambda_2[0, 145] + 500*lambda_2[0, 146] + 500*lambda_2[0, 147] + 500000*lambda_2[0, 148] + 500000*lambda_2[0, 149] + 32000000*lambda_2[0, 150] + 32000000*lambda_2[0, 151] + 125000000*lambda_2[0, 152] + 125000000*lambda_2[0, 153] + 1250000000*lambda_2[0, 154] + 1250000000*lambda_2[0, 155] + 5000000000*lambda_2[0, 156] + 5000000000*lambda_2[0, 157] + 500*lambda_2[0, 158] + 500*lambda_2[0, 159] + 500000*lambda_2[0, 160] + 500000*lambda_2[0, 161] + 32000000*lambda_2[0, 162] + 32000000*lambda_2[0, 163] + 62500000000*lambda_2[0, 164] + 125000000*lambda_2[0, 165] + 125000000*lambda_2[0, 166] + 1250000000*lambda_2[0, 167] + 1250000000*lambda_2[0, 168] + 5000000000*lambda_2[0, 169] + 5000000000*lambda_2[0, 170] + 62500000000*lambda_2[0, 171] + lambda_2[0, 172] + 100*lambda_2[0, 173] + 100*lambda_2[0, 174] + 100*lambda_2[0, 175] + 100*lambda_2[0, 176] + 10000*lambda_2[0, 177] + 1600*lambda_2[0, 178] + 1600*lambda_2[0, 179] + 160000*lambda_2[0, 180] + 160000*lambda_2[0, 181] + 1600*lambda_2[0, 182] + 1600*lambda_2[0, 183] + 160000*lambda_2[0, 184] + 160000*lambda_2[0, 185] + 2560000*lambda_2[0, 186] + 250000*lambda_2[0, 187] + 250000*lambda_2[0, 188] + 25000000*lambda_2[0, 189] + 25000000*lambda_2[0, 190] + 400000000*lambda_2[0, 191] + 400000000*lambda_2[0, 192] + 250000*lambda_2[0, 193] + 250000*lambda_2[0, 194] + 25000000*lambda_2[0, 195] + 25000000*lambda_2[0, 196] + 400000000*lambda_2[0, 197] + 400000000*lambda_2[0, 198] + 62500000000*lambda_2[0, 199] + 10*lambda_2[0, 200] + 10*lambda_2[0, 201] + 100*lambda_2[0, 202] + 100*lambda_2[0, 203] + 40*lambda_2[0, 204] + 400*lambda_2[0, 205] + 400*lambda_2[0, 206] + 400*lambda_2[0, 207] + 400*lambda_2[0, 208] + 4000*lambda_2[0, 209] + 40*lambda_2[0, 210] + 400*lambda_2[0, 211] + 400*lambda_2[0, 212] + 400*lambda_2[0, 213] + 400*lambda_2[0, 214] + 4000*lambda_2[0, 215] + 1600*lambda_2[0, 216] + 1600*lambda_2[0, 217] + 16000*lambda_2[0, 218] + 16000*lambda_2[0, 219] + 500*lambda_2[0, 220] + 5000*lambda_2[0, 221] + 5000*lambda_2[0, 222] + 5000*lambda_2[0, 223] + 5000*lambda_2[0, 224] + 50000*lambda_2[0, 225] + 20000*lambda_2[0, 226] + 20000*lambda_2[0, 227] + 200000*lambda_2[0, 228] + 200000*lambda_2[0, 229] + 20000*lambda_2[0, 230] + 20000*lambda_2[0, 231] + 200000*lambda_2[0, 232] + 200000*lambda_2[0, 233] + 800000*lambda_2[0, 234] + 500*lambda_2[0, 235] + 5000*lambda_2[0, 236] + 5000*lambda_2[0, 237] + 5000*lambda_2[0, 238] + 5000*lambda_2[0, 239] + 50000*lambda_2[0, 240] + 20000*lambda_2[0, 241] + 20000*lambda_2[0, 242] + 200000*lambda_2[0, 243] + 200000*lambda_2[0, 244] + 20000*lambda_2[0, 245] + 20000*lambda_2[0, 246] + 200000*lambda_2[0, 247] + 200000*lambda_2[0, 248] + 800000*lambda_2[0, 249] + 250000*lambda_2[0, 250] + 250000*lambda_2[0, 251] + 2500000*lambda_2[0, 252] + 2500000*lambda_2[0, 253] + 10000000*lambda_2[0, 254] + 10000000*lambda_2[0, 255] + 10*lambda_2[0, 256] + 10*lambda_2[0, 257] + 100*lambda_2[0, 258] + 10*lambda_2[0, 259] + 10*lambda_2[0, 260] + 100*lambda_2[0, 261] + 100*lambda_2[0, 262] + 1000*lambda_2[0, 263] + 1000*lambda_2[0, 264] + 100*lambda_2[0, 265] + 1000*lambda_2[0, 266] + 1000*lambda_2[0, 267] + 40*lambda_2[0, 268] + 40*lambda_2[0, 269] + 400*lambda_2[0, 270] + 400*lambda_2[0, 271] + 4000*lambda_2[0, 272] + 4000*lambda_2[0, 273] + 400*lambda_2[0, 274] + 400*lambda_2[0, 275] + 40000*lambda_2[0, 276] + 4000*lambda_2[0, 277] + 4000*lambda_2[0, 278] + 40000*lambda_2[0, 279] + 1600*lambda_2[0, 280] + 16000*lambda_2[0, 281] + 16000*lambda_2[0, 282] + 16000*lambda_2[0, 283] + 16000*lambda_2[0, 284] + 160000*lambda_2[0, 285] + 40*lambda_2[0, 286] + 40*lambda_2[0, 287] + 400*lambda_2[0, 288] + 400*lambda_2[0, 289] + 4000*lambda_2[0, 290] + 4000*lambda_2[0, 291] + 400*lambda_2[0, 292] + 400*lambda_2[0, 293] + 40000*lambda_2[0, 294] + 4000*lambda_2[0, 295] + 4000*lambda_2[0, 296] + 40000*lambda_2[0, 297] + 1600*lambda_2[0, 298] + 1600*lambda_2[0, 299] + 160000*lambda_2[0, 300] + 160000*lambda_2[0, 301] + 64000*lambda_2[0, 302] + 64000*lambda_2[0, 303] + 640000*lambda_2[0, 304] + 640000*lambda_2[0, 305] + 1600*lambda_2[0, 306] + 16000*lambda_2[0, 307] + 16000*lambda_2[0, 308] + 16000*lambda_2[0, 309] + 16000*lambda_2[0, 310] + 160000*lambda_2[0, 311] + 64000*lambda_2[0, 312] + 64000*lambda_2[0, 313] + 640000*lambda_2[0, 314] + 640000*lambda_2[0, 315] + 500*lambda_2[0, 316] + 500*lambda_2[0, 317] + 5000*lambda_2[0, 318] + 5000*lambda_2[0, 319] + 50000*lambda_2[0, 320] + 50000*lambda_2[0, 321] + 5000*lambda_2[0, 322] + 5000*lambda_2[0, 323] + 500000*lambda_2[0, 324] + 50000*lambda_2[0, 325] + 50000*lambda_2[0, 326] + 500000*lambda_2[0, 327] + 20000*lambda_2[0, 328] + 20000*lambda_2[0, 329] + 2000000*lambda_2[0, 330] + 2000000*lambda_2[0, 331] + 800000*lambda_2[0, 332] + 800000*lambda_2[0, 333] + 8000000*lambda_2[0, 334] + 8000000*lambda_2[0, 335] + 20000*lambda_2[0, 336] + 20000*lambda_2[0, 337] + 2000000*lambda_2[0, 338] + 2000000*lambda_2[0, 339] + 32000000*lambda_2[0, 340] + 800000*lambda_2[0, 341] + 800000*lambda_2[0, 342] + 8000000*lambda_2[0, 343] + 8000000*lambda_2[0, 344] + 32000000*lambda_2[0, 345] + 250000*lambda_2[0, 346] + 2500000*lambda_2[0, 347] + 2500000*lambda_2[0, 348] + 2500000*lambda_2[0, 349] + 2500000*lambda_2[0, 350] + 25000000*lambda_2[0, 351] + 10000000*lambda_2[0, 352] + 10000000*lambda_2[0, 353] + 100000000*lambda_2[0, 354] + 100000000*lambda_2[0, 355] + 10000000*lambda_2[0, 356] + 10000000*lambda_2[0, 357] + 100000000*lambda_2[0, 358] + 100000000*lambda_2[0, 359] + 400000000*lambda_2[0, 360] + 500*lambda_2[0, 361] + 500*lambda_2[0, 362] + 5000*lambda_2[0, 363] + 5000*lambda_2[0, 364] + 50000*lambda_2[0, 365] + 50000*lambda_2[0, 366] + 5000*lambda_2[0, 367] + 5000*lambda_2[0, 368] + 500000*lambda_2[0, 369] + 50000*lambda_2[0, 370] + 50000*lambda_2[0, 371] + 500000*lambda_2[0, 372] + 20000*lambda_2[0, 373] + 20000*lambda_2[0, 374] + 2000000*lambda_2[0, 375] + 2000000*lambda_2[0, 376] + 800000*lambda_2[0, 377] + 800000*lambda_2[0, 378] + 8000000*lambda_2[0, 379] + 8000000*lambda_2[0, 380] + 20000*lambda_2[0, 381] + 20000*lambda_2[0, 382] + 2000000*lambda_2[0, 383] + 2000000*lambda_2[0, 384] + 32000000*lambda_2[0, 385] + 800000*lambda_2[0, 386] + 800000*lambda_2[0, 387] + 8000000*lambda_2[0, 388] + 8000000*lambda_2[0, 389] + 32000000*lambda_2[0, 390] + 250000*lambda_2[0, 391] + 250000*lambda_2[0, 392] + 25000000*lambda_2[0, 393] + 25000000*lambda_2[0, 394] + 400000000*lambda_2[0, 395] + 400000000*lambda_2[0, 396] + 125000000*lambda_2[0, 397] + 125000000*lambda_2[0, 398] + 1250000000*lambda_2[0, 399] + 1250000000*lambda_2[0, 400] + 5000000000*lambda_2[0, 401] + 5000000000*lambda_2[0, 402] + 250000*lambda_2[0, 403] + 2500000*lambda_2[0, 404] + 2500000*lambda_2[0, 405] + 2500000*lambda_2[0, 406] + 2500000*lambda_2[0, 407] + 25000000*lambda_2[0, 408] + 10000000*lambda_2[0, 409] + 10000000*lambda_2[0, 410] + 100000000*lambda_2[0, 411] + 100000000*lambda_2[0, 412] + 10000000*lambda_2[0, 413] + 10000000*lambda_2[0, 414] + 100000000*lambda_2[0, 415] + 100000000*lambda_2[0, 416] + 400000000*lambda_2[0, 417] + 125000000*lambda_2[0, 418] + 125000000*lambda_2[0, 419] + 1250000000*lambda_2[0, 420] + 1250000000*lambda_2[0, 421] + 5000000000*lambda_2[0, 422] + 5000000000*lambda_2[0, 423] + 100*lambda_2[0, 424] + 400*lambda_2[0, 425] + 400*lambda_2[0, 426] + 4000*lambda_2[0, 427] + 4000*lambda_2[0, 428] + 400*lambda_2[0, 429] + 400*lambda_2[0, 430] + 4000*lambda_2[0, 431] + 4000*lambda_2[0, 432] + 1600*lambda_2[0, 433] + 16000*lambda_2[0, 434] + 16000*lambda_2[0, 435] + 16000*lambda_2[0, 436] + 16000*lambda_2[0, 437] + 160000*lambda_2[0, 438] + 5000*lambda_2[0, 439] + 5000*lambda_2[0, 440] + 50000*lambda_2[0, 441] + 50000*lambda_2[0, 442] + 20000*lambda_2[0, 443] + 200000*lambda_2[0, 444] + 200000*lambda_2[0, 445] + 200000*lambda_2[0, 446] + 200000*lambda_2[0, 447] + 2000000*lambda_2[0, 448] + 20000*lambda_2[0, 449] + 200000*lambda_2[0, 450] + 200000*lambda_2[0, 451] + 200000*lambda_2[0, 452] + 200000*lambda_2[0, 453] + 2000000*lambda_2[0, 454] + 800000*lambda_2[0, 455] + 800000*lambda_2[0, 456] + 8000000*lambda_2[0, 457] + 8000000*lambda_2[0, 458] + 5000*lambda_2[0, 459] + 5000*lambda_2[0, 460] + 50000*lambda_2[0, 461] + 50000*lambda_2[0, 462] + 20000*lambda_2[0, 463] + 200000*lambda_2[0, 464] + 200000*lambda_2[0, 465] + 200000*lambda_2[0, 466] + 200000*lambda_2[0, 467] + 2000000*lambda_2[0, 468] + 20000*lambda_2[0, 469] + 200000*lambda_2[0, 470] + 200000*lambda_2[0, 471] + 200000*lambda_2[0, 472] + 200000*lambda_2[0, 473] + 2000000*lambda_2[0, 474] + 800000*lambda_2[0, 475] + 800000*lambda_2[0, 476] + 8000000*lambda_2[0, 477] + 8000000*lambda_2[0, 478] + 250000*lambda_2[0, 479] + 2500000*lambda_2[0, 480] + 2500000*lambda_2[0, 481] + 2500000*lambda_2[0, 482] + 2500000*lambda_2[0, 483] + 25000000*lambda_2[0, 484] + 10000000*lambda_2[0, 485] + 10000000*lambda_2[0, 486] + 100000000*lambda_2[0, 487] + 100000000*lambda_2[0, 488] + 10000000*lambda_2[0, 489] + 10000000*lambda_2[0, 490] + 100000000*lambda_2[0, 491] + 100000000*lambda_2[0, 492] + 400000000*lambda_2[0, 493] >= -l*V[0, 0]- objc]
	constraints += [lambda_2[0, 0] + lambda_2[0, 1] + 10*lambda_2[0, 2] + 10*lambda_2[0, 3] + 40*lambda_2[0, 4] + 40*lambda_2[0, 5] + 500*lambda_2[0, 6] + 500*lambda_2[0, 7] + lambda_2[0, 8] + lambda_2[0, 9] + 100*lambda_2[0, 10] + 100*lambda_2[0, 11] + 1600*lambda_2[0, 12] + 1600*lambda_2[0, 13] + 250000*lambda_2[0, 14] + 250000*lambda_2[0, 15] + lambda_2[0, 16] + lambda_2[0, 17] + 1000*lambda_2[0, 18] + 1000*lambda_2[0, 19] + 64000*lambda_2[0, 20] + 64000*lambda_2[0, 21] + 125000000*lambda_2[0, 22] + 125000000*lambda_2[0, 23] + lambda_2[0, 24] + lambda_2[0, 25] + 10000*lambda_2[0, 26] + 10000*lambda_2[0, 27] + 2560000*lambda_2[0, 28] + 2560000*lambda_2[0, 29] + 62500000000*lambda_2[0, 30] + 62500000000*lambda_2[0, 31] + lambda_2[0, 32] + 10*lambda_2[0, 33] + 10*lambda_2[0, 34] + 10*lambda_2[0, 35] + 10*lambda_2[0, 36] + 100*lambda_2[0, 37] + 40*lambda_2[0, 38] + 40*lambda_2[0, 39] + 400*lambda_2[0, 40] + 400*lambda_2[0, 41] + 40*lambda_2[0, 42] + 40*lambda_2[0, 43] + 400*lambda_2[0, 44] + 400*lambda_2[0, 45] + 1600*lambda_2[0, 46] + 500*lambda_2[0, 47] + 500*lambda_2[0, 48] + 5000*lambda_2[0, 49] + 5000*lambda_2[0, 50] + 20000*lambda_2[0, 51] + 20000*lambda_2[0, 52] + 500*lambda_2[0, 53] + 500*lambda_2[0, 54] + 5000*lambda_2[0, 55] + 5000*lambda_2[0, 56] + 20000*lambda_2[0, 57] + 20000*lambda_2[0, 58] + 250000*lambda_2[0, 59] + lambda_2[0, 60] + lambda_2[0, 61] + 10*lambda_2[0, 62] + 10*lambda_2[0, 63] + 100*lambda_2[0, 64] + 100*lambda_2[0, 65] + 10*lambda_2[0, 66] + 10*lambda_2[0, 67] + 1000*lambda_2[0, 68] + 100*lambda_2[0, 69] + 100*lambda_2[0, 70] + 1000*lambda_2[0, 71] + 40*lambda_2[0, 72] + 40*lambda_2[0, 73] + 4000*lambda_2[0, 74] + 4000*lambda_2[0, 75] + 1600*lambda_2[0, 76] + 1600*lambda_2[0, 77] + 16000*lambda_2[0, 78] + 16000*lambda_2[0, 79] + 40*lambda_2[0, 80] + 40*lambda_2[0, 81] + 4000*lambda_2[0, 82] + 4000*lambda_2[0, 83] + 64000*lambda_2[0, 84] + 1600*lambda_2[0, 85] + 1600*lambda_2[0, 86] + 16000*lambda_2[0, 87] + 16000*lambda_2[0, 88] + 64000*lambda_2[0, 89] + 500*lambda_2[0, 90] + 500*lambda_2[0, 91] + 50000*lambda_2[0, 92] + 50000*lambda_2[0, 93] + 800000*lambda_2[0, 94] + 800000*lambda_2[0, 95] + 250000*lambda_2[0, 96] + 250000*lambda_2[0, 97] + 2500000*lambda_2[0, 98] + 2500000*lambda_2[0, 99] + 10000000*lambda_2[0, 100] + 10000000*lambda_2[0, 101] + 500*lambda_2[0, 102] + 500*lambda_2[0, 103] + 50000*lambda_2[0, 104] + 50000*lambda_2[0, 105] + 800000*lambda_2[0, 106] + 800000*lambda_2[0, 107] + 125000000*lambda_2[0, 108] + 250000*lambda_2[0, 109] + 250000*lambda_2[0, 110] + 2500000*lambda_2[0, 111] + 2500000*lambda_2[0, 112] + 10000000*lambda_2[0, 113] + 10000000*lambda_2[0, 114] + 125000000*lambda_2[0, 115] + lambda_2[0, 116] + lambda_2[0, 117] + 10*lambda_2[0, 118] + 10*lambda_2[0, 119] + 1000*lambda_2[0, 120] + 1000*lambda_2[0, 121] + 10*lambda_2[0, 122] + 10*lambda_2[0, 123] + 10000*lambda_2[0, 124] + 1000*lambda_2[0, 125] + 1000*lambda_2[0, 126] + 10000*lambda_2[0, 127] + 40*lambda_2[0, 128] + 40*lambda_2[0, 129] + 40000*lambda_2[0, 130] + 40000*lambda_2[0, 131] + 64000*lambda_2[0, 132] + 64000*lambda_2[0, 133] + 640000*lambda_2[0, 134] + 640000*lambda_2[0, 135] + 40*lambda_2[0, 136] + 40*lambda_2[0, 137] + 40000*lambda_2[0, 138] + 40000*lambda_2[0, 139] + 2560000*lambda_2[0, 140] + 64000*lambda_2[0, 141] + 64000*lambda_2[0, 142] + 640000*lambda_2[0, 143] + 640000*lambda_2[0, 144] + 2560000*lambda_2[0, 145] + 500*lambda_2[0, 146] + 500*lambda_2[0, 147] + 500000*lambda_2[0, 148] + 500000*lambda_2[0, 149] + 32000000*lambda_2[0, 150] + 32000000*lambda_2[0, 151] + 125000000*lambda_2[0, 152] + 125000000*lambda_2[0, 153] + 1250000000*lambda_2[0, 154] + 1250000000*lambda_2[0, 155] + 5000000000*lambda_2[0, 156] + 5000000000*lambda_2[0, 157] + 500*lambda_2[0, 158] + 500*lambda_2[0, 159] + 500000*lambda_2[0, 160] + 500000*lambda_2[0, 161] + 32000000*lambda_2[0, 162] + 32000000*lambda_2[0, 163] + 62500000000*lambda_2[0, 164] + 125000000*lambda_2[0, 165] + 125000000*lambda_2[0, 166] + 1250000000*lambda_2[0, 167] + 1250000000*lambda_2[0, 168] + 5000000000*lambda_2[0, 169] + 5000000000*lambda_2[0, 170] + 62500000000*lambda_2[0, 171] + lambda_2[0, 172] + 100*lambda_2[0, 173] + 100*lambda_2[0, 174] + 100*lambda_2[0, 175] + 100*lambda_2[0, 176] + 10000*lambda_2[0, 177] + 1600*lambda_2[0, 178] + 1600*lambda_2[0, 179] + 160000*lambda_2[0, 180] + 160000*lambda_2[0, 181] + 1600*lambda_2[0, 182] + 1600*lambda_2[0, 183] + 160000*lambda_2[0, 184] + 160000*lambda_2[0, 185] + 2560000*lambda_2[0, 186] + 250000*lambda_2[0, 187] + 250000*lambda_2[0, 188] + 25000000*lambda_2[0, 189] + 25000000*lambda_2[0, 190] + 400000000*lambda_2[0, 191] + 400000000*lambda_2[0, 192] + 250000*lambda_2[0, 193] + 250000*lambda_2[0, 194] + 25000000*lambda_2[0, 195] + 25000000*lambda_2[0, 196] + 400000000*lambda_2[0, 197] + 400000000*lambda_2[0, 198] + 62500000000*lambda_2[0, 199] + 10*lambda_2[0, 200] + 10*lambda_2[0, 201] + 100*lambda_2[0, 202] + 100*lambda_2[0, 203] + 40*lambda_2[0, 204] + 400*lambda_2[0, 205] + 400*lambda_2[0, 206] + 400*lambda_2[0, 207] + 400*lambda_2[0, 208] + 4000*lambda_2[0, 209] + 40*lambda_2[0, 210] + 400*lambda_2[0, 211] + 400*lambda_2[0, 212] + 400*lambda_2[0, 213] + 400*lambda_2[0, 214] + 4000*lambda_2[0, 215] + 1600*lambda_2[0, 216] + 1600*lambda_2[0, 217] + 16000*lambda_2[0, 218] + 16000*lambda_2[0, 219] + 500*lambda_2[0, 220] + 5000*lambda_2[0, 221] + 5000*lambda_2[0, 222] + 5000*lambda_2[0, 223] + 5000*lambda_2[0, 224] + 50000*lambda_2[0, 225] + 20000*lambda_2[0, 226] + 20000*lambda_2[0, 227] + 200000*lambda_2[0, 228] + 200000*lambda_2[0, 229] + 20000*lambda_2[0, 230] + 20000*lambda_2[0, 231] + 200000*lambda_2[0, 232] + 200000*lambda_2[0, 233] + 800000*lambda_2[0, 234] + 500*lambda_2[0, 235] + 5000*lambda_2[0, 236] + 5000*lambda_2[0, 237] + 5000*lambda_2[0, 238] + 5000*lambda_2[0, 239] + 50000*lambda_2[0, 240] + 20000*lambda_2[0, 241] + 20000*lambda_2[0, 242] + 200000*lambda_2[0, 243] + 200000*lambda_2[0, 244] + 20000*lambda_2[0, 245] + 20000*lambda_2[0, 246] + 200000*lambda_2[0, 247] + 200000*lambda_2[0, 248] + 800000*lambda_2[0, 249] + 250000*lambda_2[0, 250] + 250000*lambda_2[0, 251] + 2500000*lambda_2[0, 252] + 2500000*lambda_2[0, 253] + 10000000*lambda_2[0, 254] + 10000000*lambda_2[0, 255] + 10*lambda_2[0, 256] + 10*lambda_2[0, 257] + 100*lambda_2[0, 258] + 10*lambda_2[0, 259] + 10*lambda_2[0, 260] + 100*lambda_2[0, 261] + 100*lambda_2[0, 262] + 1000*lambda_2[0, 263] + 1000*lambda_2[0, 264] + 100*lambda_2[0, 265] + 1000*lambda_2[0, 266] + 1000*lambda_2[0, 267] + 40*lambda_2[0, 268] + 40*lambda_2[0, 269] + 400*lambda_2[0, 270] + 400*lambda_2[0, 271] + 4000*lambda_2[0, 272] + 4000*lambda_2[0, 273] + 400*lambda_2[0, 274] + 400*lambda_2[0, 275] + 40000*lambda_2[0, 276] + 4000*lambda_2[0, 277] + 4000*lambda_2[0, 278] + 40000*lambda_2[0, 279] + 1600*lambda_2[0, 280] + 16000*lambda_2[0, 281] + 16000*lambda_2[0, 282] + 16000*lambda_2[0, 283] + 16000*lambda_2[0, 284] + 160000*lambda_2[0, 285] + 40*lambda_2[0, 286] + 40*lambda_2[0, 287] + 400*lambda_2[0, 288] + 400*lambda_2[0, 289] + 4000*lambda_2[0, 290] + 4000*lambda_2[0, 291] + 400*lambda_2[0, 292] + 400*lambda_2[0, 293] + 40000*lambda_2[0, 294] + 4000*lambda_2[0, 295] + 4000*lambda_2[0, 296] + 40000*lambda_2[0, 297] + 1600*lambda_2[0, 298] + 1600*lambda_2[0, 299] + 160000*lambda_2[0, 300] + 160000*lambda_2[0, 301] + 64000*lambda_2[0, 302] + 64000*lambda_2[0, 303] + 640000*lambda_2[0, 304] + 640000*lambda_2[0, 305] + 1600*lambda_2[0, 306] + 16000*lambda_2[0, 307] + 16000*lambda_2[0, 308] + 16000*lambda_2[0, 309] + 16000*lambda_2[0, 310] + 160000*lambda_2[0, 311] + 64000*lambda_2[0, 312] + 64000*lambda_2[0, 313] + 640000*lambda_2[0, 314] + 640000*lambda_2[0, 315] + 500*lambda_2[0, 316] + 500*lambda_2[0, 317] + 5000*lambda_2[0, 318] + 5000*lambda_2[0, 319] + 50000*lambda_2[0, 320] + 50000*lambda_2[0, 321] + 5000*lambda_2[0, 322] + 5000*lambda_2[0, 323] + 500000*lambda_2[0, 324] + 50000*lambda_2[0, 325] + 50000*lambda_2[0, 326] + 500000*lambda_2[0, 327] + 20000*lambda_2[0, 328] + 20000*lambda_2[0, 329] + 2000000*lambda_2[0, 330] + 2000000*lambda_2[0, 331] + 800000*lambda_2[0, 332] + 800000*lambda_2[0, 333] + 8000000*lambda_2[0, 334] + 8000000*lambda_2[0, 335] + 20000*lambda_2[0, 336] + 20000*lambda_2[0, 337] + 2000000*lambda_2[0, 338] + 2000000*lambda_2[0, 339] + 32000000*lambda_2[0, 340] + 800000*lambda_2[0, 341] + 800000*lambda_2[0, 342] + 8000000*lambda_2[0, 343] + 8000000*lambda_2[0, 344] + 32000000*lambda_2[0, 345] + 250000*lambda_2[0, 346] + 2500000*lambda_2[0, 347] + 2500000*lambda_2[0, 348] + 2500000*lambda_2[0, 349] + 2500000*lambda_2[0, 350] + 25000000*lambda_2[0, 351] + 10000000*lambda_2[0, 352] + 10000000*lambda_2[0, 353] + 100000000*lambda_2[0, 354] + 100000000*lambda_2[0, 355] + 10000000*lambda_2[0, 356] + 10000000*lambda_2[0, 357] + 100000000*lambda_2[0, 358] + 100000000*lambda_2[0, 359] + 400000000*lambda_2[0, 360] + 500*lambda_2[0, 361] + 500*lambda_2[0, 362] + 5000*lambda_2[0, 363] + 5000*lambda_2[0, 364] + 50000*lambda_2[0, 365] + 50000*lambda_2[0, 366] + 5000*lambda_2[0, 367] + 5000*lambda_2[0, 368] + 500000*lambda_2[0, 369] + 50000*lambda_2[0, 370] + 50000*lambda_2[0, 371] + 500000*lambda_2[0, 372] + 20000*lambda_2[0, 373] + 20000*lambda_2[0, 374] + 2000000*lambda_2[0, 375] + 2000000*lambda_2[0, 376] + 800000*lambda_2[0, 377] + 800000*lambda_2[0, 378] + 8000000*lambda_2[0, 379] + 8000000*lambda_2[0, 380] + 20000*lambda_2[0, 381] + 20000*lambda_2[0, 382] + 2000000*lambda_2[0, 383] + 2000000*lambda_2[0, 384] + 32000000*lambda_2[0, 385] + 800000*lambda_2[0, 386] + 800000*lambda_2[0, 387] + 8000000*lambda_2[0, 388] + 8000000*lambda_2[0, 389] + 32000000*lambda_2[0, 390] + 250000*lambda_2[0, 391] + 250000*lambda_2[0, 392] + 25000000*lambda_2[0, 393] + 25000000*lambda_2[0, 394] + 400000000*lambda_2[0, 395] + 400000000*lambda_2[0, 396] + 125000000*lambda_2[0, 397] + 125000000*lambda_2[0, 398] + 1250000000*lambda_2[0, 399] + 1250000000*lambda_2[0, 400] + 5000000000*lambda_2[0, 401] + 5000000000*lambda_2[0, 402] + 250000*lambda_2[0, 403] + 2500000*lambda_2[0, 404] + 2500000*lambda_2[0, 405] + 2500000*lambda_2[0, 406] + 2500000*lambda_2[0, 407] + 25000000*lambda_2[0, 408] + 10000000*lambda_2[0, 409] + 10000000*lambda_2[0, 410] + 100000000*lambda_2[0, 411] + 100000000*lambda_2[0, 412] + 10000000*lambda_2[0, 413] + 10000000*lambda_2[0, 414] + 100000000*lambda_2[0, 415] + 100000000*lambda_2[0, 416] + 400000000*lambda_2[0, 417] + 125000000*lambda_2[0, 418] + 125000000*lambda_2[0, 419] + 1250000000*lambda_2[0, 420] + 1250000000*lambda_2[0, 421] + 5000000000*lambda_2[0, 422] + 5000000000*lambda_2[0, 423] + 100*lambda_2[0, 424] + 400*lambda_2[0, 425] + 400*lambda_2[0, 426] + 4000*lambda_2[0, 427] + 4000*lambda_2[0, 428] + 400*lambda_2[0, 429] + 400*lambda_2[0, 430] + 4000*lambda_2[0, 431] + 4000*lambda_2[0, 432] + 1600*lambda_2[0, 433] + 16000*lambda_2[0, 434] + 16000*lambda_2[0, 435] + 16000*lambda_2[0, 436] + 16000*lambda_2[0, 437] + 160000*lambda_2[0, 438] + 5000*lambda_2[0, 439] + 5000*lambda_2[0, 440] + 50000*lambda_2[0, 441] + 50000*lambda_2[0, 442] + 20000*lambda_2[0, 443] + 200000*lambda_2[0, 444] + 200000*lambda_2[0, 445] + 200000*lambda_2[0, 446] + 200000*lambda_2[0, 447] + 2000000*lambda_2[0, 448] + 20000*lambda_2[0, 449] + 200000*lambda_2[0, 450] + 200000*lambda_2[0, 451] + 200000*lambda_2[0, 452] + 200000*lambda_2[0, 453] + 2000000*lambda_2[0, 454] + 800000*lambda_2[0, 455] + 800000*lambda_2[0, 456] + 8000000*lambda_2[0, 457] + 8000000*lambda_2[0, 458] + 5000*lambda_2[0, 459] + 5000*lambda_2[0, 460] + 50000*lambda_2[0, 461] + 50000*lambda_2[0, 462] + 20000*lambda_2[0, 463] + 200000*lambda_2[0, 464] + 200000*lambda_2[0, 465] + 200000*lambda_2[0, 466] + 200000*lambda_2[0, 467] + 2000000*lambda_2[0, 468] + 20000*lambda_2[0, 469] + 200000*lambda_2[0, 470] + 200000*lambda_2[0, 471] + 200000*lambda_2[0, 472] + 200000*lambda_2[0, 473] + 2000000*lambda_2[0, 474] + 800000*lambda_2[0, 475] + 800000*lambda_2[0, 476] + 8000000*lambda_2[0, 477] + 8000000*lambda_2[0, 478] + 250000*lambda_2[0, 479] + 2500000*lambda_2[0, 480] + 2500000*lambda_2[0, 481] + 2500000*lambda_2[0, 482] + 2500000*lambda_2[0, 483] + 25000000*lambda_2[0, 484] + 10000000*lambda_2[0, 485] + 10000000*lambda_2[0, 486] + 100000000*lambda_2[0, 487] + 100000000*lambda_2[0, 488] + 10000000*lambda_2[0, 489] + 10000000*lambda_2[0, 490] + 100000000*lambda_2[0, 491] + 100000000*lambda_2[0, 492] + 400000000*lambda_2[0, 493] <= -l*V[0, 0]+ objc]
	constraints += [-lambda_2[0, 0] - 2*lambda_2[0, 8] - 3*lambda_2[0, 16] - 4*lambda_2[0, 24] - lambda_2[0, 32] - 10*lambda_2[0, 33] - 10*lambda_2[0, 35] - 40*lambda_2[0, 38] - 40*lambda_2[0, 42] - 500*lambda_2[0, 47] - 500*lambda_2[0, 53] - 2*lambda_2[0, 60] - lambda_2[0, 61] - 20*lambda_2[0, 62] - 100*lambda_2[0, 64] - 20*lambda_2[0, 66] - 100*lambda_2[0, 69] - 80*lambda_2[0, 72] - 1600*lambda_2[0, 76] - 80*lambda_2[0, 80] - 1600*lambda_2[0, 85] - 1000*lambda_2[0, 90] - 250000*lambda_2[0, 96] - 1000*lambda_2[0, 102] - 250000*lambda_2[0, 109] - 3*lambda_2[0, 116] - lambda_2[0, 117] - 30*lambda_2[0, 118] - 1000*lambda_2[0, 120] - 30*lambda_2[0, 122] - 1000*lambda_2[0, 125] - 120*lambda_2[0, 128] - 64000*lambda_2[0, 132] - 120*lambda_2[0, 136] - 64000*lambda_2[0, 141] - 1500*lambda_2[0, 146] - 125000000*lambda_2[0, 152] - 1500*lambda_2[0, 158] - 125000000*lambda_2[0, 165] - 2*lambda_2[0, 172] - 200*lambda_2[0, 173] - 200*lambda_2[0, 175] - 3200*lambda_2[0, 178] - 3200*lambda_2[0, 182] - 500000*lambda_2[0, 187] - 500000*lambda_2[0, 193] - 10*lambda_2[0, 200] - 10*lambda_2[0, 201] - 100*lambda_2[0, 202] - 40*lambda_2[0, 204] - 400*lambda_2[0, 205] - 400*lambda_2[0, 207] - 40*lambda_2[0, 210] - 400*lambda_2[0, 211] - 400*lambda_2[0, 213] - 1600*lambda_2[0, 216] - 500*lambda_2[0, 220] - 5000*lambda_2[0, 221] - 5000*lambda_2[0, 223] - 20000*lambda_2[0, 226] - 20000*lambda_2[0, 230] - 500*lambda_2[0, 235] - 5000*lambda_2[0, 236] - 5000*lambda_2[0, 238] - 20000*lambda_2[0, 241] - 20000*lambda_2[0, 245] - 250000*lambda_2[0, 250] - 20*lambda_2[0, 256] - 10*lambda_2[0, 257] - 100*lambda_2[0, 258] - 20*lambda_2[0, 259] - 10*lambda_2[0, 260] - 200*lambda_2[0, 261] - 1000*lambda_2[0, 263] - 100*lambda_2[0, 265] - 1000*lambda_2[0, 266] - 80*lambda_2[0, 268] - 40*lambda_2[0, 269] - 800*lambda_2[0, 270] - 4000*lambda_2[0, 272] - 800*lambda_2[0, 274] - 4000*lambda_2[0, 277] - 1600*lambda_2[0, 280] - 16000*lambda_2[0, 281] - 16000*lambda_2[0, 283] - 80*lambda_2[0, 286] - 40*lambda_2[0, 287] - 800*lambda_2[0, 288] - 4000*lambda_2[0, 290] - 800*lambda_2[0, 292] - 4000*lambda_2[0, 295] - 3200*lambda_2[0, 298] - 64000*lambda_2[0, 302] - 1600*lambda_2[0, 306] - 16000*lambda_2[0, 307] - 16000*lambda_2[0, 309] - 64000*lambda_2[0, 312] - 1000*lambda_2[0, 316] - 500*lambda_2[0, 317] - 10000*lambda_2[0, 318] - 50000*lambda_2[0, 320] - 10000*lambda_2[0, 322] - 50000*lambda_2[0, 325] - 40000*lambda_2[0, 328] - 800000*lambda_2[0, 332] - 40000*lambda_2[0, 336] - 800000*lambda_2[0, 341] - 250000*lambda_2[0, 346] - 2500000*lambda_2[0, 347] - 2500000*lambda_2[0, 349] - 10000000*lambda_2[0, 352] - 10000000*lambda_2[0, 356] - 1000*lambda_2[0, 361] - 500*lambda_2[0, 362] - 10000*lambda_2[0, 363] - 50000*lambda_2[0, 365] - 10000*lambda_2[0, 367] - 50000*lambda_2[0, 370] - 40000*lambda_2[0, 373] - 800000*lambda_2[0, 377] - 40000*lambda_2[0, 381] - 800000*lambda_2[0, 386] - 500000*lambda_2[0, 391] - 125000000*lambda_2[0, 397] - 250000*lambda_2[0, 403] - 2500000*lambda_2[0, 404] - 2500000*lambda_2[0, 406] - 10000000*lambda_2[0, 409] - 10000000*lambda_2[0, 413] - 125000000*lambda_2[0, 418] - 100*lambda_2[0, 424] - 400*lambda_2[0, 425] - 400*lambda_2[0, 426] - 4000*lambda_2[0, 427] - 400*lambda_2[0, 429] - 400*lambda_2[0, 430] - 4000*lambda_2[0, 431] - 1600*lambda_2[0, 433] - 16000*lambda_2[0, 434] - 16000*lambda_2[0, 436] - 5000*lambda_2[0, 439] - 5000*lambda_2[0, 440] - 50000*lambda_2[0, 441] - 20000*lambda_2[0, 443] - 200000*lambda_2[0, 444] - 200000*lambda_2[0, 446] - 20000*lambda_2[0, 449] - 200000*lambda_2[0, 450] - 200000*lambda_2[0, 452] - 800000*lambda_2[0, 455] - 5000*lambda_2[0, 459] - 5000*lambda_2[0, 460] - 50000*lambda_2[0, 461] - 20000*lambda_2[0, 463] - 200000*lambda_2[0, 464] - 200000*lambda_2[0, 466] - 20000*lambda_2[0, 469] - 200000*lambda_2[0, 470] - 200000*lambda_2[0, 472] - 800000*lambda_2[0, 475] - 250000*lambda_2[0, 479] - 2500000*lambda_2[0, 480] - 2500000*lambda_2[0, 482] - 10000000*lambda_2[0, 485] - 10000000*lambda_2[0, 489] >= -l*V[0, 1]- objc]
	constraints += [-lambda_2[0, 0] - 2*lambda_2[0, 8] - 3*lambda_2[0, 16] - 4*lambda_2[0, 24] - lambda_2[0, 32] - 10*lambda_2[0, 33] - 10*lambda_2[0, 35] - 40*lambda_2[0, 38] - 40*lambda_2[0, 42] - 500*lambda_2[0, 47] - 500*lambda_2[0, 53] - 2*lambda_2[0, 60] - lambda_2[0, 61] - 20*lambda_2[0, 62] - 100*lambda_2[0, 64] - 20*lambda_2[0, 66] - 100*lambda_2[0, 69] - 80*lambda_2[0, 72] - 1600*lambda_2[0, 76] - 80*lambda_2[0, 80] - 1600*lambda_2[0, 85] - 1000*lambda_2[0, 90] - 250000*lambda_2[0, 96] - 1000*lambda_2[0, 102] - 250000*lambda_2[0, 109] - 3*lambda_2[0, 116] - lambda_2[0, 117] - 30*lambda_2[0, 118] - 1000*lambda_2[0, 120] - 30*lambda_2[0, 122] - 1000*lambda_2[0, 125] - 120*lambda_2[0, 128] - 64000*lambda_2[0, 132] - 120*lambda_2[0, 136] - 64000*lambda_2[0, 141] - 1500*lambda_2[0, 146] - 125000000*lambda_2[0, 152] - 1500*lambda_2[0, 158] - 125000000*lambda_2[0, 165] - 2*lambda_2[0, 172] - 200*lambda_2[0, 173] - 200*lambda_2[0, 175] - 3200*lambda_2[0, 178] - 3200*lambda_2[0, 182] - 500000*lambda_2[0, 187] - 500000*lambda_2[0, 193] - 10*lambda_2[0, 200] - 10*lambda_2[0, 201] - 100*lambda_2[0, 202] - 40*lambda_2[0, 204] - 400*lambda_2[0, 205] - 400*lambda_2[0, 207] - 40*lambda_2[0, 210] - 400*lambda_2[0, 211] - 400*lambda_2[0, 213] - 1600*lambda_2[0, 216] - 500*lambda_2[0, 220] - 5000*lambda_2[0, 221] - 5000*lambda_2[0, 223] - 20000*lambda_2[0, 226] - 20000*lambda_2[0, 230] - 500*lambda_2[0, 235] - 5000*lambda_2[0, 236] - 5000*lambda_2[0, 238] - 20000*lambda_2[0, 241] - 20000*lambda_2[0, 245] - 250000*lambda_2[0, 250] - 20*lambda_2[0, 256] - 10*lambda_2[0, 257] - 100*lambda_2[0, 258] - 20*lambda_2[0, 259] - 10*lambda_2[0, 260] - 200*lambda_2[0, 261] - 1000*lambda_2[0, 263] - 100*lambda_2[0, 265] - 1000*lambda_2[0, 266] - 80*lambda_2[0, 268] - 40*lambda_2[0, 269] - 800*lambda_2[0, 270] - 4000*lambda_2[0, 272] - 800*lambda_2[0, 274] - 4000*lambda_2[0, 277] - 1600*lambda_2[0, 280] - 16000*lambda_2[0, 281] - 16000*lambda_2[0, 283] - 80*lambda_2[0, 286] - 40*lambda_2[0, 287] - 800*lambda_2[0, 288] - 4000*lambda_2[0, 290] - 800*lambda_2[0, 292] - 4000*lambda_2[0, 295] - 3200*lambda_2[0, 298] - 64000*lambda_2[0, 302] - 1600*lambda_2[0, 306] - 16000*lambda_2[0, 307] - 16000*lambda_2[0, 309] - 64000*lambda_2[0, 312] - 1000*lambda_2[0, 316] - 500*lambda_2[0, 317] - 10000*lambda_2[0, 318] - 50000*lambda_2[0, 320] - 10000*lambda_2[0, 322] - 50000*lambda_2[0, 325] - 40000*lambda_2[0, 328] - 800000*lambda_2[0, 332] - 40000*lambda_2[0, 336] - 800000*lambda_2[0, 341] - 250000*lambda_2[0, 346] - 2500000*lambda_2[0, 347] - 2500000*lambda_2[0, 349] - 10000000*lambda_2[0, 352] - 10000000*lambda_2[0, 356] - 1000*lambda_2[0, 361] - 500*lambda_2[0, 362] - 10000*lambda_2[0, 363] - 50000*lambda_2[0, 365] - 10000*lambda_2[0, 367] - 50000*lambda_2[0, 370] - 40000*lambda_2[0, 373] - 800000*lambda_2[0, 377] - 40000*lambda_2[0, 381] - 800000*lambda_2[0, 386] - 500000*lambda_2[0, 391] - 125000000*lambda_2[0, 397] - 250000*lambda_2[0, 403] - 2500000*lambda_2[0, 404] - 2500000*lambda_2[0, 406] - 10000000*lambda_2[0, 409] - 10000000*lambda_2[0, 413] - 125000000*lambda_2[0, 418] - 100*lambda_2[0, 424] - 400*lambda_2[0, 425] - 400*lambda_2[0, 426] - 4000*lambda_2[0, 427] - 400*lambda_2[0, 429] - 400*lambda_2[0, 430] - 4000*lambda_2[0, 431] - 1600*lambda_2[0, 433] - 16000*lambda_2[0, 434] - 16000*lambda_2[0, 436] - 5000*lambda_2[0, 439] - 5000*lambda_2[0, 440] - 50000*lambda_2[0, 441] - 20000*lambda_2[0, 443] - 200000*lambda_2[0, 444] - 200000*lambda_2[0, 446] - 20000*lambda_2[0, 449] - 200000*lambda_2[0, 450] - 200000*lambda_2[0, 452] - 800000*lambda_2[0, 455] - 5000*lambda_2[0, 459] - 5000*lambda_2[0, 460] - 50000*lambda_2[0, 461] - 20000*lambda_2[0, 463] - 200000*lambda_2[0, 464] - 200000*lambda_2[0, 466] - 20000*lambda_2[0, 469] - 200000*lambda_2[0, 470] - 200000*lambda_2[0, 472] - 800000*lambda_2[0, 475] - 250000*lambda_2[0, 479] - 2500000*lambda_2[0, 480] - 2500000*lambda_2[0, 482] - 10000000*lambda_2[0, 485] - 10000000*lambda_2[0, 489] <= -l*V[0, 1]+ objc]
	constraints += [lambda_2[0, 8] + 3*lambda_2[0, 16] + 6*lambda_2[0, 24] + lambda_2[0, 60] + 10*lambda_2[0, 62] + 10*lambda_2[0, 66] + 40*lambda_2[0, 72] + 40*lambda_2[0, 80] + 500*lambda_2[0, 90] + 500*lambda_2[0, 102] + 3*lambda_2[0, 116] + 30*lambda_2[0, 118] + 30*lambda_2[0, 122] + 120*lambda_2[0, 128] + 120*lambda_2[0, 136] + 1500*lambda_2[0, 146] + 1500*lambda_2[0, 158] + lambda_2[0, 172] + 100*lambda_2[0, 173] + 100*lambda_2[0, 175] + 1600*lambda_2[0, 178] + 1600*lambda_2[0, 182] + 250000*lambda_2[0, 187] + 250000*lambda_2[0, 193] + 10*lambda_2[0, 256] + 10*lambda_2[0, 259] + 100*lambda_2[0, 261] + 40*lambda_2[0, 268] + 400*lambda_2[0, 270] + 400*lambda_2[0, 274] + 40*lambda_2[0, 286] + 400*lambda_2[0, 288] + 400*lambda_2[0, 292] + 1600*lambda_2[0, 298] + 500*lambda_2[0, 316] + 5000*lambda_2[0, 318] + 5000*lambda_2[0, 322] + 20000*lambda_2[0, 328] + 20000*lambda_2[0, 336] + 500*lambda_2[0, 361] + 5000*lambda_2[0, 363] + 5000*lambda_2[0, 367] + 20000*lambda_2[0, 373] + 20000*lambda_2[0, 381] + 250000*lambda_2[0, 391] >= -l*V[0, 9]- objc]
	constraints += [lambda_2[0, 8] + 3*lambda_2[0, 16] + 6*lambda_2[0, 24] + lambda_2[0, 60] + 10*lambda_2[0, 62] + 10*lambda_2[0, 66] + 40*lambda_2[0, 72] + 40*lambda_2[0, 80] + 500*lambda_2[0, 90] + 500*lambda_2[0, 102] + 3*lambda_2[0, 116] + 30*lambda_2[0, 118] + 30*lambda_2[0, 122] + 120*lambda_2[0, 128] + 120*lambda_2[0, 136] + 1500*lambda_2[0, 146] + 1500*lambda_2[0, 158] + lambda_2[0, 172] + 100*lambda_2[0, 173] + 100*lambda_2[0, 175] + 1600*lambda_2[0, 178] + 1600*lambda_2[0, 182] + 250000*lambda_2[0, 187] + 250000*lambda_2[0, 193] + 10*lambda_2[0, 256] + 10*lambda_2[0, 259] + 100*lambda_2[0, 261] + 40*lambda_2[0, 268] + 400*lambda_2[0, 270] + 400*lambda_2[0, 274] + 40*lambda_2[0, 286] + 400*lambda_2[0, 288] + 400*lambda_2[0, 292] + 1600*lambda_2[0, 298] + 500*lambda_2[0, 316] + 5000*lambda_2[0, 318] + 5000*lambda_2[0, 322] + 20000*lambda_2[0, 328] + 20000*lambda_2[0, 336] + 500*lambda_2[0, 361] + 5000*lambda_2[0, 363] + 5000*lambda_2[0, 367] + 20000*lambda_2[0, 373] + 20000*lambda_2[0, 381] + 250000*lambda_2[0, 391] <= -l*V[0, 9]+ objc]
	constraints += [-lambda_2[0, 16] - 4*lambda_2[0, 24] - lambda_2[0, 116] - 10*lambda_2[0, 118] - 10*lambda_2[0, 122] - 40*lambda_2[0, 128] - 40*lambda_2[0, 136] - 500*lambda_2[0, 146] - 500*lambda_2[0, 158] >= -l*V[0, 17]- objc]
	constraints += [-lambda_2[0, 16] - 4*lambda_2[0, 24] - lambda_2[0, 116] - 10*lambda_2[0, 118] - 10*lambda_2[0, 122] - 40*lambda_2[0, 128] - 40*lambda_2[0, 136] - 500*lambda_2[0, 146] - 500*lambda_2[0, 158] <= -l*V[0, 17]+ objc]
	constraints += [lambda_2[0, 24] == 0]
	constraints += [-lambda_2[0, 1] - 2*lambda_2[0, 9] - 3*lambda_2[0, 17] - 4*lambda_2[0, 25] - lambda_2[0, 32] - 10*lambda_2[0, 34] - 10*lambda_2[0, 36] - 40*lambda_2[0, 39] - 40*lambda_2[0, 43] - 500*lambda_2[0, 48] - 500*lambda_2[0, 54] - lambda_2[0, 60] - 2*lambda_2[0, 61] - 20*lambda_2[0, 63] - 100*lambda_2[0, 65] - 20*lambda_2[0, 67] - 100*lambda_2[0, 70] - 80*lambda_2[0, 73] - 1600*lambda_2[0, 77] - 80*lambda_2[0, 81] - 1600*lambda_2[0, 86] - 1000*lambda_2[0, 91] - 250000*lambda_2[0, 97] - 1000*lambda_2[0, 103] - 250000*lambda_2[0, 110] - lambda_2[0, 116] - 3*lambda_2[0, 117] - 30*lambda_2[0, 119] - 1000*lambda_2[0, 121] - 30*lambda_2[0, 123] - 1000*lambda_2[0, 126] - 120*lambda_2[0, 129] - 64000*lambda_2[0, 133] - 120*lambda_2[0, 137] - 64000*lambda_2[0, 142] - 1500*lambda_2[0, 147] - 125000000*lambda_2[0, 153] - 1500*lambda_2[0, 159] - 125000000*lambda_2[0, 166] - 2*lambda_2[0, 172] - 200*lambda_2[0, 174] - 200*lambda_2[0, 176] - 3200*lambda_2[0, 179] - 3200*lambda_2[0, 183] - 500000*lambda_2[0, 188] - 500000*lambda_2[0, 194] - 10*lambda_2[0, 200] - 10*lambda_2[0, 201] - 100*lambda_2[0, 203] - 40*lambda_2[0, 204] - 400*lambda_2[0, 206] - 400*lambda_2[0, 208] - 40*lambda_2[0, 210] - 400*lambda_2[0, 212] - 400*lambda_2[0, 214] - 1600*lambda_2[0, 217] - 500*lambda_2[0, 220] - 5000*lambda_2[0, 222] - 5000*lambda_2[0, 224] - 20000*lambda_2[0, 227] - 20000*lambda_2[0, 231] - 500*lambda_2[0, 235] - 5000*lambda_2[0, 237] - 5000*lambda_2[0, 239] - 20000*lambda_2[0, 242] - 20000*lambda_2[0, 246] - 250000*lambda_2[0, 251] - 10*lambda_2[0, 256] - 20*lambda_2[0, 257] - 100*lambda_2[0, 258] - 10*lambda_2[0, 259] - 20*lambda_2[0, 260] - 200*lambda_2[0, 262] - 1000*lambda_2[0, 264] - 100*lambda_2[0, 265] - 1000*lambda_2[0, 267] - 40*lambda_2[0, 268] - 80*lambda_2[0, 269] - 800*lambda_2[0, 271] - 4000*lambda_2[0, 273] - 800*lambda_2[0, 275] - 4000*lambda_2[0, 278] - 1600*lambda_2[0, 280] - 16000*lambda_2[0, 282] - 16000*lambda_2[0, 284] - 40*lambda_2[0, 286] - 80*lambda_2[0, 287] - 800*lambda_2[0, 289] - 4000*lambda_2[0, 291] - 800*lambda_2[0, 293] - 4000*lambda_2[0, 296] - 3200*lambda_2[0, 299] - 64000*lambda_2[0, 303] - 1600*lambda_2[0, 306] - 16000*lambda_2[0, 308] - 16000*lambda_2[0, 310] - 64000*lambda_2[0, 313] - 500*lambda_2[0, 316] - 1000*lambda_2[0, 317] - 10000*lambda_2[0, 319] - 50000*lambda_2[0, 321] - 10000*lambda_2[0, 323] - 50000*lambda_2[0, 326] - 40000*lambda_2[0, 329] - 800000*lambda_2[0, 333] - 40000*lambda_2[0, 337] - 800000*lambda_2[0, 342] - 250000*lambda_2[0, 346] - 2500000*lambda_2[0, 348] - 2500000*lambda_2[0, 350] - 10000000*lambda_2[0, 353] - 10000000*lambda_2[0, 357] - 500*lambda_2[0, 361] - 1000*lambda_2[0, 362] - 10000*lambda_2[0, 364] - 50000*lambda_2[0, 366] - 10000*lambda_2[0, 368] - 50000*lambda_2[0, 371] - 40000*lambda_2[0, 374] - 800000*lambda_2[0, 378] - 40000*lambda_2[0, 382] - 800000*lambda_2[0, 387] - 500000*lambda_2[0, 392] - 125000000*lambda_2[0, 398] - 250000*lambda_2[0, 403] - 2500000*lambda_2[0, 405] - 2500000*lambda_2[0, 407] - 10000000*lambda_2[0, 410] - 10000000*lambda_2[0, 414] - 125000000*lambda_2[0, 419] - 100*lambda_2[0, 424] - 400*lambda_2[0, 425] - 400*lambda_2[0, 426] - 4000*lambda_2[0, 428] - 400*lambda_2[0, 429] - 400*lambda_2[0, 430] - 4000*lambda_2[0, 432] - 1600*lambda_2[0, 433] - 16000*lambda_2[0, 435] - 16000*lambda_2[0, 437] - 5000*lambda_2[0, 439] - 5000*lambda_2[0, 440] - 50000*lambda_2[0, 442] - 20000*lambda_2[0, 443] - 200000*lambda_2[0, 445] - 200000*lambda_2[0, 447] - 20000*lambda_2[0, 449] - 200000*lambda_2[0, 451] - 200000*lambda_2[0, 453] - 800000*lambda_2[0, 456] - 5000*lambda_2[0, 459] - 5000*lambda_2[0, 460] - 50000*lambda_2[0, 462] - 20000*lambda_2[0, 463] - 200000*lambda_2[0, 465] - 200000*lambda_2[0, 467] - 20000*lambda_2[0, 469] - 200000*lambda_2[0, 471] - 200000*lambda_2[0, 473] - 800000*lambda_2[0, 476] - 250000*lambda_2[0, 479] - 2500000*lambda_2[0, 481] - 2500000*lambda_2[0, 483] - 10000000*lambda_2[0, 486] - 10000000*lambda_2[0, 490] >= -l*V[0, 2] - 25*V[0, 6]- objc]
	constraints += [-lambda_2[0, 1] - 2*lambda_2[0, 9] - 3*lambda_2[0, 17] - 4*lambda_2[0, 25] - lambda_2[0, 32] - 10*lambda_2[0, 34] - 10*lambda_2[0, 36] - 40*lambda_2[0, 39] - 40*lambda_2[0, 43] - 500*lambda_2[0, 48] - 500*lambda_2[0, 54] - lambda_2[0, 60] - 2*lambda_2[0, 61] - 20*lambda_2[0, 63] - 100*lambda_2[0, 65] - 20*lambda_2[0, 67] - 100*lambda_2[0, 70] - 80*lambda_2[0, 73] - 1600*lambda_2[0, 77] - 80*lambda_2[0, 81] - 1600*lambda_2[0, 86] - 1000*lambda_2[0, 91] - 250000*lambda_2[0, 97] - 1000*lambda_2[0, 103] - 250000*lambda_2[0, 110] - lambda_2[0, 116] - 3*lambda_2[0, 117] - 30*lambda_2[0, 119] - 1000*lambda_2[0, 121] - 30*lambda_2[0, 123] - 1000*lambda_2[0, 126] - 120*lambda_2[0, 129] - 64000*lambda_2[0, 133] - 120*lambda_2[0, 137] - 64000*lambda_2[0, 142] - 1500*lambda_2[0, 147] - 125000000*lambda_2[0, 153] - 1500*lambda_2[0, 159] - 125000000*lambda_2[0, 166] - 2*lambda_2[0, 172] - 200*lambda_2[0, 174] - 200*lambda_2[0, 176] - 3200*lambda_2[0, 179] - 3200*lambda_2[0, 183] - 500000*lambda_2[0, 188] - 500000*lambda_2[0, 194] - 10*lambda_2[0, 200] - 10*lambda_2[0, 201] - 100*lambda_2[0, 203] - 40*lambda_2[0, 204] - 400*lambda_2[0, 206] - 400*lambda_2[0, 208] - 40*lambda_2[0, 210] - 400*lambda_2[0, 212] - 400*lambda_2[0, 214] - 1600*lambda_2[0, 217] - 500*lambda_2[0, 220] - 5000*lambda_2[0, 222] - 5000*lambda_2[0, 224] - 20000*lambda_2[0, 227] - 20000*lambda_2[0, 231] - 500*lambda_2[0, 235] - 5000*lambda_2[0, 237] - 5000*lambda_2[0, 239] - 20000*lambda_2[0, 242] - 20000*lambda_2[0, 246] - 250000*lambda_2[0, 251] - 10*lambda_2[0, 256] - 20*lambda_2[0, 257] - 100*lambda_2[0, 258] - 10*lambda_2[0, 259] - 20*lambda_2[0, 260] - 200*lambda_2[0, 262] - 1000*lambda_2[0, 264] - 100*lambda_2[0, 265] - 1000*lambda_2[0, 267] - 40*lambda_2[0, 268] - 80*lambda_2[0, 269] - 800*lambda_2[0, 271] - 4000*lambda_2[0, 273] - 800*lambda_2[0, 275] - 4000*lambda_2[0, 278] - 1600*lambda_2[0, 280] - 16000*lambda_2[0, 282] - 16000*lambda_2[0, 284] - 40*lambda_2[0, 286] - 80*lambda_2[0, 287] - 800*lambda_2[0, 289] - 4000*lambda_2[0, 291] - 800*lambda_2[0, 293] - 4000*lambda_2[0, 296] - 3200*lambda_2[0, 299] - 64000*lambda_2[0, 303] - 1600*lambda_2[0, 306] - 16000*lambda_2[0, 308] - 16000*lambda_2[0, 310] - 64000*lambda_2[0, 313] - 500*lambda_2[0, 316] - 1000*lambda_2[0, 317] - 10000*lambda_2[0, 319] - 50000*lambda_2[0, 321] - 10000*lambda_2[0, 323] - 50000*lambda_2[0, 326] - 40000*lambda_2[0, 329] - 800000*lambda_2[0, 333] - 40000*lambda_2[0, 337] - 800000*lambda_2[0, 342] - 250000*lambda_2[0, 346] - 2500000*lambda_2[0, 348] - 2500000*lambda_2[0, 350] - 10000000*lambda_2[0, 353] - 10000000*lambda_2[0, 357] - 500*lambda_2[0, 361] - 1000*lambda_2[0, 362] - 10000*lambda_2[0, 364] - 50000*lambda_2[0, 366] - 10000*lambda_2[0, 368] - 50000*lambda_2[0, 371] - 40000*lambda_2[0, 374] - 800000*lambda_2[0, 378] - 40000*lambda_2[0, 382] - 800000*lambda_2[0, 387] - 500000*lambda_2[0, 392] - 125000000*lambda_2[0, 398] - 250000*lambda_2[0, 403] - 2500000*lambda_2[0, 405] - 2500000*lambda_2[0, 407] - 10000000*lambda_2[0, 410] - 10000000*lambda_2[0, 414] - 125000000*lambda_2[0, 419] - 100*lambda_2[0, 424] - 400*lambda_2[0, 425] - 400*lambda_2[0, 426] - 4000*lambda_2[0, 428] - 400*lambda_2[0, 429] - 400*lambda_2[0, 430] - 4000*lambda_2[0, 432] - 1600*lambda_2[0, 433] - 16000*lambda_2[0, 435] - 16000*lambda_2[0, 437] - 5000*lambda_2[0, 439] - 5000*lambda_2[0, 440] - 50000*lambda_2[0, 442] - 20000*lambda_2[0, 443] - 200000*lambda_2[0, 445] - 200000*lambda_2[0, 447] - 20000*lambda_2[0, 449] - 200000*lambda_2[0, 451] - 200000*lambda_2[0, 453] - 800000*lambda_2[0, 456] - 5000*lambda_2[0, 459] - 5000*lambda_2[0, 460] - 50000*lambda_2[0, 462] - 20000*lambda_2[0, 463] - 200000*lambda_2[0, 465] - 200000*lambda_2[0, 467] - 20000*lambda_2[0, 469] - 200000*lambda_2[0, 471] - 200000*lambda_2[0, 473] - 800000*lambda_2[0, 476] - 250000*lambda_2[0, 479] - 2500000*lambda_2[0, 481] - 2500000*lambda_2[0, 483] - 10000000*lambda_2[0, 486] - 10000000*lambda_2[0, 490] <= -l*V[0, 2] - 25*V[0, 6]+ objc]
	constraints += [lambda_2[0, 32] + 2*lambda_2[0, 60] + 2*lambda_2[0, 61] + 3*lambda_2[0, 116] + 3*lambda_2[0, 117] + 4*lambda_2[0, 172] + 10*lambda_2[0, 200] + 10*lambda_2[0, 201] + 40*lambda_2[0, 204] + 40*lambda_2[0, 210] + 500*lambda_2[0, 220] + 500*lambda_2[0, 235] + 20*lambda_2[0, 256] + 20*lambda_2[0, 257] + 100*lambda_2[0, 258] + 20*lambda_2[0, 259] + 20*lambda_2[0, 260] + 100*lambda_2[0, 265] + 80*lambda_2[0, 268] + 80*lambda_2[0, 269] + 1600*lambda_2[0, 280] + 80*lambda_2[0, 286] + 80*lambda_2[0, 287] + 1600*lambda_2[0, 306] + 1000*lambda_2[0, 316] + 1000*lambda_2[0, 317] + 250000*lambda_2[0, 346] + 1000*lambda_2[0, 361] + 1000*lambda_2[0, 362] + 250000*lambda_2[0, 403] + 100*lambda_2[0, 424] + 400*lambda_2[0, 425] + 400*lambda_2[0, 426] + 400*lambda_2[0, 429] + 400*lambda_2[0, 430] + 1600*lambda_2[0, 433] + 5000*lambda_2[0, 439] + 5000*lambda_2[0, 440] + 20000*lambda_2[0, 443] + 20000*lambda_2[0, 449] + 5000*lambda_2[0, 459] + 5000*lambda_2[0, 460] + 20000*lambda_2[0, 463] + 20000*lambda_2[0, 469] + 250000*lambda_2[0, 479] >= -l*V[0, 25] - 25*V[0, 35]- objc]
	constraints += [lambda_2[0, 32] + 2*lambda_2[0, 60] + 2*lambda_2[0, 61] + 3*lambda_2[0, 116] + 3*lambda_2[0, 117] + 4*lambda_2[0, 172] + 10*lambda_2[0, 200] + 10*lambda_2[0, 201] + 40*lambda_2[0, 204] + 40*lambda_2[0, 210] + 500*lambda_2[0, 220] + 500*lambda_2[0, 235] + 20*lambda_2[0, 256] + 20*lambda_2[0, 257] + 100*lambda_2[0, 258] + 20*lambda_2[0, 259] + 20*lambda_2[0, 260] + 100*lambda_2[0, 265] + 80*lambda_2[0, 268] + 80*lambda_2[0, 269] + 1600*lambda_2[0, 280] + 80*lambda_2[0, 286] + 80*lambda_2[0, 287] + 1600*lambda_2[0, 306] + 1000*lambda_2[0, 316] + 1000*lambda_2[0, 317] + 250000*lambda_2[0, 346] + 1000*lambda_2[0, 361] + 1000*lambda_2[0, 362] + 250000*lambda_2[0, 403] + 100*lambda_2[0, 424] + 400*lambda_2[0, 425] + 400*lambda_2[0, 426] + 400*lambda_2[0, 429] + 400*lambda_2[0, 430] + 1600*lambda_2[0, 433] + 5000*lambda_2[0, 439] + 5000*lambda_2[0, 440] + 20000*lambda_2[0, 443] + 20000*lambda_2[0, 449] + 5000*lambda_2[0, 459] + 5000*lambda_2[0, 460] + 20000*lambda_2[0, 463] + 20000*lambda_2[0, 469] + 250000*lambda_2[0, 479] <= -l*V[0, 25] - 25*V[0, 35]+ objc]
	constraints += [-lambda_2[0, 60] - 3*lambda_2[0, 116] - 2*lambda_2[0, 172] - 10*lambda_2[0, 256] - 10*lambda_2[0, 259] - 40*lambda_2[0, 268] - 40*lambda_2[0, 286] - 500*lambda_2[0, 316] - 500*lambda_2[0, 361] >= -l*V[0, 53] - 25*V[0, 73]- objc]
	constraints += [-lambda_2[0, 60] - 3*lambda_2[0, 116] - 2*lambda_2[0, 172] - 10*lambda_2[0, 256] - 10*lambda_2[0, 259] - 40*lambda_2[0, 268] - 40*lambda_2[0, 286] - 500*lambda_2[0, 316] - 500*lambda_2[0, 361] <= -l*V[0, 53] - 25*V[0, 73]+ objc]
	constraints += [lambda_2[0, 116] == 0]
	constraints += [lambda_2[0, 9] + 3*lambda_2[0, 17] + 6*lambda_2[0, 25] + lambda_2[0, 61] + 10*lambda_2[0, 63] + 10*lambda_2[0, 67] + 40*lambda_2[0, 73] + 40*lambda_2[0, 81] + 500*lambda_2[0, 91] + 500*lambda_2[0, 103] + 3*lambda_2[0, 117] + 30*lambda_2[0, 119] + 30*lambda_2[0, 123] + 120*lambda_2[0, 129] + 120*lambda_2[0, 137] + 1500*lambda_2[0, 147] + 1500*lambda_2[0, 159] + lambda_2[0, 172] + 100*lambda_2[0, 174] + 100*lambda_2[0, 176] + 1600*lambda_2[0, 179] + 1600*lambda_2[0, 183] + 250000*lambda_2[0, 188] + 250000*lambda_2[0, 194] + 10*lambda_2[0, 257] + 10*lambda_2[0, 260] + 100*lambda_2[0, 262] + 40*lambda_2[0, 269] + 400*lambda_2[0, 271] + 400*lambda_2[0, 275] + 40*lambda_2[0, 287] + 400*lambda_2[0, 289] + 400*lambda_2[0, 293] + 1600*lambda_2[0, 299] + 500*lambda_2[0, 317] + 5000*lambda_2[0, 319] + 5000*lambda_2[0, 323] + 20000*lambda_2[0, 329] + 20000*lambda_2[0, 337] + 500*lambda_2[0, 362] + 5000*lambda_2[0, 364] + 5000*lambda_2[0, 368] + 20000*lambda_2[0, 374] + 20000*lambda_2[0, 382] + 250000*lambda_2[0, 392] >= -l*V[0, 10] - 25*V[0, 36]- objc]
	constraints += [lambda_2[0, 9] + 3*lambda_2[0, 17] + 6*lambda_2[0, 25] + lambda_2[0, 61] + 10*lambda_2[0, 63] + 10*lambda_2[0, 67] + 40*lambda_2[0, 73] + 40*lambda_2[0, 81] + 500*lambda_2[0, 91] + 500*lambda_2[0, 103] + 3*lambda_2[0, 117] + 30*lambda_2[0, 119] + 30*lambda_2[0, 123] + 120*lambda_2[0, 129] + 120*lambda_2[0, 137] + 1500*lambda_2[0, 147] + 1500*lambda_2[0, 159] + lambda_2[0, 172] + 100*lambda_2[0, 174] + 100*lambda_2[0, 176] + 1600*lambda_2[0, 179] + 1600*lambda_2[0, 183] + 250000*lambda_2[0, 188] + 250000*lambda_2[0, 194] + 10*lambda_2[0, 257] + 10*lambda_2[0, 260] + 100*lambda_2[0, 262] + 40*lambda_2[0, 269] + 400*lambda_2[0, 271] + 400*lambda_2[0, 275] + 40*lambda_2[0, 287] + 400*lambda_2[0, 289] + 400*lambda_2[0, 293] + 1600*lambda_2[0, 299] + 500*lambda_2[0, 317] + 5000*lambda_2[0, 319] + 5000*lambda_2[0, 323] + 20000*lambda_2[0, 329] + 20000*lambda_2[0, 337] + 500*lambda_2[0, 362] + 5000*lambda_2[0, 364] + 5000*lambda_2[0, 368] + 20000*lambda_2[0, 374] + 20000*lambda_2[0, 382] + 250000*lambda_2[0, 392] <= -l*V[0, 10] - 25*V[0, 36]+ objc]
	constraints += [-lambda_2[0, 61] - 3*lambda_2[0, 117] - 2*lambda_2[0, 172] - 10*lambda_2[0, 257] - 10*lambda_2[0, 260] - 40*lambda_2[0, 269] - 40*lambda_2[0, 287] - 500*lambda_2[0, 317] - 500*lambda_2[0, 362] >= -l*V[0, 54] - 25*V[0, 119]- objc]
	constraints += [-lambda_2[0, 61] - 3*lambda_2[0, 117] - 2*lambda_2[0, 172] - 10*lambda_2[0, 257] - 10*lambda_2[0, 260] - 40*lambda_2[0, 269] - 40*lambda_2[0, 287] - 500*lambda_2[0, 317] - 500*lambda_2[0, 362] <= -l*V[0, 54] - 25*V[0, 119]+ objc]
	constraints += [lambda_2[0, 172] == 0]
	constraints += [-lambda_2[0, 17] - 4*lambda_2[0, 25] - lambda_2[0, 117] - 10*lambda_2[0, 119] - 10*lambda_2[0, 123] - 40*lambda_2[0, 129] - 40*lambda_2[0, 137] - 500*lambda_2[0, 147] - 500*lambda_2[0, 159] >= -l*V[0, 18] - 25*V[0, 74]- objc]
	constraints += [-lambda_2[0, 17] - 4*lambda_2[0, 25] - lambda_2[0, 117] - 10*lambda_2[0, 119] - 10*lambda_2[0, 123] - 40*lambda_2[0, 129] - 40*lambda_2[0, 137] - 500*lambda_2[0, 147] - 500*lambda_2[0, 159] <= -l*V[0, 18] - 25*V[0, 74]+ objc]
	constraints += [lambda_2[0, 117] == 0]
	constraints += [lambda_2[0, 25] == 0]
	constraints += [-lambda_2[0, 2] - 20*lambda_2[0, 10] - 300*lambda_2[0, 18] - 4000*lambda_2[0, 26] - lambda_2[0, 33] - lambda_2[0, 34] - 10*lambda_2[0, 37] - 40*lambda_2[0, 40] - 40*lambda_2[0, 44] - 500*lambda_2[0, 49] - 500*lambda_2[0, 55] - lambda_2[0, 62] - lambda_2[0, 63] - 20*lambda_2[0, 64] - 20*lambda_2[0, 65] - 200*lambda_2[0, 68] - 100*lambda_2[0, 71] - 800*lambda_2[0, 74] - 1600*lambda_2[0, 78] - 800*lambda_2[0, 82] - 1600*lambda_2[0, 87] - 10000*lambda_2[0, 92] - 250000*lambda_2[0, 98] - 10000*lambda_2[0, 104] - 250000*lambda_2[0, 111] - lambda_2[0, 118] - lambda_2[0, 119] - 300*lambda_2[0, 120] - 300*lambda_2[0, 121] - 3000*lambda_2[0, 124] - 1000*lambda_2[0, 127] - 12000*lambda_2[0, 130] - 64000*lambda_2[0, 134] - 12000*lambda_2[0, 138] - 64000*lambda_2[0, 143] - 150000*lambda_2[0, 148] - 125000000*lambda_2[0, 154] - 150000*lambda_2[0, 160] - 125000000*lambda_2[0, 167] - 20*lambda_2[0, 173] - 20*lambda_2[0, 174] - 2000*lambda_2[0, 177] - 32000*lambda_2[0, 180] - 32000*lambda_2[0, 184] - 5000000*lambda_2[0, 189] - 5000000*lambda_2[0, 195] - lambda_2[0, 200] - 10*lambda_2[0, 202] - 10*lambda_2[0, 203] - 40*lambda_2[0, 205] - 40*lambda_2[0, 206] - 400*lambda_2[0, 209] - 40*lambda_2[0, 211] - 40*lambda_2[0, 212] - 400*lambda_2[0, 215] - 1600*lambda_2[0, 218] - 500*lambda_2[0, 221] - 500*lambda_2[0, 222] - 5000*lambda_2[0, 225] - 20000*lambda_2[0, 228] - 20000*lambda_2[0, 232] - 500*lambda_2[0, 236] - 500*lambda_2[0, 237] - 5000*lambda_2[0, 240] - 20000*lambda_2[0, 243] - 20000*lambda_2[0, 247] - 250000*lambda_2[0, 252] - lambda_2[0, 256] - lambda_2[0, 257] - 20*lambda_2[0, 258] - 10*lambda_2[0, 261] - 10*lambda_2[0, 262] - 200*lambda_2[0, 263] - 200*lambda_2[0, 264] - 100*lambda_2[0, 266] - 100*lambda_2[0, 267] - 40*lambda_2[0, 270] - 40*lambda_2[0, 271] - 800*lambda_2[0, 272] - 800*lambda_2[0, 273] - 8000*lambda_2[0, 276] - 4000*lambda_2[0, 279] - 1600*lambda_2[0, 281] - 1600*lambda_2[0, 282] - 16000*lambda_2[0, 285] - 40*lambda_2[0, 288] - 40*lambda_2[0, 289] - 800*lambda_2[0, 290] - 800*lambda_2[0, 291] - 8000*lambda_2[0, 294] - 4000*lambda_2[0, 297] - 32000*lambda_2[0, 300] - 64000*lambda_2[0, 304] - 1600*lambda_2[0, 307] - 1600*lambda_2[0, 308] - 16000*lambda_2[0, 311] - 64000*lambda_2[0, 314] - 500*lambda_2[0, 318] - 500*lambda_2[0, 319] - 10000*lambda_2[0, 320] - 10000*lambda_2[0, 321] - 100000*lambda_2[0, 324] - 50000*lambda_2[0, 327] - 400000*lambda_2[0, 330] - 800000*lambda_2[0, 334] - 400000*lambda_2[0, 338] - 800000*lambda_2[0, 343] - 250000*lambda_2[0, 347] - 250000*lambda_2[0, 348] - 2500000*lambda_2[0, 351] - 10000000*lambda_2[0, 354] - 10000000*lambda_2[0, 358] - 500*lambda_2[0, 363] - 500*lambda_2[0, 364] - 10000*lambda_2[0, 365] - 10000*lambda_2[0, 366] - 100000*lambda_2[0, 369] - 50000*lambda_2[0, 372] - 400000*lambda_2[0, 375] - 800000*lambda_2[0, 379] - 400000*lambda_2[0, 383] - 800000*lambda_2[0, 388] - 5000000*lambda_2[0, 393] - 125000000*lambda_2[0, 399] - 250000*lambda_2[0, 404] - 250000*lambda_2[0, 405] - 2500000*lambda_2[0, 408] - 10000000*lambda_2[0, 411] - 10000000*lambda_2[0, 415] - 125000000*lambda_2[0, 420] - 10*lambda_2[0, 424] - 40*lambda_2[0, 425] - 400*lambda_2[0, 427] - 400*lambda_2[0, 428] - 40*lambda_2[0, 429] - 400*lambda_2[0, 431] - 400*lambda_2[0, 432] - 1600*lambda_2[0, 434] - 1600*lambda_2[0, 435] - 16000*lambda_2[0, 438] - 500*lambda_2[0, 439] - 5000*lambda_2[0, 441] - 5000*lambda_2[0, 442] - 20000*lambda_2[0, 444] - 20000*lambda_2[0, 445] - 200000*lambda_2[0, 448] - 20000*lambda_2[0, 450] - 20000*lambda_2[0, 451] - 200000*lambda_2[0, 454] - 800000*lambda_2[0, 457] - 500*lambda_2[0, 459] - 5000*lambda_2[0, 461] - 5000*lambda_2[0, 462] - 20000*lambda_2[0, 464] - 20000*lambda_2[0, 465] - 200000*lambda_2[0, 468] - 20000*lambda_2[0, 470] - 20000*lambda_2[0, 471] - 200000*lambda_2[0, 474] - 800000*lambda_2[0, 477] - 250000*lambda_2[0, 480] - 250000*lambda_2[0, 481] - 2500000*lambda_2[0, 484] - 10000000*lambda_2[0, 487] - 10000000*lambda_2[0, 491] >= -l*V[0, 3] - 2*V[0, 3]*t0[0, 2] - 2*V[0, 3] + V[0, 4]- objc]
	constraints += [-lambda_2[0, 2] - 20*lambda_2[0, 10] - 300*lambda_2[0, 18] - 4000*lambda_2[0, 26] - lambda_2[0, 33] - lambda_2[0, 34] - 10*lambda_2[0, 37] - 40*lambda_2[0, 40] - 40*lambda_2[0, 44] - 500*lambda_2[0, 49] - 500*lambda_2[0, 55] - lambda_2[0, 62] - lambda_2[0, 63] - 20*lambda_2[0, 64] - 20*lambda_2[0, 65] - 200*lambda_2[0, 68] - 100*lambda_2[0, 71] - 800*lambda_2[0, 74] - 1600*lambda_2[0, 78] - 800*lambda_2[0, 82] - 1600*lambda_2[0, 87] - 10000*lambda_2[0, 92] - 250000*lambda_2[0, 98] - 10000*lambda_2[0, 104] - 250000*lambda_2[0, 111] - lambda_2[0, 118] - lambda_2[0, 119] - 300*lambda_2[0, 120] - 300*lambda_2[0, 121] - 3000*lambda_2[0, 124] - 1000*lambda_2[0, 127] - 12000*lambda_2[0, 130] - 64000*lambda_2[0, 134] - 12000*lambda_2[0, 138] - 64000*lambda_2[0, 143] - 150000*lambda_2[0, 148] - 125000000*lambda_2[0, 154] - 150000*lambda_2[0, 160] - 125000000*lambda_2[0, 167] - 20*lambda_2[0, 173] - 20*lambda_2[0, 174] - 2000*lambda_2[0, 177] - 32000*lambda_2[0, 180] - 32000*lambda_2[0, 184] - 5000000*lambda_2[0, 189] - 5000000*lambda_2[0, 195] - lambda_2[0, 200] - 10*lambda_2[0, 202] - 10*lambda_2[0, 203] - 40*lambda_2[0, 205] - 40*lambda_2[0, 206] - 400*lambda_2[0, 209] - 40*lambda_2[0, 211] - 40*lambda_2[0, 212] - 400*lambda_2[0, 215] - 1600*lambda_2[0, 218] - 500*lambda_2[0, 221] - 500*lambda_2[0, 222] - 5000*lambda_2[0, 225] - 20000*lambda_2[0, 228] - 20000*lambda_2[0, 232] - 500*lambda_2[0, 236] - 500*lambda_2[0, 237] - 5000*lambda_2[0, 240] - 20000*lambda_2[0, 243] - 20000*lambda_2[0, 247] - 250000*lambda_2[0, 252] - lambda_2[0, 256] - lambda_2[0, 257] - 20*lambda_2[0, 258] - 10*lambda_2[0, 261] - 10*lambda_2[0, 262] - 200*lambda_2[0, 263] - 200*lambda_2[0, 264] - 100*lambda_2[0, 266] - 100*lambda_2[0, 267] - 40*lambda_2[0, 270] - 40*lambda_2[0, 271] - 800*lambda_2[0, 272] - 800*lambda_2[0, 273] - 8000*lambda_2[0, 276] - 4000*lambda_2[0, 279] - 1600*lambda_2[0, 281] - 1600*lambda_2[0, 282] - 16000*lambda_2[0, 285] - 40*lambda_2[0, 288] - 40*lambda_2[0, 289] - 800*lambda_2[0, 290] - 800*lambda_2[0, 291] - 8000*lambda_2[0, 294] - 4000*lambda_2[0, 297] - 32000*lambda_2[0, 300] - 64000*lambda_2[0, 304] - 1600*lambda_2[0, 307] - 1600*lambda_2[0, 308] - 16000*lambda_2[0, 311] - 64000*lambda_2[0, 314] - 500*lambda_2[0, 318] - 500*lambda_2[0, 319] - 10000*lambda_2[0, 320] - 10000*lambda_2[0, 321] - 100000*lambda_2[0, 324] - 50000*lambda_2[0, 327] - 400000*lambda_2[0, 330] - 800000*lambda_2[0, 334] - 400000*lambda_2[0, 338] - 800000*lambda_2[0, 343] - 250000*lambda_2[0, 347] - 250000*lambda_2[0, 348] - 2500000*lambda_2[0, 351] - 10000000*lambda_2[0, 354] - 10000000*lambda_2[0, 358] - 500*lambda_2[0, 363] - 500*lambda_2[0, 364] - 10000*lambda_2[0, 365] - 10000*lambda_2[0, 366] - 100000*lambda_2[0, 369] - 50000*lambda_2[0, 372] - 400000*lambda_2[0, 375] - 800000*lambda_2[0, 379] - 400000*lambda_2[0, 383] - 800000*lambda_2[0, 388] - 5000000*lambda_2[0, 393] - 125000000*lambda_2[0, 399] - 250000*lambda_2[0, 404] - 250000*lambda_2[0, 405] - 2500000*lambda_2[0, 408] - 10000000*lambda_2[0, 411] - 10000000*lambda_2[0, 415] - 125000000*lambda_2[0, 420] - 10*lambda_2[0, 424] - 40*lambda_2[0, 425] - 400*lambda_2[0, 427] - 400*lambda_2[0, 428] - 40*lambda_2[0, 429] - 400*lambda_2[0, 431] - 400*lambda_2[0, 432] - 1600*lambda_2[0, 434] - 1600*lambda_2[0, 435] - 16000*lambda_2[0, 438] - 500*lambda_2[0, 439] - 5000*lambda_2[0, 441] - 5000*lambda_2[0, 442] - 20000*lambda_2[0, 444] - 20000*lambda_2[0, 445] - 200000*lambda_2[0, 448] - 20000*lambda_2[0, 450] - 20000*lambda_2[0, 451] - 200000*lambda_2[0, 454] - 800000*lambda_2[0, 457] - 500*lambda_2[0, 459] - 5000*lambda_2[0, 461] - 5000*lambda_2[0, 462] - 20000*lambda_2[0, 464] - 20000*lambda_2[0, 465] - 200000*lambda_2[0, 468] - 20000*lambda_2[0, 470] - 20000*lambda_2[0, 471] - 200000*lambda_2[0, 474] - 800000*lambda_2[0, 477] - 250000*lambda_2[0, 480] - 250000*lambda_2[0, 481] - 2500000*lambda_2[0, 484] - 10000000*lambda_2[0, 487] - 10000000*lambda_2[0, 491] <= -l*V[0, 3] - 2*V[0, 3]*t0[0, 2] - 2*V[0, 3] + V[0, 4]+ objc]
	constraints += [lambda_2[0, 33] + 2*lambda_2[0, 62] + 20*lambda_2[0, 64] + 3*lambda_2[0, 118] + 300*lambda_2[0, 120] + 40*lambda_2[0, 173] + lambda_2[0, 200] + 10*lambda_2[0, 202] + 40*lambda_2[0, 205] + 40*lambda_2[0, 211] + 500*lambda_2[0, 221] + 500*lambda_2[0, 236] + 2*lambda_2[0, 256] + lambda_2[0, 257] + 20*lambda_2[0, 258] + 20*lambda_2[0, 261] + 200*lambda_2[0, 263] + 100*lambda_2[0, 266] + 80*lambda_2[0, 270] + 800*lambda_2[0, 272] + 1600*lambda_2[0, 281] + 80*lambda_2[0, 288] + 800*lambda_2[0, 290] + 1600*lambda_2[0, 307] + 1000*lambda_2[0, 318] + 10000*lambda_2[0, 320] + 250000*lambda_2[0, 347] + 1000*lambda_2[0, 363] + 10000*lambda_2[0, 365] + 250000*lambda_2[0, 404] + 10*lambda_2[0, 424] + 40*lambda_2[0, 425] + 400*lambda_2[0, 427] + 40*lambda_2[0, 429] + 400*lambda_2[0, 431] + 1600*lambda_2[0, 434] + 500*lambda_2[0, 439] + 5000*lambda_2[0, 441] + 20000*lambda_2[0, 444] + 20000*lambda_2[0, 450] + 500*lambda_2[0, 459] + 5000*lambda_2[0, 461] + 20000*lambda_2[0, 464] + 20000*lambda_2[0, 470] + 250000*lambda_2[0, 480] >= -l*V[0, 26] - 2*V[0, 26]*t0[0, 2] - 2*V[0, 26] + V[0, 28]- objc]
	constraints += [lambda_2[0, 33] + 2*lambda_2[0, 62] + 20*lambda_2[0, 64] + 3*lambda_2[0, 118] + 300*lambda_2[0, 120] + 40*lambda_2[0, 173] + lambda_2[0, 200] + 10*lambda_2[0, 202] + 40*lambda_2[0, 205] + 40*lambda_2[0, 211] + 500*lambda_2[0, 221] + 500*lambda_2[0, 236] + 2*lambda_2[0, 256] + lambda_2[0, 257] + 20*lambda_2[0, 258] + 20*lambda_2[0, 261] + 200*lambda_2[0, 263] + 100*lambda_2[0, 266] + 80*lambda_2[0, 270] + 800*lambda_2[0, 272] + 1600*lambda_2[0, 281] + 80*lambda_2[0, 288] + 800*lambda_2[0, 290] + 1600*lambda_2[0, 307] + 1000*lambda_2[0, 318] + 10000*lambda_2[0, 320] + 250000*lambda_2[0, 347] + 1000*lambda_2[0, 363] + 10000*lambda_2[0, 365] + 250000*lambda_2[0, 404] + 10*lambda_2[0, 424] + 40*lambda_2[0, 425] + 400*lambda_2[0, 427] + 40*lambda_2[0, 429] + 400*lambda_2[0, 431] + 1600*lambda_2[0, 434] + 500*lambda_2[0, 439] + 5000*lambda_2[0, 441] + 20000*lambda_2[0, 444] + 20000*lambda_2[0, 450] + 500*lambda_2[0, 459] + 5000*lambda_2[0, 461] + 20000*lambda_2[0, 464] + 20000*lambda_2[0, 470] + 250000*lambda_2[0, 480] <= -l*V[0, 26] - 2*V[0, 26]*t0[0, 2] - 2*V[0, 26] + V[0, 28]+ objc]
	constraints += [-lambda_2[0, 62] - 3*lambda_2[0, 118] - 20*lambda_2[0, 173] - lambda_2[0, 256] - 10*lambda_2[0, 261] - 40*lambda_2[0, 270] - 40*lambda_2[0, 288] - 500*lambda_2[0, 318] - 500*lambda_2[0, 363] >= -l*V[0, 55] - 2*V[0, 55]*t0[0, 2] - 2*V[0, 55] + V[0, 59]- objc]
	constraints += [-lambda_2[0, 62] - 3*lambda_2[0, 118] - 20*lambda_2[0, 173] - lambda_2[0, 256] - 10*lambda_2[0, 261] - 40*lambda_2[0, 270] - 40*lambda_2[0, 288] - 500*lambda_2[0, 318] - 500*lambda_2[0, 363] <= -l*V[0, 55] - 2*V[0, 55]*t0[0, 2] - 2*V[0, 55] + V[0, 59]+ objc]
	constraints += [lambda_2[0, 118] == 0]
	constraints += [lambda_2[0, 34] + 2*lambda_2[0, 63] + 20*lambda_2[0, 65] + 3*lambda_2[0, 119] + 300*lambda_2[0, 121] + 40*lambda_2[0, 174] + lambda_2[0, 200] + 10*lambda_2[0, 203] + 40*lambda_2[0, 206] + 40*lambda_2[0, 212] + 500*lambda_2[0, 222] + 500*lambda_2[0, 237] + lambda_2[0, 256] + 2*lambda_2[0, 257] + 20*lambda_2[0, 258] + 20*lambda_2[0, 262] + 200*lambda_2[0, 264] + 100*lambda_2[0, 267] + 80*lambda_2[0, 271] + 800*lambda_2[0, 273] + 1600*lambda_2[0, 282] + 80*lambda_2[0, 289] + 800*lambda_2[0, 291] + 1600*lambda_2[0, 308] + 1000*lambda_2[0, 319] + 10000*lambda_2[0, 321] + 250000*lambda_2[0, 348] + 1000*lambda_2[0, 364] + 10000*lambda_2[0, 366] + 250000*lambda_2[0, 405] + 10*lambda_2[0, 424] + 40*lambda_2[0, 425] + 400*lambda_2[0, 428] + 40*lambda_2[0, 429] + 400*lambda_2[0, 432] + 1600*lambda_2[0, 435] + 500*lambda_2[0, 439] + 5000*lambda_2[0, 442] + 20000*lambda_2[0, 445] + 20000*lambda_2[0, 451] + 500*lambda_2[0, 459] + 5000*lambda_2[0, 462] + 20000*lambda_2[0, 465] + 20000*lambda_2[0, 471] + 250000*lambda_2[0, 481] >= -l*V[0, 27] - 2*V[0, 27]*t0[0, 2] - 2*V[0, 27] + V[0, 29] - 25*V[0, 37]- objc]
	constraints += [lambda_2[0, 34] + 2*lambda_2[0, 63] + 20*lambda_2[0, 65] + 3*lambda_2[0, 119] + 300*lambda_2[0, 121] + 40*lambda_2[0, 174] + lambda_2[0, 200] + 10*lambda_2[0, 203] + 40*lambda_2[0, 206] + 40*lambda_2[0, 212] + 500*lambda_2[0, 222] + 500*lambda_2[0, 237] + lambda_2[0, 256] + 2*lambda_2[0, 257] + 20*lambda_2[0, 258] + 20*lambda_2[0, 262] + 200*lambda_2[0, 264] + 100*lambda_2[0, 267] + 80*lambda_2[0, 271] + 800*lambda_2[0, 273] + 1600*lambda_2[0, 282] + 80*lambda_2[0, 289] + 800*lambda_2[0, 291] + 1600*lambda_2[0, 308] + 1000*lambda_2[0, 319] + 10000*lambda_2[0, 321] + 250000*lambda_2[0, 348] + 1000*lambda_2[0, 364] + 10000*lambda_2[0, 366] + 250000*lambda_2[0, 405] + 10*lambda_2[0, 424] + 40*lambda_2[0, 425] + 400*lambda_2[0, 428] + 40*lambda_2[0, 429] + 400*lambda_2[0, 432] + 1600*lambda_2[0, 435] + 500*lambda_2[0, 439] + 5000*lambda_2[0, 442] + 20000*lambda_2[0, 445] + 20000*lambda_2[0, 451] + 500*lambda_2[0, 459] + 5000*lambda_2[0, 462] + 20000*lambda_2[0, 465] + 20000*lambda_2[0, 471] + 250000*lambda_2[0, 481] <= -l*V[0, 27] - 2*V[0, 27]*t0[0, 2] - 2*V[0, 27] + V[0, 29] - 25*V[0, 37]+ objc]
	constraints += [-lambda_2[0, 200] - 2*lambda_2[0, 256] - 2*lambda_2[0, 257] - 20*lambda_2[0, 258] - 10*lambda_2[0, 424] - 40*lambda_2[0, 425] - 40*lambda_2[0, 429] - 500*lambda_2[0, 439] - 500*lambda_2[0, 459] >= -l*V[0, 109] - 2*V[0, 109]*t0[0, 2] - 2*V[0, 109] + V[0, 110] - 25*V[0, 120]- objc]
	constraints += [-lambda_2[0, 200] - 2*lambda_2[0, 256] - 2*lambda_2[0, 257] - 20*lambda_2[0, 258] - 10*lambda_2[0, 424] - 40*lambda_2[0, 425] - 40*lambda_2[0, 429] - 500*lambda_2[0, 439] - 500*lambda_2[0, 459] <= -l*V[0, 109] - 2*V[0, 109]*t0[0, 2] - 2*V[0, 109] + V[0, 110] - 25*V[0, 120]+ objc]
	constraints += [lambda_2[0, 256] == 0]
	constraints += [-lambda_2[0, 63] - 3*lambda_2[0, 119] - 20*lambda_2[0, 174] - lambda_2[0, 257] - 10*lambda_2[0, 262] - 40*lambda_2[0, 271] - 40*lambda_2[0, 289] - 500*lambda_2[0, 319] - 500*lambda_2[0, 364] >= -l*V[0, 56] - 2*V[0, 56]*t0[0, 2] - 2*V[0, 56] + V[0, 60] - 25*V[0, 121]- objc]
	constraints += [-lambda_2[0, 63] - 3*lambda_2[0, 119] - 20*lambda_2[0, 174] - lambda_2[0, 257] - 10*lambda_2[0, 262] - 40*lambda_2[0, 271] - 40*lambda_2[0, 289] - 500*lambda_2[0, 319] - 500*lambda_2[0, 364] <= -l*V[0, 56] - 2*V[0, 56]*t0[0, 2] - 2*V[0, 56] + V[0, 60] - 25*V[0, 121]+ objc]
	constraints += [lambda_2[0, 257] == 0]
	constraints += [lambda_2[0, 119] == 0]
	constraints += [lambda_2[0, 10] + 30*lambda_2[0, 18] + 600*lambda_2[0, 26] + lambda_2[0, 64] + lambda_2[0, 65] + 10*lambda_2[0, 68] + 40*lambda_2[0, 74] + 40*lambda_2[0, 82] + 500*lambda_2[0, 92] + 500*lambda_2[0, 104] + 30*lambda_2[0, 120] + 30*lambda_2[0, 121] + 300*lambda_2[0, 124] + 1200*lambda_2[0, 130] + 1200*lambda_2[0, 138] + 15000*lambda_2[0, 148] + 15000*lambda_2[0, 160] + lambda_2[0, 173] + lambda_2[0, 174] + 100*lambda_2[0, 177] + 1600*lambda_2[0, 180] + 1600*lambda_2[0, 184] + 250000*lambda_2[0, 189] + 250000*lambda_2[0, 195] + lambda_2[0, 258] + 10*lambda_2[0, 263] + 10*lambda_2[0, 264] + 40*lambda_2[0, 272] + 40*lambda_2[0, 273] + 400*lambda_2[0, 276] + 40*lambda_2[0, 290] + 40*lambda_2[0, 291] + 400*lambda_2[0, 294] + 1600*lambda_2[0, 300] + 500*lambda_2[0, 320] + 500*lambda_2[0, 321] + 5000*lambda_2[0, 324] + 20000*lambda_2[0, 330] + 20000*lambda_2[0, 338] + 500*lambda_2[0, 365] + 500*lambda_2[0, 366] + 5000*lambda_2[0, 369] + 20000*lambda_2[0, 375] + 20000*lambda_2[0, 383] + 250000*lambda_2[0, 393] >= -l*V[0, 11] - 4*V[0, 11]*t0[0, 2] - 4*V[0, 11] + V[0, 30] - 0.001- objc]
	constraints += [lambda_2[0, 10] + 30*lambda_2[0, 18] + 600*lambda_2[0, 26] + lambda_2[0, 64] + lambda_2[0, 65] + 10*lambda_2[0, 68] + 40*lambda_2[0, 74] + 40*lambda_2[0, 82] + 500*lambda_2[0, 92] + 500*lambda_2[0, 104] + 30*lambda_2[0, 120] + 30*lambda_2[0, 121] + 300*lambda_2[0, 124] + 1200*lambda_2[0, 130] + 1200*lambda_2[0, 138] + 15000*lambda_2[0, 148] + 15000*lambda_2[0, 160] + lambda_2[0, 173] + lambda_2[0, 174] + 100*lambda_2[0, 177] + 1600*lambda_2[0, 180] + 1600*lambda_2[0, 184] + 250000*lambda_2[0, 189] + 250000*lambda_2[0, 195] + lambda_2[0, 258] + 10*lambda_2[0, 263] + 10*lambda_2[0, 264] + 40*lambda_2[0, 272] + 40*lambda_2[0, 273] + 400*lambda_2[0, 276] + 40*lambda_2[0, 290] + 40*lambda_2[0, 291] + 400*lambda_2[0, 294] + 1600*lambda_2[0, 300] + 500*lambda_2[0, 320] + 500*lambda_2[0, 321] + 5000*lambda_2[0, 324] + 20000*lambda_2[0, 330] + 20000*lambda_2[0, 338] + 500*lambda_2[0, 365] + 500*lambda_2[0, 366] + 5000*lambda_2[0, 369] + 20000*lambda_2[0, 375] + 20000*lambda_2[0, 383] + 250000*lambda_2[0, 393] <= -l*V[0, 11] - 4*V[0, 11]*t0[0, 2] - 4*V[0, 11] + V[0, 30] - 0.001+ objc]
	constraints += [-lambda_2[0, 64] - 30*lambda_2[0, 120] - 2*lambda_2[0, 173] - lambda_2[0, 258] - 10*lambda_2[0, 263] - 40*lambda_2[0, 272] - 40*lambda_2[0, 290] - 500*lambda_2[0, 320] - 500*lambda_2[0, 365] >= -l*V[0, 57] - 4*V[0, 57]*t0[0, 2] - 4*V[0, 57] + V[0, 111]- objc]
	constraints += [-lambda_2[0, 64] - 30*lambda_2[0, 120] - 2*lambda_2[0, 173] - lambda_2[0, 258] - 10*lambda_2[0, 263] - 40*lambda_2[0, 272] - 40*lambda_2[0, 290] - 500*lambda_2[0, 320] - 500*lambda_2[0, 365] <= -l*V[0, 57] - 4*V[0, 57]*t0[0, 2] - 4*V[0, 57] + V[0, 111]+ objc]
	constraints += [lambda_2[0, 173] == 0]
	constraints += [-lambda_2[0, 65] - 30*lambda_2[0, 121] - 2*lambda_2[0, 174] - lambda_2[0, 258] - 10*lambda_2[0, 264] - 40*lambda_2[0, 273] - 40*lambda_2[0, 291] - 500*lambda_2[0, 321] - 500*lambda_2[0, 366] >= -l*V[0, 58] - 4*V[0, 58]*t0[0, 2] - 4*V[0, 58] - 25*V[0, 75] + V[0, 112]- objc]
	constraints += [-lambda_2[0, 65] - 30*lambda_2[0, 121] - 2*lambda_2[0, 174] - lambda_2[0, 258] - 10*lambda_2[0, 264] - 40*lambda_2[0, 273] - 40*lambda_2[0, 291] - 500*lambda_2[0, 321] - 500*lambda_2[0, 366] <= -l*V[0, 58] - 4*V[0, 58]*t0[0, 2] - 4*V[0, 58] - 25*V[0, 75] + V[0, 112]+ objc]
	constraints += [lambda_2[0, 258] == 0]
	constraints += [lambda_2[0, 174] == 0]
	constraints += [-lambda_2[0, 18] - 40*lambda_2[0, 26] - lambda_2[0, 120] - lambda_2[0, 121] - 10*lambda_2[0, 124] - 40*lambda_2[0, 130] - 40*lambda_2[0, 138] - 500*lambda_2[0, 148] - 500*lambda_2[0, 160] >= -l*V[0, 19] - 6*V[0, 19]*t0[0, 2] - 6*V[0, 19] + V[0, 61]- objc]
	constraints += [-lambda_2[0, 18] - 40*lambda_2[0, 26] - lambda_2[0, 120] - lambda_2[0, 121] - 10*lambda_2[0, 124] - 40*lambda_2[0, 130] - 40*lambda_2[0, 138] - 500*lambda_2[0, 148] - 500*lambda_2[0, 160] <= -l*V[0, 19] - 6*V[0, 19]*t0[0, 2] - 6*V[0, 19] + V[0, 61]+ objc]
	constraints += [lambda_2[0, 120] == 0]
	constraints += [lambda_2[0, 121] == 0]
	constraints += [lambda_2[0, 26] == 0]
	constraints += [-lambda_2[0, 4] - 80*lambda_2[0, 12] - 4800*lambda_2[0, 20] - 256000*lambda_2[0, 28] - lambda_2[0, 38] - lambda_2[0, 39] - 10*lambda_2[0, 40] - 10*lambda_2[0, 41] - 40*lambda_2[0, 46] - 500*lambda_2[0, 51] - 500*lambda_2[0, 57] - lambda_2[0, 72] - lambda_2[0, 73] - 100*lambda_2[0, 74] - 100*lambda_2[0, 75] - 80*lambda_2[0, 76] - 80*lambda_2[0, 77] - 800*lambda_2[0, 78] - 800*lambda_2[0, 79] - 3200*lambda_2[0, 84] - 1600*lambda_2[0, 89] - 40000*lambda_2[0, 94] - 250000*lambda_2[0, 100] - 40000*lambda_2[0, 106] - 250000*lambda_2[0, 113] - lambda_2[0, 128] - lambda_2[0, 129] - 1000*lambda_2[0, 130] - 1000*lambda_2[0, 131] - 4800*lambda_2[0, 132] - 4800*lambda_2[0, 133] - 48000*lambda_2[0, 134] - 48000*lambda_2[0, 135] - 192000*lambda_2[0, 140] - 64000*lambda_2[0, 145] - 2400000*lambda_2[0, 150] - 125000000*lambda_2[0, 156] - 2400000*lambda_2[0, 162] - 125000000*lambda_2[0, 169] - 80*lambda_2[0, 178] - 80*lambda_2[0, 179] - 8000*lambda_2[0, 180] - 8000*lambda_2[0, 181] - 128000*lambda_2[0, 186] - 20000000*lambda_2[0, 191] - 20000000*lambda_2[0, 197] - lambda_2[0, 204] - 10*lambda_2[0, 205] - 10*lambda_2[0, 206] - 10*lambda_2[0, 207] - 10*lambda_2[0, 208] - 100*lambda_2[0, 209] - 40*lambda_2[0, 216] - 40*lambda_2[0, 217] - 400*lambda_2[0, 218] - 400*lambda_2[0, 219] - 500*lambda_2[0, 226] - 500*lambda_2[0, 227] - 5000*lambda_2[0, 228] - 5000*lambda_2[0, 229] - 20000*lambda_2[0, 234] - 500*lambda_2[0, 241] - 500*lambda_2[0, 242] - 5000*lambda_2[0, 243] - 5000*lambda_2[0, 244] - 20000*lambda_2[0, 249] - 250000*lambda_2[0, 254] - lambda_2[0, 268] - lambda_2[0, 269] - 10*lambda_2[0, 270] - 10*lambda_2[0, 271] - 100*lambda_2[0, 272] - 100*lambda_2[0, 273] - 10*lambda_2[0, 274] - 10*lambda_2[0, 275] - 1000*lambda_2[0, 276] - 100*lambda_2[0, 277] - 100*lambda_2[0, 278] - 1000*lambda_2[0, 279] - 80*lambda_2[0, 280] - 800*lambda_2[0, 281] - 800*lambda_2[0, 282] - 800*lambda_2[0, 283] - 800*lambda_2[0, 284] - 8000*lambda_2[0, 285] - 40*lambda_2[0, 298] - 40*lambda_2[0, 299] - 4000*lambda_2[0, 300] - 4000*lambda_2[0, 301] - 3200*lambda_2[0, 302] - 3200*lambda_2[0, 303] - 32000*lambda_2[0, 304] - 32000*lambda_2[0, 305] - 1600*lambda_2[0, 312] - 1600*lambda_2[0, 313] - 16000*lambda_2[0, 314] - 16000*lambda_2[0, 315] - 500*lambda_2[0, 328] - 500*lambda_2[0, 329] - 50000*lambda_2[0, 330] - 50000*lambda_2[0, 331] - 40000*lambda_2[0, 332] - 40000*lambda_2[0, 333] - 400000*lambda_2[0, 334] - 400000*lambda_2[0, 335] - 1600000*lambda_2[0, 340] - 800000*lambda_2[0, 345] - 250000*lambda_2[0, 352] - 250000*lambda_2[0, 353] - 2500000*lambda_2[0, 354] - 2500000*lambda_2[0, 355] - 10000000*lambda_2[0, 360] - 500*lambda_2[0, 373] - 500*lambda_2[0, 374] - 50000*lambda_2[0, 375] - 50000*lambda_2[0, 376] - 40000*lambda_2[0, 377] - 40000*lambda_2[0, 378] - 400000*lambda_2[0, 379] - 400000*lambda_2[0, 380] - 1600000*lambda_2[0, 385] - 800000*lambda_2[0, 390] - 20000000*lambda_2[0, 395] - 125000000*lambda_2[0, 401] - 250000*lambda_2[0, 409] - 250000*lambda_2[0, 410] - 2500000*lambda_2[0, 411] - 2500000*lambda_2[0, 412] - 10000000*lambda_2[0, 417] - 125000000*lambda_2[0, 422] - 10*lambda_2[0, 425] - 10*lambda_2[0, 426] - 100*lambda_2[0, 427] - 100*lambda_2[0, 428] - 40*lambda_2[0, 433] - 400*lambda_2[0, 434] - 400*lambda_2[0, 435] - 400*lambda_2[0, 436] - 400*lambda_2[0, 437] - 4000*lambda_2[0, 438] - 500*lambda_2[0, 443] - 5000*lambda_2[0, 444] - 5000*lambda_2[0, 445] - 5000*lambda_2[0, 446] - 5000*lambda_2[0, 447] - 50000*lambda_2[0, 448] - 20000*lambda_2[0, 455] - 20000*lambda_2[0, 456] - 200000*lambda_2[0, 457] - 200000*lambda_2[0, 458] - 500*lambda_2[0, 463] - 5000*lambda_2[0, 464] - 5000*lambda_2[0, 465] - 5000*lambda_2[0, 466] - 5000*lambda_2[0, 467] - 50000*lambda_2[0, 468] - 20000*lambda_2[0, 475] - 20000*lambda_2[0, 476] - 200000*lambda_2[0, 477] - 200000*lambda_2[0, 478] - 250000*lambda_2[0, 485] - 250000*lambda_2[0, 486] - 2500000*lambda_2[0, 487] - 2500000*lambda_2[0, 488] - 10000000*lambda_2[0, 493] >= -l*V[0, 4] - 2.8*V[0, 3]*t0[0, 0] - 2*V[0, 3]*t0[0, 1] + V[0, 5]- objc]
	constraints += [-lambda_2[0, 4] - 80*lambda_2[0, 12] - 4800*lambda_2[0, 20] - 256000*lambda_2[0, 28] - lambda_2[0, 38] - lambda_2[0, 39] - 10*lambda_2[0, 40] - 10*lambda_2[0, 41] - 40*lambda_2[0, 46] - 500*lambda_2[0, 51] - 500*lambda_2[0, 57] - lambda_2[0, 72] - lambda_2[0, 73] - 100*lambda_2[0, 74] - 100*lambda_2[0, 75] - 80*lambda_2[0, 76] - 80*lambda_2[0, 77] - 800*lambda_2[0, 78] - 800*lambda_2[0, 79] - 3200*lambda_2[0, 84] - 1600*lambda_2[0, 89] - 40000*lambda_2[0, 94] - 250000*lambda_2[0, 100] - 40000*lambda_2[0, 106] - 250000*lambda_2[0, 113] - lambda_2[0, 128] - lambda_2[0, 129] - 1000*lambda_2[0, 130] - 1000*lambda_2[0, 131] - 4800*lambda_2[0, 132] - 4800*lambda_2[0, 133] - 48000*lambda_2[0, 134] - 48000*lambda_2[0, 135] - 192000*lambda_2[0, 140] - 64000*lambda_2[0, 145] - 2400000*lambda_2[0, 150] - 125000000*lambda_2[0, 156] - 2400000*lambda_2[0, 162] - 125000000*lambda_2[0, 169] - 80*lambda_2[0, 178] - 80*lambda_2[0, 179] - 8000*lambda_2[0, 180] - 8000*lambda_2[0, 181] - 128000*lambda_2[0, 186] - 20000000*lambda_2[0, 191] - 20000000*lambda_2[0, 197] - lambda_2[0, 204] - 10*lambda_2[0, 205] - 10*lambda_2[0, 206] - 10*lambda_2[0, 207] - 10*lambda_2[0, 208] - 100*lambda_2[0, 209] - 40*lambda_2[0, 216] - 40*lambda_2[0, 217] - 400*lambda_2[0, 218] - 400*lambda_2[0, 219] - 500*lambda_2[0, 226] - 500*lambda_2[0, 227] - 5000*lambda_2[0, 228] - 5000*lambda_2[0, 229] - 20000*lambda_2[0, 234] - 500*lambda_2[0, 241] - 500*lambda_2[0, 242] - 5000*lambda_2[0, 243] - 5000*lambda_2[0, 244] - 20000*lambda_2[0, 249] - 250000*lambda_2[0, 254] - lambda_2[0, 268] - lambda_2[0, 269] - 10*lambda_2[0, 270] - 10*lambda_2[0, 271] - 100*lambda_2[0, 272] - 100*lambda_2[0, 273] - 10*lambda_2[0, 274] - 10*lambda_2[0, 275] - 1000*lambda_2[0, 276] - 100*lambda_2[0, 277] - 100*lambda_2[0, 278] - 1000*lambda_2[0, 279] - 80*lambda_2[0, 280] - 800*lambda_2[0, 281] - 800*lambda_2[0, 282] - 800*lambda_2[0, 283] - 800*lambda_2[0, 284] - 8000*lambda_2[0, 285] - 40*lambda_2[0, 298] - 40*lambda_2[0, 299] - 4000*lambda_2[0, 300] - 4000*lambda_2[0, 301] - 3200*lambda_2[0, 302] - 3200*lambda_2[0, 303] - 32000*lambda_2[0, 304] - 32000*lambda_2[0, 305] - 1600*lambda_2[0, 312] - 1600*lambda_2[0, 313] - 16000*lambda_2[0, 314] - 16000*lambda_2[0, 315] - 500*lambda_2[0, 328] - 500*lambda_2[0, 329] - 50000*lambda_2[0, 330] - 50000*lambda_2[0, 331] - 40000*lambda_2[0, 332] - 40000*lambda_2[0, 333] - 400000*lambda_2[0, 334] - 400000*lambda_2[0, 335] - 1600000*lambda_2[0, 340] - 800000*lambda_2[0, 345] - 250000*lambda_2[0, 352] - 250000*lambda_2[0, 353] - 2500000*lambda_2[0, 354] - 2500000*lambda_2[0, 355] - 10000000*lambda_2[0, 360] - 500*lambda_2[0, 373] - 500*lambda_2[0, 374] - 50000*lambda_2[0, 375] - 50000*lambda_2[0, 376] - 40000*lambda_2[0, 377] - 40000*lambda_2[0, 378] - 400000*lambda_2[0, 379] - 400000*lambda_2[0, 380] - 1600000*lambda_2[0, 385] - 800000*lambda_2[0, 390] - 20000000*lambda_2[0, 395] - 125000000*lambda_2[0, 401] - 250000*lambda_2[0, 409] - 250000*lambda_2[0, 410] - 2500000*lambda_2[0, 411] - 2500000*lambda_2[0, 412] - 10000000*lambda_2[0, 417] - 125000000*lambda_2[0, 422] - 10*lambda_2[0, 425] - 10*lambda_2[0, 426] - 100*lambda_2[0, 427] - 100*lambda_2[0, 428] - 40*lambda_2[0, 433] - 400*lambda_2[0, 434] - 400*lambda_2[0, 435] - 400*lambda_2[0, 436] - 400*lambda_2[0, 437] - 4000*lambda_2[0, 438] - 500*lambda_2[0, 443] - 5000*lambda_2[0, 444] - 5000*lambda_2[0, 445] - 5000*lambda_2[0, 446] - 5000*lambda_2[0, 447] - 50000*lambda_2[0, 448] - 20000*lambda_2[0, 455] - 20000*lambda_2[0, 456] - 200000*lambda_2[0, 457] - 200000*lambda_2[0, 458] - 500*lambda_2[0, 463] - 5000*lambda_2[0, 464] - 5000*lambda_2[0, 465] - 5000*lambda_2[0, 466] - 5000*lambda_2[0, 467] - 50000*lambda_2[0, 468] - 20000*lambda_2[0, 475] - 20000*lambda_2[0, 476] - 200000*lambda_2[0, 477] - 200000*lambda_2[0, 478] - 250000*lambda_2[0, 485] - 250000*lambda_2[0, 486] - 2500000*lambda_2[0, 487] - 2500000*lambda_2[0, 488] - 10000000*lambda_2[0, 493] <= -l*V[0, 4] - 2.8*V[0, 3]*t0[0, 0] - 2*V[0, 3]*t0[0, 1] + V[0, 5]+ objc]
	constraints += [lambda_2[0, 38] + 2*lambda_2[0, 72] + 80*lambda_2[0, 76] + 3*lambda_2[0, 128] + 4800*lambda_2[0, 132] + 160*lambda_2[0, 178] + lambda_2[0, 204] + 10*lambda_2[0, 205] + 10*lambda_2[0, 207] + 40*lambda_2[0, 216] + 500*lambda_2[0, 226] + 500*lambda_2[0, 241] + 2*lambda_2[0, 268] + lambda_2[0, 269] + 20*lambda_2[0, 270] + 100*lambda_2[0, 272] + 20*lambda_2[0, 274] + 100*lambda_2[0, 277] + 80*lambda_2[0, 280] + 800*lambda_2[0, 281] + 800*lambda_2[0, 283] + 80*lambda_2[0, 298] + 3200*lambda_2[0, 302] + 1600*lambda_2[0, 312] + 1000*lambda_2[0, 328] + 40000*lambda_2[0, 332] + 250000*lambda_2[0, 352] + 1000*lambda_2[0, 373] + 40000*lambda_2[0, 377] + 250000*lambda_2[0, 409] + 10*lambda_2[0, 425] + 10*lambda_2[0, 426] + 100*lambda_2[0, 427] + 40*lambda_2[0, 433] + 400*lambda_2[0, 434] + 400*lambda_2[0, 436] + 500*lambda_2[0, 443] + 5000*lambda_2[0, 444] + 5000*lambda_2[0, 446] + 20000*lambda_2[0, 455] + 500*lambda_2[0, 463] + 5000*lambda_2[0, 464] + 5000*lambda_2[0, 466] + 20000*lambda_2[0, 475] + 250000*lambda_2[0, 485] >= -l*V[0, 28] - 2.8*V[0, 26]*t0[0, 0] - 2*V[0, 26]*t0[0, 1] + V[0, 31]- objc]
	constraints += [lambda_2[0, 38] + 2*lambda_2[0, 72] + 80*lambda_2[0, 76] + 3*lambda_2[0, 128] + 4800*lambda_2[0, 132] + 160*lambda_2[0, 178] + lambda_2[0, 204] + 10*lambda_2[0, 205] + 10*lambda_2[0, 207] + 40*lambda_2[0, 216] + 500*lambda_2[0, 226] + 500*lambda_2[0, 241] + 2*lambda_2[0, 268] + lambda_2[0, 269] + 20*lambda_2[0, 270] + 100*lambda_2[0, 272] + 20*lambda_2[0, 274] + 100*lambda_2[0, 277] + 80*lambda_2[0, 280] + 800*lambda_2[0, 281] + 800*lambda_2[0, 283] + 80*lambda_2[0, 298] + 3200*lambda_2[0, 302] + 1600*lambda_2[0, 312] + 1000*lambda_2[0, 328] + 40000*lambda_2[0, 332] + 250000*lambda_2[0, 352] + 1000*lambda_2[0, 373] + 40000*lambda_2[0, 377] + 250000*lambda_2[0, 409] + 10*lambda_2[0, 425] + 10*lambda_2[0, 426] + 100*lambda_2[0, 427] + 40*lambda_2[0, 433] + 400*lambda_2[0, 434] + 400*lambda_2[0, 436] + 500*lambda_2[0, 443] + 5000*lambda_2[0, 444] + 5000*lambda_2[0, 446] + 20000*lambda_2[0, 455] + 500*lambda_2[0, 463] + 5000*lambda_2[0, 464] + 5000*lambda_2[0, 466] + 20000*lambda_2[0, 475] + 250000*lambda_2[0, 485] <= -l*V[0, 28] - 2.8*V[0, 26]*t0[0, 0] - 2*V[0, 26]*t0[0, 1] + V[0, 31]+ objc]
	constraints += [-lambda_2[0, 72] - 3*lambda_2[0, 128] - 80*lambda_2[0, 178] - lambda_2[0, 268] - 10*lambda_2[0, 270] - 10*lambda_2[0, 274] - 40*lambda_2[0, 298] - 500*lambda_2[0, 328] - 500*lambda_2[0, 373] >= -l*V[0, 59] - 2.8*V[0, 55]*t0[0, 0] - 2*V[0, 55]*t0[0, 1] + V[0, 65]- objc]
	constraints += [-lambda_2[0, 72] - 3*lambda_2[0, 128] - 80*lambda_2[0, 178] - lambda_2[0, 268] - 10*lambda_2[0, 270] - 10*lambda_2[0, 274] - 40*lambda_2[0, 298] - 500*lambda_2[0, 328] - 500*lambda_2[0, 373] <= -l*V[0, 59] - 2.8*V[0, 55]*t0[0, 0] - 2*V[0, 55]*t0[0, 1] + V[0, 65]+ objc]
	constraints += [lambda_2[0, 128] == 0]
	constraints += [lambda_2[0, 39] + 2*lambda_2[0, 73] + 80*lambda_2[0, 77] + 3*lambda_2[0, 129] + 4800*lambda_2[0, 133] + 160*lambda_2[0, 179] + lambda_2[0, 204] + 10*lambda_2[0, 206] + 10*lambda_2[0, 208] + 40*lambda_2[0, 217] + 500*lambda_2[0, 227] + 500*lambda_2[0, 242] + lambda_2[0, 268] + 2*lambda_2[0, 269] + 20*lambda_2[0, 271] + 100*lambda_2[0, 273] + 20*lambda_2[0, 275] + 100*lambda_2[0, 278] + 80*lambda_2[0, 280] + 800*lambda_2[0, 282] + 800*lambda_2[0, 284] + 80*lambda_2[0, 299] + 3200*lambda_2[0, 303] + 1600*lambda_2[0, 313] + 1000*lambda_2[0, 329] + 40000*lambda_2[0, 333] + 250000*lambda_2[0, 353] + 1000*lambda_2[0, 374] + 40000*lambda_2[0, 378] + 250000*lambda_2[0, 410] + 10*lambda_2[0, 425] + 10*lambda_2[0, 426] + 100*lambda_2[0, 428] + 40*lambda_2[0, 433] + 400*lambda_2[0, 435] + 400*lambda_2[0, 437] + 500*lambda_2[0, 443] + 5000*lambda_2[0, 445] + 5000*lambda_2[0, 447] + 20000*lambda_2[0, 456] + 500*lambda_2[0, 463] + 5000*lambda_2[0, 465] + 5000*lambda_2[0, 467] + 20000*lambda_2[0, 476] + 250000*lambda_2[0, 486] >= -l*V[0, 29] - 2.8*V[0, 27]*t0[0, 0] - 2*V[0, 27]*t0[0, 1] + V[0, 32] - 25*V[0, 38]- objc]
	constraints += [lambda_2[0, 39] + 2*lambda_2[0, 73] + 80*lambda_2[0, 77] + 3*lambda_2[0, 129] + 4800*lambda_2[0, 133] + 160*lambda_2[0, 179] + lambda_2[0, 204] + 10*lambda_2[0, 206] + 10*lambda_2[0, 208] + 40*lambda_2[0, 217] + 500*lambda_2[0, 227] + 500*lambda_2[0, 242] + lambda_2[0, 268] + 2*lambda_2[0, 269] + 20*lambda_2[0, 271] + 100*lambda_2[0, 273] + 20*lambda_2[0, 275] + 100*lambda_2[0, 278] + 80*lambda_2[0, 280] + 800*lambda_2[0, 282] + 800*lambda_2[0, 284] + 80*lambda_2[0, 299] + 3200*lambda_2[0, 303] + 1600*lambda_2[0, 313] + 1000*lambda_2[0, 329] + 40000*lambda_2[0, 333] + 250000*lambda_2[0, 353] + 1000*lambda_2[0, 374] + 40000*lambda_2[0, 378] + 250000*lambda_2[0, 410] + 10*lambda_2[0, 425] + 10*lambda_2[0, 426] + 100*lambda_2[0, 428] + 40*lambda_2[0, 433] + 400*lambda_2[0, 435] + 400*lambda_2[0, 437] + 500*lambda_2[0, 443] + 5000*lambda_2[0, 445] + 5000*lambda_2[0, 447] + 20000*lambda_2[0, 456] + 500*lambda_2[0, 463] + 5000*lambda_2[0, 465] + 5000*lambda_2[0, 467] + 20000*lambda_2[0, 476] + 250000*lambda_2[0, 486] <= -l*V[0, 29] - 2.8*V[0, 27]*t0[0, 0] - 2*V[0, 27]*t0[0, 1] + V[0, 32] - 25*V[0, 38]+ objc]
	constraints += [-lambda_2[0, 204] - 2*lambda_2[0, 268] - 2*lambda_2[0, 269] - 80*lambda_2[0, 280] - 10*lambda_2[0, 425] - 10*lambda_2[0, 426] - 40*lambda_2[0, 433] - 500*lambda_2[0, 443] - 500*lambda_2[0, 463] >= -l*V[0, 110] - 2.8*V[0, 109]*t0[0, 0] - 2*V[0, 109]*t0[0, 1] + V[0, 113] - 25*V[0, 122]- objc]
	constraints += [-lambda_2[0, 204] - 2*lambda_2[0, 268] - 2*lambda_2[0, 269] - 80*lambda_2[0, 280] - 10*lambda_2[0, 425] - 10*lambda_2[0, 426] - 40*lambda_2[0, 433] - 500*lambda_2[0, 443] - 500*lambda_2[0, 463] <= -l*V[0, 110] - 2.8*V[0, 109]*t0[0, 0] - 2*V[0, 109]*t0[0, 1] + V[0, 113] - 25*V[0, 122]+ objc]
	constraints += [lambda_2[0, 268] == 0]
	constraints += [-lambda_2[0, 73] - 3*lambda_2[0, 129] - 80*lambda_2[0, 179] - lambda_2[0, 269] - 10*lambda_2[0, 271] - 10*lambda_2[0, 275] - 40*lambda_2[0, 299] - 500*lambda_2[0, 329] - 500*lambda_2[0, 374] >= -l*V[0, 60] - 2.8*V[0, 56]*t0[0, 0] - 2*V[0, 56]*t0[0, 1] + V[0, 66] - 25*V[0, 123]- objc]
	constraints += [-lambda_2[0, 73] - 3*lambda_2[0, 129] - 80*lambda_2[0, 179] - lambda_2[0, 269] - 10*lambda_2[0, 271] - 10*lambda_2[0, 275] - 40*lambda_2[0, 299] - 500*lambda_2[0, 329] - 500*lambda_2[0, 374] <= -l*V[0, 60] - 2.8*V[0, 56]*t0[0, 0] - 2*V[0, 56]*t0[0, 1] + V[0, 66] - 25*V[0, 123]+ objc]
	constraints += [lambda_2[0, 269] == 0]
	constraints += [lambda_2[0, 129] == 0]
	constraints += [lambda_2[0, 40] + 20*lambda_2[0, 74] + 80*lambda_2[0, 78] + 300*lambda_2[0, 130] + 4800*lambda_2[0, 134] + 1600*lambda_2[0, 180] + lambda_2[0, 205] + lambda_2[0, 206] + 10*lambda_2[0, 209] + 40*lambda_2[0, 218] + 500*lambda_2[0, 228] + 500*lambda_2[0, 243] + lambda_2[0, 270] + lambda_2[0, 271] + 20*lambda_2[0, 272] + 20*lambda_2[0, 273] + 200*lambda_2[0, 276] + 100*lambda_2[0, 279] + 80*lambda_2[0, 281] + 80*lambda_2[0, 282] + 800*lambda_2[0, 285] + 800*lambda_2[0, 300] + 3200*lambda_2[0, 304] + 1600*lambda_2[0, 314] + 10000*lambda_2[0, 330] + 40000*lambda_2[0, 334] + 250000*lambda_2[0, 354] + 10000*lambda_2[0, 375] + 40000*lambda_2[0, 379] + 250000*lambda_2[0, 411] + lambda_2[0, 425] + 10*lambda_2[0, 427] + 10*lambda_2[0, 428] + 40*lambda_2[0, 434] + 40*lambda_2[0, 435] + 400*lambda_2[0, 438] + 500*lambda_2[0, 444] + 500*lambda_2[0, 445] + 5000*lambda_2[0, 448] + 20000*lambda_2[0, 457] + 500*lambda_2[0, 464] + 500*lambda_2[0, 465] + 5000*lambda_2[0, 468] + 20000*lambda_2[0, 477] + 250000*lambda_2[0, 487] >= -l*V[0, 30] - 5.6*V[0, 11]*t0[0, 0] - 4*V[0, 11]*t0[0, 1] + 2*V[0, 12] - 2*V[0, 30]*t0[0, 2] - 2*V[0, 30] + V[0, 33]- objc]
	constraints += [lambda_2[0, 40] + 20*lambda_2[0, 74] + 80*lambda_2[0, 78] + 300*lambda_2[0, 130] + 4800*lambda_2[0, 134] + 1600*lambda_2[0, 180] + lambda_2[0, 205] + lambda_2[0, 206] + 10*lambda_2[0, 209] + 40*lambda_2[0, 218] + 500*lambda_2[0, 228] + 500*lambda_2[0, 243] + lambda_2[0, 270] + lambda_2[0, 271] + 20*lambda_2[0, 272] + 20*lambda_2[0, 273] + 200*lambda_2[0, 276] + 100*lambda_2[0, 279] + 80*lambda_2[0, 281] + 80*lambda_2[0, 282] + 800*lambda_2[0, 285] + 800*lambda_2[0, 300] + 3200*lambda_2[0, 304] + 1600*lambda_2[0, 314] + 10000*lambda_2[0, 330] + 40000*lambda_2[0, 334] + 250000*lambda_2[0, 354] + 10000*lambda_2[0, 375] + 40000*lambda_2[0, 379] + 250000*lambda_2[0, 411] + lambda_2[0, 425] + 10*lambda_2[0, 427] + 10*lambda_2[0, 428] + 40*lambda_2[0, 434] + 40*lambda_2[0, 435] + 400*lambda_2[0, 438] + 500*lambda_2[0, 444] + 500*lambda_2[0, 445] + 5000*lambda_2[0, 448] + 20000*lambda_2[0, 457] + 500*lambda_2[0, 464] + 500*lambda_2[0, 465] + 5000*lambda_2[0, 468] + 20000*lambda_2[0, 477] + 250000*lambda_2[0, 487] <= -l*V[0, 30] - 5.6*V[0, 11]*t0[0, 0] - 4*V[0, 11]*t0[0, 1] + 2*V[0, 12] - 2*V[0, 30]*t0[0, 2] - 2*V[0, 30] + V[0, 33]+ objc]
	constraints += [-lambda_2[0, 205] - 2*lambda_2[0, 270] - 20*lambda_2[0, 272] - 80*lambda_2[0, 281] - lambda_2[0, 425] - 10*lambda_2[0, 427] - 40*lambda_2[0, 434] - 500*lambda_2[0, 444] - 500*lambda_2[0, 464] >= -l*V[0, 111] - 5.6*V[0, 57]*t0[0, 0] - 4*V[0, 57]*t0[0, 1] + 2*V[0, 62] - 2*V[0, 111]*t0[0, 2] - 2*V[0, 111] + V[0, 114]- objc]
	constraints += [-lambda_2[0, 205] - 2*lambda_2[0, 270] - 20*lambda_2[0, 272] - 80*lambda_2[0, 281] - lambda_2[0, 425] - 10*lambda_2[0, 427] - 40*lambda_2[0, 434] - 500*lambda_2[0, 444] - 500*lambda_2[0, 464] <= -l*V[0, 111] - 5.6*V[0, 57]*t0[0, 0] - 4*V[0, 57]*t0[0, 1] + 2*V[0, 62] - 2*V[0, 111]*t0[0, 2] - 2*V[0, 111] + V[0, 114]+ objc]
	constraints += [lambda_2[0, 270] == 0]
	constraints += [-lambda_2[0, 206] - 2*lambda_2[0, 271] - 20*lambda_2[0, 273] - 80*lambda_2[0, 282] - lambda_2[0, 425] - 10*lambda_2[0, 428] - 40*lambda_2[0, 435] - 500*lambda_2[0, 445] - 500*lambda_2[0, 465] >= -l*V[0, 112] - 5.6*V[0, 58]*t0[0, 0] - 4*V[0, 58]*t0[0, 1] + 2*V[0, 63] - 2*V[0, 112]*t0[0, 2] - 2*V[0, 112] + V[0, 115] - 25*V[0, 124]- objc]
	constraints += [-lambda_2[0, 206] - 2*lambda_2[0, 271] - 20*lambda_2[0, 273] - 80*lambda_2[0, 282] - lambda_2[0, 425] - 10*lambda_2[0, 428] - 40*lambda_2[0, 435] - 500*lambda_2[0, 445] - 500*lambda_2[0, 465] <= -l*V[0, 112] - 5.6*V[0, 58]*t0[0, 0] - 4*V[0, 58]*t0[0, 1] + 2*V[0, 63] - 2*V[0, 112]*t0[0, 2] - 2*V[0, 112] + V[0, 115] - 25*V[0, 124]+ objc]
	constraints += [lambda_2[0, 425] == 0]
	constraints += [lambda_2[0, 271] == 0]
	constraints += [-lambda_2[0, 74] - 30*lambda_2[0, 130] - 80*lambda_2[0, 180] - lambda_2[0, 272] - lambda_2[0, 273] - 10*lambda_2[0, 276] - 40*lambda_2[0, 300] - 500*lambda_2[0, 330] - 500*lambda_2[0, 375] >= -l*V[0, 61] - 8.4*V[0, 19]*t0[0, 0] - 6*V[0, 19]*t0[0, 1] - 4*V[0, 61]*t0[0, 2] - 4*V[0, 61] + 2*V[0, 64] + V[0, 67]- objc]
	constraints += [-lambda_2[0, 74] - 30*lambda_2[0, 130] - 80*lambda_2[0, 180] - lambda_2[0, 272] - lambda_2[0, 273] - 10*lambda_2[0, 276] - 40*lambda_2[0, 300] - 500*lambda_2[0, 330] - 500*lambda_2[0, 375] <= -l*V[0, 61] - 8.4*V[0, 19]*t0[0, 0] - 6*V[0, 19]*t0[0, 1] - 4*V[0, 61]*t0[0, 2] - 4*V[0, 61] + 2*V[0, 64] + V[0, 67]+ objc]
	constraints += [lambda_2[0, 272] == 0]
	constraints += [lambda_2[0, 273] == 0]
	constraints += [lambda_2[0, 130] == 0]
	constraints += [lambda_2[0, 12] + 120*lambda_2[0, 20] + 9600*lambda_2[0, 28] + lambda_2[0, 76] + lambda_2[0, 77] + 10*lambda_2[0, 78] + 10*lambda_2[0, 79] + 40*lambda_2[0, 84] + 500*lambda_2[0, 94] + 500*lambda_2[0, 106] + 120*lambda_2[0, 132] + 120*lambda_2[0, 133] + 1200*lambda_2[0, 134] + 1200*lambda_2[0, 135] + 4800*lambda_2[0, 140] + 60000*lambda_2[0, 150] + 60000*lambda_2[0, 162] + lambda_2[0, 178] + lambda_2[0, 179] + 100*lambda_2[0, 180] + 100*lambda_2[0, 181] + 1600*lambda_2[0, 186] + 250000*lambda_2[0, 191] + 250000*lambda_2[0, 197] + lambda_2[0, 280] + 10*lambda_2[0, 281] + 10*lambda_2[0, 282] + 10*lambda_2[0, 283] + 10*lambda_2[0, 284] + 100*lambda_2[0, 285] + 40*lambda_2[0, 302] + 40*lambda_2[0, 303] + 400*lambda_2[0, 304] + 400*lambda_2[0, 305] + 500*lambda_2[0, 332] + 500*lambda_2[0, 333] + 5000*lambda_2[0, 334] + 5000*lambda_2[0, 335] + 20000*lambda_2[0, 340] + 500*lambda_2[0, 377] + 500*lambda_2[0, 378] + 5000*lambda_2[0, 379] + 5000*lambda_2[0, 380] + 20000*lambda_2[0, 385] + 250000*lambda_2[0, 395] >= -l*V[0, 12] - 0.0001*V[0, 3] - 2.8*V[0, 30]*t0[0, 0] - 2*V[0, 30]*t0[0, 1] + V[0, 34] - 0.001- objc]
	constraints += [lambda_2[0, 12] + 120*lambda_2[0, 20] + 9600*lambda_2[0, 28] + lambda_2[0, 76] + lambda_2[0, 77] + 10*lambda_2[0, 78] + 10*lambda_2[0, 79] + 40*lambda_2[0, 84] + 500*lambda_2[0, 94] + 500*lambda_2[0, 106] + 120*lambda_2[0, 132] + 120*lambda_2[0, 133] + 1200*lambda_2[0, 134] + 1200*lambda_2[0, 135] + 4800*lambda_2[0, 140] + 60000*lambda_2[0, 150] + 60000*lambda_2[0, 162] + lambda_2[0, 178] + lambda_2[0, 179] + 100*lambda_2[0, 180] + 100*lambda_2[0, 181] + 1600*lambda_2[0, 186] + 250000*lambda_2[0, 191] + 250000*lambda_2[0, 197] + lambda_2[0, 280] + 10*lambda_2[0, 281] + 10*lambda_2[0, 282] + 10*lambda_2[0, 283] + 10*lambda_2[0, 284] + 100*lambda_2[0, 285] + 40*lambda_2[0, 302] + 40*lambda_2[0, 303] + 400*lambda_2[0, 304] + 400*lambda_2[0, 305] + 500*lambda_2[0, 332] + 500*lambda_2[0, 333] + 5000*lambda_2[0, 334] + 5000*lambda_2[0, 335] + 20000*lambda_2[0, 340] + 500*lambda_2[0, 377] + 500*lambda_2[0, 378] + 5000*lambda_2[0, 379] + 5000*lambda_2[0, 380] + 20000*lambda_2[0, 385] + 250000*lambda_2[0, 395] <= -l*V[0, 12] - 0.0001*V[0, 3] - 2.8*V[0, 30]*t0[0, 0] - 2*V[0, 30]*t0[0, 1] + V[0, 34] - 0.001+ objc]
	constraints += [-lambda_2[0, 76] - 120*lambda_2[0, 132] - 2*lambda_2[0, 178] - lambda_2[0, 280] - 10*lambda_2[0, 281] - 10*lambda_2[0, 283] - 40*lambda_2[0, 302] - 500*lambda_2[0, 332] - 500*lambda_2[0, 377] >= -l*V[0, 62] - 0.0001*V[0, 26] - 2.8*V[0, 111]*t0[0, 0] - 2*V[0, 111]*t0[0, 1] + V[0, 116]- objc]
	constraints += [-lambda_2[0, 76] - 120*lambda_2[0, 132] - 2*lambda_2[0, 178] - lambda_2[0, 280] - 10*lambda_2[0, 281] - 10*lambda_2[0, 283] - 40*lambda_2[0, 302] - 500*lambda_2[0, 332] - 500*lambda_2[0, 377] <= -l*V[0, 62] - 0.0001*V[0, 26] - 2.8*V[0, 111]*t0[0, 0] - 2*V[0, 111]*t0[0, 1] + V[0, 116]+ objc]
	constraints += [lambda_2[0, 178] >= -0.0001*V[0, 55]- objc]
	constraints += [lambda_2[0, 178] <= -0.0001*V[0, 55]+ objc]
	constraints += [-lambda_2[0, 77] - 120*lambda_2[0, 133] - 2*lambda_2[0, 179] - lambda_2[0, 280] - 10*lambda_2[0, 282] - 10*lambda_2[0, 284] - 40*lambda_2[0, 303] - 500*lambda_2[0, 333] - 500*lambda_2[0, 378] >= -l*V[0, 63] - 0.0001*V[0, 27] - 25*V[0, 76] - 2.8*V[0, 112]*t0[0, 0] - 2*V[0, 112]*t0[0, 1] + V[0, 117]- objc]
	constraints += [-lambda_2[0, 77] - 120*lambda_2[0, 133] - 2*lambda_2[0, 179] - lambda_2[0, 280] - 10*lambda_2[0, 282] - 10*lambda_2[0, 284] - 40*lambda_2[0, 303] - 500*lambda_2[0, 333] - 500*lambda_2[0, 378] <= -l*V[0, 63] - 0.0001*V[0, 27] - 25*V[0, 76] - 2.8*V[0, 112]*t0[0, 0] - 2*V[0, 112]*t0[0, 1] + V[0, 117]+ objc]
	constraints += [lambda_2[0, 280] >= -0.0001*V[0, 109]- objc]
	constraints += [lambda_2[0, 280] <= -0.0001*V[0, 109]+ objc]
	constraints += [lambda_2[0, 179] >= -0.0001*V[0, 56]- objc]
	constraints += [lambda_2[0, 179] <= -0.0001*V[0, 56]+ objc]
	constraints += [-lambda_2[0, 78] - 120*lambda_2[0, 134] - 20*lambda_2[0, 180] - lambda_2[0, 281] - lambda_2[0, 282] - 10*lambda_2[0, 285] - 40*lambda_2[0, 304] - 500*lambda_2[0, 334] - 500*lambda_2[0, 379] >= -l*V[0, 64] - 0.0002*V[0, 11] + 3*V[0, 20] - 5.6*V[0, 61]*t0[0, 0] - 4*V[0, 61]*t0[0, 1] - 2*V[0, 64]*t0[0, 2] - 2*V[0, 64] + V[0, 118]- objc]
	constraints += [-lambda_2[0, 78] - 120*lambda_2[0, 134] - 20*lambda_2[0, 180] - lambda_2[0, 281] - lambda_2[0, 282] - 10*lambda_2[0, 285] - 40*lambda_2[0, 304] - 500*lambda_2[0, 334] - 500*lambda_2[0, 379] <= -l*V[0, 64] - 0.0002*V[0, 11] + 3*V[0, 20] - 5.6*V[0, 61]*t0[0, 0] - 4*V[0, 61]*t0[0, 1] - 2*V[0, 64]*t0[0, 2] - 2*V[0, 64] + V[0, 118]+ objc]
	constraints += [lambda_2[0, 281] >= -0.0002*V[0, 57]- objc]
	constraints += [lambda_2[0, 281] <= -0.0002*V[0, 57]+ objc]
	constraints += [lambda_2[0, 282] >= -0.0002*V[0, 58]- objc]
	constraints += [lambda_2[0, 282] <= -0.0002*V[0, 58]+ objc]
	constraints += [lambda_2[0, 180] >= -0.0003*V[0, 19]- objc]
	constraints += [lambda_2[0, 180] <= -0.0003*V[0, 19]+ objc]
	constraints += [-lambda_2[0, 20] - 160*lambda_2[0, 28] - lambda_2[0, 132] - lambda_2[0, 133] - 10*lambda_2[0, 134] - 10*lambda_2[0, 135] - 40*lambda_2[0, 140] - 500*lambda_2[0, 150] - 500*lambda_2[0, 162] >= -l*V[0, 20] - 0.0001*V[0, 30] - 2.8*V[0, 64]*t0[0, 0] - 2*V[0, 64]*t0[0, 1] + V[0, 68]- objc]
	constraints += [-lambda_2[0, 20] - 160*lambda_2[0, 28] - lambda_2[0, 132] - lambda_2[0, 133] - 10*lambda_2[0, 134] - 10*lambda_2[0, 135] - 40*lambda_2[0, 140] - 500*lambda_2[0, 150] - 500*lambda_2[0, 162] <= -l*V[0, 20] - 0.0001*V[0, 30] - 2.8*V[0, 64]*t0[0, 0] - 2*V[0, 64]*t0[0, 1] + V[0, 68]+ objc]
	constraints += [lambda_2[0, 132] >= -0.0001*V[0, 111]- objc]
	constraints += [lambda_2[0, 132] <= -0.0001*V[0, 111]+ objc]
	constraints += [lambda_2[0, 133] >= -0.0001*V[0, 112]- objc]
	constraints += [lambda_2[0, 133] <= -0.0001*V[0, 112]+ objc]
	constraints += [lambda_2[0, 134] >= -0.0002*V[0, 61]- objc]
	constraints += [lambda_2[0, 134] <= -0.0002*V[0, 61]+ objc]
	constraints += [lambda_2[0, 28] >= -0.0001*V[0, 64]- objc]
	constraints += [lambda_2[0, 28] <= -0.0001*V[0, 64]+ objc]
	constraints += [-lambda_2[0, 6] - 1000*lambda_2[0, 14] - 750000*lambda_2[0, 22] - 500000000*lambda_2[0, 30] - lambda_2[0, 47] - lambda_2[0, 48] - 10*lambda_2[0, 49] - 10*lambda_2[0, 50] - 40*lambda_2[0, 51] - 40*lambda_2[0, 52] - 500*lambda_2[0, 59] - lambda_2[0, 90] - lambda_2[0, 91] - 100*lambda_2[0, 92] - 100*lambda_2[0, 93] - 1600*lambda_2[0, 94] - 1600*lambda_2[0, 95] - 1000*lambda_2[0, 96] - 1000*lambda_2[0, 97] - 10000*lambda_2[0, 98] - 10000*lambda_2[0, 99] - 40000*lambda_2[0, 100] - 40000*lambda_2[0, 101] - 500000*lambda_2[0, 108] - 250000*lambda_2[0, 115] - lambda_2[0, 146] - lambda_2[0, 147] - 1000*lambda_2[0, 148] - 1000*lambda_2[0, 149] - 64000*lambda_2[0, 150] - 64000*lambda_2[0, 151] - 750000*lambda_2[0, 152] - 750000*lambda_2[0, 153] - 7500000*lambda_2[0, 154] - 7500000*lambda_2[0, 155] - 30000000*lambda_2[0, 156] - 30000000*lambda_2[0, 157] - 375000000*lambda_2[0, 164] - 125000000*lambda_2[0, 171] - 1000*lambda_2[0, 187] - 1000*lambda_2[0, 188] - 100000*lambda_2[0, 189] - 100000*lambda_2[0, 190] - 1600000*lambda_2[0, 191] - 1600000*lambda_2[0, 192] - 250000000*lambda_2[0, 199] - lambda_2[0, 220] - 10*lambda_2[0, 221] - 10*lambda_2[0, 222] - 10*lambda_2[0, 223] - 10*lambda_2[0, 224] - 100*lambda_2[0, 225] - 40*lambda_2[0, 226] - 40*lambda_2[0, 227] - 400*lambda_2[0, 228] - 400*lambda_2[0, 229] - 40*lambda_2[0, 230] - 40*lambda_2[0, 231] - 400*lambda_2[0, 232] - 400*lambda_2[0, 233] - 1600*lambda_2[0, 234] - 500*lambda_2[0, 250] - 500*lambda_2[0, 251] - 5000*lambda_2[0, 252] - 5000*lambda_2[0, 253] - 20000*lambda_2[0, 254] - 20000*lambda_2[0, 255] - lambda_2[0, 316] - lambda_2[0, 317] - 10*lambda_2[0, 318] - 10*lambda_2[0, 319] - 100*lambda_2[0, 320] - 100*lambda_2[0, 321] - 10*lambda_2[0, 322] - 10*lambda_2[0, 323] - 1000*lambda_2[0, 324] - 100*lambda_2[0, 325] - 100*lambda_2[0, 326] - 1000*lambda_2[0, 327] - 40*lambda_2[0, 328] - 40*lambda_2[0, 329] - 4000*lambda_2[0, 330] - 4000*lambda_2[0, 331] - 1600*lambda_2[0, 332] - 1600*lambda_2[0, 333] - 16000*lambda_2[0, 334] - 16000*lambda_2[0, 335] - 40*lambda_2[0, 336] - 40*lambda_2[0, 337] - 4000*lambda_2[0, 338] - 4000*lambda_2[0, 339] - 64000*lambda_2[0, 340] - 1600*lambda_2[0, 341] - 1600*lambda_2[0, 342] - 16000*lambda_2[0, 343] - 16000*lambda_2[0, 344] - 64000*lambda_2[0, 345] - 1000*lambda_2[0, 346] - 10000*lambda_2[0, 347] - 10000*lambda_2[0, 348] - 10000*lambda_2[0, 349] - 10000*lambda_2[0, 350] - 100000*lambda_2[0, 351] - 40000*lambda_2[0, 352] - 40000*lambda_2[0, 353] - 400000*lambda_2[0, 354] - 400000*lambda_2[0, 355] - 40000*lambda_2[0, 356] - 40000*lambda_2[0, 357] - 400000*lambda_2[0, 358] - 400000*lambda_2[0, 359] - 1600000*lambda_2[0, 360] - 500*lambda_2[0, 391] - 500*lambda_2[0, 392] - 50000*lambda_2[0, 393] - 50000*lambda_2[0, 394] - 800000*lambda_2[0, 395] - 800000*lambda_2[0, 396] - 500000*lambda_2[0, 397] - 500000*lambda_2[0, 398] - 5000000*lambda_2[0, 399] - 5000000*lambda_2[0, 400] - 20000000*lambda_2[0, 401] - 20000000*lambda_2[0, 402] - 250000*lambda_2[0, 418] - 250000*lambda_2[0, 419] - 2500000*lambda_2[0, 420] - 2500000*lambda_2[0, 421] - 10000000*lambda_2[0, 422] - 10000000*lambda_2[0, 423] - 10*lambda_2[0, 439] - 10*lambda_2[0, 440] - 100*lambda_2[0, 441] - 100*lambda_2[0, 442] - 40*lambda_2[0, 443] - 400*lambda_2[0, 444] - 400*lambda_2[0, 445] - 400*lambda_2[0, 446] - 400*lambda_2[0, 447] - 4000*lambda_2[0, 448] - 40*lambda_2[0, 449] - 400*lambda_2[0, 450] - 400*lambda_2[0, 451] - 400*lambda_2[0, 452] - 400*lambda_2[0, 453] - 4000*lambda_2[0, 454] - 1600*lambda_2[0, 455] - 1600*lambda_2[0, 456] - 16000*lambda_2[0, 457] - 16000*lambda_2[0, 458] - 500*lambda_2[0, 479] - 5000*lambda_2[0, 480] - 5000*lambda_2[0, 481] - 5000*lambda_2[0, 482] - 5000*lambda_2[0, 483] - 50000*lambda_2[0, 484] - 20000*lambda_2[0, 485] - 20000*lambda_2[0, 486] - 200000*lambda_2[0, 487] - 200000*lambda_2[0, 488] - 20000*lambda_2[0, 489] - 20000*lambda_2[0, 490] - 200000*lambda_2[0, 491] - 200000*lambda_2[0, 492] - 800000*lambda_2[0, 493] >= -l*V[0, 5] - 2*V[0, 3]*t0[0, 0]- objc]
	constraints += [-lambda_2[0, 6] - 1000*lambda_2[0, 14] - 750000*lambda_2[0, 22] - 500000000*lambda_2[0, 30] - lambda_2[0, 47] - lambda_2[0, 48] - 10*lambda_2[0, 49] - 10*lambda_2[0, 50] - 40*lambda_2[0, 51] - 40*lambda_2[0, 52] - 500*lambda_2[0, 59] - lambda_2[0, 90] - lambda_2[0, 91] - 100*lambda_2[0, 92] - 100*lambda_2[0, 93] - 1600*lambda_2[0, 94] - 1600*lambda_2[0, 95] - 1000*lambda_2[0, 96] - 1000*lambda_2[0, 97] - 10000*lambda_2[0, 98] - 10000*lambda_2[0, 99] - 40000*lambda_2[0, 100] - 40000*lambda_2[0, 101] - 500000*lambda_2[0, 108] - 250000*lambda_2[0, 115] - lambda_2[0, 146] - lambda_2[0, 147] - 1000*lambda_2[0, 148] - 1000*lambda_2[0, 149] - 64000*lambda_2[0, 150] - 64000*lambda_2[0, 151] - 750000*lambda_2[0, 152] - 750000*lambda_2[0, 153] - 7500000*lambda_2[0, 154] - 7500000*lambda_2[0, 155] - 30000000*lambda_2[0, 156] - 30000000*lambda_2[0, 157] - 375000000*lambda_2[0, 164] - 125000000*lambda_2[0, 171] - 1000*lambda_2[0, 187] - 1000*lambda_2[0, 188] - 100000*lambda_2[0, 189] - 100000*lambda_2[0, 190] - 1600000*lambda_2[0, 191] - 1600000*lambda_2[0, 192] - 250000000*lambda_2[0, 199] - lambda_2[0, 220] - 10*lambda_2[0, 221] - 10*lambda_2[0, 222] - 10*lambda_2[0, 223] - 10*lambda_2[0, 224] - 100*lambda_2[0, 225] - 40*lambda_2[0, 226] - 40*lambda_2[0, 227] - 400*lambda_2[0, 228] - 400*lambda_2[0, 229] - 40*lambda_2[0, 230] - 40*lambda_2[0, 231] - 400*lambda_2[0, 232] - 400*lambda_2[0, 233] - 1600*lambda_2[0, 234] - 500*lambda_2[0, 250] - 500*lambda_2[0, 251] - 5000*lambda_2[0, 252] - 5000*lambda_2[0, 253] - 20000*lambda_2[0, 254] - 20000*lambda_2[0, 255] - lambda_2[0, 316] - lambda_2[0, 317] - 10*lambda_2[0, 318] - 10*lambda_2[0, 319] - 100*lambda_2[0, 320] - 100*lambda_2[0, 321] - 10*lambda_2[0, 322] - 10*lambda_2[0, 323] - 1000*lambda_2[0, 324] - 100*lambda_2[0, 325] - 100*lambda_2[0, 326] - 1000*lambda_2[0, 327] - 40*lambda_2[0, 328] - 40*lambda_2[0, 329] - 4000*lambda_2[0, 330] - 4000*lambda_2[0, 331] - 1600*lambda_2[0, 332] - 1600*lambda_2[0, 333] - 16000*lambda_2[0, 334] - 16000*lambda_2[0, 335] - 40*lambda_2[0, 336] - 40*lambda_2[0, 337] - 4000*lambda_2[0, 338] - 4000*lambda_2[0, 339] - 64000*lambda_2[0, 340] - 1600*lambda_2[0, 341] - 1600*lambda_2[0, 342] - 16000*lambda_2[0, 343] - 16000*lambda_2[0, 344] - 64000*lambda_2[0, 345] - 1000*lambda_2[0, 346] - 10000*lambda_2[0, 347] - 10000*lambda_2[0, 348] - 10000*lambda_2[0, 349] - 10000*lambda_2[0, 350] - 100000*lambda_2[0, 351] - 40000*lambda_2[0, 352] - 40000*lambda_2[0, 353] - 400000*lambda_2[0, 354] - 400000*lambda_2[0, 355] - 40000*lambda_2[0, 356] - 40000*lambda_2[0, 357] - 400000*lambda_2[0, 358] - 400000*lambda_2[0, 359] - 1600000*lambda_2[0, 360] - 500*lambda_2[0, 391] - 500*lambda_2[0, 392] - 50000*lambda_2[0, 393] - 50000*lambda_2[0, 394] - 800000*lambda_2[0, 395] - 800000*lambda_2[0, 396] - 500000*lambda_2[0, 397] - 500000*lambda_2[0, 398] - 5000000*lambda_2[0, 399] - 5000000*lambda_2[0, 400] - 20000000*lambda_2[0, 401] - 20000000*lambda_2[0, 402] - 250000*lambda_2[0, 418] - 250000*lambda_2[0, 419] - 2500000*lambda_2[0, 420] - 2500000*lambda_2[0, 421] - 10000000*lambda_2[0, 422] - 10000000*lambda_2[0, 423] - 10*lambda_2[0, 439] - 10*lambda_2[0, 440] - 100*lambda_2[0, 441] - 100*lambda_2[0, 442] - 40*lambda_2[0, 443] - 400*lambda_2[0, 444] - 400*lambda_2[0, 445] - 400*lambda_2[0, 446] - 400*lambda_2[0, 447] - 4000*lambda_2[0, 448] - 40*lambda_2[0, 449] - 400*lambda_2[0, 450] - 400*lambda_2[0, 451] - 400*lambda_2[0, 452] - 400*lambda_2[0, 453] - 4000*lambda_2[0, 454] - 1600*lambda_2[0, 455] - 1600*lambda_2[0, 456] - 16000*lambda_2[0, 457] - 16000*lambda_2[0, 458] - 500*lambda_2[0, 479] - 5000*lambda_2[0, 480] - 5000*lambda_2[0, 481] - 5000*lambda_2[0, 482] - 5000*lambda_2[0, 483] - 50000*lambda_2[0, 484] - 20000*lambda_2[0, 485] - 20000*lambda_2[0, 486] - 200000*lambda_2[0, 487] - 200000*lambda_2[0, 488] - 20000*lambda_2[0, 489] - 20000*lambda_2[0, 490] - 200000*lambda_2[0, 491] - 200000*lambda_2[0, 492] - 800000*lambda_2[0, 493] <= -l*V[0, 5] - 2*V[0, 3]*t0[0, 0]+ objc]
	constraints += [lambda_2[0, 47] + 2*lambda_2[0, 90] + 1000*lambda_2[0, 96] + 3*lambda_2[0, 146] + 750000*lambda_2[0, 152] + 2000*lambda_2[0, 187] + lambda_2[0, 220] + 10*lambda_2[0, 221] + 10*lambda_2[0, 223] + 40*lambda_2[0, 226] + 40*lambda_2[0, 230] + 500*lambda_2[0, 250] + 2*lambda_2[0, 316] + lambda_2[0, 317] + 20*lambda_2[0, 318] + 100*lambda_2[0, 320] + 20*lambda_2[0, 322] + 100*lambda_2[0, 325] + 80*lambda_2[0, 328] + 1600*lambda_2[0, 332] + 80*lambda_2[0, 336] + 1600*lambda_2[0, 341] + 1000*lambda_2[0, 346] + 10000*lambda_2[0, 347] + 10000*lambda_2[0, 349] + 40000*lambda_2[0, 352] + 40000*lambda_2[0, 356] + 1000*lambda_2[0, 391] + 500000*lambda_2[0, 397] + 250000*lambda_2[0, 418] + 10*lambda_2[0, 439] + 10*lambda_2[0, 440] + 100*lambda_2[0, 441] + 40*lambda_2[0, 443] + 400*lambda_2[0, 444] + 400*lambda_2[0, 446] + 40*lambda_2[0, 449] + 400*lambda_2[0, 450] + 400*lambda_2[0, 452] + 1600*lambda_2[0, 455] + 500*lambda_2[0, 479] + 5000*lambda_2[0, 480] + 5000*lambda_2[0, 482] + 20000*lambda_2[0, 485] + 20000*lambda_2[0, 489] >= -l*V[0, 31] - 2*V[0, 26]*t0[0, 0]- objc]
	constraints += [lambda_2[0, 47] + 2*lambda_2[0, 90] + 1000*lambda_2[0, 96] + 3*lambda_2[0, 146] + 750000*lambda_2[0, 152] + 2000*lambda_2[0, 187] + lambda_2[0, 220] + 10*lambda_2[0, 221] + 10*lambda_2[0, 223] + 40*lambda_2[0, 226] + 40*lambda_2[0, 230] + 500*lambda_2[0, 250] + 2*lambda_2[0, 316] + lambda_2[0, 317] + 20*lambda_2[0, 318] + 100*lambda_2[0, 320] + 20*lambda_2[0, 322] + 100*lambda_2[0, 325] + 80*lambda_2[0, 328] + 1600*lambda_2[0, 332] + 80*lambda_2[0, 336] + 1600*lambda_2[0, 341] + 1000*lambda_2[0, 346] + 10000*lambda_2[0, 347] + 10000*lambda_2[0, 349] + 40000*lambda_2[0, 352] + 40000*lambda_2[0, 356] + 1000*lambda_2[0, 391] + 500000*lambda_2[0, 397] + 250000*lambda_2[0, 418] + 10*lambda_2[0, 439] + 10*lambda_2[0, 440] + 100*lambda_2[0, 441] + 40*lambda_2[0, 443] + 400*lambda_2[0, 444] + 400*lambda_2[0, 446] + 40*lambda_2[0, 449] + 400*lambda_2[0, 450] + 400*lambda_2[0, 452] + 1600*lambda_2[0, 455] + 500*lambda_2[0, 479] + 5000*lambda_2[0, 480] + 5000*lambda_2[0, 482] + 20000*lambda_2[0, 485] + 20000*lambda_2[0, 489] <= -l*V[0, 31] - 2*V[0, 26]*t0[0, 0]+ objc]
	constraints += [-lambda_2[0, 90] - 3*lambda_2[0, 146] - 1000*lambda_2[0, 187] - lambda_2[0, 316] - 10*lambda_2[0, 318] - 10*lambda_2[0, 322] - 40*lambda_2[0, 328] - 40*lambda_2[0, 336] - 500*lambda_2[0, 391] >= -l*V[0, 65] - 2*V[0, 55]*t0[0, 0]- objc]
	constraints += [-lambda_2[0, 90] - 3*lambda_2[0, 146] - 1000*lambda_2[0, 187] - lambda_2[0, 316] - 10*lambda_2[0, 318] - 10*lambda_2[0, 322] - 40*lambda_2[0, 328] - 40*lambda_2[0, 336] - 500*lambda_2[0, 391] <= -l*V[0, 65] - 2*V[0, 55]*t0[0, 0]+ objc]
	constraints += [lambda_2[0, 146] == 0]
	constraints += [lambda_2[0, 48] + 2*lambda_2[0, 91] + 1000*lambda_2[0, 97] + 3*lambda_2[0, 147] + 750000*lambda_2[0, 153] + 2000*lambda_2[0, 188] + lambda_2[0, 220] + 10*lambda_2[0, 222] + 10*lambda_2[0, 224] + 40*lambda_2[0, 227] + 40*lambda_2[0, 231] + 500*lambda_2[0, 251] + lambda_2[0, 316] + 2*lambda_2[0, 317] + 20*lambda_2[0, 319] + 100*lambda_2[0, 321] + 20*lambda_2[0, 323] + 100*lambda_2[0, 326] + 80*lambda_2[0, 329] + 1600*lambda_2[0, 333] + 80*lambda_2[0, 337] + 1600*lambda_2[0, 342] + 1000*lambda_2[0, 346] + 10000*lambda_2[0, 348] + 10000*lambda_2[0, 350] + 40000*lambda_2[0, 353] + 40000*lambda_2[0, 357] + 1000*lambda_2[0, 392] + 500000*lambda_2[0, 398] + 250000*lambda_2[0, 419] + 10*lambda_2[0, 439] + 10*lambda_2[0, 440] + 100*lambda_2[0, 442] + 40*lambda_2[0, 443] + 400*lambda_2[0, 445] + 400*lambda_2[0, 447] + 40*lambda_2[0, 449] + 400*lambda_2[0, 451] + 400*lambda_2[0, 453] + 1600*lambda_2[0, 456] + 500*lambda_2[0, 479] + 5000*lambda_2[0, 481] + 5000*lambda_2[0, 483] + 20000*lambda_2[0, 486] + 20000*lambda_2[0, 490] >= -l*V[0, 32] - 2*V[0, 27]*t0[0, 0] - 25*V[0, 39]- objc]
	constraints += [lambda_2[0, 48] + 2*lambda_2[0, 91] + 1000*lambda_2[0, 97] + 3*lambda_2[0, 147] + 750000*lambda_2[0, 153] + 2000*lambda_2[0, 188] + lambda_2[0, 220] + 10*lambda_2[0, 222] + 10*lambda_2[0, 224] + 40*lambda_2[0, 227] + 40*lambda_2[0, 231] + 500*lambda_2[0, 251] + lambda_2[0, 316] + 2*lambda_2[0, 317] + 20*lambda_2[0, 319] + 100*lambda_2[0, 321] + 20*lambda_2[0, 323] + 100*lambda_2[0, 326] + 80*lambda_2[0, 329] + 1600*lambda_2[0, 333] + 80*lambda_2[0, 337] + 1600*lambda_2[0, 342] + 1000*lambda_2[0, 346] + 10000*lambda_2[0, 348] + 10000*lambda_2[0, 350] + 40000*lambda_2[0, 353] + 40000*lambda_2[0, 357] + 1000*lambda_2[0, 392] + 500000*lambda_2[0, 398] + 250000*lambda_2[0, 419] + 10*lambda_2[0, 439] + 10*lambda_2[0, 440] + 100*lambda_2[0, 442] + 40*lambda_2[0, 443] + 400*lambda_2[0, 445] + 400*lambda_2[0, 447] + 40*lambda_2[0, 449] + 400*lambda_2[0, 451] + 400*lambda_2[0, 453] + 1600*lambda_2[0, 456] + 500*lambda_2[0, 479] + 5000*lambda_2[0, 481] + 5000*lambda_2[0, 483] + 20000*lambda_2[0, 486] + 20000*lambda_2[0, 490] <= -l*V[0, 32] - 2*V[0, 27]*t0[0, 0] - 25*V[0, 39]+ objc]
	constraints += [-lambda_2[0, 220] - 2*lambda_2[0, 316] - 2*lambda_2[0, 317] - 1000*lambda_2[0, 346] - 10*lambda_2[0, 439] - 10*lambda_2[0, 440] - 40*lambda_2[0, 443] - 40*lambda_2[0, 449] - 500*lambda_2[0, 479] >= -l*V[0, 113] - 2*V[0, 109]*t0[0, 0] - 25*V[0, 125]- objc]
	constraints += [-lambda_2[0, 220] - 2*lambda_2[0, 316] - 2*lambda_2[0, 317] - 1000*lambda_2[0, 346] - 10*lambda_2[0, 439] - 10*lambda_2[0, 440] - 40*lambda_2[0, 443] - 40*lambda_2[0, 449] - 500*lambda_2[0, 479] <= -l*V[0, 113] - 2*V[0, 109]*t0[0, 0] - 25*V[0, 125]+ objc]
	constraints += [lambda_2[0, 316] == 0]
	constraints += [-lambda_2[0, 91] - 3*lambda_2[0, 147] - 1000*lambda_2[0, 188] - lambda_2[0, 317] - 10*lambda_2[0, 319] - 10*lambda_2[0, 323] - 40*lambda_2[0, 329] - 40*lambda_2[0, 337] - 500*lambda_2[0, 392] >= -l*V[0, 66] - 2*V[0, 56]*t0[0, 0] - 25*V[0, 126]- objc]
	constraints += [-lambda_2[0, 91] - 3*lambda_2[0, 147] - 1000*lambda_2[0, 188] - lambda_2[0, 317] - 10*lambda_2[0, 319] - 10*lambda_2[0, 323] - 40*lambda_2[0, 329] - 40*lambda_2[0, 337] - 500*lambda_2[0, 392] <= -l*V[0, 66] - 2*V[0, 56]*t0[0, 0] - 25*V[0, 126]+ objc]
	constraints += [lambda_2[0, 317] == 0]
	constraints += [lambda_2[0, 147] == 0]
	constraints += [lambda_2[0, 49] + 20*lambda_2[0, 92] + 1000*lambda_2[0, 98] + 300*lambda_2[0, 148] + 750000*lambda_2[0, 154] + 20000*lambda_2[0, 189] + lambda_2[0, 221] + lambda_2[0, 222] + 10*lambda_2[0, 225] + 40*lambda_2[0, 228] + 40*lambda_2[0, 232] + 500*lambda_2[0, 252] + lambda_2[0, 318] + lambda_2[0, 319] + 20*lambda_2[0, 320] + 20*lambda_2[0, 321] + 200*lambda_2[0, 324] + 100*lambda_2[0, 327] + 800*lambda_2[0, 330] + 1600*lambda_2[0, 334] + 800*lambda_2[0, 338] + 1600*lambda_2[0, 343] + 1000*lambda_2[0, 347] + 1000*lambda_2[0, 348] + 10000*lambda_2[0, 351] + 40000*lambda_2[0, 354] + 40000*lambda_2[0, 358] + 10000*lambda_2[0, 393] + 500000*lambda_2[0, 399] + 250000*lambda_2[0, 420] + lambda_2[0, 439] + 10*lambda_2[0, 441] + 10*lambda_2[0, 442] + 40*lambda_2[0, 444] + 40*lambda_2[0, 445] + 400*lambda_2[0, 448] + 40*lambda_2[0, 450] + 40*lambda_2[0, 451] + 400*lambda_2[0, 454] + 1600*lambda_2[0, 457] + 500*lambda_2[0, 480] + 500*lambda_2[0, 481] + 5000*lambda_2[0, 484] + 20000*lambda_2[0, 487] + 20000*lambda_2[0, 491] >= -l*V[0, 33] - 4*V[0, 11]*t0[0, 0] - 2*V[0, 33]*t0[0, 2] - 2*V[0, 33] + V[0, 34]- objc]
	constraints += [lambda_2[0, 49] + 20*lambda_2[0, 92] + 1000*lambda_2[0, 98] + 300*lambda_2[0, 148] + 750000*lambda_2[0, 154] + 20000*lambda_2[0, 189] + lambda_2[0, 221] + lambda_2[0, 222] + 10*lambda_2[0, 225] + 40*lambda_2[0, 228] + 40*lambda_2[0, 232] + 500*lambda_2[0, 252] + lambda_2[0, 318] + lambda_2[0, 319] + 20*lambda_2[0, 320] + 20*lambda_2[0, 321] + 200*lambda_2[0, 324] + 100*lambda_2[0, 327] + 800*lambda_2[0, 330] + 1600*lambda_2[0, 334] + 800*lambda_2[0, 338] + 1600*lambda_2[0, 343] + 1000*lambda_2[0, 347] + 1000*lambda_2[0, 348] + 10000*lambda_2[0, 351] + 40000*lambda_2[0, 354] + 40000*lambda_2[0, 358] + 10000*lambda_2[0, 393] + 500000*lambda_2[0, 399] + 250000*lambda_2[0, 420] + lambda_2[0, 439] + 10*lambda_2[0, 441] + 10*lambda_2[0, 442] + 40*lambda_2[0, 444] + 40*lambda_2[0, 445] + 400*lambda_2[0, 448] + 40*lambda_2[0, 450] + 40*lambda_2[0, 451] + 400*lambda_2[0, 454] + 1600*lambda_2[0, 457] + 500*lambda_2[0, 480] + 500*lambda_2[0, 481] + 5000*lambda_2[0, 484] + 20000*lambda_2[0, 487] + 20000*lambda_2[0, 491] <= -l*V[0, 33] - 4*V[0, 11]*t0[0, 0] - 2*V[0, 33]*t0[0, 2] - 2*V[0, 33] + V[0, 34]+ objc]
	constraints += [-lambda_2[0, 221] - 2*lambda_2[0, 318] - 20*lambda_2[0, 320] - 1000*lambda_2[0, 347] - lambda_2[0, 439] - 10*lambda_2[0, 441] - 40*lambda_2[0, 444] - 40*lambda_2[0, 450] - 500*lambda_2[0, 480] >= -l*V[0, 114] - 4*V[0, 57]*t0[0, 0] - 2*V[0, 114]*t0[0, 2] - 2*V[0, 114] + V[0, 116]- objc]
	constraints += [-lambda_2[0, 221] - 2*lambda_2[0, 318] - 20*lambda_2[0, 320] - 1000*lambda_2[0, 347] - lambda_2[0, 439] - 10*lambda_2[0, 441] - 40*lambda_2[0, 444] - 40*lambda_2[0, 450] - 500*lambda_2[0, 480] <= -l*V[0, 114] - 4*V[0, 57]*t0[0, 0] - 2*V[0, 114]*t0[0, 2] - 2*V[0, 114] + V[0, 116]+ objc]
	constraints += [lambda_2[0, 318] == 0]
	constraints += [-lambda_2[0, 222] - 2*lambda_2[0, 319] - 20*lambda_2[0, 321] - 1000*lambda_2[0, 348] - lambda_2[0, 439] - 10*lambda_2[0, 442] - 40*lambda_2[0, 445] - 40*lambda_2[0, 451] - 500*lambda_2[0, 481] >= -l*V[0, 115] - 4*V[0, 58]*t0[0, 0] - 2*V[0, 115]*t0[0, 2] - 2*V[0, 115] + V[0, 117] - 25*V[0, 127]- objc]
	constraints += [-lambda_2[0, 222] - 2*lambda_2[0, 319] - 20*lambda_2[0, 321] - 1000*lambda_2[0, 348] - lambda_2[0, 439] - 10*lambda_2[0, 442] - 40*lambda_2[0, 445] - 40*lambda_2[0, 451] - 500*lambda_2[0, 481] <= -l*V[0, 115] - 4*V[0, 58]*t0[0, 0] - 2*V[0, 115]*t0[0, 2] - 2*V[0, 115] + V[0, 117] - 25*V[0, 127]+ objc]
	constraints += [lambda_2[0, 439] == 0]
	constraints += [lambda_2[0, 319] == 0]
	constraints += [-lambda_2[0, 92] - 30*lambda_2[0, 148] - 1000*lambda_2[0, 189] - lambda_2[0, 320] - lambda_2[0, 321] - 10*lambda_2[0, 324] - 40*lambda_2[0, 330] - 40*lambda_2[0, 338] - 500*lambda_2[0, 393] >= -l*V[0, 67] - 6*V[0, 19]*t0[0, 0] - 4*V[0, 67]*t0[0, 2] - 4*V[0, 67] + V[0, 118]- objc]
	constraints += [-lambda_2[0, 92] - 30*lambda_2[0, 148] - 1000*lambda_2[0, 189] - lambda_2[0, 320] - lambda_2[0, 321] - 10*lambda_2[0, 324] - 40*lambda_2[0, 330] - 40*lambda_2[0, 338] - 500*lambda_2[0, 393] <= -l*V[0, 67] - 6*V[0, 19]*t0[0, 0] - 4*V[0, 67]*t0[0, 2] - 4*V[0, 67] + V[0, 118]+ objc]
	constraints += [lambda_2[0, 320] == 0]
	constraints += [lambda_2[0, 321] == 0]
	constraints += [lambda_2[0, 148] == 0]
	constraints += [lambda_2[0, 51] + 80*lambda_2[0, 94] + 1000*lambda_2[0, 100] + 4800*lambda_2[0, 150] + 750000*lambda_2[0, 156] + 80000*lambda_2[0, 191] + lambda_2[0, 226] + lambda_2[0, 227] + 10*lambda_2[0, 228] + 10*lambda_2[0, 229] + 40*lambda_2[0, 234] + 500*lambda_2[0, 254] + lambda_2[0, 328] + lambda_2[0, 329] + 100*lambda_2[0, 330] + 100*lambda_2[0, 331] + 80*lambda_2[0, 332] + 80*lambda_2[0, 333] + 800*lambda_2[0, 334] + 800*lambda_2[0, 335] + 3200*lambda_2[0, 340] + 1600*lambda_2[0, 345] + 1000*lambda_2[0, 352] + 1000*lambda_2[0, 353] + 10000*lambda_2[0, 354] + 10000*lambda_2[0, 355] + 40000*lambda_2[0, 360] + 40000*lambda_2[0, 395] + 500000*lambda_2[0, 401] + 250000*lambda_2[0, 422] + lambda_2[0, 443] + 10*lambda_2[0, 444] + 10*lambda_2[0, 445] + 10*lambda_2[0, 446] + 10*lambda_2[0, 447] + 100*lambda_2[0, 448] + 40*lambda_2[0, 455] + 40*lambda_2[0, 456] + 400*lambda_2[0, 457] + 400*lambda_2[0, 458] + 500*lambda_2[0, 485] + 500*lambda_2[0, 486] + 5000*lambda_2[0, 487] + 5000*lambda_2[0, 488] + 20000*lambda_2[0, 493] >= -l*V[0, 34] + 2*V[0, 13] - 2*V[0, 30]*t0[0, 0] - 2.8*V[0, 33]*t0[0, 0] - 2*V[0, 33]*t0[0, 1]- objc]
	constraints += [lambda_2[0, 51] + 80*lambda_2[0, 94] + 1000*lambda_2[0, 100] + 4800*lambda_2[0, 150] + 750000*lambda_2[0, 156] + 80000*lambda_2[0, 191] + lambda_2[0, 226] + lambda_2[0, 227] + 10*lambda_2[0, 228] + 10*lambda_2[0, 229] + 40*lambda_2[0, 234] + 500*lambda_2[0, 254] + lambda_2[0, 328] + lambda_2[0, 329] + 100*lambda_2[0, 330] + 100*lambda_2[0, 331] + 80*lambda_2[0, 332] + 80*lambda_2[0, 333] + 800*lambda_2[0, 334] + 800*lambda_2[0, 335] + 3200*lambda_2[0, 340] + 1600*lambda_2[0, 345] + 1000*lambda_2[0, 352] + 1000*lambda_2[0, 353] + 10000*lambda_2[0, 354] + 10000*lambda_2[0, 355] + 40000*lambda_2[0, 360] + 40000*lambda_2[0, 395] + 500000*lambda_2[0, 401] + 250000*lambda_2[0, 422] + lambda_2[0, 443] + 10*lambda_2[0, 444] + 10*lambda_2[0, 445] + 10*lambda_2[0, 446] + 10*lambda_2[0, 447] + 100*lambda_2[0, 448] + 40*lambda_2[0, 455] + 40*lambda_2[0, 456] + 400*lambda_2[0, 457] + 400*lambda_2[0, 458] + 500*lambda_2[0, 485] + 500*lambda_2[0, 486] + 5000*lambda_2[0, 487] + 5000*lambda_2[0, 488] + 20000*lambda_2[0, 493] <= -l*V[0, 34] + 2*V[0, 13] - 2*V[0, 30]*t0[0, 0] - 2.8*V[0, 33]*t0[0, 0] - 2*V[0, 33]*t0[0, 1]+ objc]
	constraints += [-lambda_2[0, 226] - 2*lambda_2[0, 328] - 80*lambda_2[0, 332] - 1000*lambda_2[0, 352] - lambda_2[0, 443] - 10*lambda_2[0, 444] - 10*lambda_2[0, 446] - 40*lambda_2[0, 455] - 500*lambda_2[0, 485] >= -l*V[0, 116] + 2*V[0, 69] - 2*V[0, 111]*t0[0, 0] - 2.8*V[0, 114]*t0[0, 0] - 2*V[0, 114]*t0[0, 1]- objc]
	constraints += [-lambda_2[0, 226] - 2*lambda_2[0, 328] - 80*lambda_2[0, 332] - 1000*lambda_2[0, 352] - lambda_2[0, 443] - 10*lambda_2[0, 444] - 10*lambda_2[0, 446] - 40*lambda_2[0, 455] - 500*lambda_2[0, 485] <= -l*V[0, 116] + 2*V[0, 69] - 2*V[0, 111]*t0[0, 0] - 2.8*V[0, 114]*t0[0, 0] - 2*V[0, 114]*t0[0, 1]+ objc]
	constraints += [lambda_2[0, 328] == 0]
	constraints += [-lambda_2[0, 227] - 2*lambda_2[0, 329] - 80*lambda_2[0, 333] - 1000*lambda_2[0, 353] - lambda_2[0, 443] - 10*lambda_2[0, 445] - 10*lambda_2[0, 447] - 40*lambda_2[0, 456] - 500*lambda_2[0, 486] >= -l*V[0, 117] + 2*V[0, 70] - 2*V[0, 112]*t0[0, 0] - 2.8*V[0, 115]*t0[0, 0] - 2*V[0, 115]*t0[0, 1] - 25*V[0, 128]- objc]
	constraints += [-lambda_2[0, 227] - 2*lambda_2[0, 329] - 80*lambda_2[0, 333] - 1000*lambda_2[0, 353] - lambda_2[0, 443] - 10*lambda_2[0, 445] - 10*lambda_2[0, 447] - 40*lambda_2[0, 456] - 500*lambda_2[0, 486] <= -l*V[0, 117] + 2*V[0, 70] - 2*V[0, 112]*t0[0, 0] - 2.8*V[0, 115]*t0[0, 0] - 2*V[0, 115]*t0[0, 1] - 25*V[0, 128]+ objc]
	constraints += [lambda_2[0, 443] == 0]
	constraints += [lambda_2[0, 329] == 0]
	constraints += [-lambda_2[0, 228] - 20*lambda_2[0, 330] - 80*lambda_2[0, 334] - 1000*lambda_2[0, 354] - lambda_2[0, 444] - lambda_2[0, 445] - 10*lambda_2[0, 448] - 40*lambda_2[0, 457] - 500*lambda_2[0, 487] >= -l*V[0, 118] - 4*V[0, 61]*t0[0, 0] - 5.6*V[0, 67]*t0[0, 0] - 4*V[0, 67]*t0[0, 1] + 2*V[0, 68] + 2*V[0, 71] - 2*V[0, 118]*t0[0, 2] - 2*V[0, 118]- objc]
	constraints += [-lambda_2[0, 228] - 20*lambda_2[0, 330] - 80*lambda_2[0, 334] - 1000*lambda_2[0, 354] - lambda_2[0, 444] - lambda_2[0, 445] - 10*lambda_2[0, 448] - 40*lambda_2[0, 457] - 500*lambda_2[0, 487] <= -l*V[0, 118] - 4*V[0, 61]*t0[0, 0] - 5.6*V[0, 67]*t0[0, 0] - 4*V[0, 67]*t0[0, 1] + 2*V[0, 68] + 2*V[0, 71] - 2*V[0, 118]*t0[0, 2] - 2*V[0, 118]+ objc]
	constraints += [lambda_2[0, 444] == 0]
	constraints += [lambda_2[0, 445] == 0]
	constraints += [lambda_2[0, 330] == 0]
	constraints += [-lambda_2[0, 94] - 120*lambda_2[0, 150] - 1000*lambda_2[0, 191] - lambda_2[0, 332] - lambda_2[0, 333] - 10*lambda_2[0, 334] - 10*lambda_2[0, 335] - 40*lambda_2[0, 340] - 500*lambda_2[0, 395] >= -l*V[0, 68] - 0.0001*V[0, 33] - 2*V[0, 64]*t0[0, 0] + 2*V[0, 72] - 2.8*V[0, 118]*t0[0, 0] - 2*V[0, 118]*t0[0, 1]- objc]
	constraints += [-lambda_2[0, 94] - 120*lambda_2[0, 150] - 1000*lambda_2[0, 191] - lambda_2[0, 332] - lambda_2[0, 333] - 10*lambda_2[0, 334] - 10*lambda_2[0, 335] - 40*lambda_2[0, 340] - 500*lambda_2[0, 395] <= -l*V[0, 68] - 0.0001*V[0, 33] - 2*V[0, 64]*t0[0, 0] + 2*V[0, 72] - 2.8*V[0, 118]*t0[0, 0] - 2*V[0, 118]*t0[0, 1]+ objc]
	constraints += [lambda_2[0, 332] >= -0.0001*V[0, 114]- objc]
	constraints += [lambda_2[0, 332] <= -0.0001*V[0, 114]+ objc]
	constraints += [lambda_2[0, 333] >= -0.0001*V[0, 115]- objc]
	constraints += [lambda_2[0, 333] <= -0.0001*V[0, 115]+ objc]
	constraints += [lambda_2[0, 334] >= -0.0002*V[0, 67]- objc]
	constraints += [lambda_2[0, 334] <= -0.0002*V[0, 67]+ objc]
	constraints += [lambda_2[0, 150] >= -0.0001*V[0, 118]- objc]
	constraints += [lambda_2[0, 150] <= -0.0001*V[0, 118]+ objc]
	constraints += [lambda_2[0, 14] + 1500*lambda_2[0, 22] + 1500000*lambda_2[0, 30] + lambda_2[0, 96] + lambda_2[0, 97] + 10*lambda_2[0, 98] + 10*lambda_2[0, 99] + 40*lambda_2[0, 100] + 40*lambda_2[0, 101] + 500*lambda_2[0, 108] + 1500*lambda_2[0, 152] + 1500*lambda_2[0, 153] + 15000*lambda_2[0, 154] + 15000*lambda_2[0, 155] + 60000*lambda_2[0, 156] + 60000*lambda_2[0, 157] + 750000*lambda_2[0, 164] + lambda_2[0, 187] + lambda_2[0, 188] + 100*lambda_2[0, 189] + 100*lambda_2[0, 190] + 1600*lambda_2[0, 191] + 1600*lambda_2[0, 192] + 250000*lambda_2[0, 199] + lambda_2[0, 346] + 10*lambda_2[0, 347] + 10*lambda_2[0, 348] + 10*lambda_2[0, 349] + 10*lambda_2[0, 350] + 100*lambda_2[0, 351] + 40*lambda_2[0, 352] + 40*lambda_2[0, 353] + 400*lambda_2[0, 354] + 400*lambda_2[0, 355] + 40*lambda_2[0, 356] + 40*lambda_2[0, 357] + 400*lambda_2[0, 358] + 400*lambda_2[0, 359] + 1600*lambda_2[0, 360] + 500*lambda_2[0, 397] + 500*lambda_2[0, 398] + 5000*lambda_2[0, 399] + 5000*lambda_2[0, 400] + 20000*lambda_2[0, 401] + 20000*lambda_2[0, 402] >= -l*V[0, 13] - 2*V[0, 33]*t0[0, 0] - 0.001- objc]
	constraints += [lambda_2[0, 14] + 1500*lambda_2[0, 22] + 1500000*lambda_2[0, 30] + lambda_2[0, 96] + lambda_2[0, 97] + 10*lambda_2[0, 98] + 10*lambda_2[0, 99] + 40*lambda_2[0, 100] + 40*lambda_2[0, 101] + 500*lambda_2[0, 108] + 1500*lambda_2[0, 152] + 1500*lambda_2[0, 153] + 15000*lambda_2[0, 154] + 15000*lambda_2[0, 155] + 60000*lambda_2[0, 156] + 60000*lambda_2[0, 157] + 750000*lambda_2[0, 164] + lambda_2[0, 187] + lambda_2[0, 188] + 100*lambda_2[0, 189] + 100*lambda_2[0, 190] + 1600*lambda_2[0, 191] + 1600*lambda_2[0, 192] + 250000*lambda_2[0, 199] + lambda_2[0, 346] + 10*lambda_2[0, 347] + 10*lambda_2[0, 348] + 10*lambda_2[0, 349] + 10*lambda_2[0, 350] + 100*lambda_2[0, 351] + 40*lambda_2[0, 352] + 40*lambda_2[0, 353] + 400*lambda_2[0, 354] + 400*lambda_2[0, 355] + 40*lambda_2[0, 356] + 40*lambda_2[0, 357] + 400*lambda_2[0, 358] + 400*lambda_2[0, 359] + 1600*lambda_2[0, 360] + 500*lambda_2[0, 397] + 500*lambda_2[0, 398] + 5000*lambda_2[0, 399] + 5000*lambda_2[0, 400] + 20000*lambda_2[0, 401] + 20000*lambda_2[0, 402] <= -l*V[0, 13] - 2*V[0, 33]*t0[0, 0] - 0.001+ objc]
	constraints += [-lambda_2[0, 96] - 1500*lambda_2[0, 152] - 2*lambda_2[0, 187] - lambda_2[0, 346] - 10*lambda_2[0, 347] - 10*lambda_2[0, 349] - 40*lambda_2[0, 352] - 40*lambda_2[0, 356] - 500*lambda_2[0, 397] >= -l*V[0, 69] - 2*V[0, 114]*t0[0, 0]- objc]
	constraints += [-lambda_2[0, 96] - 1500*lambda_2[0, 152] - 2*lambda_2[0, 187] - lambda_2[0, 346] - 10*lambda_2[0, 347] - 10*lambda_2[0, 349] - 40*lambda_2[0, 352] - 40*lambda_2[0, 356] - 500*lambda_2[0, 397] <= -l*V[0, 69] - 2*V[0, 114]*t0[0, 0]+ objc]
	constraints += [lambda_2[0, 187] == 0]
	constraints += [-lambda_2[0, 97] - 1500*lambda_2[0, 153] - 2*lambda_2[0, 188] - lambda_2[0, 346] - 10*lambda_2[0, 348] - 10*lambda_2[0, 350] - 40*lambda_2[0, 353] - 40*lambda_2[0, 357] - 500*lambda_2[0, 398] >= -l*V[0, 70] - 25*V[0, 77] - 2*V[0, 115]*t0[0, 0]- objc]
	constraints += [-lambda_2[0, 97] - 1500*lambda_2[0, 153] - 2*lambda_2[0, 188] - lambda_2[0, 346] - 10*lambda_2[0, 348] - 10*lambda_2[0, 350] - 40*lambda_2[0, 353] - 40*lambda_2[0, 357] - 500*lambda_2[0, 398] <= -l*V[0, 70] - 25*V[0, 77] - 2*V[0, 115]*t0[0, 0]+ objc]
	constraints += [lambda_2[0, 346] == 0]
	constraints += [lambda_2[0, 188] == 0]
	constraints += [-lambda_2[0, 98] - 1500*lambda_2[0, 154] - 20*lambda_2[0, 189] - lambda_2[0, 347] - lambda_2[0, 348] - 10*lambda_2[0, 351] - 40*lambda_2[0, 354] - 40*lambda_2[0, 358] - 500*lambda_2[0, 399] >= -l*V[0, 71] - 4*V[0, 67]*t0[0, 0] - 2*V[0, 71]*t0[0, 2] - 2*V[0, 71] + V[0, 72]- objc]
	constraints += [-lambda_2[0, 98] - 1500*lambda_2[0, 154] - 20*lambda_2[0, 189] - lambda_2[0, 347] - lambda_2[0, 348] - 10*lambda_2[0, 351] - 40*lambda_2[0, 354] - 40*lambda_2[0, 358] - 500*lambda_2[0, 399] <= -l*V[0, 71] - 4*V[0, 67]*t0[0, 0] - 2*V[0, 71]*t0[0, 2] - 2*V[0, 71] + V[0, 72]+ objc]
	constraints += [lambda_2[0, 347] == 0]
	constraints += [lambda_2[0, 348] == 0]
	constraints += [lambda_2[0, 189] == 0]
	constraints += [-lambda_2[0, 100] - 1500*lambda_2[0, 156] - 80*lambda_2[0, 191] - lambda_2[0, 352] - lambda_2[0, 353] - 10*lambda_2[0, 354] - 10*lambda_2[0, 355] - 40*lambda_2[0, 360] - 500*lambda_2[0, 401] >= -l*V[0, 72] + 3*V[0, 21] - 2.8*V[0, 71]*t0[0, 0] - 2*V[0, 71]*t0[0, 1] - 2*V[0, 118]*t0[0, 0]- objc]
	constraints += [-lambda_2[0, 100] - 1500*lambda_2[0, 156] - 80*lambda_2[0, 191] - lambda_2[0, 352] - lambda_2[0, 353] - 10*lambda_2[0, 354] - 10*lambda_2[0, 355] - 40*lambda_2[0, 360] - 500*lambda_2[0, 401] <= -l*V[0, 72] + 3*V[0, 21] - 2.8*V[0, 71]*t0[0, 0] - 2*V[0, 71]*t0[0, 1] - 2*V[0, 118]*t0[0, 0]+ objc]
	constraints += [lambda_2[0, 352] == 0]
	constraints += [lambda_2[0, 353] == 0]
	constraints += [lambda_2[0, 354] == 0]
	constraints += [lambda_2[0, 191] >= -0.0001*V[0, 71]- objc]
	constraints += [lambda_2[0, 191] <= -0.0001*V[0, 71]+ objc]
	constraints += [-lambda_2[0, 22] - 2000*lambda_2[0, 30] - lambda_2[0, 152] - lambda_2[0, 153] - 10*lambda_2[0, 154] - 10*lambda_2[0, 155] - 40*lambda_2[0, 156] - 40*lambda_2[0, 157] - 500*lambda_2[0, 164] >= -l*V[0, 21] - 2*V[0, 71]*t0[0, 0]- objc]
	constraints += [-lambda_2[0, 22] - 2000*lambda_2[0, 30] - lambda_2[0, 152] - lambda_2[0, 153] - 10*lambda_2[0, 154] - 10*lambda_2[0, 155] - 40*lambda_2[0, 156] - 40*lambda_2[0, 157] - 500*lambda_2[0, 164] <= -l*V[0, 21] - 2*V[0, 71]*t0[0, 0]+ objc]
	constraints += [lambda_2[0, 152] == 0]
	constraints += [lambda_2[0, 153] == 0]
	constraints += [lambda_2[0, 154] == 0]
	constraints += [lambda_2[0, 156] == 0]
	constraints += [lambda_2[0, 30] == 0]
	constraints += [-lambda_2[0, 3] - 20*lambda_2[0, 11] - 300*lambda_2[0, 19] - 4000*lambda_2[0, 27] - lambda_2[0, 35] - lambda_2[0, 36] - 10*lambda_2[0, 37] - 40*lambda_2[0, 41] - 40*lambda_2[0, 45] - 500*lambda_2[0, 50] - 500*lambda_2[0, 56] - lambda_2[0, 66] - lambda_2[0, 67] - 100*lambda_2[0, 68] - 20*lambda_2[0, 69] - 20*lambda_2[0, 70] - 200*lambda_2[0, 71] - 800*lambda_2[0, 75] - 1600*lambda_2[0, 79] - 800*lambda_2[0, 83] - 1600*lambda_2[0, 88] - 10000*lambda_2[0, 93] - 250000*lambda_2[0, 99] - 10000*lambda_2[0, 105] - 250000*lambda_2[0, 112] - lambda_2[0, 122] - lambda_2[0, 123] - 1000*lambda_2[0, 124] - 300*lambda_2[0, 125] - 300*lambda_2[0, 126] - 3000*lambda_2[0, 127] - 12000*lambda_2[0, 131] - 64000*lambda_2[0, 135] - 12000*lambda_2[0, 139] - 64000*lambda_2[0, 144] - 150000*lambda_2[0, 149] - 125000000*lambda_2[0, 155] - 150000*lambda_2[0, 161] - 125000000*lambda_2[0, 168] - 20*lambda_2[0, 175] - 20*lambda_2[0, 176] - 2000*lambda_2[0, 177] - 32000*lambda_2[0, 181] - 32000*lambda_2[0, 185] - 5000000*lambda_2[0, 190] - 5000000*lambda_2[0, 196] - lambda_2[0, 201] - 10*lambda_2[0, 202] - 10*lambda_2[0, 203] - 40*lambda_2[0, 207] - 40*lambda_2[0, 208] - 400*lambda_2[0, 209] - 40*lambda_2[0, 213] - 40*lambda_2[0, 214] - 400*lambda_2[0, 215] - 1600*lambda_2[0, 219] - 500*lambda_2[0, 223] - 500*lambda_2[0, 224] - 5000*lambda_2[0, 225] - 20000*lambda_2[0, 229] - 20000*lambda_2[0, 233] - 500*lambda_2[0, 238] - 500*lambda_2[0, 239] - 5000*lambda_2[0, 240] - 20000*lambda_2[0, 244] - 20000*lambda_2[0, 248] - 250000*lambda_2[0, 253] - lambda_2[0, 259] - lambda_2[0, 260] - 10*lambda_2[0, 261] - 10*lambda_2[0, 262] - 100*lambda_2[0, 263] - 100*lambda_2[0, 264] - 20*lambda_2[0, 265] - 200*lambda_2[0, 266] - 200*lambda_2[0, 267] - 40*lambda_2[0, 274] - 40*lambda_2[0, 275] - 4000*lambda_2[0, 276] - 800*lambda_2[0, 277] - 800*lambda_2[0, 278] - 8000*lambda_2[0, 279] - 1600*lambda_2[0, 283] - 1600*lambda_2[0, 284] - 16000*lambda_2[0, 285] - 40*lambda_2[0, 292] - 40*lambda_2[0, 293] - 4000*lambda_2[0, 294] - 800*lambda_2[0, 295] - 800*lambda_2[0, 296] - 8000*lambda_2[0, 297] - 32000*lambda_2[0, 301] - 64000*lambda_2[0, 305] - 1600*lambda_2[0, 309] - 1600*lambda_2[0, 310] - 16000*lambda_2[0, 311] - 64000*lambda_2[0, 315] - 500*lambda_2[0, 322] - 500*lambda_2[0, 323] - 50000*lambda_2[0, 324] - 10000*lambda_2[0, 325] - 10000*lambda_2[0, 326] - 100000*lambda_2[0, 327] - 400000*lambda_2[0, 331] - 800000*lambda_2[0, 335] - 400000*lambda_2[0, 339] - 800000*lambda_2[0, 344] - 250000*lambda_2[0, 349] - 250000*lambda_2[0, 350] - 2500000*lambda_2[0, 351] - 10000000*lambda_2[0, 355] - 10000000*lambda_2[0, 359] - 500*lambda_2[0, 367] - 500*lambda_2[0, 368] - 50000*lambda_2[0, 369] - 10000*lambda_2[0, 370] - 10000*lambda_2[0, 371] - 100000*lambda_2[0, 372] - 400000*lambda_2[0, 376] - 800000*lambda_2[0, 380] - 400000*lambda_2[0, 384] - 800000*lambda_2[0, 389] - 5000000*lambda_2[0, 394] - 125000000*lambda_2[0, 400] - 250000*lambda_2[0, 406] - 250000*lambda_2[0, 407] - 2500000*lambda_2[0, 408] - 10000000*lambda_2[0, 412] - 10000000*lambda_2[0, 416] - 125000000*lambda_2[0, 421] - 10*lambda_2[0, 424] - 40*lambda_2[0, 426] - 400*lambda_2[0, 427] - 400*lambda_2[0, 428] - 40*lambda_2[0, 430] - 400*lambda_2[0, 431] - 400*lambda_2[0, 432] - 1600*lambda_2[0, 436] - 1600*lambda_2[0, 437] - 16000*lambda_2[0, 438] - 500*lambda_2[0, 440] - 5000*lambda_2[0, 441] - 5000*lambda_2[0, 442] - 20000*lambda_2[0, 446] - 20000*lambda_2[0, 447] - 200000*lambda_2[0, 448] - 20000*lambda_2[0, 452] - 20000*lambda_2[0, 453] - 200000*lambda_2[0, 454] - 800000*lambda_2[0, 458] - 500*lambda_2[0, 460] - 5000*lambda_2[0, 461] - 5000*lambda_2[0, 462] - 20000*lambda_2[0, 466] - 20000*lambda_2[0, 467] - 200000*lambda_2[0, 468] - 20000*lambda_2[0, 472] - 20000*lambda_2[0, 473] - 200000*lambda_2[0, 474] - 800000*lambda_2[0, 478] - 250000*lambda_2[0, 482] - 250000*lambda_2[0, 483] - 2500000*lambda_2[0, 484] - 10000000*lambda_2[0, 488] - 10000000*lambda_2[0, 492] >= -l*V[0, 6] + 2*V[0, 3]*t0[0, 2] - 2*V[0, 6] + V[0, 7]- objc]
	constraints += [-lambda_2[0, 3] - 20*lambda_2[0, 11] - 300*lambda_2[0, 19] - 4000*lambda_2[0, 27] - lambda_2[0, 35] - lambda_2[0, 36] - 10*lambda_2[0, 37] - 40*lambda_2[0, 41] - 40*lambda_2[0, 45] - 500*lambda_2[0, 50] - 500*lambda_2[0, 56] - lambda_2[0, 66] - lambda_2[0, 67] - 100*lambda_2[0, 68] - 20*lambda_2[0, 69] - 20*lambda_2[0, 70] - 200*lambda_2[0, 71] - 800*lambda_2[0, 75] - 1600*lambda_2[0, 79] - 800*lambda_2[0, 83] - 1600*lambda_2[0, 88] - 10000*lambda_2[0, 93] - 250000*lambda_2[0, 99] - 10000*lambda_2[0, 105] - 250000*lambda_2[0, 112] - lambda_2[0, 122] - lambda_2[0, 123] - 1000*lambda_2[0, 124] - 300*lambda_2[0, 125] - 300*lambda_2[0, 126] - 3000*lambda_2[0, 127] - 12000*lambda_2[0, 131] - 64000*lambda_2[0, 135] - 12000*lambda_2[0, 139] - 64000*lambda_2[0, 144] - 150000*lambda_2[0, 149] - 125000000*lambda_2[0, 155] - 150000*lambda_2[0, 161] - 125000000*lambda_2[0, 168] - 20*lambda_2[0, 175] - 20*lambda_2[0, 176] - 2000*lambda_2[0, 177] - 32000*lambda_2[0, 181] - 32000*lambda_2[0, 185] - 5000000*lambda_2[0, 190] - 5000000*lambda_2[0, 196] - lambda_2[0, 201] - 10*lambda_2[0, 202] - 10*lambda_2[0, 203] - 40*lambda_2[0, 207] - 40*lambda_2[0, 208] - 400*lambda_2[0, 209] - 40*lambda_2[0, 213] - 40*lambda_2[0, 214] - 400*lambda_2[0, 215] - 1600*lambda_2[0, 219] - 500*lambda_2[0, 223] - 500*lambda_2[0, 224] - 5000*lambda_2[0, 225] - 20000*lambda_2[0, 229] - 20000*lambda_2[0, 233] - 500*lambda_2[0, 238] - 500*lambda_2[0, 239] - 5000*lambda_2[0, 240] - 20000*lambda_2[0, 244] - 20000*lambda_2[0, 248] - 250000*lambda_2[0, 253] - lambda_2[0, 259] - lambda_2[0, 260] - 10*lambda_2[0, 261] - 10*lambda_2[0, 262] - 100*lambda_2[0, 263] - 100*lambda_2[0, 264] - 20*lambda_2[0, 265] - 200*lambda_2[0, 266] - 200*lambda_2[0, 267] - 40*lambda_2[0, 274] - 40*lambda_2[0, 275] - 4000*lambda_2[0, 276] - 800*lambda_2[0, 277] - 800*lambda_2[0, 278] - 8000*lambda_2[0, 279] - 1600*lambda_2[0, 283] - 1600*lambda_2[0, 284] - 16000*lambda_2[0, 285] - 40*lambda_2[0, 292] - 40*lambda_2[0, 293] - 4000*lambda_2[0, 294] - 800*lambda_2[0, 295] - 800*lambda_2[0, 296] - 8000*lambda_2[0, 297] - 32000*lambda_2[0, 301] - 64000*lambda_2[0, 305] - 1600*lambda_2[0, 309] - 1600*lambda_2[0, 310] - 16000*lambda_2[0, 311] - 64000*lambda_2[0, 315] - 500*lambda_2[0, 322] - 500*lambda_2[0, 323] - 50000*lambda_2[0, 324] - 10000*lambda_2[0, 325] - 10000*lambda_2[0, 326] - 100000*lambda_2[0, 327] - 400000*lambda_2[0, 331] - 800000*lambda_2[0, 335] - 400000*lambda_2[0, 339] - 800000*lambda_2[0, 344] - 250000*lambda_2[0, 349] - 250000*lambda_2[0, 350] - 2500000*lambda_2[0, 351] - 10000000*lambda_2[0, 355] - 10000000*lambda_2[0, 359] - 500*lambda_2[0, 367] - 500*lambda_2[0, 368] - 50000*lambda_2[0, 369] - 10000*lambda_2[0, 370] - 10000*lambda_2[0, 371] - 100000*lambda_2[0, 372] - 400000*lambda_2[0, 376] - 800000*lambda_2[0, 380] - 400000*lambda_2[0, 384] - 800000*lambda_2[0, 389] - 5000000*lambda_2[0, 394] - 125000000*lambda_2[0, 400] - 250000*lambda_2[0, 406] - 250000*lambda_2[0, 407] - 2500000*lambda_2[0, 408] - 10000000*lambda_2[0, 412] - 10000000*lambda_2[0, 416] - 125000000*lambda_2[0, 421] - 10*lambda_2[0, 424] - 40*lambda_2[0, 426] - 400*lambda_2[0, 427] - 400*lambda_2[0, 428] - 40*lambda_2[0, 430] - 400*lambda_2[0, 431] - 400*lambda_2[0, 432] - 1600*lambda_2[0, 436] - 1600*lambda_2[0, 437] - 16000*lambda_2[0, 438] - 500*lambda_2[0, 440] - 5000*lambda_2[0, 441] - 5000*lambda_2[0, 442] - 20000*lambda_2[0, 446] - 20000*lambda_2[0, 447] - 200000*lambda_2[0, 448] - 20000*lambda_2[0, 452] - 20000*lambda_2[0, 453] - 200000*lambda_2[0, 454] - 800000*lambda_2[0, 458] - 500*lambda_2[0, 460] - 5000*lambda_2[0, 461] - 5000*lambda_2[0, 462] - 20000*lambda_2[0, 466] - 20000*lambda_2[0, 467] - 200000*lambda_2[0, 468] - 20000*lambda_2[0, 472] - 20000*lambda_2[0, 473] - 200000*lambda_2[0, 474] - 800000*lambda_2[0, 478] - 250000*lambda_2[0, 482] - 250000*lambda_2[0, 483] - 2500000*lambda_2[0, 484] - 10000000*lambda_2[0, 488] - 10000000*lambda_2[0, 492] <= -l*V[0, 6] + 2*V[0, 3]*t0[0, 2] - 2*V[0, 6] + V[0, 7]+ objc]
	constraints += [lambda_2[0, 35] + 2*lambda_2[0, 66] + 20*lambda_2[0, 69] + 3*lambda_2[0, 122] + 300*lambda_2[0, 125] + 40*lambda_2[0, 175] + lambda_2[0, 201] + 10*lambda_2[0, 202] + 40*lambda_2[0, 207] + 40*lambda_2[0, 213] + 500*lambda_2[0, 223] + 500*lambda_2[0, 238] + 2*lambda_2[0, 259] + lambda_2[0, 260] + 20*lambda_2[0, 261] + 100*lambda_2[0, 263] + 20*lambda_2[0, 265] + 200*lambda_2[0, 266] + 80*lambda_2[0, 274] + 800*lambda_2[0, 277] + 1600*lambda_2[0, 283] + 80*lambda_2[0, 292] + 800*lambda_2[0, 295] + 1600*lambda_2[0, 309] + 1000*lambda_2[0, 322] + 10000*lambda_2[0, 325] + 250000*lambda_2[0, 349] + 1000*lambda_2[0, 367] + 10000*lambda_2[0, 370] + 250000*lambda_2[0, 406] + 10*lambda_2[0, 424] + 40*lambda_2[0, 426] + 400*lambda_2[0, 427] + 40*lambda_2[0, 430] + 400*lambda_2[0, 431] + 1600*lambda_2[0, 436] + 500*lambda_2[0, 440] + 5000*lambda_2[0, 441] + 20000*lambda_2[0, 446] + 20000*lambda_2[0, 452] + 500*lambda_2[0, 460] + 5000*lambda_2[0, 461] + 20000*lambda_2[0, 466] + 20000*lambda_2[0, 472] + 250000*lambda_2[0, 482] >= -l*V[0, 35] + V[0, 2] + 2*V[0, 26]*t0[0, 2] - 2*V[0, 35] + V[0, 40]- objc]
	constraints += [lambda_2[0, 35] + 2*lambda_2[0, 66] + 20*lambda_2[0, 69] + 3*lambda_2[0, 122] + 300*lambda_2[0, 125] + 40*lambda_2[0, 175] + lambda_2[0, 201] + 10*lambda_2[0, 202] + 40*lambda_2[0, 207] + 40*lambda_2[0, 213] + 500*lambda_2[0, 223] + 500*lambda_2[0, 238] + 2*lambda_2[0, 259] + lambda_2[0, 260] + 20*lambda_2[0, 261] + 100*lambda_2[0, 263] + 20*lambda_2[0, 265] + 200*lambda_2[0, 266] + 80*lambda_2[0, 274] + 800*lambda_2[0, 277] + 1600*lambda_2[0, 283] + 80*lambda_2[0, 292] + 800*lambda_2[0, 295] + 1600*lambda_2[0, 309] + 1000*lambda_2[0, 322] + 10000*lambda_2[0, 325] + 250000*lambda_2[0, 349] + 1000*lambda_2[0, 367] + 10000*lambda_2[0, 370] + 250000*lambda_2[0, 406] + 10*lambda_2[0, 424] + 40*lambda_2[0, 426] + 400*lambda_2[0, 427] + 40*lambda_2[0, 430] + 400*lambda_2[0, 431] + 1600*lambda_2[0, 436] + 500*lambda_2[0, 440] + 5000*lambda_2[0, 441] + 20000*lambda_2[0, 446] + 20000*lambda_2[0, 452] + 500*lambda_2[0, 460] + 5000*lambda_2[0, 461] + 20000*lambda_2[0, 466] + 20000*lambda_2[0, 472] + 250000*lambda_2[0, 482] <= -l*V[0, 35] + V[0, 2] + 2*V[0, 26]*t0[0, 2] - 2*V[0, 35] + V[0, 40]+ objc]
	constraints += [-lambda_2[0, 66] - 3*lambda_2[0, 122] - 20*lambda_2[0, 175] - lambda_2[0, 259] - 10*lambda_2[0, 261] - 40*lambda_2[0, 274] - 40*lambda_2[0, 292] - 500*lambda_2[0, 322] - 500*lambda_2[0, 367] >= -l*V[0, 73] + V[0, 25] + 2*V[0, 55]*t0[0, 2] - 2*V[0, 73] + V[0, 83]- objc]
	constraints += [-lambda_2[0, 66] - 3*lambda_2[0, 122] - 20*lambda_2[0, 175] - lambda_2[0, 259] - 10*lambda_2[0, 261] - 40*lambda_2[0, 274] - 40*lambda_2[0, 292] - 500*lambda_2[0, 322] - 500*lambda_2[0, 367] <= -l*V[0, 73] + V[0, 25] + 2*V[0, 55]*t0[0, 2] - 2*V[0, 73] + V[0, 83]+ objc]
	constraints += [lambda_2[0, 122] >= V[0, 53]- objc]
	constraints += [lambda_2[0, 122] <= V[0, 53]+ objc]
	constraints += [lambda_2[0, 36] + 2*lambda_2[0, 67] + 20*lambda_2[0, 70] + 3*lambda_2[0, 123] + 300*lambda_2[0, 126] + 40*lambda_2[0, 176] + lambda_2[0, 201] + 10*lambda_2[0, 203] + 40*lambda_2[0, 208] + 40*lambda_2[0, 214] + 500*lambda_2[0, 224] + 500*lambda_2[0, 239] + lambda_2[0, 259] + 2*lambda_2[0, 260] + 20*lambda_2[0, 262] + 100*lambda_2[0, 264] + 20*lambda_2[0, 265] + 200*lambda_2[0, 267] + 80*lambda_2[0, 275] + 800*lambda_2[0, 278] + 1600*lambda_2[0, 284] + 80*lambda_2[0, 293] + 800*lambda_2[0, 296] + 1600*lambda_2[0, 310] + 1000*lambda_2[0, 323] + 10000*lambda_2[0, 326] + 250000*lambda_2[0, 350] + 1000*lambda_2[0, 368] + 10000*lambda_2[0, 371] + 250000*lambda_2[0, 407] + 10*lambda_2[0, 424] + 40*lambda_2[0, 426] + 400*lambda_2[0, 428] + 40*lambda_2[0, 430] + 400*lambda_2[0, 432] + 1600*lambda_2[0, 437] + 500*lambda_2[0, 440] + 5000*lambda_2[0, 442] + 20000*lambda_2[0, 447] + 20000*lambda_2[0, 453] + 500*lambda_2[0, 460] + 5000*lambda_2[0, 462] + 20000*lambda_2[0, 467] + 20000*lambda_2[0, 473] + 250000*lambda_2[0, 483] >= -l*V[0, 36] - V[0, 1] - 50*V[0, 14] + 2*V[0, 27]*t0[0, 2] - 2*V[0, 36] + V[0, 41]- objc]
	constraints += [lambda_2[0, 36] + 2*lambda_2[0, 67] + 20*lambda_2[0, 70] + 3*lambda_2[0, 123] + 300*lambda_2[0, 126] + 40*lambda_2[0, 176] + lambda_2[0, 201] + 10*lambda_2[0, 203] + 40*lambda_2[0, 208] + 40*lambda_2[0, 214] + 500*lambda_2[0, 224] + 500*lambda_2[0, 239] + lambda_2[0, 259] + 2*lambda_2[0, 260] + 20*lambda_2[0, 262] + 100*lambda_2[0, 264] + 20*lambda_2[0, 265] + 200*lambda_2[0, 267] + 80*lambda_2[0, 275] + 800*lambda_2[0, 278] + 1600*lambda_2[0, 284] + 80*lambda_2[0, 293] + 800*lambda_2[0, 296] + 1600*lambda_2[0, 310] + 1000*lambda_2[0, 323] + 10000*lambda_2[0, 326] + 250000*lambda_2[0, 350] + 1000*lambda_2[0, 368] + 10000*lambda_2[0, 371] + 250000*lambda_2[0, 407] + 10*lambda_2[0, 424] + 40*lambda_2[0, 426] + 400*lambda_2[0, 428] + 40*lambda_2[0, 430] + 400*lambda_2[0, 432] + 1600*lambda_2[0, 437] + 500*lambda_2[0, 440] + 5000*lambda_2[0, 442] + 20000*lambda_2[0, 447] + 20000*lambda_2[0, 453] + 500*lambda_2[0, 460] + 5000*lambda_2[0, 462] + 20000*lambda_2[0, 467] + 20000*lambda_2[0, 473] + 250000*lambda_2[0, 483] <= -l*V[0, 36] - V[0, 1] - 50*V[0, 14] + 2*V[0, 27]*t0[0, 2] - 2*V[0, 36] + V[0, 41]+ objc]
	constraints += [-lambda_2[0, 201] - 2*lambda_2[0, 259] - 2*lambda_2[0, 260] - 20*lambda_2[0, 265] - 10*lambda_2[0, 424] - 40*lambda_2[0, 426] - 40*lambda_2[0, 430] - 500*lambda_2[0, 440] - 500*lambda_2[0, 460] >= -l*V[0, 119] - 2*V[0, 9] + 2*V[0, 10] - 50*V[0, 78] + 2*V[0, 109]*t0[0, 2] - 2*V[0, 119] + V[0, 129]- objc]
	constraints += [-lambda_2[0, 201] - 2*lambda_2[0, 259] - 2*lambda_2[0, 260] - 20*lambda_2[0, 265] - 10*lambda_2[0, 424] - 40*lambda_2[0, 426] - 40*lambda_2[0, 430] - 500*lambda_2[0, 440] - 500*lambda_2[0, 460] <= -l*V[0, 119] - 2*V[0, 9] + 2*V[0, 10] - 50*V[0, 78] + 2*V[0, 109]*t0[0, 2] - 2*V[0, 119] + V[0, 129]+ objc]
	constraints += [lambda_2[0, 259] >= -3*V[0, 17] + 2*V[0, 54]- objc]
	constraints += [lambda_2[0, 259] <= -3*V[0, 17] + 2*V[0, 54]+ objc]
	constraints += [-lambda_2[0, 67] - 3*lambda_2[0, 123] - 20*lambda_2[0, 176] - lambda_2[0, 260] - 10*lambda_2[0, 262] - 40*lambda_2[0, 275] - 40*lambda_2[0, 293] - 500*lambda_2[0, 323] - 500*lambda_2[0, 368] >= -l*V[0, 74] - V[0, 25] + 2*V[0, 56]*t0[0, 2] - 2*V[0, 74] - 50*V[0, 79] + V[0, 84]- objc]
	constraints += [-lambda_2[0, 67] - 3*lambda_2[0, 123] - 20*lambda_2[0, 176] - lambda_2[0, 260] - 10*lambda_2[0, 262] - 40*lambda_2[0, 275] - 40*lambda_2[0, 293] - 500*lambda_2[0, 323] - 500*lambda_2[0, 368] <= -l*V[0, 74] - V[0, 25] + 2*V[0, 56]*t0[0, 2] - 2*V[0, 74] - 50*V[0, 79] + V[0, 84]+ objc]
	constraints += [lambda_2[0, 260] >= 3*V[0, 18] - 2*V[0, 53]- objc]
	constraints += [lambda_2[0, 260] <= 3*V[0, 18] - 2*V[0, 53]+ objc]
	constraints += [lambda_2[0, 123] >= -V[0, 54]- objc]
	constraints += [lambda_2[0, 123] <= -V[0, 54]+ objc]
	constraints += [lambda_2[0, 37] + 20*lambda_2[0, 68] + 20*lambda_2[0, 71] + 300*lambda_2[0, 124] + 300*lambda_2[0, 127] + 400*lambda_2[0, 177] + lambda_2[0, 202] + lambda_2[0, 203] + 40*lambda_2[0, 209] + 40*lambda_2[0, 215] + 500*lambda_2[0, 225] + 500*lambda_2[0, 240] + lambda_2[0, 261] + lambda_2[0, 262] + 20*lambda_2[0, 263] + 20*lambda_2[0, 264] + 20*lambda_2[0, 266] + 20*lambda_2[0, 267] + 800*lambda_2[0, 276] + 800*lambda_2[0, 279] + 1600*lambda_2[0, 285] + 800*lambda_2[0, 294] + 800*lambda_2[0, 297] + 1600*lambda_2[0, 311] + 10000*lambda_2[0, 324] + 10000*lambda_2[0, 327] + 250000*lambda_2[0, 351] + 10000*lambda_2[0, 369] + 10000*lambda_2[0, 372] + 250000*lambda_2[0, 408] + lambda_2[0, 424] + 40*lambda_2[0, 427] + 40*lambda_2[0, 428] + 40*lambda_2[0, 431] + 40*lambda_2[0, 432] + 1600*lambda_2[0, 438] + 500*lambda_2[0, 441] + 500*lambda_2[0, 442] + 20000*lambda_2[0, 448] + 20000*lambda_2[0, 454] + 500*lambda_2[0, 461] + 500*lambda_2[0, 462] + 20000*lambda_2[0, 468] + 20000*lambda_2[0, 474] + 250000*lambda_2[0, 484] >= -l*V[0, 37] + 4*V[0, 11]*t0[0, 2] - 2*V[0, 37]*t0[0, 2] - 4*V[0, 37] + V[0, 38] + V[0, 42]- objc]
	constraints += [lambda_2[0, 37] + 20*lambda_2[0, 68] + 20*lambda_2[0, 71] + 300*lambda_2[0, 124] + 300*lambda_2[0, 127] + 400*lambda_2[0, 177] + lambda_2[0, 202] + lambda_2[0, 203] + 40*lambda_2[0, 209] + 40*lambda_2[0, 215] + 500*lambda_2[0, 225] + 500*lambda_2[0, 240] + lambda_2[0, 261] + lambda_2[0, 262] + 20*lambda_2[0, 263] + 20*lambda_2[0, 264] + 20*lambda_2[0, 266] + 20*lambda_2[0, 267] + 800*lambda_2[0, 276] + 800*lambda_2[0, 279] + 1600*lambda_2[0, 285] + 800*lambda_2[0, 294] + 800*lambda_2[0, 297] + 1600*lambda_2[0, 311] + 10000*lambda_2[0, 324] + 10000*lambda_2[0, 327] + 250000*lambda_2[0, 351] + 10000*lambda_2[0, 369] + 10000*lambda_2[0, 372] + 250000*lambda_2[0, 408] + lambda_2[0, 424] + 40*lambda_2[0, 427] + 40*lambda_2[0, 428] + 40*lambda_2[0, 431] + 40*lambda_2[0, 432] + 1600*lambda_2[0, 438] + 500*lambda_2[0, 441] + 500*lambda_2[0, 442] + 20000*lambda_2[0, 448] + 20000*lambda_2[0, 454] + 500*lambda_2[0, 461] + 500*lambda_2[0, 462] + 20000*lambda_2[0, 468] + 20000*lambda_2[0, 474] + 250000*lambda_2[0, 484] <= -l*V[0, 37] + 4*V[0, 11]*t0[0, 2] - 2*V[0, 37]*t0[0, 2] - 4*V[0, 37] + V[0, 38] + V[0, 42]+ objc]
	constraints += [-lambda_2[0, 202] - 2*lambda_2[0, 261] - 20*lambda_2[0, 263] - 20*lambda_2[0, 266] - lambda_2[0, 424] - 40*lambda_2[0, 427] - 40*lambda_2[0, 431] - 500*lambda_2[0, 441] - 500*lambda_2[0, 461] >= -l*V[0, 120] + V[0, 27] + 4*V[0, 57]*t0[0, 2] - 2*V[0, 120]*t0[0, 2] - 4*V[0, 120] + V[0, 122] + V[0, 130]- objc]
	constraints += [-lambda_2[0, 202] - 2*lambda_2[0, 261] - 20*lambda_2[0, 263] - 20*lambda_2[0, 266] - lambda_2[0, 424] - 40*lambda_2[0, 427] - 40*lambda_2[0, 431] - 500*lambda_2[0, 441] - 500*lambda_2[0, 461] <= -l*V[0, 120] + V[0, 27] + 4*V[0, 57]*t0[0, 2] - 2*V[0, 120]*t0[0, 2] - 4*V[0, 120] + V[0, 122] + V[0, 130]+ objc]
	constraints += [lambda_2[0, 261] >= V[0, 109]- objc]
	constraints += [lambda_2[0, 261] <= V[0, 109]+ objc]
	constraints += [-lambda_2[0, 203] - 2*lambda_2[0, 262] - 20*lambda_2[0, 264] - 20*lambda_2[0, 267] - lambda_2[0, 424] - 40*lambda_2[0, 428] - 40*lambda_2[0, 432] - 500*lambda_2[0, 442] - 500*lambda_2[0, 462] >= -l*V[0, 121] - V[0, 26] + 4*V[0, 58]*t0[0, 2] - 50*V[0, 80] - 2*V[0, 121]*t0[0, 2] - 4*V[0, 121] + V[0, 123] + V[0, 131]- objc]
	constraints += [-lambda_2[0, 203] - 2*lambda_2[0, 262] - 20*lambda_2[0, 264] - 20*lambda_2[0, 267] - lambda_2[0, 424] - 40*lambda_2[0, 428] - 40*lambda_2[0, 432] - 500*lambda_2[0, 442] - 500*lambda_2[0, 462] <= -l*V[0, 121] - V[0, 26] + 4*V[0, 58]*t0[0, 2] - 50*V[0, 80] - 2*V[0, 121]*t0[0, 2] - 4*V[0, 121] + V[0, 123] + V[0, 131]+ objc]
	constraints += [lambda_2[0, 424] >= -2*V[0, 55] + 2*V[0, 56]- objc]
	constraints += [lambda_2[0, 424] <= -2*V[0, 55] + 2*V[0, 56]+ objc]
	constraints += [lambda_2[0, 262] >= -V[0, 109]- objc]
	constraints += [lambda_2[0, 262] <= -V[0, 109]+ objc]
	constraints += [-lambda_2[0, 68] - 30*lambda_2[0, 124] - 20*lambda_2[0, 177] - lambda_2[0, 263] - lambda_2[0, 264] - 40*lambda_2[0, 276] - 40*lambda_2[0, 294] - 500*lambda_2[0, 324] - 500*lambda_2[0, 369] >= -l*V[0, 75] + 6*V[0, 19]*t0[0, 2] - 4*V[0, 75]*t0[0, 2] - 6*V[0, 75] + V[0, 85] + V[0, 124]- objc]
	constraints += [-lambda_2[0, 68] - 30*lambda_2[0, 124] - 20*lambda_2[0, 177] - lambda_2[0, 263] - lambda_2[0, 264] - 40*lambda_2[0, 276] - 40*lambda_2[0, 294] - 500*lambda_2[0, 324] - 500*lambda_2[0, 369] <= -l*V[0, 75] + 6*V[0, 19]*t0[0, 2] - 4*V[0, 75]*t0[0, 2] - 6*V[0, 75] + V[0, 85] + V[0, 124]+ objc]
	constraints += [lambda_2[0, 263] >= V[0, 58]- objc]
	constraints += [lambda_2[0, 263] <= V[0, 58]+ objc]
	constraints += [lambda_2[0, 264] >= -V[0, 57]- objc]
	constraints += [lambda_2[0, 264] <= -V[0, 57]+ objc]
	constraints += [lambda_2[0, 124] == 0]
	constraints += [lambda_2[0, 41] + 20*lambda_2[0, 75] + 80*lambda_2[0, 79] + 300*lambda_2[0, 131] + 4800*lambda_2[0, 135] + 1600*lambda_2[0, 181] + lambda_2[0, 207] + lambda_2[0, 208] + 10*lambda_2[0, 209] + 40*lambda_2[0, 219] + 500*lambda_2[0, 229] + 500*lambda_2[0, 244] + lambda_2[0, 274] + lambda_2[0, 275] + 100*lambda_2[0, 276] + 20*lambda_2[0, 277] + 20*lambda_2[0, 278] + 200*lambda_2[0, 279] + 80*lambda_2[0, 283] + 80*lambda_2[0, 284] + 800*lambda_2[0, 285] + 800*lambda_2[0, 301] + 3200*lambda_2[0, 305] + 1600*lambda_2[0, 315] + 10000*lambda_2[0, 331] + 40000*lambda_2[0, 335] + 250000*lambda_2[0, 355] + 10000*lambda_2[0, 376] + 40000*lambda_2[0, 380] + 250000*lambda_2[0, 412] + lambda_2[0, 426] + 10*lambda_2[0, 427] + 10*lambda_2[0, 428] + 40*lambda_2[0, 436] + 40*lambda_2[0, 437] + 400*lambda_2[0, 438] + 500*lambda_2[0, 446] + 500*lambda_2[0, 447] + 5000*lambda_2[0, 448] + 20000*lambda_2[0, 458] + 500*lambda_2[0, 466] + 500*lambda_2[0, 467] + 5000*lambda_2[0, 468] + 20000*lambda_2[0, 478] + 250000*lambda_2[0, 488] >= -l*V[0, 38] + 2*V[0, 30]*t0[0, 2] - 2.8*V[0, 37]*t0[0, 0] - 2*V[0, 37]*t0[0, 1] - 2*V[0, 38] + V[0, 39] + V[0, 43]- objc]
	constraints += [lambda_2[0, 41] + 20*lambda_2[0, 75] + 80*lambda_2[0, 79] + 300*lambda_2[0, 131] + 4800*lambda_2[0, 135] + 1600*lambda_2[0, 181] + lambda_2[0, 207] + lambda_2[0, 208] + 10*lambda_2[0, 209] + 40*lambda_2[0, 219] + 500*lambda_2[0, 229] + 500*lambda_2[0, 244] + lambda_2[0, 274] + lambda_2[0, 275] + 100*lambda_2[0, 276] + 20*lambda_2[0, 277] + 20*lambda_2[0, 278] + 200*lambda_2[0, 279] + 80*lambda_2[0, 283] + 80*lambda_2[0, 284] + 800*lambda_2[0, 285] + 800*lambda_2[0, 301] + 3200*lambda_2[0, 305] + 1600*lambda_2[0, 315] + 10000*lambda_2[0, 331] + 40000*lambda_2[0, 335] + 250000*lambda_2[0, 355] + 10000*lambda_2[0, 376] + 40000*lambda_2[0, 380] + 250000*lambda_2[0, 412] + lambda_2[0, 426] + 10*lambda_2[0, 427] + 10*lambda_2[0, 428] + 40*lambda_2[0, 436] + 40*lambda_2[0, 437] + 400*lambda_2[0, 438] + 500*lambda_2[0, 446] + 500*lambda_2[0, 447] + 5000*lambda_2[0, 448] + 20000*lambda_2[0, 458] + 500*lambda_2[0, 466] + 500*lambda_2[0, 467] + 5000*lambda_2[0, 468] + 20000*lambda_2[0, 478] + 250000*lambda_2[0, 488] <= -l*V[0, 38] + 2*V[0, 30]*t0[0, 2] - 2.8*V[0, 37]*t0[0, 0] - 2*V[0, 37]*t0[0, 1] - 2*V[0, 38] + V[0, 39] + V[0, 43]+ objc]
	constraints += [-lambda_2[0, 207] - 2*lambda_2[0, 274] - 20*lambda_2[0, 277] - 80*lambda_2[0, 283] - lambda_2[0, 426] - 10*lambda_2[0, 427] - 40*lambda_2[0, 436] - 500*lambda_2[0, 446] - 500*lambda_2[0, 466] >= -l*V[0, 122] + V[0, 29] + 2*V[0, 111]*t0[0, 2] - 2.8*V[0, 120]*t0[0, 0] - 2*V[0, 120]*t0[0, 1] - 2*V[0, 122] + V[0, 125] + V[0, 132]- objc]
	constraints += [-lambda_2[0, 207] - 2*lambda_2[0, 274] - 20*lambda_2[0, 277] - 80*lambda_2[0, 283] - lambda_2[0, 426] - 10*lambda_2[0, 427] - 40*lambda_2[0, 436] - 500*lambda_2[0, 446] - 500*lambda_2[0, 466] <= -l*V[0, 122] + V[0, 29] + 2*V[0, 111]*t0[0, 2] - 2.8*V[0, 120]*t0[0, 0] - 2*V[0, 120]*t0[0, 1] - 2*V[0, 122] + V[0, 125] + V[0, 132]+ objc]
	constraints += [lambda_2[0, 274] >= V[0, 110]- objc]
	constraints += [lambda_2[0, 274] <= V[0, 110]+ objc]
	constraints += [-lambda_2[0, 208] - 2*lambda_2[0, 275] - 20*lambda_2[0, 278] - 80*lambda_2[0, 284] - lambda_2[0, 426] - 10*lambda_2[0, 428] - 40*lambda_2[0, 437] - 500*lambda_2[0, 447] - 500*lambda_2[0, 467] >= -l*V[0, 123] - V[0, 28] - 50*V[0, 81] + 2*V[0, 112]*t0[0, 2] - 2.8*V[0, 121]*t0[0, 0] - 2*V[0, 121]*t0[0, 1] - 2*V[0, 123] + V[0, 126] + V[0, 133]- objc]
	constraints += [-lambda_2[0, 208] - 2*lambda_2[0, 275] - 20*lambda_2[0, 278] - 80*lambda_2[0, 284] - lambda_2[0, 426] - 10*lambda_2[0, 428] - 40*lambda_2[0, 437] - 500*lambda_2[0, 447] - 500*lambda_2[0, 467] <= -l*V[0, 123] - V[0, 28] - 50*V[0, 81] + 2*V[0, 112]*t0[0, 2] - 2.8*V[0, 121]*t0[0, 0] - 2*V[0, 121]*t0[0, 1] - 2*V[0, 123] + V[0, 126] + V[0, 133]+ objc]
	constraints += [lambda_2[0, 426] >= -2*V[0, 59] + 2*V[0, 60]- objc]
	constraints += [lambda_2[0, 426] <= -2*V[0, 59] + 2*V[0, 60]+ objc]
	constraints += [lambda_2[0, 275] >= -V[0, 110]- objc]
	constraints += [lambda_2[0, 275] <= -V[0, 110]+ objc]
	constraints += [-lambda_2[0, 209] - 20*lambda_2[0, 276] - 20*lambda_2[0, 279] - 80*lambda_2[0, 285] - lambda_2[0, 427] - lambda_2[0, 428] - 40*lambda_2[0, 438] - 500*lambda_2[0, 448] - 500*lambda_2[0, 468] >= -l*V[0, 124] + 4*V[0, 61]*t0[0, 2] - 5.6*V[0, 75]*t0[0, 0] - 4*V[0, 75]*t0[0, 1] + 2*V[0, 76] - 2*V[0, 124]*t0[0, 2] - 4*V[0, 124] + V[0, 127] + V[0, 134]- objc]
	constraints += [-lambda_2[0, 209] - 20*lambda_2[0, 276] - 20*lambda_2[0, 279] - 80*lambda_2[0, 285] - lambda_2[0, 427] - lambda_2[0, 428] - 40*lambda_2[0, 438] - 500*lambda_2[0, 448] - 500*lambda_2[0, 468] <= -l*V[0, 124] + 4*V[0, 61]*t0[0, 2] - 5.6*V[0, 75]*t0[0, 0] - 4*V[0, 75]*t0[0, 1] + 2*V[0, 76] - 2*V[0, 124]*t0[0, 2] - 4*V[0, 124] + V[0, 127] + V[0, 134]+ objc]
	constraints += [lambda_2[0, 427] >= V[0, 112]- objc]
	constraints += [lambda_2[0, 427] <= V[0, 112]+ objc]
	constraints += [lambda_2[0, 428] >= -V[0, 111]- objc]
	constraints += [lambda_2[0, 428] <= -V[0, 111]+ objc]
	constraints += [lambda_2[0, 276] == 0]
	constraints += [-lambda_2[0, 79] - 120*lambda_2[0, 135] - 20*lambda_2[0, 181] - lambda_2[0, 283] - lambda_2[0, 284] - 10*lambda_2[0, 285] - 40*lambda_2[0, 305] - 500*lambda_2[0, 335] - 500*lambda_2[0, 380] >= -l*V[0, 76] - 0.0001*V[0, 37] + 2*V[0, 64]*t0[0, 2] - 2*V[0, 76] + V[0, 86] - 2.8*V[0, 124]*t0[0, 0] - 2*V[0, 124]*t0[0, 1] + V[0, 128]- objc]
	constraints += [-lambda_2[0, 79] - 120*lambda_2[0, 135] - 20*lambda_2[0, 181] - lambda_2[0, 283] - lambda_2[0, 284] - 10*lambda_2[0, 285] - 40*lambda_2[0, 305] - 500*lambda_2[0, 335] - 500*lambda_2[0, 380] <= -l*V[0, 76] - 0.0001*V[0, 37] + 2*V[0, 64]*t0[0, 2] - 2*V[0, 76] + V[0, 86] - 2.8*V[0, 124]*t0[0, 0] - 2*V[0, 124]*t0[0, 1] + V[0, 128]+ objc]
	constraints += [lambda_2[0, 283] >= V[0, 63] - 0.0001*V[0, 120]- objc]
	constraints += [lambda_2[0, 283] <= V[0, 63] - 0.0001*V[0, 120]+ objc]
	constraints += [lambda_2[0, 284] >= -V[0, 62] - 0.0001*V[0, 121]- objc]
	constraints += [lambda_2[0, 284] <= -V[0, 62] - 0.0001*V[0, 121]+ objc]
	constraints += [lambda_2[0, 285] >= -0.0002*V[0, 75]- objc]
	constraints += [lambda_2[0, 285] <= -0.0002*V[0, 75]+ objc]
	constraints += [lambda_2[0, 135] >= -0.0001*V[0, 124]- objc]
	constraints += [lambda_2[0, 135] <= -0.0001*V[0, 124]+ objc]
	constraints += [lambda_2[0, 50] + 20*lambda_2[0, 93] + 1000*lambda_2[0, 99] + 300*lambda_2[0, 149] + 750000*lambda_2[0, 155] + 20000*lambda_2[0, 190] + lambda_2[0, 223] + lambda_2[0, 224] + 10*lambda_2[0, 225] + 40*lambda_2[0, 229] + 40*lambda_2[0, 233] + 500*lambda_2[0, 253] + lambda_2[0, 322] + lambda_2[0, 323] + 100*lambda_2[0, 324] + 20*lambda_2[0, 325] + 20*lambda_2[0, 326] + 200*lambda_2[0, 327] + 800*lambda_2[0, 331] + 1600*lambda_2[0, 335] + 800*lambda_2[0, 339] + 1600*lambda_2[0, 344] + 1000*lambda_2[0, 349] + 1000*lambda_2[0, 350] + 10000*lambda_2[0, 351] + 40000*lambda_2[0, 355] + 40000*lambda_2[0, 359] + 10000*lambda_2[0, 394] + 500000*lambda_2[0, 400] + 250000*lambda_2[0, 421] + lambda_2[0, 440] + 10*lambda_2[0, 441] + 10*lambda_2[0, 442] + 40*lambda_2[0, 446] + 40*lambda_2[0, 447] + 400*lambda_2[0, 448] + 40*lambda_2[0, 452] + 40*lambda_2[0, 453] + 400*lambda_2[0, 454] + 1600*lambda_2[0, 458] + 500*lambda_2[0, 482] + 500*lambda_2[0, 483] + 5000*lambda_2[0, 484] + 20000*lambda_2[0, 488] + 20000*lambda_2[0, 492] >= -l*V[0, 39] + 2*V[0, 33]*t0[0, 2] - 2*V[0, 37]*t0[0, 0] - 2*V[0, 39] + V[0, 44]- objc]
	constraints += [lambda_2[0, 50] + 20*lambda_2[0, 93] + 1000*lambda_2[0, 99] + 300*lambda_2[0, 149] + 750000*lambda_2[0, 155] + 20000*lambda_2[0, 190] + lambda_2[0, 223] + lambda_2[0, 224] + 10*lambda_2[0, 225] + 40*lambda_2[0, 229] + 40*lambda_2[0, 233] + 500*lambda_2[0, 253] + lambda_2[0, 322] + lambda_2[0, 323] + 100*lambda_2[0, 324] + 20*lambda_2[0, 325] + 20*lambda_2[0, 326] + 200*lambda_2[0, 327] + 800*lambda_2[0, 331] + 1600*lambda_2[0, 335] + 800*lambda_2[0, 339] + 1600*lambda_2[0, 344] + 1000*lambda_2[0, 349] + 1000*lambda_2[0, 350] + 10000*lambda_2[0, 351] + 40000*lambda_2[0, 355] + 40000*lambda_2[0, 359] + 10000*lambda_2[0, 394] + 500000*lambda_2[0, 400] + 250000*lambda_2[0, 421] + lambda_2[0, 440] + 10*lambda_2[0, 441] + 10*lambda_2[0, 442] + 40*lambda_2[0, 446] + 40*lambda_2[0, 447] + 400*lambda_2[0, 448] + 40*lambda_2[0, 452] + 40*lambda_2[0, 453] + 400*lambda_2[0, 454] + 1600*lambda_2[0, 458] + 500*lambda_2[0, 482] + 500*lambda_2[0, 483] + 5000*lambda_2[0, 484] + 20000*lambda_2[0, 488] + 20000*lambda_2[0, 492] <= -l*V[0, 39] + 2*V[0, 33]*t0[0, 2] - 2*V[0, 37]*t0[0, 0] - 2*V[0, 39] + V[0, 44]+ objc]
	constraints += [-lambda_2[0, 223] - 2*lambda_2[0, 322] - 20*lambda_2[0, 325] - 1000*lambda_2[0, 349] - lambda_2[0, 440] - 10*lambda_2[0, 441] - 40*lambda_2[0, 446] - 40*lambda_2[0, 452] - 500*lambda_2[0, 482] >= -l*V[0, 125] + V[0, 32] + 2*V[0, 114]*t0[0, 2] - 2*V[0, 120]*t0[0, 0] - 2*V[0, 125] + V[0, 135]- objc]
	constraints += [-lambda_2[0, 223] - 2*lambda_2[0, 322] - 20*lambda_2[0, 325] - 1000*lambda_2[0, 349] - lambda_2[0, 440] - 10*lambda_2[0, 441] - 40*lambda_2[0, 446] - 40*lambda_2[0, 452] - 500*lambda_2[0, 482] <= -l*V[0, 125] + V[0, 32] + 2*V[0, 114]*t0[0, 2] - 2*V[0, 120]*t0[0, 0] - 2*V[0, 125] + V[0, 135]+ objc]
	constraints += [lambda_2[0, 322] >= V[0, 113]- objc]
	constraints += [lambda_2[0, 322] <= V[0, 113]+ objc]
	constraints += [-lambda_2[0, 224] - 2*lambda_2[0, 323] - 20*lambda_2[0, 326] - 1000*lambda_2[0, 350] - lambda_2[0, 440] - 10*lambda_2[0, 442] - 40*lambda_2[0, 447] - 40*lambda_2[0, 453] - 500*lambda_2[0, 483] >= -l*V[0, 126] - V[0, 31] - 50*V[0, 82] + 2*V[0, 115]*t0[0, 2] - 2*V[0, 121]*t0[0, 0] - 2*V[0, 126] + V[0, 136]- objc]
	constraints += [-lambda_2[0, 224] - 2*lambda_2[0, 323] - 20*lambda_2[0, 326] - 1000*lambda_2[0, 350] - lambda_2[0, 440] - 10*lambda_2[0, 442] - 40*lambda_2[0, 447] - 40*lambda_2[0, 453] - 500*lambda_2[0, 483] <= -l*V[0, 126] - V[0, 31] - 50*V[0, 82] + 2*V[0, 115]*t0[0, 2] - 2*V[0, 121]*t0[0, 0] - 2*V[0, 126] + V[0, 136]+ objc]
	constraints += [lambda_2[0, 440] >= -2*V[0, 65] + 2*V[0, 66]- objc]
	constraints += [lambda_2[0, 440] <= -2*V[0, 65] + 2*V[0, 66]+ objc]
	constraints += [lambda_2[0, 323] >= -V[0, 113]- objc]
	constraints += [lambda_2[0, 323] <= -V[0, 113]+ objc]
	constraints += [-lambda_2[0, 225] - 20*lambda_2[0, 324] - 20*lambda_2[0, 327] - 1000*lambda_2[0, 351] - lambda_2[0, 441] - lambda_2[0, 442] - 40*lambda_2[0, 448] - 40*lambda_2[0, 454] - 500*lambda_2[0, 484] >= -l*V[0, 127] + 4*V[0, 67]*t0[0, 2] - 4*V[0, 75]*t0[0, 0] - 2*V[0, 127]*t0[0, 2] - 4*V[0, 127] + V[0, 128] + V[0, 137]- objc]
	constraints += [-lambda_2[0, 225] - 20*lambda_2[0, 324] - 20*lambda_2[0, 327] - 1000*lambda_2[0, 351] - lambda_2[0, 441] - lambda_2[0, 442] - 40*lambda_2[0, 448] - 40*lambda_2[0, 454] - 500*lambda_2[0, 484] <= -l*V[0, 127] + 4*V[0, 67]*t0[0, 2] - 4*V[0, 75]*t0[0, 0] - 2*V[0, 127]*t0[0, 2] - 4*V[0, 127] + V[0, 128] + V[0, 137]+ objc]
	constraints += [lambda_2[0, 441] >= V[0, 115]- objc]
	constraints += [lambda_2[0, 441] <= V[0, 115]+ objc]
	constraints += [lambda_2[0, 442] >= -V[0, 114]- objc]
	constraints += [lambda_2[0, 442] <= -V[0, 114]+ objc]
	constraints += [lambda_2[0, 324] == 0]
	constraints += [-lambda_2[0, 229] - 20*lambda_2[0, 331] - 80*lambda_2[0, 335] - 1000*lambda_2[0, 355] - lambda_2[0, 446] - lambda_2[0, 447] - 10*lambda_2[0, 448] - 40*lambda_2[0, 458] - 500*lambda_2[0, 488] >= -l*V[0, 128] + 2*V[0, 77] + 2*V[0, 118]*t0[0, 2] - 2*V[0, 124]*t0[0, 0] - 2.8*V[0, 127]*t0[0, 0] - 2*V[0, 127]*t0[0, 1] - 2*V[0, 128] + V[0, 138]- objc]
	constraints += [-lambda_2[0, 229] - 20*lambda_2[0, 331] - 80*lambda_2[0, 335] - 1000*lambda_2[0, 355] - lambda_2[0, 446] - lambda_2[0, 447] - 10*lambda_2[0, 448] - 40*lambda_2[0, 458] - 500*lambda_2[0, 488] <= -l*V[0, 128] + 2*V[0, 77] + 2*V[0, 118]*t0[0, 2] - 2*V[0, 124]*t0[0, 0] - 2.8*V[0, 127]*t0[0, 0] - 2*V[0, 127]*t0[0, 1] - 2*V[0, 128] + V[0, 138]+ objc]
	constraints += [lambda_2[0, 446] >= V[0, 117]- objc]
	constraints += [lambda_2[0, 446] <= V[0, 117]+ objc]
	constraints += [lambda_2[0, 447] >= -V[0, 116]- objc]
	constraints += [lambda_2[0, 447] <= -V[0, 116]+ objc]
	constraints += [lambda_2[0, 448] == 0]
	constraints += [lambda_2[0, 335] >= -0.0001*V[0, 127]- objc]
	constraints += [lambda_2[0, 335] <= -0.0001*V[0, 127]+ objc]
	constraints += [-lambda_2[0, 99] - 1500*lambda_2[0, 155] - 20*lambda_2[0, 190] - lambda_2[0, 349] - lambda_2[0, 350] - 10*lambda_2[0, 351] - 40*lambda_2[0, 355] - 40*lambda_2[0, 359] - 500*lambda_2[0, 400] >= -l*V[0, 77] + 2*V[0, 71]*t0[0, 2] - 2*V[0, 77] + V[0, 87] - 2*V[0, 127]*t0[0, 0]- objc]
	constraints += [-lambda_2[0, 99] - 1500*lambda_2[0, 155] - 20*lambda_2[0, 190] - lambda_2[0, 349] - lambda_2[0, 350] - 10*lambda_2[0, 351] - 40*lambda_2[0, 355] - 40*lambda_2[0, 359] - 500*lambda_2[0, 400] <= -l*V[0, 77] + 2*V[0, 71]*t0[0, 2] - 2*V[0, 77] + V[0, 87] - 2*V[0, 127]*t0[0, 0]+ objc]
	constraints += [lambda_2[0, 349] >= V[0, 70]- objc]
	constraints += [lambda_2[0, 349] <= V[0, 70]+ objc]
	constraints += [lambda_2[0, 350] >= -V[0, 69]- objc]
	constraints += [lambda_2[0, 350] <= -V[0, 69]+ objc]
	constraints += [lambda_2[0, 351] == 0]
	constraints += [lambda_2[0, 355] == 0]
	constraints += [lambda_2[0, 155] == 0]
	constraints += [lambda_2[0, 11] + 30*lambda_2[0, 19] + 600*lambda_2[0, 27] + lambda_2[0, 69] + lambda_2[0, 70] + 10*lambda_2[0, 71] + 40*lambda_2[0, 75] + 40*lambda_2[0, 83] + 500*lambda_2[0, 93] + 500*lambda_2[0, 105] + 30*lambda_2[0, 125] + 30*lambda_2[0, 126] + 300*lambda_2[0, 127] + 1200*lambda_2[0, 131] + 1200*lambda_2[0, 139] + 15000*lambda_2[0, 149] + 15000*lambda_2[0, 161] + lambda_2[0, 175] + lambda_2[0, 176] + 100*lambda_2[0, 177] + 1600*lambda_2[0, 181] + 1600*lambda_2[0, 185] + 250000*lambda_2[0, 190] + 250000*lambda_2[0, 196] + lambda_2[0, 265] + 10*lambda_2[0, 266] + 10*lambda_2[0, 267] + 40*lambda_2[0, 277] + 40*lambda_2[0, 278] + 400*lambda_2[0, 279] + 40*lambda_2[0, 295] + 40*lambda_2[0, 296] + 400*lambda_2[0, 297] + 1600*lambda_2[0, 301] + 500*lambda_2[0, 325] + 500*lambda_2[0, 326] + 5000*lambda_2[0, 327] + 20000*lambda_2[0, 331] + 20000*lambda_2[0, 339] + 500*lambda_2[0, 370] + 500*lambda_2[0, 371] + 5000*lambda_2[0, 372] + 20000*lambda_2[0, 376] + 20000*lambda_2[0, 384] + 250000*lambda_2[0, 394] >= -l*V[0, 14] - 4*V[0, 14] + 2*V[0, 37]*t0[0, 2] + V[0, 45] - 0.001- objc]
	constraints += [lambda_2[0, 11] + 30*lambda_2[0, 19] + 600*lambda_2[0, 27] + lambda_2[0, 69] + lambda_2[0, 70] + 10*lambda_2[0, 71] + 40*lambda_2[0, 75] + 40*lambda_2[0, 83] + 500*lambda_2[0, 93] + 500*lambda_2[0, 105] + 30*lambda_2[0, 125] + 30*lambda_2[0, 126] + 300*lambda_2[0, 127] + 1200*lambda_2[0, 131] + 1200*lambda_2[0, 139] + 15000*lambda_2[0, 149] + 15000*lambda_2[0, 161] + lambda_2[0, 175] + lambda_2[0, 176] + 100*lambda_2[0, 177] + 1600*lambda_2[0, 181] + 1600*lambda_2[0, 185] + 250000*lambda_2[0, 190] + 250000*lambda_2[0, 196] + lambda_2[0, 265] + 10*lambda_2[0, 266] + 10*lambda_2[0, 267] + 40*lambda_2[0, 277] + 40*lambda_2[0, 278] + 400*lambda_2[0, 279] + 40*lambda_2[0, 295] + 40*lambda_2[0, 296] + 400*lambda_2[0, 297] + 1600*lambda_2[0, 301] + 500*lambda_2[0, 325] + 500*lambda_2[0, 326] + 5000*lambda_2[0, 327] + 20000*lambda_2[0, 331] + 20000*lambda_2[0, 339] + 500*lambda_2[0, 370] + 500*lambda_2[0, 371] + 5000*lambda_2[0, 372] + 20000*lambda_2[0, 376] + 20000*lambda_2[0, 384] + 250000*lambda_2[0, 394] <= -l*V[0, 14] - 4*V[0, 14] + 2*V[0, 37]*t0[0, 2] + V[0, 45] - 0.001+ objc]
	constraints += [-lambda_2[0, 69] - 30*lambda_2[0, 125] - 2*lambda_2[0, 175] - lambda_2[0, 265] - 10*lambda_2[0, 266] - 40*lambda_2[0, 277] - 40*lambda_2[0, 295] - 500*lambda_2[0, 325] - 500*lambda_2[0, 370] >= -l*V[0, 78] + V[0, 36] - 4*V[0, 78] + 2*V[0, 120]*t0[0, 2] + V[0, 139]- objc]
	constraints += [-lambda_2[0, 69] - 30*lambda_2[0, 125] - 2*lambda_2[0, 175] - lambda_2[0, 265] - 10*lambda_2[0, 266] - 40*lambda_2[0, 277] - 40*lambda_2[0, 295] - 500*lambda_2[0, 325] - 500*lambda_2[0, 370] <= -l*V[0, 78] + V[0, 36] - 4*V[0, 78] + 2*V[0, 120]*t0[0, 2] + V[0, 139]+ objc]
	constraints += [lambda_2[0, 175] >= V[0, 119]- objc]
	constraints += [lambda_2[0, 175] <= V[0, 119]+ objc]
	constraints += [-lambda_2[0, 70] - 30*lambda_2[0, 126] - 2*lambda_2[0, 176] - lambda_2[0, 265] - 10*lambda_2[0, 267] - 40*lambda_2[0, 278] - 40*lambda_2[0, 296] - 500*lambda_2[0, 326] - 500*lambda_2[0, 371] >= -l*V[0, 79] - 75*V[0, 22] - V[0, 35] - 4*V[0, 79] + 2*V[0, 121]*t0[0, 2] + V[0, 140]- objc]
	constraints += [-lambda_2[0, 70] - 30*lambda_2[0, 126] - 2*lambda_2[0, 176] - lambda_2[0, 265] - 10*lambda_2[0, 267] - 40*lambda_2[0, 278] - 40*lambda_2[0, 296] - 500*lambda_2[0, 326] - 500*lambda_2[0, 371] <= -l*V[0, 79] - 75*V[0, 22] - V[0, 35] - 4*V[0, 79] + 2*V[0, 121]*t0[0, 2] + V[0, 140]+ objc]
	constraints += [lambda_2[0, 265] >= -2*V[0, 73] + 2*V[0, 74]- objc]
	constraints += [lambda_2[0, 265] <= -2*V[0, 73] + 2*V[0, 74]+ objc]
	constraints += [lambda_2[0, 176] >= -V[0, 119]- objc]
	constraints += [lambda_2[0, 176] <= -V[0, 119]+ objc]
	constraints += [-lambda_2[0, 71] - 30*lambda_2[0, 127] - 20*lambda_2[0, 177] - lambda_2[0, 266] - lambda_2[0, 267] - 40*lambda_2[0, 279] - 40*lambda_2[0, 297] - 500*lambda_2[0, 327] - 500*lambda_2[0, 372] >= -l*V[0, 80] + 4*V[0, 75]*t0[0, 2] - 2*V[0, 80]*t0[0, 2] - 6*V[0, 80] + V[0, 81] + V[0, 141]- objc]
	constraints += [-lambda_2[0, 71] - 30*lambda_2[0, 127] - 20*lambda_2[0, 177] - lambda_2[0, 266] - lambda_2[0, 267] - 40*lambda_2[0, 279] - 40*lambda_2[0, 297] - 500*lambda_2[0, 327] - 500*lambda_2[0, 372] <= -l*V[0, 80] + 4*V[0, 75]*t0[0, 2] - 2*V[0, 80]*t0[0, 2] - 6*V[0, 80] + V[0, 81] + V[0, 141]+ objc]
	constraints += [lambda_2[0, 266] >= V[0, 121]- objc]
	constraints += [lambda_2[0, 266] <= V[0, 121]+ objc]
	constraints += [lambda_2[0, 267] >= -V[0, 120]- objc]
	constraints += [lambda_2[0, 267] <= -V[0, 120]+ objc]
	constraints += [lambda_2[0, 177] == 0]
	constraints += [-lambda_2[0, 75] - 30*lambda_2[0, 131] - 80*lambda_2[0, 181] - lambda_2[0, 277] - lambda_2[0, 278] - 10*lambda_2[0, 279] - 40*lambda_2[0, 301] - 500*lambda_2[0, 331] - 500*lambda_2[0, 376] >= -l*V[0, 81] - 2.8*V[0, 80]*t0[0, 0] - 2*V[0, 80]*t0[0, 1] - 4*V[0, 81] + V[0, 82] + 2*V[0, 124]*t0[0, 2] + V[0, 142]- objc]
	constraints += [-lambda_2[0, 75] - 30*lambda_2[0, 131] - 80*lambda_2[0, 181] - lambda_2[0, 277] - lambda_2[0, 278] - 10*lambda_2[0, 279] - 40*lambda_2[0, 301] - 500*lambda_2[0, 331] - 500*lambda_2[0, 376] <= -l*V[0, 81] - 2.8*V[0, 80]*t0[0, 0] - 2*V[0, 80]*t0[0, 1] - 4*V[0, 81] + V[0, 82] + 2*V[0, 124]*t0[0, 2] + V[0, 142]+ objc]
	constraints += [lambda_2[0, 277] >= V[0, 123]- objc]
	constraints += [lambda_2[0, 277] <= V[0, 123]+ objc]
	constraints += [lambda_2[0, 278] >= -V[0, 122]- objc]
	constraints += [lambda_2[0, 278] <= -V[0, 122]+ objc]
	constraints += [lambda_2[0, 279] == 0]
	constraints += [lambda_2[0, 181] >= -0.0001*V[0, 80]- objc]
	constraints += [lambda_2[0, 181] <= -0.0001*V[0, 80]+ objc]
	constraints += [-lambda_2[0, 93] - 30*lambda_2[0, 149] - 1000*lambda_2[0, 190] - lambda_2[0, 325] - lambda_2[0, 326] - 10*lambda_2[0, 327] - 40*lambda_2[0, 331] - 40*lambda_2[0, 339] - 500*lambda_2[0, 394] >= -l*V[0, 82] - 2*V[0, 80]*t0[0, 0] - 4*V[0, 82] + 2*V[0, 127]*t0[0, 2] + V[0, 143]- objc]
	constraints += [-lambda_2[0, 93] - 30*lambda_2[0, 149] - 1000*lambda_2[0, 190] - lambda_2[0, 325] - lambda_2[0, 326] - 10*lambda_2[0, 327] - 40*lambda_2[0, 331] - 40*lambda_2[0, 339] - 500*lambda_2[0, 394] <= -l*V[0, 82] - 2*V[0, 80]*t0[0, 0] - 4*V[0, 82] + 2*V[0, 127]*t0[0, 2] + V[0, 143]+ objc]
	constraints += [lambda_2[0, 325] >= V[0, 126]- objc]
	constraints += [lambda_2[0, 325] <= V[0, 126]+ objc]
	constraints += [lambda_2[0, 326] >= -V[0, 125]- objc]
	constraints += [lambda_2[0, 326] <= -V[0, 125]+ objc]
	constraints += [lambda_2[0, 327] == 0]
	constraints += [lambda_2[0, 331] == 0]
	constraints += [lambda_2[0, 190] == 0]
	constraints += [-lambda_2[0, 19] - 40*lambda_2[0, 27] - lambda_2[0, 125] - lambda_2[0, 126] - 10*lambda_2[0, 127] - 40*lambda_2[0, 131] - 40*lambda_2[0, 139] - 500*lambda_2[0, 149] - 500*lambda_2[0, 161] >= -l*V[0, 22] - 6*V[0, 22] + 2*V[0, 80]*t0[0, 2] + V[0, 88]- objc]
	constraints += [-lambda_2[0, 19] - 40*lambda_2[0, 27] - lambda_2[0, 125] - lambda_2[0, 126] - 10*lambda_2[0, 127] - 40*lambda_2[0, 131] - 40*lambda_2[0, 139] - 500*lambda_2[0, 149] - 500*lambda_2[0, 161] <= -l*V[0, 22] - 6*V[0, 22] + 2*V[0, 80]*t0[0, 2] + V[0, 88]+ objc]
	constraints += [lambda_2[0, 125] >= V[0, 79]- objc]
	constraints += [lambda_2[0, 125] <= V[0, 79]+ objc]
	constraints += [lambda_2[0, 126] >= -V[0, 78]- objc]
	constraints += [lambda_2[0, 126] <= -V[0, 78]+ objc]
	constraints += [lambda_2[0, 127] == 0]
	constraints += [lambda_2[0, 131] == 0]
	constraints += [lambda_2[0, 149] == 0]
	constraints += [lambda_2[0, 27] == 0]
	constraints += [-lambda_2[0, 5] - 80*lambda_2[0, 13] - 4800*lambda_2[0, 21] - 256000*lambda_2[0, 29] - lambda_2[0, 42] - lambda_2[0, 43] - 10*lambda_2[0, 44] - 10*lambda_2[0, 45] - 40*lambda_2[0, 46] - 500*lambda_2[0, 52] - 500*lambda_2[0, 58] - lambda_2[0, 80] - lambda_2[0, 81] - 100*lambda_2[0, 82] - 100*lambda_2[0, 83] - 1600*lambda_2[0, 84] - 80*lambda_2[0, 85] - 80*lambda_2[0, 86] - 800*lambda_2[0, 87] - 800*lambda_2[0, 88] - 3200*lambda_2[0, 89] - 40000*lambda_2[0, 95] - 250000*lambda_2[0, 101] - 40000*lambda_2[0, 107] - 250000*lambda_2[0, 114] - lambda_2[0, 136] - lambda_2[0, 137] - 1000*lambda_2[0, 138] - 1000*lambda_2[0, 139] - 64000*lambda_2[0, 140] - 4800*lambda_2[0, 141] - 4800*lambda_2[0, 142] - 48000*lambda_2[0, 143] - 48000*lambda_2[0, 144] - 192000*lambda_2[0, 145] - 2400000*lambda_2[0, 151] - 125000000*lambda_2[0, 157] - 2400000*lambda_2[0, 163] - 125000000*lambda_2[0, 170] - 80*lambda_2[0, 182] - 80*lambda_2[0, 183] - 8000*lambda_2[0, 184] - 8000*lambda_2[0, 185] - 128000*lambda_2[0, 186] - 20000000*lambda_2[0, 192] - 20000000*lambda_2[0, 198] - lambda_2[0, 210] - 10*lambda_2[0, 211] - 10*lambda_2[0, 212] - 10*lambda_2[0, 213] - 10*lambda_2[0, 214] - 100*lambda_2[0, 215] - 40*lambda_2[0, 216] - 40*lambda_2[0, 217] - 400*lambda_2[0, 218] - 400*lambda_2[0, 219] - 500*lambda_2[0, 230] - 500*lambda_2[0, 231] - 5000*lambda_2[0, 232] - 5000*lambda_2[0, 233] - 20000*lambda_2[0, 234] - 500*lambda_2[0, 245] - 500*lambda_2[0, 246] - 5000*lambda_2[0, 247] - 5000*lambda_2[0, 248] - 20000*lambda_2[0, 249] - 250000*lambda_2[0, 255] - lambda_2[0, 286] - lambda_2[0, 287] - 10*lambda_2[0, 288] - 10*lambda_2[0, 289] - 100*lambda_2[0, 290] - 100*lambda_2[0, 291] - 10*lambda_2[0, 292] - 10*lambda_2[0, 293] - 1000*lambda_2[0, 294] - 100*lambda_2[0, 295] - 100*lambda_2[0, 296] - 1000*lambda_2[0, 297] - 40*lambda_2[0, 298] - 40*lambda_2[0, 299] - 4000*lambda_2[0, 300] - 4000*lambda_2[0, 301] - 1600*lambda_2[0, 302] - 1600*lambda_2[0, 303] - 16000*lambda_2[0, 304] - 16000*lambda_2[0, 305] - 80*lambda_2[0, 306] - 800*lambda_2[0, 307] - 800*lambda_2[0, 308] - 800*lambda_2[0, 309] - 800*lambda_2[0, 310] - 8000*lambda_2[0, 311] - 3200*lambda_2[0, 312] - 3200*lambda_2[0, 313] - 32000*lambda_2[0, 314] - 32000*lambda_2[0, 315] - 500*lambda_2[0, 336] - 500*lambda_2[0, 337] - 50000*lambda_2[0, 338] - 50000*lambda_2[0, 339] - 800000*lambda_2[0, 340] - 40000*lambda_2[0, 341] - 40000*lambda_2[0, 342] - 400000*lambda_2[0, 343] - 400000*lambda_2[0, 344] - 1600000*lambda_2[0, 345] - 250000*lambda_2[0, 356] - 250000*lambda_2[0, 357] - 2500000*lambda_2[0, 358] - 2500000*lambda_2[0, 359] - 10000000*lambda_2[0, 360] - 500*lambda_2[0, 381] - 500*lambda_2[0, 382] - 50000*lambda_2[0, 383] - 50000*lambda_2[0, 384] - 800000*lambda_2[0, 385] - 40000*lambda_2[0, 386] - 40000*lambda_2[0, 387] - 400000*lambda_2[0, 388] - 400000*lambda_2[0, 389] - 1600000*lambda_2[0, 390] - 20000000*lambda_2[0, 396] - 125000000*lambda_2[0, 402] - 250000*lambda_2[0, 413] - 250000*lambda_2[0, 414] - 2500000*lambda_2[0, 415] - 2500000*lambda_2[0, 416] - 10000000*lambda_2[0, 417] - 125000000*lambda_2[0, 423] - 10*lambda_2[0, 429] - 10*lambda_2[0, 430] - 100*lambda_2[0, 431] - 100*lambda_2[0, 432] - 40*lambda_2[0, 433] - 400*lambda_2[0, 434] - 400*lambda_2[0, 435] - 400*lambda_2[0, 436] - 400*lambda_2[0, 437] - 4000*lambda_2[0, 438] - 500*lambda_2[0, 449] - 5000*lambda_2[0, 450] - 5000*lambda_2[0, 451] - 5000*lambda_2[0, 452] - 5000*lambda_2[0, 453] - 50000*lambda_2[0, 454] - 20000*lambda_2[0, 455] - 20000*lambda_2[0, 456] - 200000*lambda_2[0, 457] - 200000*lambda_2[0, 458] - 500*lambda_2[0, 469] - 5000*lambda_2[0, 470] - 5000*lambda_2[0, 471] - 5000*lambda_2[0, 472] - 5000*lambda_2[0, 473] - 50000*lambda_2[0, 474] - 20000*lambda_2[0, 475] - 20000*lambda_2[0, 476] - 200000*lambda_2[0, 477] - 200000*lambda_2[0, 478] - 250000*lambda_2[0, 489] - 250000*lambda_2[0, 490] - 2500000*lambda_2[0, 491] - 2500000*lambda_2[0, 492] - 10000000*lambda_2[0, 493] >= -l*V[0, 7] + 2*V[0, 3]*t0[0, 1] + V[0, 8]- objc]
	constraints += [-lambda_2[0, 5] - 80*lambda_2[0, 13] - 4800*lambda_2[0, 21] - 256000*lambda_2[0, 29] - lambda_2[0, 42] - lambda_2[0, 43] - 10*lambda_2[0, 44] - 10*lambda_2[0, 45] - 40*lambda_2[0, 46] - 500*lambda_2[0, 52] - 500*lambda_2[0, 58] - lambda_2[0, 80] - lambda_2[0, 81] - 100*lambda_2[0, 82] - 100*lambda_2[0, 83] - 1600*lambda_2[0, 84] - 80*lambda_2[0, 85] - 80*lambda_2[0, 86] - 800*lambda_2[0, 87] - 800*lambda_2[0, 88] - 3200*lambda_2[0, 89] - 40000*lambda_2[0, 95] - 250000*lambda_2[0, 101] - 40000*lambda_2[0, 107] - 250000*lambda_2[0, 114] - lambda_2[0, 136] - lambda_2[0, 137] - 1000*lambda_2[0, 138] - 1000*lambda_2[0, 139] - 64000*lambda_2[0, 140] - 4800*lambda_2[0, 141] - 4800*lambda_2[0, 142] - 48000*lambda_2[0, 143] - 48000*lambda_2[0, 144] - 192000*lambda_2[0, 145] - 2400000*lambda_2[0, 151] - 125000000*lambda_2[0, 157] - 2400000*lambda_2[0, 163] - 125000000*lambda_2[0, 170] - 80*lambda_2[0, 182] - 80*lambda_2[0, 183] - 8000*lambda_2[0, 184] - 8000*lambda_2[0, 185] - 128000*lambda_2[0, 186] - 20000000*lambda_2[0, 192] - 20000000*lambda_2[0, 198] - lambda_2[0, 210] - 10*lambda_2[0, 211] - 10*lambda_2[0, 212] - 10*lambda_2[0, 213] - 10*lambda_2[0, 214] - 100*lambda_2[0, 215] - 40*lambda_2[0, 216] - 40*lambda_2[0, 217] - 400*lambda_2[0, 218] - 400*lambda_2[0, 219] - 500*lambda_2[0, 230] - 500*lambda_2[0, 231] - 5000*lambda_2[0, 232] - 5000*lambda_2[0, 233] - 20000*lambda_2[0, 234] - 500*lambda_2[0, 245] - 500*lambda_2[0, 246] - 5000*lambda_2[0, 247] - 5000*lambda_2[0, 248] - 20000*lambda_2[0, 249] - 250000*lambda_2[0, 255] - lambda_2[0, 286] - lambda_2[0, 287] - 10*lambda_2[0, 288] - 10*lambda_2[0, 289] - 100*lambda_2[0, 290] - 100*lambda_2[0, 291] - 10*lambda_2[0, 292] - 10*lambda_2[0, 293] - 1000*lambda_2[0, 294] - 100*lambda_2[0, 295] - 100*lambda_2[0, 296] - 1000*lambda_2[0, 297] - 40*lambda_2[0, 298] - 40*lambda_2[0, 299] - 4000*lambda_2[0, 300] - 4000*lambda_2[0, 301] - 1600*lambda_2[0, 302] - 1600*lambda_2[0, 303] - 16000*lambda_2[0, 304] - 16000*lambda_2[0, 305] - 80*lambda_2[0, 306] - 800*lambda_2[0, 307] - 800*lambda_2[0, 308] - 800*lambda_2[0, 309] - 800*lambda_2[0, 310] - 8000*lambda_2[0, 311] - 3200*lambda_2[0, 312] - 3200*lambda_2[0, 313] - 32000*lambda_2[0, 314] - 32000*lambda_2[0, 315] - 500*lambda_2[0, 336] - 500*lambda_2[0, 337] - 50000*lambda_2[0, 338] - 50000*lambda_2[0, 339] - 800000*lambda_2[0, 340] - 40000*lambda_2[0, 341] - 40000*lambda_2[0, 342] - 400000*lambda_2[0, 343] - 400000*lambda_2[0, 344] - 1600000*lambda_2[0, 345] - 250000*lambda_2[0, 356] - 250000*lambda_2[0, 357] - 2500000*lambda_2[0, 358] - 2500000*lambda_2[0, 359] - 10000000*lambda_2[0, 360] - 500*lambda_2[0, 381] - 500*lambda_2[0, 382] - 50000*lambda_2[0, 383] - 50000*lambda_2[0, 384] - 800000*lambda_2[0, 385] - 40000*lambda_2[0, 386] - 40000*lambda_2[0, 387] - 400000*lambda_2[0, 388] - 400000*lambda_2[0, 389] - 1600000*lambda_2[0, 390] - 20000000*lambda_2[0, 396] - 125000000*lambda_2[0, 402] - 250000*lambda_2[0, 413] - 250000*lambda_2[0, 414] - 2500000*lambda_2[0, 415] - 2500000*lambda_2[0, 416] - 10000000*lambda_2[0, 417] - 125000000*lambda_2[0, 423] - 10*lambda_2[0, 429] - 10*lambda_2[0, 430] - 100*lambda_2[0, 431] - 100*lambda_2[0, 432] - 40*lambda_2[0, 433] - 400*lambda_2[0, 434] - 400*lambda_2[0, 435] - 400*lambda_2[0, 436] - 400*lambda_2[0, 437] - 4000*lambda_2[0, 438] - 500*lambda_2[0, 449] - 5000*lambda_2[0, 450] - 5000*lambda_2[0, 451] - 5000*lambda_2[0, 452] - 5000*lambda_2[0, 453] - 50000*lambda_2[0, 454] - 20000*lambda_2[0, 455] - 20000*lambda_2[0, 456] - 200000*lambda_2[0, 457] - 200000*lambda_2[0, 458] - 500*lambda_2[0, 469] - 5000*lambda_2[0, 470] - 5000*lambda_2[0, 471] - 5000*lambda_2[0, 472] - 5000*lambda_2[0, 473] - 50000*lambda_2[0, 474] - 20000*lambda_2[0, 475] - 20000*lambda_2[0, 476] - 200000*lambda_2[0, 477] - 200000*lambda_2[0, 478] - 250000*lambda_2[0, 489] - 250000*lambda_2[0, 490] - 2500000*lambda_2[0, 491] - 2500000*lambda_2[0, 492] - 10000000*lambda_2[0, 493] <= -l*V[0, 7] + 2*V[0, 3]*t0[0, 1] + V[0, 8]+ objc]
	constraints += [lambda_2[0, 42] + 2*lambda_2[0, 80] + 80*lambda_2[0, 85] + 3*lambda_2[0, 136] + 4800*lambda_2[0, 141] + 160*lambda_2[0, 182] + lambda_2[0, 210] + 10*lambda_2[0, 211] + 10*lambda_2[0, 213] + 40*lambda_2[0, 216] + 500*lambda_2[0, 230] + 500*lambda_2[0, 245] + 2*lambda_2[0, 286] + lambda_2[0, 287] + 20*lambda_2[0, 288] + 100*lambda_2[0, 290] + 20*lambda_2[0, 292] + 100*lambda_2[0, 295] + 80*lambda_2[0, 298] + 1600*lambda_2[0, 302] + 80*lambda_2[0, 306] + 800*lambda_2[0, 307] + 800*lambda_2[0, 309] + 3200*lambda_2[0, 312] + 1000*lambda_2[0, 336] + 40000*lambda_2[0, 341] + 250000*lambda_2[0, 356] + 1000*lambda_2[0, 381] + 40000*lambda_2[0, 386] + 250000*lambda_2[0, 413] + 10*lambda_2[0, 429] + 10*lambda_2[0, 430] + 100*lambda_2[0, 431] + 40*lambda_2[0, 433] + 400*lambda_2[0, 434] + 400*lambda_2[0, 436] + 500*lambda_2[0, 449] + 5000*lambda_2[0, 450] + 5000*lambda_2[0, 452] + 20000*lambda_2[0, 455] + 500*lambda_2[0, 469] + 5000*lambda_2[0, 470] + 5000*lambda_2[0, 472] + 20000*lambda_2[0, 475] + 250000*lambda_2[0, 489] >= -l*V[0, 40] + 2*V[0, 26]*t0[0, 1] + V[0, 46]- objc]
	constraints += [lambda_2[0, 42] + 2*lambda_2[0, 80] + 80*lambda_2[0, 85] + 3*lambda_2[0, 136] + 4800*lambda_2[0, 141] + 160*lambda_2[0, 182] + lambda_2[0, 210] + 10*lambda_2[0, 211] + 10*lambda_2[0, 213] + 40*lambda_2[0, 216] + 500*lambda_2[0, 230] + 500*lambda_2[0, 245] + 2*lambda_2[0, 286] + lambda_2[0, 287] + 20*lambda_2[0, 288] + 100*lambda_2[0, 290] + 20*lambda_2[0, 292] + 100*lambda_2[0, 295] + 80*lambda_2[0, 298] + 1600*lambda_2[0, 302] + 80*lambda_2[0, 306] + 800*lambda_2[0, 307] + 800*lambda_2[0, 309] + 3200*lambda_2[0, 312] + 1000*lambda_2[0, 336] + 40000*lambda_2[0, 341] + 250000*lambda_2[0, 356] + 1000*lambda_2[0, 381] + 40000*lambda_2[0, 386] + 250000*lambda_2[0, 413] + 10*lambda_2[0, 429] + 10*lambda_2[0, 430] + 100*lambda_2[0, 431] + 40*lambda_2[0, 433] + 400*lambda_2[0, 434] + 400*lambda_2[0, 436] + 500*lambda_2[0, 449] + 5000*lambda_2[0, 450] + 5000*lambda_2[0, 452] + 20000*lambda_2[0, 455] + 500*lambda_2[0, 469] + 5000*lambda_2[0, 470] + 5000*lambda_2[0, 472] + 20000*lambda_2[0, 475] + 250000*lambda_2[0, 489] <= -l*V[0, 40] + 2*V[0, 26]*t0[0, 1] + V[0, 46]+ objc]
	constraints += [-lambda_2[0, 80] - 3*lambda_2[0, 136] - 80*lambda_2[0, 182] - lambda_2[0, 286] - 10*lambda_2[0, 288] - 10*lambda_2[0, 292] - 40*lambda_2[0, 298] - 500*lambda_2[0, 336] - 500*lambda_2[0, 381] >= -l*V[0, 83] + 2*V[0, 55]*t0[0, 1] + V[0, 95]- objc]
	constraints += [-lambda_2[0, 80] - 3*lambda_2[0, 136] - 80*lambda_2[0, 182] - lambda_2[0, 286] - 10*lambda_2[0, 288] - 10*lambda_2[0, 292] - 40*lambda_2[0, 298] - 500*lambda_2[0, 336] - 500*lambda_2[0, 381] <= -l*V[0, 83] + 2*V[0, 55]*t0[0, 1] + V[0, 95]+ objc]
	constraints += [lambda_2[0, 136] == 0]
	constraints += [lambda_2[0, 43] + 2*lambda_2[0, 81] + 80*lambda_2[0, 86] + 3*lambda_2[0, 137] + 4800*lambda_2[0, 142] + 160*lambda_2[0, 183] + lambda_2[0, 210] + 10*lambda_2[0, 212] + 10*lambda_2[0, 214] + 40*lambda_2[0, 217] + 500*lambda_2[0, 231] + 500*lambda_2[0, 246] + lambda_2[0, 286] + 2*lambda_2[0, 287] + 20*lambda_2[0, 289] + 100*lambda_2[0, 291] + 20*lambda_2[0, 293] + 100*lambda_2[0, 296] + 80*lambda_2[0, 299] + 1600*lambda_2[0, 303] + 80*lambda_2[0, 306] + 800*lambda_2[0, 308] + 800*lambda_2[0, 310] + 3200*lambda_2[0, 313] + 1000*lambda_2[0, 337] + 40000*lambda_2[0, 342] + 250000*lambda_2[0, 357] + 1000*lambda_2[0, 382] + 40000*lambda_2[0, 387] + 250000*lambda_2[0, 414] + 10*lambda_2[0, 429] + 10*lambda_2[0, 430] + 100*lambda_2[0, 432] + 40*lambda_2[0, 433] + 400*lambda_2[0, 435] + 400*lambda_2[0, 437] + 500*lambda_2[0, 449] + 5000*lambda_2[0, 451] + 5000*lambda_2[0, 453] + 20000*lambda_2[0, 456] + 500*lambda_2[0, 469] + 5000*lambda_2[0, 471] + 5000*lambda_2[0, 473] + 20000*lambda_2[0, 476] + 250000*lambda_2[0, 490] >= -l*V[0, 41] + 2*V[0, 27]*t0[0, 1] - 25*V[0, 45] + V[0, 47]- objc]
	constraints += [lambda_2[0, 43] + 2*lambda_2[0, 81] + 80*lambda_2[0, 86] + 3*lambda_2[0, 137] + 4800*lambda_2[0, 142] + 160*lambda_2[0, 183] + lambda_2[0, 210] + 10*lambda_2[0, 212] + 10*lambda_2[0, 214] + 40*lambda_2[0, 217] + 500*lambda_2[0, 231] + 500*lambda_2[0, 246] + lambda_2[0, 286] + 2*lambda_2[0, 287] + 20*lambda_2[0, 289] + 100*lambda_2[0, 291] + 20*lambda_2[0, 293] + 100*lambda_2[0, 296] + 80*lambda_2[0, 299] + 1600*lambda_2[0, 303] + 80*lambda_2[0, 306] + 800*lambda_2[0, 308] + 800*lambda_2[0, 310] + 3200*lambda_2[0, 313] + 1000*lambda_2[0, 337] + 40000*lambda_2[0, 342] + 250000*lambda_2[0, 357] + 1000*lambda_2[0, 382] + 40000*lambda_2[0, 387] + 250000*lambda_2[0, 414] + 10*lambda_2[0, 429] + 10*lambda_2[0, 430] + 100*lambda_2[0, 432] + 40*lambda_2[0, 433] + 400*lambda_2[0, 435] + 400*lambda_2[0, 437] + 500*lambda_2[0, 449] + 5000*lambda_2[0, 451] + 5000*lambda_2[0, 453] + 20000*lambda_2[0, 456] + 500*lambda_2[0, 469] + 5000*lambda_2[0, 471] + 5000*lambda_2[0, 473] + 20000*lambda_2[0, 476] + 250000*lambda_2[0, 490] <= -l*V[0, 41] + 2*V[0, 27]*t0[0, 1] - 25*V[0, 45] + V[0, 47]+ objc]
	constraints += [-lambda_2[0, 210] - 2*lambda_2[0, 286] - 2*lambda_2[0, 287] - 80*lambda_2[0, 306] - 10*lambda_2[0, 429] - 10*lambda_2[0, 430] - 40*lambda_2[0, 433] - 500*lambda_2[0, 449] - 500*lambda_2[0, 469] >= -l*V[0, 129] + 2*V[0, 109]*t0[0, 1] - 25*V[0, 139] + V[0, 144]- objc]
	constraints += [-lambda_2[0, 210] - 2*lambda_2[0, 286] - 2*lambda_2[0, 287] - 80*lambda_2[0, 306] - 10*lambda_2[0, 429] - 10*lambda_2[0, 430] - 40*lambda_2[0, 433] - 500*lambda_2[0, 449] - 500*lambda_2[0, 469] <= -l*V[0, 129] + 2*V[0, 109]*t0[0, 1] - 25*V[0, 139] + V[0, 144]+ objc]
	constraints += [lambda_2[0, 286] == 0]
	constraints += [-lambda_2[0, 81] - 3*lambda_2[0, 137] - 80*lambda_2[0, 183] - lambda_2[0, 287] - 10*lambda_2[0, 289] - 10*lambda_2[0, 293] - 40*lambda_2[0, 299] - 500*lambda_2[0, 337] - 500*lambda_2[0, 382] >= -l*V[0, 84] + 2*V[0, 56]*t0[0, 1] + V[0, 96] - 25*V[0, 140]- objc]
	constraints += [-lambda_2[0, 81] - 3*lambda_2[0, 137] - 80*lambda_2[0, 183] - lambda_2[0, 287] - 10*lambda_2[0, 289] - 10*lambda_2[0, 293] - 40*lambda_2[0, 299] - 500*lambda_2[0, 337] - 500*lambda_2[0, 382] <= -l*V[0, 84] + 2*V[0, 56]*t0[0, 1] + V[0, 96] - 25*V[0, 140]+ objc]
	constraints += [lambda_2[0, 287] == 0]
	constraints += [lambda_2[0, 137] == 0]
	constraints += [lambda_2[0, 44] + 20*lambda_2[0, 82] + 80*lambda_2[0, 87] + 300*lambda_2[0, 138] + 4800*lambda_2[0, 143] + 1600*lambda_2[0, 184] + lambda_2[0, 211] + lambda_2[0, 212] + 10*lambda_2[0, 215] + 40*lambda_2[0, 218] + 500*lambda_2[0, 232] + 500*lambda_2[0, 247] + lambda_2[0, 288] + lambda_2[0, 289] + 20*lambda_2[0, 290] + 20*lambda_2[0, 291] + 200*lambda_2[0, 294] + 100*lambda_2[0, 297] + 800*lambda_2[0, 300] + 1600*lambda_2[0, 304] + 80*lambda_2[0, 307] + 80*lambda_2[0, 308] + 800*lambda_2[0, 311] + 3200*lambda_2[0, 314] + 10000*lambda_2[0, 338] + 40000*lambda_2[0, 343] + 250000*lambda_2[0, 358] + 10000*lambda_2[0, 383] + 40000*lambda_2[0, 388] + 250000*lambda_2[0, 415] + lambda_2[0, 429] + 10*lambda_2[0, 431] + 10*lambda_2[0, 432] + 40*lambda_2[0, 434] + 40*lambda_2[0, 435] + 400*lambda_2[0, 438] + 500*lambda_2[0, 450] + 500*lambda_2[0, 451] + 5000*lambda_2[0, 454] + 20000*lambda_2[0, 457] + 500*lambda_2[0, 470] + 500*lambda_2[0, 471] + 5000*lambda_2[0, 474] + 20000*lambda_2[0, 477] + 250000*lambda_2[0, 491] >= -l*V[0, 42] + 4*V[0, 11]*t0[0, 1] - 2*V[0, 42]*t0[0, 2] - 2*V[0, 42] + V[0, 43] + V[0, 48]- objc]
	constraints += [lambda_2[0, 44] + 20*lambda_2[0, 82] + 80*lambda_2[0, 87] + 300*lambda_2[0, 138] + 4800*lambda_2[0, 143] + 1600*lambda_2[0, 184] + lambda_2[0, 211] + lambda_2[0, 212] + 10*lambda_2[0, 215] + 40*lambda_2[0, 218] + 500*lambda_2[0, 232] + 500*lambda_2[0, 247] + lambda_2[0, 288] + lambda_2[0, 289] + 20*lambda_2[0, 290] + 20*lambda_2[0, 291] + 200*lambda_2[0, 294] + 100*lambda_2[0, 297] + 800*lambda_2[0, 300] + 1600*lambda_2[0, 304] + 80*lambda_2[0, 307] + 80*lambda_2[0, 308] + 800*lambda_2[0, 311] + 3200*lambda_2[0, 314] + 10000*lambda_2[0, 338] + 40000*lambda_2[0, 343] + 250000*lambda_2[0, 358] + 10000*lambda_2[0, 383] + 40000*lambda_2[0, 388] + 250000*lambda_2[0, 415] + lambda_2[0, 429] + 10*lambda_2[0, 431] + 10*lambda_2[0, 432] + 40*lambda_2[0, 434] + 40*lambda_2[0, 435] + 400*lambda_2[0, 438] + 500*lambda_2[0, 450] + 500*lambda_2[0, 451] + 5000*lambda_2[0, 454] + 20000*lambda_2[0, 457] + 500*lambda_2[0, 470] + 500*lambda_2[0, 471] + 5000*lambda_2[0, 474] + 20000*lambda_2[0, 477] + 250000*lambda_2[0, 491] <= -l*V[0, 42] + 4*V[0, 11]*t0[0, 1] - 2*V[0, 42]*t0[0, 2] - 2*V[0, 42] + V[0, 43] + V[0, 48]+ objc]
	constraints += [-lambda_2[0, 211] - 2*lambda_2[0, 288] - 20*lambda_2[0, 290] - 80*lambda_2[0, 307] - lambda_2[0, 429] - 10*lambda_2[0, 431] - 40*lambda_2[0, 434] - 500*lambda_2[0, 450] - 500*lambda_2[0, 470] >= -l*V[0, 130] + 4*V[0, 57]*t0[0, 1] - 2*V[0, 130]*t0[0, 2] - 2*V[0, 130] + V[0, 132] + V[0, 145]- objc]
	constraints += [-lambda_2[0, 211] - 2*lambda_2[0, 288] - 20*lambda_2[0, 290] - 80*lambda_2[0, 307] - lambda_2[0, 429] - 10*lambda_2[0, 431] - 40*lambda_2[0, 434] - 500*lambda_2[0, 450] - 500*lambda_2[0, 470] <= -l*V[0, 130] + 4*V[0, 57]*t0[0, 1] - 2*V[0, 130]*t0[0, 2] - 2*V[0, 130] + V[0, 132] + V[0, 145]+ objc]
	constraints += [lambda_2[0, 288] == 0]
	constraints += [-lambda_2[0, 212] - 2*lambda_2[0, 289] - 20*lambda_2[0, 291] - 80*lambda_2[0, 308] - lambda_2[0, 429] - 10*lambda_2[0, 432] - 40*lambda_2[0, 435] - 500*lambda_2[0, 451] - 500*lambda_2[0, 471] >= -l*V[0, 131] + 4*V[0, 58]*t0[0, 1] - 2*V[0, 131]*t0[0, 2] - 2*V[0, 131] + V[0, 133] - 25*V[0, 141] + V[0, 146]- objc]
	constraints += [-lambda_2[0, 212] - 2*lambda_2[0, 289] - 20*lambda_2[0, 291] - 80*lambda_2[0, 308] - lambda_2[0, 429] - 10*lambda_2[0, 432] - 40*lambda_2[0, 435] - 500*lambda_2[0, 451] - 500*lambda_2[0, 471] <= -l*V[0, 131] + 4*V[0, 58]*t0[0, 1] - 2*V[0, 131]*t0[0, 2] - 2*V[0, 131] + V[0, 133] - 25*V[0, 141] + V[0, 146]+ objc]
	constraints += [lambda_2[0, 429] == 0]
	constraints += [lambda_2[0, 289] == 0]
	constraints += [-lambda_2[0, 82] - 30*lambda_2[0, 138] - 80*lambda_2[0, 184] - lambda_2[0, 290] - lambda_2[0, 291] - 10*lambda_2[0, 294] - 40*lambda_2[0, 300] - 500*lambda_2[0, 338] - 500*lambda_2[0, 383] >= -l*V[0, 85] + 6*V[0, 19]*t0[0, 1] - 4*V[0, 85]*t0[0, 2] - 4*V[0, 85] + V[0, 97] + V[0, 134]- objc]
	constraints += [-lambda_2[0, 82] - 30*lambda_2[0, 138] - 80*lambda_2[0, 184] - lambda_2[0, 290] - lambda_2[0, 291] - 10*lambda_2[0, 294] - 40*lambda_2[0, 300] - 500*lambda_2[0, 338] - 500*lambda_2[0, 383] <= -l*V[0, 85] + 6*V[0, 19]*t0[0, 1] - 4*V[0, 85]*t0[0, 2] - 4*V[0, 85] + V[0, 97] + V[0, 134]+ objc]
	constraints += [lambda_2[0, 290] == 0]
	constraints += [lambda_2[0, 291] == 0]
	constraints += [lambda_2[0, 138] == 0]
	constraints += [lambda_2[0, 46] + 80*lambda_2[0, 84] + 80*lambda_2[0, 89] + 4800*lambda_2[0, 140] + 4800*lambda_2[0, 145] + 6400*lambda_2[0, 186] + lambda_2[0, 216] + lambda_2[0, 217] + 10*lambda_2[0, 218] + 10*lambda_2[0, 219] + 500*lambda_2[0, 234] + 500*lambda_2[0, 249] + lambda_2[0, 298] + lambda_2[0, 299] + 100*lambda_2[0, 300] + 100*lambda_2[0, 301] + 80*lambda_2[0, 302] + 80*lambda_2[0, 303] + 800*lambda_2[0, 304] + 800*lambda_2[0, 305] + 80*lambda_2[0, 312] + 80*lambda_2[0, 313] + 800*lambda_2[0, 314] + 800*lambda_2[0, 315] + 40000*lambda_2[0, 340] + 40000*lambda_2[0, 345] + 250000*lambda_2[0, 360] + 40000*lambda_2[0, 385] + 40000*lambda_2[0, 390] + 250000*lambda_2[0, 417] + lambda_2[0, 433] + 10*lambda_2[0, 434] + 10*lambda_2[0, 435] + 10*lambda_2[0, 436] + 10*lambda_2[0, 437] + 100*lambda_2[0, 438] + 500*lambda_2[0, 455] + 500*lambda_2[0, 456] + 5000*lambda_2[0, 457] + 5000*lambda_2[0, 458] + 500*lambda_2[0, 475] + 500*lambda_2[0, 476] + 5000*lambda_2[0, 477] + 5000*lambda_2[0, 478] + 250000*lambda_2[0, 493] >= -l*V[0, 43] + 2*V[0, 30]*t0[0, 1] - 2.8*V[0, 42]*t0[0, 0] - 2*V[0, 42]*t0[0, 1] + V[0, 44] + V[0, 49]- objc]
	constraints += [lambda_2[0, 46] + 80*lambda_2[0, 84] + 80*lambda_2[0, 89] + 4800*lambda_2[0, 140] + 4800*lambda_2[0, 145] + 6400*lambda_2[0, 186] + lambda_2[0, 216] + lambda_2[0, 217] + 10*lambda_2[0, 218] + 10*lambda_2[0, 219] + 500*lambda_2[0, 234] + 500*lambda_2[0, 249] + lambda_2[0, 298] + lambda_2[0, 299] + 100*lambda_2[0, 300] + 100*lambda_2[0, 301] + 80*lambda_2[0, 302] + 80*lambda_2[0, 303] + 800*lambda_2[0, 304] + 800*lambda_2[0, 305] + 80*lambda_2[0, 312] + 80*lambda_2[0, 313] + 800*lambda_2[0, 314] + 800*lambda_2[0, 315] + 40000*lambda_2[0, 340] + 40000*lambda_2[0, 345] + 250000*lambda_2[0, 360] + 40000*lambda_2[0, 385] + 40000*lambda_2[0, 390] + 250000*lambda_2[0, 417] + lambda_2[0, 433] + 10*lambda_2[0, 434] + 10*lambda_2[0, 435] + 10*lambda_2[0, 436] + 10*lambda_2[0, 437] + 100*lambda_2[0, 438] + 500*lambda_2[0, 455] + 500*lambda_2[0, 456] + 5000*lambda_2[0, 457] + 5000*lambda_2[0, 458] + 500*lambda_2[0, 475] + 500*lambda_2[0, 476] + 5000*lambda_2[0, 477] + 5000*lambda_2[0, 478] + 250000*lambda_2[0, 493] <= -l*V[0, 43] + 2*V[0, 30]*t0[0, 1] - 2.8*V[0, 42]*t0[0, 0] - 2*V[0, 42]*t0[0, 1] + V[0, 44] + V[0, 49]+ objc]
	constraints += [-lambda_2[0, 216] - 2*lambda_2[0, 298] - 80*lambda_2[0, 302] - 80*lambda_2[0, 312] - lambda_2[0, 433] - 10*lambda_2[0, 434] - 10*lambda_2[0, 436] - 500*lambda_2[0, 455] - 500*lambda_2[0, 475] >= -l*V[0, 132] + 2*V[0, 111]*t0[0, 1] - 2.8*V[0, 130]*t0[0, 0] - 2*V[0, 130]*t0[0, 1] + V[0, 135] + V[0, 147]- objc]
	constraints += [-lambda_2[0, 216] - 2*lambda_2[0, 298] - 80*lambda_2[0, 302] - 80*lambda_2[0, 312] - lambda_2[0, 433] - 10*lambda_2[0, 434] - 10*lambda_2[0, 436] - 500*lambda_2[0, 455] - 500*lambda_2[0, 475] <= -l*V[0, 132] + 2*V[0, 111]*t0[0, 1] - 2.8*V[0, 130]*t0[0, 0] - 2*V[0, 130]*t0[0, 1] + V[0, 135] + V[0, 147]+ objc]
	constraints += [lambda_2[0, 298] == 0]
	constraints += [-lambda_2[0, 217] - 2*lambda_2[0, 299] - 80*lambda_2[0, 303] - 80*lambda_2[0, 313] - lambda_2[0, 433] - 10*lambda_2[0, 435] - 10*lambda_2[0, 437] - 500*lambda_2[0, 456] - 500*lambda_2[0, 476] >= -l*V[0, 133] + 2*V[0, 112]*t0[0, 1] - 2.8*V[0, 131]*t0[0, 0] - 2*V[0, 131]*t0[0, 1] + V[0, 136] - 25*V[0, 142] + V[0, 148]- objc]
	constraints += [-lambda_2[0, 217] - 2*lambda_2[0, 299] - 80*lambda_2[0, 303] - 80*lambda_2[0, 313] - lambda_2[0, 433] - 10*lambda_2[0, 435] - 10*lambda_2[0, 437] - 500*lambda_2[0, 456] - 500*lambda_2[0, 476] <= -l*V[0, 133] + 2*V[0, 112]*t0[0, 1] - 2.8*V[0, 131]*t0[0, 0] - 2*V[0, 131]*t0[0, 1] + V[0, 136] - 25*V[0, 142] + V[0, 148]+ objc]
	constraints += [lambda_2[0, 433] == 0]
	constraints += [lambda_2[0, 299] == 0]
	constraints += [-lambda_2[0, 218] - 20*lambda_2[0, 300] - 80*lambda_2[0, 304] - 80*lambda_2[0, 314] - lambda_2[0, 434] - lambda_2[0, 435] - 10*lambda_2[0, 438] - 500*lambda_2[0, 457] - 500*lambda_2[0, 477] >= -l*V[0, 134] + 4*V[0, 61]*t0[0, 1] - 5.6*V[0, 85]*t0[0, 0] - 4*V[0, 85]*t0[0, 1] + 2*V[0, 86] - 2*V[0, 134]*t0[0, 2] - 2*V[0, 134] + V[0, 137] + V[0, 149]- objc]
	constraints += [-lambda_2[0, 218] - 20*lambda_2[0, 300] - 80*lambda_2[0, 304] - 80*lambda_2[0, 314] - lambda_2[0, 434] - lambda_2[0, 435] - 10*lambda_2[0, 438] - 500*lambda_2[0, 457] - 500*lambda_2[0, 477] <= -l*V[0, 134] + 4*V[0, 61]*t0[0, 1] - 5.6*V[0, 85]*t0[0, 0] - 4*V[0, 85]*t0[0, 1] + 2*V[0, 86] - 2*V[0, 134]*t0[0, 2] - 2*V[0, 134] + V[0, 137] + V[0, 149]+ objc]
	constraints += [lambda_2[0, 434] == 0]
	constraints += [lambda_2[0, 435] == 0]
	constraints += [lambda_2[0, 300] == 0]
	constraints += [-lambda_2[0, 84] - 120*lambda_2[0, 140] - 80*lambda_2[0, 186] - lambda_2[0, 302] - lambda_2[0, 303] - 10*lambda_2[0, 304] - 10*lambda_2[0, 305] - 500*lambda_2[0, 340] - 500*lambda_2[0, 385] >= -l*V[0, 86] - 0.0001*V[0, 42] + 2*V[0, 64]*t0[0, 1] + V[0, 98] - 2.8*V[0, 134]*t0[0, 0] - 2*V[0, 134]*t0[0, 1] + V[0, 138]- objc]
	constraints += [-lambda_2[0, 84] - 120*lambda_2[0, 140] - 80*lambda_2[0, 186] - lambda_2[0, 302] - lambda_2[0, 303] - 10*lambda_2[0, 304] - 10*lambda_2[0, 305] - 500*lambda_2[0, 340] - 500*lambda_2[0, 385] <= -l*V[0, 86] - 0.0001*V[0, 42] + 2*V[0, 64]*t0[0, 1] + V[0, 98] - 2.8*V[0, 134]*t0[0, 0] - 2*V[0, 134]*t0[0, 1] + V[0, 138]+ objc]
	constraints += [lambda_2[0, 302] >= -0.0001*V[0, 130]- objc]
	constraints += [lambda_2[0, 302] <= -0.0001*V[0, 130]+ objc]
	constraints += [lambda_2[0, 303] >= -0.0001*V[0, 131]- objc]
	constraints += [lambda_2[0, 303] <= -0.0001*V[0, 131]+ objc]
	constraints += [lambda_2[0, 304] >= -0.0002*V[0, 85]- objc]
	constraints += [lambda_2[0, 304] <= -0.0002*V[0, 85]+ objc]
	constraints += [lambda_2[0, 140] >= -0.0001*V[0, 134]- objc]
	constraints += [lambda_2[0, 140] <= -0.0001*V[0, 134]+ objc]
	constraints += [lambda_2[0, 52] + 80*lambda_2[0, 95] + 1000*lambda_2[0, 101] + 4800*lambda_2[0, 151] + 750000*lambda_2[0, 157] + 80000*lambda_2[0, 192] + lambda_2[0, 230] + lambda_2[0, 231] + 10*lambda_2[0, 232] + 10*lambda_2[0, 233] + 40*lambda_2[0, 234] + 500*lambda_2[0, 255] + lambda_2[0, 336] + lambda_2[0, 337] + 100*lambda_2[0, 338] + 100*lambda_2[0, 339] + 1600*lambda_2[0, 340] + 80*lambda_2[0, 341] + 80*lambda_2[0, 342] + 800*lambda_2[0, 343] + 800*lambda_2[0, 344] + 3200*lambda_2[0, 345] + 1000*lambda_2[0, 356] + 1000*lambda_2[0, 357] + 10000*lambda_2[0, 358] + 10000*lambda_2[0, 359] + 40000*lambda_2[0, 360] + 40000*lambda_2[0, 396] + 500000*lambda_2[0, 402] + 250000*lambda_2[0, 423] + lambda_2[0, 449] + 10*lambda_2[0, 450] + 10*lambda_2[0, 451] + 10*lambda_2[0, 452] + 10*lambda_2[0, 453] + 100*lambda_2[0, 454] + 40*lambda_2[0, 455] + 40*lambda_2[0, 456] + 400*lambda_2[0, 457] + 400*lambda_2[0, 458] + 500*lambda_2[0, 489] + 500*lambda_2[0, 490] + 5000*lambda_2[0, 491] + 5000*lambda_2[0, 492] + 20000*lambda_2[0, 493] >= -l*V[0, 44] + 2*V[0, 33]*t0[0, 1] - 2*V[0, 42]*t0[0, 0] + V[0, 50]- objc]
	constraints += [lambda_2[0, 52] + 80*lambda_2[0, 95] + 1000*lambda_2[0, 101] + 4800*lambda_2[0, 151] + 750000*lambda_2[0, 157] + 80000*lambda_2[0, 192] + lambda_2[0, 230] + lambda_2[0, 231] + 10*lambda_2[0, 232] + 10*lambda_2[0, 233] + 40*lambda_2[0, 234] + 500*lambda_2[0, 255] + lambda_2[0, 336] + lambda_2[0, 337] + 100*lambda_2[0, 338] + 100*lambda_2[0, 339] + 1600*lambda_2[0, 340] + 80*lambda_2[0, 341] + 80*lambda_2[0, 342] + 800*lambda_2[0, 343] + 800*lambda_2[0, 344] + 3200*lambda_2[0, 345] + 1000*lambda_2[0, 356] + 1000*lambda_2[0, 357] + 10000*lambda_2[0, 358] + 10000*lambda_2[0, 359] + 40000*lambda_2[0, 360] + 40000*lambda_2[0, 396] + 500000*lambda_2[0, 402] + 250000*lambda_2[0, 423] + lambda_2[0, 449] + 10*lambda_2[0, 450] + 10*lambda_2[0, 451] + 10*lambda_2[0, 452] + 10*lambda_2[0, 453] + 100*lambda_2[0, 454] + 40*lambda_2[0, 455] + 40*lambda_2[0, 456] + 400*lambda_2[0, 457] + 400*lambda_2[0, 458] + 500*lambda_2[0, 489] + 500*lambda_2[0, 490] + 5000*lambda_2[0, 491] + 5000*lambda_2[0, 492] + 20000*lambda_2[0, 493] <= -l*V[0, 44] + 2*V[0, 33]*t0[0, 1] - 2*V[0, 42]*t0[0, 0] + V[0, 50]+ objc]
	constraints += [-lambda_2[0, 230] - 2*lambda_2[0, 336] - 80*lambda_2[0, 341] - 1000*lambda_2[0, 356] - lambda_2[0, 449] - 10*lambda_2[0, 450] - 10*lambda_2[0, 452] - 40*lambda_2[0, 455] - 500*lambda_2[0, 489] >= -l*V[0, 135] + 2*V[0, 114]*t0[0, 1] - 2*V[0, 130]*t0[0, 0] + V[0, 150]- objc]
	constraints += [-lambda_2[0, 230] - 2*lambda_2[0, 336] - 80*lambda_2[0, 341] - 1000*lambda_2[0, 356] - lambda_2[0, 449] - 10*lambda_2[0, 450] - 10*lambda_2[0, 452] - 40*lambda_2[0, 455] - 500*lambda_2[0, 489] <= -l*V[0, 135] + 2*V[0, 114]*t0[0, 1] - 2*V[0, 130]*t0[0, 0] + V[0, 150]+ objc]
	constraints += [lambda_2[0, 336] == 0]
	constraints += [-lambda_2[0, 231] - 2*lambda_2[0, 337] - 80*lambda_2[0, 342] - 1000*lambda_2[0, 357] - lambda_2[0, 449] - 10*lambda_2[0, 451] - 10*lambda_2[0, 453] - 40*lambda_2[0, 456] - 500*lambda_2[0, 490] >= -l*V[0, 136] + 2*V[0, 115]*t0[0, 1] - 2*V[0, 131]*t0[0, 0] - 25*V[0, 143] + V[0, 151]- objc]
	constraints += [-lambda_2[0, 231] - 2*lambda_2[0, 337] - 80*lambda_2[0, 342] - 1000*lambda_2[0, 357] - lambda_2[0, 449] - 10*lambda_2[0, 451] - 10*lambda_2[0, 453] - 40*lambda_2[0, 456] - 500*lambda_2[0, 490] <= -l*V[0, 136] + 2*V[0, 115]*t0[0, 1] - 2*V[0, 131]*t0[0, 0] - 25*V[0, 143] + V[0, 151]+ objc]
	constraints += [lambda_2[0, 449] == 0]
	constraints += [lambda_2[0, 337] == 0]
	constraints += [-lambda_2[0, 232] - 20*lambda_2[0, 338] - 80*lambda_2[0, 343] - 1000*lambda_2[0, 358] - lambda_2[0, 450] - lambda_2[0, 451] - 10*lambda_2[0, 454] - 40*lambda_2[0, 457] - 500*lambda_2[0, 491] >= -l*V[0, 137] + 4*V[0, 67]*t0[0, 1] - 4*V[0, 85]*t0[0, 0] - 2*V[0, 137]*t0[0, 2] - 2*V[0, 137] + V[0, 138] + V[0, 152]- objc]
	constraints += [-lambda_2[0, 232] - 20*lambda_2[0, 338] - 80*lambda_2[0, 343] - 1000*lambda_2[0, 358] - lambda_2[0, 450] - lambda_2[0, 451] - 10*lambda_2[0, 454] - 40*lambda_2[0, 457] - 500*lambda_2[0, 491] <= -l*V[0, 137] + 4*V[0, 67]*t0[0, 1] - 4*V[0, 85]*t0[0, 0] - 2*V[0, 137]*t0[0, 2] - 2*V[0, 137] + V[0, 138] + V[0, 152]+ objc]
	constraints += [lambda_2[0, 450] == 0]
	constraints += [lambda_2[0, 451] == 0]
	constraints += [lambda_2[0, 338] == 0]
	constraints += [-lambda_2[0, 234] - 80*lambda_2[0, 340] - 80*lambda_2[0, 345] - 1000*lambda_2[0, 360] - lambda_2[0, 455] - lambda_2[0, 456] - 10*lambda_2[0, 457] - 10*lambda_2[0, 458] - 500*lambda_2[0, 493] >= -l*V[0, 138] + 2*V[0, 87] + 2*V[0, 118]*t0[0, 1] - 2*V[0, 134]*t0[0, 0] - 2.8*V[0, 137]*t0[0, 0] - 2*V[0, 137]*t0[0, 1] + V[0, 153]- objc]
	constraints += [-lambda_2[0, 234] - 80*lambda_2[0, 340] - 80*lambda_2[0, 345] - 1000*lambda_2[0, 360] - lambda_2[0, 455] - lambda_2[0, 456] - 10*lambda_2[0, 457] - 10*lambda_2[0, 458] - 500*lambda_2[0, 493] <= -l*V[0, 138] + 2*V[0, 87] + 2*V[0, 118]*t0[0, 1] - 2*V[0, 134]*t0[0, 0] - 2.8*V[0, 137]*t0[0, 0] - 2*V[0, 137]*t0[0, 1] + V[0, 153]+ objc]
	constraints += [lambda_2[0, 455] == 0]
	constraints += [lambda_2[0, 456] == 0]
	constraints += [lambda_2[0, 457] == 0]
	constraints += [lambda_2[0, 340] >= -0.0001*V[0, 137]- objc]
	constraints += [lambda_2[0, 340] <= -0.0001*V[0, 137]+ objc]
	constraints += [-lambda_2[0, 101] - 1500*lambda_2[0, 157] - 80*lambda_2[0, 192] - lambda_2[0, 356] - lambda_2[0, 357] - 10*lambda_2[0, 358] - 10*lambda_2[0, 359] - 40*lambda_2[0, 360] - 500*lambda_2[0, 402] >= -l*V[0, 87] + 2*V[0, 71]*t0[0, 1] + V[0, 99] - 2*V[0, 137]*t0[0, 0]- objc]
	constraints += [-lambda_2[0, 101] - 1500*lambda_2[0, 157] - 80*lambda_2[0, 192] - lambda_2[0, 356] - lambda_2[0, 357] - 10*lambda_2[0, 358] - 10*lambda_2[0, 359] - 40*lambda_2[0, 360] - 500*lambda_2[0, 402] <= -l*V[0, 87] + 2*V[0, 71]*t0[0, 1] + V[0, 99] - 2*V[0, 137]*t0[0, 0]+ objc]
	constraints += [lambda_2[0, 356] == 0]
	constraints += [lambda_2[0, 357] == 0]
	constraints += [lambda_2[0, 358] == 0]
	constraints += [lambda_2[0, 360] == 0]
	constraints += [lambda_2[0, 157] == 0]
	constraints += [lambda_2[0, 45] + 20*lambda_2[0, 83] + 80*lambda_2[0, 88] + 300*lambda_2[0, 139] + 4800*lambda_2[0, 144] + 1600*lambda_2[0, 185] + lambda_2[0, 213] + lambda_2[0, 214] + 10*lambda_2[0, 215] + 40*lambda_2[0, 219] + 500*lambda_2[0, 233] + 500*lambda_2[0, 248] + lambda_2[0, 292] + lambda_2[0, 293] + 100*lambda_2[0, 294] + 20*lambda_2[0, 295] + 20*lambda_2[0, 296] + 200*lambda_2[0, 297] + 800*lambda_2[0, 301] + 1600*lambda_2[0, 305] + 80*lambda_2[0, 309] + 80*lambda_2[0, 310] + 800*lambda_2[0, 311] + 3200*lambda_2[0, 315] + 10000*lambda_2[0, 339] + 40000*lambda_2[0, 344] + 250000*lambda_2[0, 359] + 10000*lambda_2[0, 384] + 40000*lambda_2[0, 389] + 250000*lambda_2[0, 416] + lambda_2[0, 430] + 10*lambda_2[0, 431] + 10*lambda_2[0, 432] + 40*lambda_2[0, 436] + 40*lambda_2[0, 437] + 400*lambda_2[0, 438] + 500*lambda_2[0, 452] + 500*lambda_2[0, 453] + 5000*lambda_2[0, 454] + 20000*lambda_2[0, 458] + 500*lambda_2[0, 472] + 500*lambda_2[0, 473] + 5000*lambda_2[0, 474] + 20000*lambda_2[0, 478] + 250000*lambda_2[0, 492] >= -l*V[0, 45] + 2*V[0, 15] + 2*V[0, 37]*t0[0, 1] + 2*V[0, 42]*t0[0, 2] - 2*V[0, 45] + V[0, 51]- objc]
	constraints += [lambda_2[0, 45] + 20*lambda_2[0, 83] + 80*lambda_2[0, 88] + 300*lambda_2[0, 139] + 4800*lambda_2[0, 144] + 1600*lambda_2[0, 185] + lambda_2[0, 213] + lambda_2[0, 214] + 10*lambda_2[0, 215] + 40*lambda_2[0, 219] + 500*lambda_2[0, 233] + 500*lambda_2[0, 248] + lambda_2[0, 292] + lambda_2[0, 293] + 100*lambda_2[0, 294] + 20*lambda_2[0, 295] + 20*lambda_2[0, 296] + 200*lambda_2[0, 297] + 800*lambda_2[0, 301] + 1600*lambda_2[0, 305] + 80*lambda_2[0, 309] + 80*lambda_2[0, 310] + 800*lambda_2[0, 311] + 3200*lambda_2[0, 315] + 10000*lambda_2[0, 339] + 40000*lambda_2[0, 344] + 250000*lambda_2[0, 359] + 10000*lambda_2[0, 384] + 40000*lambda_2[0, 389] + 250000*lambda_2[0, 416] + lambda_2[0, 430] + 10*lambda_2[0, 431] + 10*lambda_2[0, 432] + 40*lambda_2[0, 436] + 40*lambda_2[0, 437] + 400*lambda_2[0, 438] + 500*lambda_2[0, 452] + 500*lambda_2[0, 453] + 5000*lambda_2[0, 454] + 20000*lambda_2[0, 458] + 500*lambda_2[0, 472] + 500*lambda_2[0, 473] + 5000*lambda_2[0, 474] + 20000*lambda_2[0, 478] + 250000*lambda_2[0, 492] <= -l*V[0, 45] + 2*V[0, 15] + 2*V[0, 37]*t0[0, 1] + 2*V[0, 42]*t0[0, 2] - 2*V[0, 45] + V[0, 51]+ objc]
	constraints += [-lambda_2[0, 213] - 2*lambda_2[0, 292] - 20*lambda_2[0, 295] - 80*lambda_2[0, 309] - lambda_2[0, 430] - 10*lambda_2[0, 431] - 40*lambda_2[0, 436] - 500*lambda_2[0, 452] - 500*lambda_2[0, 472] >= -l*V[0, 139] + V[0, 41] + 2*V[0, 89] + 2*V[0, 120]*t0[0, 1] + 2*V[0, 130]*t0[0, 2] - 2*V[0, 139] + V[0, 154]- objc]
	constraints += [-lambda_2[0, 213] - 2*lambda_2[0, 292] - 20*lambda_2[0, 295] - 80*lambda_2[0, 309] - lambda_2[0, 430] - 10*lambda_2[0, 431] - 40*lambda_2[0, 436] - 500*lambda_2[0, 452] - 500*lambda_2[0, 472] <= -l*V[0, 139] + V[0, 41] + 2*V[0, 89] + 2*V[0, 120]*t0[0, 1] + 2*V[0, 130]*t0[0, 2] - 2*V[0, 139] + V[0, 154]+ objc]
	constraints += [lambda_2[0, 292] >= V[0, 129]- objc]
	constraints += [lambda_2[0, 292] <= V[0, 129]+ objc]
	constraints += [-lambda_2[0, 214] - 2*lambda_2[0, 293] - 20*lambda_2[0, 296] - 80*lambda_2[0, 310] - lambda_2[0, 430] - 10*lambda_2[0, 432] - 40*lambda_2[0, 437] - 500*lambda_2[0, 453] - 500*lambda_2[0, 473] >= -l*V[0, 140] - V[0, 40] - 50*V[0, 88] + 2*V[0, 90] + 2*V[0, 121]*t0[0, 1] + 2*V[0, 131]*t0[0, 2] - 2*V[0, 140] + V[0, 155]- objc]
	constraints += [-lambda_2[0, 214] - 2*lambda_2[0, 293] - 20*lambda_2[0, 296] - 80*lambda_2[0, 310] - lambda_2[0, 430] - 10*lambda_2[0, 432] - 40*lambda_2[0, 437] - 500*lambda_2[0, 453] - 500*lambda_2[0, 473] <= -l*V[0, 140] - V[0, 40] - 50*V[0, 88] + 2*V[0, 90] + 2*V[0, 121]*t0[0, 1] + 2*V[0, 131]*t0[0, 2] - 2*V[0, 140] + V[0, 155]+ objc]
	constraints += [lambda_2[0, 430] >= -2*V[0, 83] + 2*V[0, 84]- objc]
	constraints += [lambda_2[0, 430] <= -2*V[0, 83] + 2*V[0, 84]+ objc]
	constraints += [lambda_2[0, 293] >= -V[0, 129]- objc]
	constraints += [lambda_2[0, 293] <= -V[0, 129]+ objc]
	constraints += [-lambda_2[0, 215] - 20*lambda_2[0, 294] - 20*lambda_2[0, 297] - 80*lambda_2[0, 311] - lambda_2[0, 431] - lambda_2[0, 432] - 40*lambda_2[0, 438] - 500*lambda_2[0, 454] - 500*lambda_2[0, 474] >= -l*V[0, 141] + 4*V[0, 75]*t0[0, 1] + 4*V[0, 85]*t0[0, 2] + 2*V[0, 91] - 2*V[0, 141]*t0[0, 2] - 4*V[0, 141] + V[0, 142] + V[0, 156]- objc]
	constraints += [-lambda_2[0, 215] - 20*lambda_2[0, 294] - 20*lambda_2[0, 297] - 80*lambda_2[0, 311] - lambda_2[0, 431] - lambda_2[0, 432] - 40*lambda_2[0, 438] - 500*lambda_2[0, 454] - 500*lambda_2[0, 474] <= -l*V[0, 141] + 4*V[0, 75]*t0[0, 1] + 4*V[0, 85]*t0[0, 2] + 2*V[0, 91] - 2*V[0, 141]*t0[0, 2] - 4*V[0, 141] + V[0, 142] + V[0, 156]+ objc]
	constraints += [lambda_2[0, 431] >= V[0, 131]- objc]
	constraints += [lambda_2[0, 431] <= V[0, 131]+ objc]
	constraints += [lambda_2[0, 432] >= -V[0, 130]- objc]
	constraints += [lambda_2[0, 432] <= -V[0, 130]+ objc]
	constraints += [lambda_2[0, 294] == 0]
	constraints += [-lambda_2[0, 219] - 20*lambda_2[0, 301] - 80*lambda_2[0, 305] - 80*lambda_2[0, 315] - lambda_2[0, 436] - lambda_2[0, 437] - 10*lambda_2[0, 438] - 500*lambda_2[0, 458] - 500*lambda_2[0, 478] >= -l*V[0, 142] + 2*V[0, 92] + 2*V[0, 124]*t0[0, 1] + 2*V[0, 134]*t0[0, 2] - 2.8*V[0, 141]*t0[0, 0] - 2*V[0, 141]*t0[0, 1] - 2*V[0, 142] + V[0, 143] + V[0, 157]- objc]
	constraints += [-lambda_2[0, 219] - 20*lambda_2[0, 301] - 80*lambda_2[0, 305] - 80*lambda_2[0, 315] - lambda_2[0, 436] - lambda_2[0, 437] - 10*lambda_2[0, 438] - 500*lambda_2[0, 458] - 500*lambda_2[0, 478] <= -l*V[0, 142] + 2*V[0, 92] + 2*V[0, 124]*t0[0, 1] + 2*V[0, 134]*t0[0, 2] - 2.8*V[0, 141]*t0[0, 0] - 2*V[0, 141]*t0[0, 1] - 2*V[0, 142] + V[0, 143] + V[0, 157]+ objc]
	constraints += [lambda_2[0, 436] >= V[0, 133]- objc]
	constraints += [lambda_2[0, 436] <= V[0, 133]+ objc]
	constraints += [lambda_2[0, 437] >= -V[0, 132]- objc]
	constraints += [lambda_2[0, 437] <= -V[0, 132]+ objc]
	constraints += [lambda_2[0, 438] == 0]
	constraints += [lambda_2[0, 305] >= -0.0001*V[0, 141]- objc]
	constraints += [lambda_2[0, 305] <= -0.0001*V[0, 141]+ objc]
	constraints += [-lambda_2[0, 233] - 20*lambda_2[0, 339] - 80*lambda_2[0, 344] - 1000*lambda_2[0, 359] - lambda_2[0, 452] - lambda_2[0, 453] - 10*lambda_2[0, 454] - 40*lambda_2[0, 458] - 500*lambda_2[0, 492] >= -l*V[0, 143] + 2*V[0, 93] + 2*V[0, 127]*t0[0, 1] + 2*V[0, 137]*t0[0, 2] - 2*V[0, 141]*t0[0, 0] - 2*V[0, 143] + V[0, 158]- objc]
	constraints += [-lambda_2[0, 233] - 20*lambda_2[0, 339] - 80*lambda_2[0, 344] - 1000*lambda_2[0, 359] - lambda_2[0, 452] - lambda_2[0, 453] - 10*lambda_2[0, 454] - 40*lambda_2[0, 458] - 500*lambda_2[0, 492] <= -l*V[0, 143] + 2*V[0, 93] + 2*V[0, 127]*t0[0, 1] + 2*V[0, 137]*t0[0, 2] - 2*V[0, 141]*t0[0, 0] - 2*V[0, 143] + V[0, 158]+ objc]
	constraints += [lambda_2[0, 452] >= V[0, 136]- objc]
	constraints += [lambda_2[0, 452] <= V[0, 136]+ objc]
	constraints += [lambda_2[0, 453] >= -V[0, 135]- objc]
	constraints += [lambda_2[0, 453] <= -V[0, 135]+ objc]
	constraints += [lambda_2[0, 454] == 0]
	constraints += [lambda_2[0, 458] == 0]
	constraints += [lambda_2[0, 359] == 0]
	constraints += [-lambda_2[0, 83] - 30*lambda_2[0, 139] - 80*lambda_2[0, 185] - lambda_2[0, 295] - lambda_2[0, 296] - 10*lambda_2[0, 297] - 40*lambda_2[0, 301] - 500*lambda_2[0, 339] - 500*lambda_2[0, 384] >= -l*V[0, 88] + 2*V[0, 80]*t0[0, 1] - 4*V[0, 88] + 2*V[0, 94] + V[0, 100] + 2*V[0, 141]*t0[0, 2]- objc]
	constraints += [-lambda_2[0, 83] - 30*lambda_2[0, 139] - 80*lambda_2[0, 185] - lambda_2[0, 295] - lambda_2[0, 296] - 10*lambda_2[0, 297] - 40*lambda_2[0, 301] - 500*lambda_2[0, 339] - 500*lambda_2[0, 384] <= -l*V[0, 88] + 2*V[0, 80]*t0[0, 1] - 4*V[0, 88] + 2*V[0, 94] + V[0, 100] + 2*V[0, 141]*t0[0, 2]+ objc]
	constraints += [lambda_2[0, 295] >= V[0, 140]- objc]
	constraints += [lambda_2[0, 295] <= V[0, 140]+ objc]
	constraints += [lambda_2[0, 296] >= -V[0, 139]- objc]
	constraints += [lambda_2[0, 296] <= -V[0, 139]+ objc]
	constraints += [lambda_2[0, 297] == 0]
	constraints += [lambda_2[0, 301] == 0]
	constraints += [lambda_2[0, 339] == 0]
	constraints += [lambda_2[0, 139] == 0]
	constraints += [lambda_2[0, 13] + 120*lambda_2[0, 21] + 9600*lambda_2[0, 29] + lambda_2[0, 85] + lambda_2[0, 86] + 10*lambda_2[0, 87] + 10*lambda_2[0, 88] + 40*lambda_2[0, 89] + 500*lambda_2[0, 95] + 500*lambda_2[0, 107] + 120*lambda_2[0, 141] + 120*lambda_2[0, 142] + 1200*lambda_2[0, 143] + 1200*lambda_2[0, 144] + 4800*lambda_2[0, 145] + 60000*lambda_2[0, 151] + 60000*lambda_2[0, 163] + lambda_2[0, 182] + lambda_2[0, 183] + 100*lambda_2[0, 184] + 100*lambda_2[0, 185] + 1600*lambda_2[0, 186] + 250000*lambda_2[0, 192] + 250000*lambda_2[0, 198] + lambda_2[0, 306] + 10*lambda_2[0, 307] + 10*lambda_2[0, 308] + 10*lambda_2[0, 309] + 10*lambda_2[0, 310] + 100*lambda_2[0, 311] + 40*lambda_2[0, 312] + 40*lambda_2[0, 313] + 400*lambda_2[0, 314] + 400*lambda_2[0, 315] + 500*lambda_2[0, 341] + 500*lambda_2[0, 342] + 5000*lambda_2[0, 343] + 5000*lambda_2[0, 344] + 20000*lambda_2[0, 345] + 500*lambda_2[0, 386] + 500*lambda_2[0, 387] + 5000*lambda_2[0, 388] + 5000*lambda_2[0, 389] + 20000*lambda_2[0, 390] + 250000*lambda_2[0, 396] >= -l*V[0, 15] - 0.0001*V[0, 6] + 2*V[0, 42]*t0[0, 1] + V[0, 52] - 0.001- objc]
	constraints += [lambda_2[0, 13] + 120*lambda_2[0, 21] + 9600*lambda_2[0, 29] + lambda_2[0, 85] + lambda_2[0, 86] + 10*lambda_2[0, 87] + 10*lambda_2[0, 88] + 40*lambda_2[0, 89] + 500*lambda_2[0, 95] + 500*lambda_2[0, 107] + 120*lambda_2[0, 141] + 120*lambda_2[0, 142] + 1200*lambda_2[0, 143] + 1200*lambda_2[0, 144] + 4800*lambda_2[0, 145] + 60000*lambda_2[0, 151] + 60000*lambda_2[0, 163] + lambda_2[0, 182] + lambda_2[0, 183] + 100*lambda_2[0, 184] + 100*lambda_2[0, 185] + 1600*lambda_2[0, 186] + 250000*lambda_2[0, 192] + 250000*lambda_2[0, 198] + lambda_2[0, 306] + 10*lambda_2[0, 307] + 10*lambda_2[0, 308] + 10*lambda_2[0, 309] + 10*lambda_2[0, 310] + 100*lambda_2[0, 311] + 40*lambda_2[0, 312] + 40*lambda_2[0, 313] + 400*lambda_2[0, 314] + 400*lambda_2[0, 315] + 500*lambda_2[0, 341] + 500*lambda_2[0, 342] + 5000*lambda_2[0, 343] + 5000*lambda_2[0, 344] + 20000*lambda_2[0, 345] + 500*lambda_2[0, 386] + 500*lambda_2[0, 387] + 5000*lambda_2[0, 388] + 5000*lambda_2[0, 389] + 20000*lambda_2[0, 390] + 250000*lambda_2[0, 396] <= -l*V[0, 15] - 0.0001*V[0, 6] + 2*V[0, 42]*t0[0, 1] + V[0, 52] - 0.001+ objc]
	constraints += [-lambda_2[0, 85] - 120*lambda_2[0, 141] - 2*lambda_2[0, 182] - lambda_2[0, 306] - 10*lambda_2[0, 307] - 10*lambda_2[0, 309] - 40*lambda_2[0, 312] - 500*lambda_2[0, 341] - 500*lambda_2[0, 386] >= -l*V[0, 89] - 0.0001*V[0, 35] + 2*V[0, 130]*t0[0, 1] + V[0, 159]- objc]
	constraints += [-lambda_2[0, 85] - 120*lambda_2[0, 141] - 2*lambda_2[0, 182] - lambda_2[0, 306] - 10*lambda_2[0, 307] - 10*lambda_2[0, 309] - 40*lambda_2[0, 312] - 500*lambda_2[0, 341] - 500*lambda_2[0, 386] <= -l*V[0, 89] - 0.0001*V[0, 35] + 2*V[0, 130]*t0[0, 1] + V[0, 159]+ objc]
	constraints += [lambda_2[0, 182] >= -0.0001*V[0, 73]- objc]
	constraints += [lambda_2[0, 182] <= -0.0001*V[0, 73]+ objc]
	constraints += [-lambda_2[0, 86] - 120*lambda_2[0, 142] - 2*lambda_2[0, 183] - lambda_2[0, 306] - 10*lambda_2[0, 308] - 10*lambda_2[0, 310] - 40*lambda_2[0, 313] - 500*lambda_2[0, 342] - 500*lambda_2[0, 387] >= -l*V[0, 90] - 0.0001*V[0, 36] - 25*V[0, 94] + 2*V[0, 131]*t0[0, 1] + V[0, 160]- objc]
	constraints += [-lambda_2[0, 86] - 120*lambda_2[0, 142] - 2*lambda_2[0, 183] - lambda_2[0, 306] - 10*lambda_2[0, 308] - 10*lambda_2[0, 310] - 40*lambda_2[0, 313] - 500*lambda_2[0, 342] - 500*lambda_2[0, 387] <= -l*V[0, 90] - 0.0001*V[0, 36] - 25*V[0, 94] + 2*V[0, 131]*t0[0, 1] + V[0, 160]+ objc]
	constraints += [lambda_2[0, 306] >= -0.0001*V[0, 119]- objc]
	constraints += [lambda_2[0, 306] <= -0.0001*V[0, 119]+ objc]
	constraints += [lambda_2[0, 183] >= -0.0001*V[0, 74]- objc]
	constraints += [lambda_2[0, 183] <= -0.0001*V[0, 74]+ objc]
	constraints += [-lambda_2[0, 87] - 120*lambda_2[0, 143] - 20*lambda_2[0, 184] - lambda_2[0, 307] - lambda_2[0, 308] - 10*lambda_2[0, 311] - 40*lambda_2[0, 314] - 500*lambda_2[0, 343] - 500*lambda_2[0, 388] >= -l*V[0, 91] - 0.0001*V[0, 37] + 4*V[0, 85]*t0[0, 1] - 2*V[0, 91]*t0[0, 2] - 2*V[0, 91] + V[0, 92] + V[0, 161]- objc]
	constraints += [-lambda_2[0, 87] - 120*lambda_2[0, 143] - 20*lambda_2[0, 184] - lambda_2[0, 307] - lambda_2[0, 308] - 10*lambda_2[0, 311] - 40*lambda_2[0, 314] - 500*lambda_2[0, 343] - 500*lambda_2[0, 388] <= -l*V[0, 91] - 0.0001*V[0, 37] + 4*V[0, 85]*t0[0, 1] - 2*V[0, 91]*t0[0, 2] - 2*V[0, 91] + V[0, 92] + V[0, 161]+ objc]
	constraints += [lambda_2[0, 307] >= -0.0001*V[0, 120]- objc]
	constraints += [lambda_2[0, 307] <= -0.0001*V[0, 120]+ objc]
	constraints += [lambda_2[0, 308] >= -0.0001*V[0, 121]- objc]
	constraints += [lambda_2[0, 308] <= -0.0001*V[0, 121]+ objc]
	constraints += [lambda_2[0, 184] >= -0.0001*V[0, 75]- objc]
	constraints += [lambda_2[0, 184] <= -0.0001*V[0, 75]+ objc]
	constraints += [-lambda_2[0, 89] - 120*lambda_2[0, 145] - 80*lambda_2[0, 186] - lambda_2[0, 312] - lambda_2[0, 313] - 10*lambda_2[0, 314] - 10*lambda_2[0, 315] - 500*lambda_2[0, 345] - 500*lambda_2[0, 390] >= -l*V[0, 92] - 0.0001*V[0, 38] - 2.8*V[0, 91]*t0[0, 0] - 2*V[0, 91]*t0[0, 1] + V[0, 93] + 2*V[0, 134]*t0[0, 1] + V[0, 162]- objc]
	constraints += [-lambda_2[0, 89] - 120*lambda_2[0, 145] - 80*lambda_2[0, 186] - lambda_2[0, 312] - lambda_2[0, 313] - 10*lambda_2[0, 314] - 10*lambda_2[0, 315] - 500*lambda_2[0, 345] - 500*lambda_2[0, 390] <= -l*V[0, 92] - 0.0001*V[0, 38] - 2.8*V[0, 91]*t0[0, 0] - 2*V[0, 91]*t0[0, 1] + V[0, 93] + 2*V[0, 134]*t0[0, 1] + V[0, 162]+ objc]
	constraints += [lambda_2[0, 312] >= -0.0001*V[0, 122]- objc]
	constraints += [lambda_2[0, 312] <= -0.0001*V[0, 122]+ objc]
	constraints += [lambda_2[0, 313] >= -0.0001*V[0, 123]- objc]
	constraints += [lambda_2[0, 313] <= -0.0001*V[0, 123]+ objc]
	constraints += [lambda_2[0, 314] >= -0.0001*V[0, 124]- objc]
	constraints += [lambda_2[0, 314] <= -0.0001*V[0, 124]+ objc]
	constraints += [lambda_2[0, 186] >= -0.0001*V[0, 76] - 0.0001*V[0, 91]- objc]
	constraints += [lambda_2[0, 186] <= -0.0001*V[0, 76] - 0.0001*V[0, 91]+ objc]
	constraints += [-lambda_2[0, 95] - 120*lambda_2[0, 151] - 1000*lambda_2[0, 192] - lambda_2[0, 341] - lambda_2[0, 342] - 10*lambda_2[0, 343] - 10*lambda_2[0, 344] - 40*lambda_2[0, 345] - 500*lambda_2[0, 396] >= -l*V[0, 93] - 0.0001*V[0, 39] - 2*V[0, 91]*t0[0, 0] + 2*V[0, 137]*t0[0, 1] + V[0, 163]- objc]
	constraints += [-lambda_2[0, 95] - 120*lambda_2[0, 151] - 1000*lambda_2[0, 192] - lambda_2[0, 341] - lambda_2[0, 342] - 10*lambda_2[0, 343] - 10*lambda_2[0, 344] - 40*lambda_2[0, 345] - 500*lambda_2[0, 396] <= -l*V[0, 93] - 0.0001*V[0, 39] - 2*V[0, 91]*t0[0, 0] + 2*V[0, 137]*t0[0, 1] + V[0, 163]+ objc]
	constraints += [lambda_2[0, 341] >= -0.0001*V[0, 125]- objc]
	constraints += [lambda_2[0, 341] <= -0.0001*V[0, 125]+ objc]
	constraints += [lambda_2[0, 342] >= -0.0001*V[0, 126]- objc]
	constraints += [lambda_2[0, 342] <= -0.0001*V[0, 126]+ objc]
	constraints += [lambda_2[0, 343] >= -0.0001*V[0, 127]- objc]
	constraints += [lambda_2[0, 343] <= -0.0001*V[0, 127]+ objc]
	constraints += [lambda_2[0, 345] >= -0.0001*V[0, 128]- objc]
	constraints += [lambda_2[0, 345] <= -0.0001*V[0, 128]+ objc]
	constraints += [lambda_2[0, 192] >= -0.0001*V[0, 77]- objc]
	constraints += [lambda_2[0, 192] <= -0.0001*V[0, 77]+ objc]
	constraints += [-lambda_2[0, 88] - 120*lambda_2[0, 144] - 20*lambda_2[0, 185] - lambda_2[0, 309] - lambda_2[0, 310] - 10*lambda_2[0, 311] - 40*lambda_2[0, 315] - 500*lambda_2[0, 344] - 500*lambda_2[0, 389] >= -l*V[0, 94] - 0.0002*V[0, 14] + 3*V[0, 23] + 2*V[0, 91]*t0[0, 2] - 2*V[0, 94] + 2*V[0, 141]*t0[0, 1] + V[0, 164]- objc]
	constraints += [-lambda_2[0, 88] - 120*lambda_2[0, 144] - 20*lambda_2[0, 185] - lambda_2[0, 309] - lambda_2[0, 310] - 10*lambda_2[0, 311] - 40*lambda_2[0, 315] - 500*lambda_2[0, 344] - 500*lambda_2[0, 389] <= -l*V[0, 94] - 0.0002*V[0, 14] + 3*V[0, 23] + 2*V[0, 91]*t0[0, 2] - 2*V[0, 94] + 2*V[0, 141]*t0[0, 1] + V[0, 164]+ objc]
	constraints += [lambda_2[0, 309] >= -0.0002*V[0, 78] + V[0, 90]- objc]
	constraints += [lambda_2[0, 309] <= -0.0002*V[0, 78] + V[0, 90]+ objc]
	constraints += [lambda_2[0, 310] >= -0.0002*V[0, 79] - V[0, 89]- objc]
	constraints += [lambda_2[0, 310] <= -0.0002*V[0, 79] - V[0, 89]+ objc]
	constraints += [lambda_2[0, 311] >= -0.0002*V[0, 80]- objc]
	constraints += [lambda_2[0, 311] <= -0.0002*V[0, 80]+ objc]
	constraints += [lambda_2[0, 315] >= -0.0002*V[0, 81]- objc]
	constraints += [lambda_2[0, 315] <= -0.0002*V[0, 81]+ objc]
	constraints += [lambda_2[0, 344] >= -0.0002*V[0, 82]- objc]
	constraints += [lambda_2[0, 344] <= -0.0002*V[0, 82]+ objc]
	constraints += [lambda_2[0, 185] >= -0.0003*V[0, 22]- objc]
	constraints += [lambda_2[0, 185] <= -0.0003*V[0, 22]+ objc]
	constraints += [-lambda_2[0, 21] - 160*lambda_2[0, 29] - lambda_2[0, 141] - lambda_2[0, 142] - 10*lambda_2[0, 143] - 10*lambda_2[0, 144] - 40*lambda_2[0, 145] - 500*lambda_2[0, 151] - 500*lambda_2[0, 163] >= -l*V[0, 23] - 0.0001*V[0, 45] + 2*V[0, 91]*t0[0, 1] + V[0, 101]- objc]
	constraints += [-lambda_2[0, 21] - 160*lambda_2[0, 29] - lambda_2[0, 141] - lambda_2[0, 142] - 10*lambda_2[0, 143] - 10*lambda_2[0, 144] - 40*lambda_2[0, 145] - 500*lambda_2[0, 151] - 500*lambda_2[0, 163] <= -l*V[0, 23] - 0.0001*V[0, 45] + 2*V[0, 91]*t0[0, 1] + V[0, 101]+ objc]
	constraints += [lambda_2[0, 141] >= -0.0001*V[0, 139]- objc]
	constraints += [lambda_2[0, 141] <= -0.0001*V[0, 139]+ objc]
	constraints += [lambda_2[0, 142] >= -0.0001*V[0, 140]- objc]
	constraints += [lambda_2[0, 142] <= -0.0001*V[0, 140]+ objc]
	constraints += [lambda_2[0, 143] >= -0.0001*V[0, 141]- objc]
	constraints += [lambda_2[0, 143] <= -0.0001*V[0, 141]+ objc]
	constraints += [lambda_2[0, 145] >= -0.0001*V[0, 142]- objc]
	constraints += [lambda_2[0, 145] <= -0.0001*V[0, 142]+ objc]
	constraints += [lambda_2[0, 151] >= -0.0001*V[0, 143]- objc]
	constraints += [lambda_2[0, 151] <= -0.0001*V[0, 143]+ objc]
	constraints += [lambda_2[0, 144] >= -0.0002*V[0, 88]- objc]
	constraints += [lambda_2[0, 144] <= -0.0002*V[0, 88]+ objc]
	constraints += [lambda_2[0, 29] >= -0.0001*V[0, 94]- objc]
	constraints += [lambda_2[0, 29] <= -0.0001*V[0, 94]+ objc]
	constraints += [-lambda_2[0, 7] - 1000*lambda_2[0, 15] - 750000*lambda_2[0, 23] - 500000000*lambda_2[0, 31] - lambda_2[0, 53] - lambda_2[0, 54] - 10*lambda_2[0, 55] - 10*lambda_2[0, 56] - 40*lambda_2[0, 57] - 40*lambda_2[0, 58] - 500*lambda_2[0, 59] - lambda_2[0, 102] - lambda_2[0, 103] - 100*lambda_2[0, 104] - 100*lambda_2[0, 105] - 1600*lambda_2[0, 106] - 1600*lambda_2[0, 107] - 250000*lambda_2[0, 108] - 1000*lambda_2[0, 109] - 1000*lambda_2[0, 110] - 10000*lambda_2[0, 111] - 10000*lambda_2[0, 112] - 40000*lambda_2[0, 113] - 40000*lambda_2[0, 114] - 500000*lambda_2[0, 115] - lambda_2[0, 158] - lambda_2[0, 159] - 1000*lambda_2[0, 160] - 1000*lambda_2[0, 161] - 64000*lambda_2[0, 162] - 64000*lambda_2[0, 163] - 125000000*lambda_2[0, 164] - 750000*lambda_2[0, 165] - 750000*lambda_2[0, 166] - 7500000*lambda_2[0, 167] - 7500000*lambda_2[0, 168] - 30000000*lambda_2[0, 169] - 30000000*lambda_2[0, 170] - 375000000*lambda_2[0, 171] - 1000*lambda_2[0, 193] - 1000*lambda_2[0, 194] - 100000*lambda_2[0, 195] - 100000*lambda_2[0, 196] - 1600000*lambda_2[0, 197] - 1600000*lambda_2[0, 198] - 250000000*lambda_2[0, 199] - lambda_2[0, 235] - 10*lambda_2[0, 236] - 10*lambda_2[0, 237] - 10*lambda_2[0, 238] - 10*lambda_2[0, 239] - 100*lambda_2[0, 240] - 40*lambda_2[0, 241] - 40*lambda_2[0, 242] - 400*lambda_2[0, 243] - 400*lambda_2[0, 244] - 40*lambda_2[0, 245] - 40*lambda_2[0, 246] - 400*lambda_2[0, 247] - 400*lambda_2[0, 248] - 1600*lambda_2[0, 249] - 500*lambda_2[0, 250] - 500*lambda_2[0, 251] - 5000*lambda_2[0, 252] - 5000*lambda_2[0, 253] - 20000*lambda_2[0, 254] - 20000*lambda_2[0, 255] - lambda_2[0, 361] - lambda_2[0, 362] - 10*lambda_2[0, 363] - 10*lambda_2[0, 364] - 100*lambda_2[0, 365] - 100*lambda_2[0, 366] - 10*lambda_2[0, 367] - 10*lambda_2[0, 368] - 1000*lambda_2[0, 369] - 100*lambda_2[0, 370] - 100*lambda_2[0, 371] - 1000*lambda_2[0, 372] - 40*lambda_2[0, 373] - 40*lambda_2[0, 374] - 4000*lambda_2[0, 375] - 4000*lambda_2[0, 376] - 1600*lambda_2[0, 377] - 1600*lambda_2[0, 378] - 16000*lambda_2[0, 379] - 16000*lambda_2[0, 380] - 40*lambda_2[0, 381] - 40*lambda_2[0, 382] - 4000*lambda_2[0, 383] - 4000*lambda_2[0, 384] - 64000*lambda_2[0, 385] - 1600*lambda_2[0, 386] - 1600*lambda_2[0, 387] - 16000*lambda_2[0, 388] - 16000*lambda_2[0, 389] - 64000*lambda_2[0, 390] - 500*lambda_2[0, 391] - 500*lambda_2[0, 392] - 50000*lambda_2[0, 393] - 50000*lambda_2[0, 394] - 800000*lambda_2[0, 395] - 800000*lambda_2[0, 396] - 250000*lambda_2[0, 397] - 250000*lambda_2[0, 398] - 2500000*lambda_2[0, 399] - 2500000*lambda_2[0, 400] - 10000000*lambda_2[0, 401] - 10000000*lambda_2[0, 402] - 1000*lambda_2[0, 403] - 10000*lambda_2[0, 404] - 10000*lambda_2[0, 405] - 10000*lambda_2[0, 406] - 10000*lambda_2[0, 407] - 100000*lambda_2[0, 408] - 40000*lambda_2[0, 409] - 40000*lambda_2[0, 410] - 400000*lambda_2[0, 411] - 400000*lambda_2[0, 412] - 40000*lambda_2[0, 413] - 40000*lambda_2[0, 414] - 400000*lambda_2[0, 415] - 400000*lambda_2[0, 416] - 1600000*lambda_2[0, 417] - 500000*lambda_2[0, 418] - 500000*lambda_2[0, 419] - 5000000*lambda_2[0, 420] - 5000000*lambda_2[0, 421] - 20000000*lambda_2[0, 422] - 20000000*lambda_2[0, 423] - 10*lambda_2[0, 459] - 10*lambda_2[0, 460] - 100*lambda_2[0, 461] - 100*lambda_2[0, 462] - 40*lambda_2[0, 463] - 400*lambda_2[0, 464] - 400*lambda_2[0, 465] - 400*lambda_2[0, 466] - 400*lambda_2[0, 467] - 4000*lambda_2[0, 468] - 40*lambda_2[0, 469] - 400*lambda_2[0, 470] - 400*lambda_2[0, 471] - 400*lambda_2[0, 472] - 400*lambda_2[0, 473] - 4000*lambda_2[0, 474] - 1600*lambda_2[0, 475] - 1600*lambda_2[0, 476] - 16000*lambda_2[0, 477] - 16000*lambda_2[0, 478] - 500*lambda_2[0, 479] - 5000*lambda_2[0, 480] - 5000*lambda_2[0, 481] - 5000*lambda_2[0, 482] - 5000*lambda_2[0, 483] - 50000*lambda_2[0, 484] - 20000*lambda_2[0, 485] - 20000*lambda_2[0, 486] - 200000*lambda_2[0, 487] - 200000*lambda_2[0, 488] - 20000*lambda_2[0, 489] - 20000*lambda_2[0, 490] - 200000*lambda_2[0, 491] - 200000*lambda_2[0, 492] - 800000*lambda_2[0, 493] >= -l*V[0, 8] + 2*V[0, 3]*t0[0, 0]- objc]
	constraints += [-lambda_2[0, 7] - 1000*lambda_2[0, 15] - 750000*lambda_2[0, 23] - 500000000*lambda_2[0, 31] - lambda_2[0, 53] - lambda_2[0, 54] - 10*lambda_2[0, 55] - 10*lambda_2[0, 56] - 40*lambda_2[0, 57] - 40*lambda_2[0, 58] - 500*lambda_2[0, 59] - lambda_2[0, 102] - lambda_2[0, 103] - 100*lambda_2[0, 104] - 100*lambda_2[0, 105] - 1600*lambda_2[0, 106] - 1600*lambda_2[0, 107] - 250000*lambda_2[0, 108] - 1000*lambda_2[0, 109] - 1000*lambda_2[0, 110] - 10000*lambda_2[0, 111] - 10000*lambda_2[0, 112] - 40000*lambda_2[0, 113] - 40000*lambda_2[0, 114] - 500000*lambda_2[0, 115] - lambda_2[0, 158] - lambda_2[0, 159] - 1000*lambda_2[0, 160] - 1000*lambda_2[0, 161] - 64000*lambda_2[0, 162] - 64000*lambda_2[0, 163] - 125000000*lambda_2[0, 164] - 750000*lambda_2[0, 165] - 750000*lambda_2[0, 166] - 7500000*lambda_2[0, 167] - 7500000*lambda_2[0, 168] - 30000000*lambda_2[0, 169] - 30000000*lambda_2[0, 170] - 375000000*lambda_2[0, 171] - 1000*lambda_2[0, 193] - 1000*lambda_2[0, 194] - 100000*lambda_2[0, 195] - 100000*lambda_2[0, 196] - 1600000*lambda_2[0, 197] - 1600000*lambda_2[0, 198] - 250000000*lambda_2[0, 199] - lambda_2[0, 235] - 10*lambda_2[0, 236] - 10*lambda_2[0, 237] - 10*lambda_2[0, 238] - 10*lambda_2[0, 239] - 100*lambda_2[0, 240] - 40*lambda_2[0, 241] - 40*lambda_2[0, 242] - 400*lambda_2[0, 243] - 400*lambda_2[0, 244] - 40*lambda_2[0, 245] - 40*lambda_2[0, 246] - 400*lambda_2[0, 247] - 400*lambda_2[0, 248] - 1600*lambda_2[0, 249] - 500*lambda_2[0, 250] - 500*lambda_2[0, 251] - 5000*lambda_2[0, 252] - 5000*lambda_2[0, 253] - 20000*lambda_2[0, 254] - 20000*lambda_2[0, 255] - lambda_2[0, 361] - lambda_2[0, 362] - 10*lambda_2[0, 363] - 10*lambda_2[0, 364] - 100*lambda_2[0, 365] - 100*lambda_2[0, 366] - 10*lambda_2[0, 367] - 10*lambda_2[0, 368] - 1000*lambda_2[0, 369] - 100*lambda_2[0, 370] - 100*lambda_2[0, 371] - 1000*lambda_2[0, 372] - 40*lambda_2[0, 373] - 40*lambda_2[0, 374] - 4000*lambda_2[0, 375] - 4000*lambda_2[0, 376] - 1600*lambda_2[0, 377] - 1600*lambda_2[0, 378] - 16000*lambda_2[0, 379] - 16000*lambda_2[0, 380] - 40*lambda_2[0, 381] - 40*lambda_2[0, 382] - 4000*lambda_2[0, 383] - 4000*lambda_2[0, 384] - 64000*lambda_2[0, 385] - 1600*lambda_2[0, 386] - 1600*lambda_2[0, 387] - 16000*lambda_2[0, 388] - 16000*lambda_2[0, 389] - 64000*lambda_2[0, 390] - 500*lambda_2[0, 391] - 500*lambda_2[0, 392] - 50000*lambda_2[0, 393] - 50000*lambda_2[0, 394] - 800000*lambda_2[0, 395] - 800000*lambda_2[0, 396] - 250000*lambda_2[0, 397] - 250000*lambda_2[0, 398] - 2500000*lambda_2[0, 399] - 2500000*lambda_2[0, 400] - 10000000*lambda_2[0, 401] - 10000000*lambda_2[0, 402] - 1000*lambda_2[0, 403] - 10000*lambda_2[0, 404] - 10000*lambda_2[0, 405] - 10000*lambda_2[0, 406] - 10000*lambda_2[0, 407] - 100000*lambda_2[0, 408] - 40000*lambda_2[0, 409] - 40000*lambda_2[0, 410] - 400000*lambda_2[0, 411] - 400000*lambda_2[0, 412] - 40000*lambda_2[0, 413] - 40000*lambda_2[0, 414] - 400000*lambda_2[0, 415] - 400000*lambda_2[0, 416] - 1600000*lambda_2[0, 417] - 500000*lambda_2[0, 418] - 500000*lambda_2[0, 419] - 5000000*lambda_2[0, 420] - 5000000*lambda_2[0, 421] - 20000000*lambda_2[0, 422] - 20000000*lambda_2[0, 423] - 10*lambda_2[0, 459] - 10*lambda_2[0, 460] - 100*lambda_2[0, 461] - 100*lambda_2[0, 462] - 40*lambda_2[0, 463] - 400*lambda_2[0, 464] - 400*lambda_2[0, 465] - 400*lambda_2[0, 466] - 400*lambda_2[0, 467] - 4000*lambda_2[0, 468] - 40*lambda_2[0, 469] - 400*lambda_2[0, 470] - 400*lambda_2[0, 471] - 400*lambda_2[0, 472] - 400*lambda_2[0, 473] - 4000*lambda_2[0, 474] - 1600*lambda_2[0, 475] - 1600*lambda_2[0, 476] - 16000*lambda_2[0, 477] - 16000*lambda_2[0, 478] - 500*lambda_2[0, 479] - 5000*lambda_2[0, 480] - 5000*lambda_2[0, 481] - 5000*lambda_2[0, 482] - 5000*lambda_2[0, 483] - 50000*lambda_2[0, 484] - 20000*lambda_2[0, 485] - 20000*lambda_2[0, 486] - 200000*lambda_2[0, 487] - 200000*lambda_2[0, 488] - 20000*lambda_2[0, 489] - 20000*lambda_2[0, 490] - 200000*lambda_2[0, 491] - 200000*lambda_2[0, 492] - 800000*lambda_2[0, 493] <= -l*V[0, 8] + 2*V[0, 3]*t0[0, 0]+ objc]
	constraints += [lambda_2[0, 53] + 2*lambda_2[0, 102] + 1000*lambda_2[0, 109] + 3*lambda_2[0, 158] + 750000*lambda_2[0, 165] + 2000*lambda_2[0, 193] + lambda_2[0, 235] + 10*lambda_2[0, 236] + 10*lambda_2[0, 238] + 40*lambda_2[0, 241] + 40*lambda_2[0, 245] + 500*lambda_2[0, 250] + 2*lambda_2[0, 361] + lambda_2[0, 362] + 20*lambda_2[0, 363] + 100*lambda_2[0, 365] + 20*lambda_2[0, 367] + 100*lambda_2[0, 370] + 80*lambda_2[0, 373] + 1600*lambda_2[0, 377] + 80*lambda_2[0, 381] + 1600*lambda_2[0, 386] + 1000*lambda_2[0, 391] + 250000*lambda_2[0, 397] + 1000*lambda_2[0, 403] + 10000*lambda_2[0, 404] + 10000*lambda_2[0, 406] + 40000*lambda_2[0, 409] + 40000*lambda_2[0, 413] + 500000*lambda_2[0, 418] + 10*lambda_2[0, 459] + 10*lambda_2[0, 460] + 100*lambda_2[0, 461] + 40*lambda_2[0, 463] + 400*lambda_2[0, 464] + 400*lambda_2[0, 466] + 40*lambda_2[0, 469] + 400*lambda_2[0, 470] + 400*lambda_2[0, 472] + 1600*lambda_2[0, 475] + 500*lambda_2[0, 479] + 5000*lambda_2[0, 480] + 5000*lambda_2[0, 482] + 20000*lambda_2[0, 485] + 20000*lambda_2[0, 489] >= -l*V[0, 46] + 2*V[0, 26]*t0[0, 0]- objc]
	constraints += [lambda_2[0, 53] + 2*lambda_2[0, 102] + 1000*lambda_2[0, 109] + 3*lambda_2[0, 158] + 750000*lambda_2[0, 165] + 2000*lambda_2[0, 193] + lambda_2[0, 235] + 10*lambda_2[0, 236] + 10*lambda_2[0, 238] + 40*lambda_2[0, 241] + 40*lambda_2[0, 245] + 500*lambda_2[0, 250] + 2*lambda_2[0, 361] + lambda_2[0, 362] + 20*lambda_2[0, 363] + 100*lambda_2[0, 365] + 20*lambda_2[0, 367] + 100*lambda_2[0, 370] + 80*lambda_2[0, 373] + 1600*lambda_2[0, 377] + 80*lambda_2[0, 381] + 1600*lambda_2[0, 386] + 1000*lambda_2[0, 391] + 250000*lambda_2[0, 397] + 1000*lambda_2[0, 403] + 10000*lambda_2[0, 404] + 10000*lambda_2[0, 406] + 40000*lambda_2[0, 409] + 40000*lambda_2[0, 413] + 500000*lambda_2[0, 418] + 10*lambda_2[0, 459] + 10*lambda_2[0, 460] + 100*lambda_2[0, 461] + 40*lambda_2[0, 463] + 400*lambda_2[0, 464] + 400*lambda_2[0, 466] + 40*lambda_2[0, 469] + 400*lambda_2[0, 470] + 400*lambda_2[0, 472] + 1600*lambda_2[0, 475] + 500*lambda_2[0, 479] + 5000*lambda_2[0, 480] + 5000*lambda_2[0, 482] + 20000*lambda_2[0, 485] + 20000*lambda_2[0, 489] <= -l*V[0, 46] + 2*V[0, 26]*t0[0, 0]+ objc]
	constraints += [-lambda_2[0, 102] - 3*lambda_2[0, 158] - 1000*lambda_2[0, 193] - lambda_2[0, 361] - 10*lambda_2[0, 363] - 10*lambda_2[0, 367] - 40*lambda_2[0, 373] - 40*lambda_2[0, 381] - 500*lambda_2[0, 391] >= -l*V[0, 95] + 2*V[0, 55]*t0[0, 0]- objc]
	constraints += [-lambda_2[0, 102] - 3*lambda_2[0, 158] - 1000*lambda_2[0, 193] - lambda_2[0, 361] - 10*lambda_2[0, 363] - 10*lambda_2[0, 367] - 40*lambda_2[0, 373] - 40*lambda_2[0, 381] - 500*lambda_2[0, 391] <= -l*V[0, 95] + 2*V[0, 55]*t0[0, 0]+ objc]
	constraints += [lambda_2[0, 158] == 0]
	constraints += [lambda_2[0, 54] + 2*lambda_2[0, 103] + 1000*lambda_2[0, 110] + 3*lambda_2[0, 159] + 750000*lambda_2[0, 166] + 2000*lambda_2[0, 194] + lambda_2[0, 235] + 10*lambda_2[0, 237] + 10*lambda_2[0, 239] + 40*lambda_2[0, 242] + 40*lambda_2[0, 246] + 500*lambda_2[0, 251] + lambda_2[0, 361] + 2*lambda_2[0, 362] + 20*lambda_2[0, 364] + 100*lambda_2[0, 366] + 20*lambda_2[0, 368] + 100*lambda_2[0, 371] + 80*lambda_2[0, 374] + 1600*lambda_2[0, 378] + 80*lambda_2[0, 382] + 1600*lambda_2[0, 387] + 1000*lambda_2[0, 392] + 250000*lambda_2[0, 398] + 1000*lambda_2[0, 403] + 10000*lambda_2[0, 405] + 10000*lambda_2[0, 407] + 40000*lambda_2[0, 410] + 40000*lambda_2[0, 414] + 500000*lambda_2[0, 419] + 10*lambda_2[0, 459] + 10*lambda_2[0, 460] + 100*lambda_2[0, 462] + 40*lambda_2[0, 463] + 400*lambda_2[0, 465] + 400*lambda_2[0, 467] + 40*lambda_2[0, 469] + 400*lambda_2[0, 471] + 400*lambda_2[0, 473] + 1600*lambda_2[0, 476] + 500*lambda_2[0, 479] + 5000*lambda_2[0, 481] + 5000*lambda_2[0, 483] + 20000*lambda_2[0, 486] + 20000*lambda_2[0, 490] >= -l*V[0, 47] + 2*V[0, 27]*t0[0, 0] - 25*V[0, 51]- objc]
	constraints += [lambda_2[0, 54] + 2*lambda_2[0, 103] + 1000*lambda_2[0, 110] + 3*lambda_2[0, 159] + 750000*lambda_2[0, 166] + 2000*lambda_2[0, 194] + lambda_2[0, 235] + 10*lambda_2[0, 237] + 10*lambda_2[0, 239] + 40*lambda_2[0, 242] + 40*lambda_2[0, 246] + 500*lambda_2[0, 251] + lambda_2[0, 361] + 2*lambda_2[0, 362] + 20*lambda_2[0, 364] + 100*lambda_2[0, 366] + 20*lambda_2[0, 368] + 100*lambda_2[0, 371] + 80*lambda_2[0, 374] + 1600*lambda_2[0, 378] + 80*lambda_2[0, 382] + 1600*lambda_2[0, 387] + 1000*lambda_2[0, 392] + 250000*lambda_2[0, 398] + 1000*lambda_2[0, 403] + 10000*lambda_2[0, 405] + 10000*lambda_2[0, 407] + 40000*lambda_2[0, 410] + 40000*lambda_2[0, 414] + 500000*lambda_2[0, 419] + 10*lambda_2[0, 459] + 10*lambda_2[0, 460] + 100*lambda_2[0, 462] + 40*lambda_2[0, 463] + 400*lambda_2[0, 465] + 400*lambda_2[0, 467] + 40*lambda_2[0, 469] + 400*lambda_2[0, 471] + 400*lambda_2[0, 473] + 1600*lambda_2[0, 476] + 500*lambda_2[0, 479] + 5000*lambda_2[0, 481] + 5000*lambda_2[0, 483] + 20000*lambda_2[0, 486] + 20000*lambda_2[0, 490] <= -l*V[0, 47] + 2*V[0, 27]*t0[0, 0] - 25*V[0, 51]+ objc]
	constraints += [-lambda_2[0, 235] - 2*lambda_2[0, 361] - 2*lambda_2[0, 362] - 1000*lambda_2[0, 403] - 10*lambda_2[0, 459] - 10*lambda_2[0, 460] - 40*lambda_2[0, 463] - 40*lambda_2[0, 469] - 500*lambda_2[0, 479] >= -l*V[0, 144] + 2*V[0, 109]*t0[0, 0] - 25*V[0, 154]- objc]
	constraints += [-lambda_2[0, 235] - 2*lambda_2[0, 361] - 2*lambda_2[0, 362] - 1000*lambda_2[0, 403] - 10*lambda_2[0, 459] - 10*lambda_2[0, 460] - 40*lambda_2[0, 463] - 40*lambda_2[0, 469] - 500*lambda_2[0, 479] <= -l*V[0, 144] + 2*V[0, 109]*t0[0, 0] - 25*V[0, 154]+ objc]
	constraints += [lambda_2[0, 361] == 0]
	constraints += [-lambda_2[0, 103] - 3*lambda_2[0, 159] - 1000*lambda_2[0, 194] - lambda_2[0, 362] - 10*lambda_2[0, 364] - 10*lambda_2[0, 368] - 40*lambda_2[0, 374] - 40*lambda_2[0, 382] - 500*lambda_2[0, 392] >= -l*V[0, 96] + 2*V[0, 56]*t0[0, 0] - 25*V[0, 155]- objc]
	constraints += [-lambda_2[0, 103] - 3*lambda_2[0, 159] - 1000*lambda_2[0, 194] - lambda_2[0, 362] - 10*lambda_2[0, 364] - 10*lambda_2[0, 368] - 40*lambda_2[0, 374] - 40*lambda_2[0, 382] - 500*lambda_2[0, 392] <= -l*V[0, 96] + 2*V[0, 56]*t0[0, 0] - 25*V[0, 155]+ objc]
	constraints += [lambda_2[0, 362] == 0]
	constraints += [lambda_2[0, 159] == 0]
	constraints += [lambda_2[0, 55] + 20*lambda_2[0, 104] + 1000*lambda_2[0, 111] + 300*lambda_2[0, 160] + 750000*lambda_2[0, 167] + 20000*lambda_2[0, 195] + lambda_2[0, 236] + lambda_2[0, 237] + 10*lambda_2[0, 240] + 40*lambda_2[0, 243] + 40*lambda_2[0, 247] + 500*lambda_2[0, 252] + lambda_2[0, 363] + lambda_2[0, 364] + 20*lambda_2[0, 365] + 20*lambda_2[0, 366] + 200*lambda_2[0, 369] + 100*lambda_2[0, 372] + 800*lambda_2[0, 375] + 1600*lambda_2[0, 379] + 800*lambda_2[0, 383] + 1600*lambda_2[0, 388] + 10000*lambda_2[0, 393] + 250000*lambda_2[0, 399] + 1000*lambda_2[0, 404] + 1000*lambda_2[0, 405] + 10000*lambda_2[0, 408] + 40000*lambda_2[0, 411] + 40000*lambda_2[0, 415] + 500000*lambda_2[0, 420] + lambda_2[0, 459] + 10*lambda_2[0, 461] + 10*lambda_2[0, 462] + 40*lambda_2[0, 464] + 40*lambda_2[0, 465] + 400*lambda_2[0, 468] + 40*lambda_2[0, 470] + 40*lambda_2[0, 471] + 400*lambda_2[0, 474] + 1600*lambda_2[0, 477] + 500*lambda_2[0, 480] + 500*lambda_2[0, 481] + 5000*lambda_2[0, 484] + 20000*lambda_2[0, 487] + 20000*lambda_2[0, 491] >= -l*V[0, 48] + 4*V[0, 11]*t0[0, 0] - 2*V[0, 48]*t0[0, 2] - 2*V[0, 48] + V[0, 49]- objc]
	constraints += [lambda_2[0, 55] + 20*lambda_2[0, 104] + 1000*lambda_2[0, 111] + 300*lambda_2[0, 160] + 750000*lambda_2[0, 167] + 20000*lambda_2[0, 195] + lambda_2[0, 236] + lambda_2[0, 237] + 10*lambda_2[0, 240] + 40*lambda_2[0, 243] + 40*lambda_2[0, 247] + 500*lambda_2[0, 252] + lambda_2[0, 363] + lambda_2[0, 364] + 20*lambda_2[0, 365] + 20*lambda_2[0, 366] + 200*lambda_2[0, 369] + 100*lambda_2[0, 372] + 800*lambda_2[0, 375] + 1600*lambda_2[0, 379] + 800*lambda_2[0, 383] + 1600*lambda_2[0, 388] + 10000*lambda_2[0, 393] + 250000*lambda_2[0, 399] + 1000*lambda_2[0, 404] + 1000*lambda_2[0, 405] + 10000*lambda_2[0, 408] + 40000*lambda_2[0, 411] + 40000*lambda_2[0, 415] + 500000*lambda_2[0, 420] + lambda_2[0, 459] + 10*lambda_2[0, 461] + 10*lambda_2[0, 462] + 40*lambda_2[0, 464] + 40*lambda_2[0, 465] + 400*lambda_2[0, 468] + 40*lambda_2[0, 470] + 40*lambda_2[0, 471] + 400*lambda_2[0, 474] + 1600*lambda_2[0, 477] + 500*lambda_2[0, 480] + 500*lambda_2[0, 481] + 5000*lambda_2[0, 484] + 20000*lambda_2[0, 487] + 20000*lambda_2[0, 491] <= -l*V[0, 48] + 4*V[0, 11]*t0[0, 0] - 2*V[0, 48]*t0[0, 2] - 2*V[0, 48] + V[0, 49]+ objc]
	constraints += [-lambda_2[0, 236] - 2*lambda_2[0, 363] - 20*lambda_2[0, 365] - 1000*lambda_2[0, 404] - lambda_2[0, 459] - 10*lambda_2[0, 461] - 40*lambda_2[0, 464] - 40*lambda_2[0, 470] - 500*lambda_2[0, 480] >= -l*V[0, 145] + 4*V[0, 57]*t0[0, 0] - 2*V[0, 145]*t0[0, 2] - 2*V[0, 145] + V[0, 147]- objc]
	constraints += [-lambda_2[0, 236] - 2*lambda_2[0, 363] - 20*lambda_2[0, 365] - 1000*lambda_2[0, 404] - lambda_2[0, 459] - 10*lambda_2[0, 461] - 40*lambda_2[0, 464] - 40*lambda_2[0, 470] - 500*lambda_2[0, 480] <= -l*V[0, 145] + 4*V[0, 57]*t0[0, 0] - 2*V[0, 145]*t0[0, 2] - 2*V[0, 145] + V[0, 147]+ objc]
	constraints += [lambda_2[0, 363] == 0]
	constraints += [-lambda_2[0, 237] - 2*lambda_2[0, 364] - 20*lambda_2[0, 366] - 1000*lambda_2[0, 405] - lambda_2[0, 459] - 10*lambda_2[0, 462] - 40*lambda_2[0, 465] - 40*lambda_2[0, 471] - 500*lambda_2[0, 481] >= -l*V[0, 146] + 4*V[0, 58]*t0[0, 0] - 2*V[0, 146]*t0[0, 2] - 2*V[0, 146] + V[0, 148] - 25*V[0, 156]- objc]
	constraints += [-lambda_2[0, 237] - 2*lambda_2[0, 364] - 20*lambda_2[0, 366] - 1000*lambda_2[0, 405] - lambda_2[0, 459] - 10*lambda_2[0, 462] - 40*lambda_2[0, 465] - 40*lambda_2[0, 471] - 500*lambda_2[0, 481] <= -l*V[0, 146] + 4*V[0, 58]*t0[0, 0] - 2*V[0, 146]*t0[0, 2] - 2*V[0, 146] + V[0, 148] - 25*V[0, 156]+ objc]
	constraints += [lambda_2[0, 459] == 0]
	constraints += [lambda_2[0, 364] == 0]
	constraints += [-lambda_2[0, 104] - 30*lambda_2[0, 160] - 1000*lambda_2[0, 195] - lambda_2[0, 365] - lambda_2[0, 366] - 10*lambda_2[0, 369] - 40*lambda_2[0, 375] - 40*lambda_2[0, 383] - 500*lambda_2[0, 393] >= -l*V[0, 97] + 6*V[0, 19]*t0[0, 0] - 4*V[0, 97]*t0[0, 2] - 4*V[0, 97] + V[0, 149]- objc]
	constraints += [-lambda_2[0, 104] - 30*lambda_2[0, 160] - 1000*lambda_2[0, 195] - lambda_2[0, 365] - lambda_2[0, 366] - 10*lambda_2[0, 369] - 40*lambda_2[0, 375] - 40*lambda_2[0, 383] - 500*lambda_2[0, 393] <= -l*V[0, 97] + 6*V[0, 19]*t0[0, 0] - 4*V[0, 97]*t0[0, 2] - 4*V[0, 97] + V[0, 149]+ objc]
	constraints += [lambda_2[0, 365] == 0]
	constraints += [lambda_2[0, 366] == 0]
	constraints += [lambda_2[0, 160] == 0]
	constraints += [lambda_2[0, 57] + 80*lambda_2[0, 106] + 1000*lambda_2[0, 113] + 4800*lambda_2[0, 162] + 750000*lambda_2[0, 169] + 80000*lambda_2[0, 197] + lambda_2[0, 241] + lambda_2[0, 242] + 10*lambda_2[0, 243] + 10*lambda_2[0, 244] + 40*lambda_2[0, 249] + 500*lambda_2[0, 254] + lambda_2[0, 373] + lambda_2[0, 374] + 100*lambda_2[0, 375] + 100*lambda_2[0, 376] + 80*lambda_2[0, 377] + 80*lambda_2[0, 378] + 800*lambda_2[0, 379] + 800*lambda_2[0, 380] + 3200*lambda_2[0, 385] + 1600*lambda_2[0, 390] + 40000*lambda_2[0, 395] + 250000*lambda_2[0, 401] + 1000*lambda_2[0, 409] + 1000*lambda_2[0, 410] + 10000*lambda_2[0, 411] + 10000*lambda_2[0, 412] + 40000*lambda_2[0, 417] + 500000*lambda_2[0, 422] + lambda_2[0, 463] + 10*lambda_2[0, 464] + 10*lambda_2[0, 465] + 10*lambda_2[0, 466] + 10*lambda_2[0, 467] + 100*lambda_2[0, 468] + 40*lambda_2[0, 475] + 40*lambda_2[0, 476] + 400*lambda_2[0, 477] + 400*lambda_2[0, 478] + 500*lambda_2[0, 485] + 500*lambda_2[0, 486] + 5000*lambda_2[0, 487] + 5000*lambda_2[0, 488] + 20000*lambda_2[0, 493] >= -l*V[0, 49] + 2*V[0, 30]*t0[0, 0] - 2.8*V[0, 48]*t0[0, 0] - 2*V[0, 48]*t0[0, 1] + V[0, 50]- objc]
	constraints += [lambda_2[0, 57] + 80*lambda_2[0, 106] + 1000*lambda_2[0, 113] + 4800*lambda_2[0, 162] + 750000*lambda_2[0, 169] + 80000*lambda_2[0, 197] + lambda_2[0, 241] + lambda_2[0, 242] + 10*lambda_2[0, 243] + 10*lambda_2[0, 244] + 40*lambda_2[0, 249] + 500*lambda_2[0, 254] + lambda_2[0, 373] + lambda_2[0, 374] + 100*lambda_2[0, 375] + 100*lambda_2[0, 376] + 80*lambda_2[0, 377] + 80*lambda_2[0, 378] + 800*lambda_2[0, 379] + 800*lambda_2[0, 380] + 3200*lambda_2[0, 385] + 1600*lambda_2[0, 390] + 40000*lambda_2[0, 395] + 250000*lambda_2[0, 401] + 1000*lambda_2[0, 409] + 1000*lambda_2[0, 410] + 10000*lambda_2[0, 411] + 10000*lambda_2[0, 412] + 40000*lambda_2[0, 417] + 500000*lambda_2[0, 422] + lambda_2[0, 463] + 10*lambda_2[0, 464] + 10*lambda_2[0, 465] + 10*lambda_2[0, 466] + 10*lambda_2[0, 467] + 100*lambda_2[0, 468] + 40*lambda_2[0, 475] + 40*lambda_2[0, 476] + 400*lambda_2[0, 477] + 400*lambda_2[0, 478] + 500*lambda_2[0, 485] + 500*lambda_2[0, 486] + 5000*lambda_2[0, 487] + 5000*lambda_2[0, 488] + 20000*lambda_2[0, 493] <= -l*V[0, 49] + 2*V[0, 30]*t0[0, 0] - 2.8*V[0, 48]*t0[0, 0] - 2*V[0, 48]*t0[0, 1] + V[0, 50]+ objc]
	constraints += [-lambda_2[0, 241] - 2*lambda_2[0, 373] - 80*lambda_2[0, 377] - 1000*lambda_2[0, 409] - lambda_2[0, 463] - 10*lambda_2[0, 464] - 10*lambda_2[0, 466] - 40*lambda_2[0, 475] - 500*lambda_2[0, 485] >= -l*V[0, 147] + 2*V[0, 111]*t0[0, 0] - 2.8*V[0, 145]*t0[0, 0] - 2*V[0, 145]*t0[0, 1] + V[0, 150]- objc]
	constraints += [-lambda_2[0, 241] - 2*lambda_2[0, 373] - 80*lambda_2[0, 377] - 1000*lambda_2[0, 409] - lambda_2[0, 463] - 10*lambda_2[0, 464] - 10*lambda_2[0, 466] - 40*lambda_2[0, 475] - 500*lambda_2[0, 485] <= -l*V[0, 147] + 2*V[0, 111]*t0[0, 0] - 2.8*V[0, 145]*t0[0, 0] - 2*V[0, 145]*t0[0, 1] + V[0, 150]+ objc]
	constraints += [lambda_2[0, 373] == 0]
	constraints += [-lambda_2[0, 242] - 2*lambda_2[0, 374] - 80*lambda_2[0, 378] - 1000*lambda_2[0, 410] - lambda_2[0, 463] - 10*lambda_2[0, 465] - 10*lambda_2[0, 467] - 40*lambda_2[0, 476] - 500*lambda_2[0, 486] >= -l*V[0, 148] + 2*V[0, 112]*t0[0, 0] - 2.8*V[0, 146]*t0[0, 0] - 2*V[0, 146]*t0[0, 1] + V[0, 151] - 25*V[0, 157]- objc]
	constraints += [-lambda_2[0, 242] - 2*lambda_2[0, 374] - 80*lambda_2[0, 378] - 1000*lambda_2[0, 410] - lambda_2[0, 463] - 10*lambda_2[0, 465] - 10*lambda_2[0, 467] - 40*lambda_2[0, 476] - 500*lambda_2[0, 486] <= -l*V[0, 148] + 2*V[0, 112]*t0[0, 0] - 2.8*V[0, 146]*t0[0, 0] - 2*V[0, 146]*t0[0, 1] + V[0, 151] - 25*V[0, 157]+ objc]
	constraints += [lambda_2[0, 463] == 0]
	constraints += [lambda_2[0, 374] == 0]
	constraints += [-lambda_2[0, 243] - 20*lambda_2[0, 375] - 80*lambda_2[0, 379] - 1000*lambda_2[0, 411] - lambda_2[0, 464] - lambda_2[0, 465] - 10*lambda_2[0, 468] - 40*lambda_2[0, 477] - 500*lambda_2[0, 487] >= -l*V[0, 149] + 4*V[0, 61]*t0[0, 0] - 5.6*V[0, 97]*t0[0, 0] - 4*V[0, 97]*t0[0, 1] + 2*V[0, 98] - 2*V[0, 149]*t0[0, 2] - 2*V[0, 149] + V[0, 152]- objc]
	constraints += [-lambda_2[0, 243] - 20*lambda_2[0, 375] - 80*lambda_2[0, 379] - 1000*lambda_2[0, 411] - lambda_2[0, 464] - lambda_2[0, 465] - 10*lambda_2[0, 468] - 40*lambda_2[0, 477] - 500*lambda_2[0, 487] <= -l*V[0, 149] + 4*V[0, 61]*t0[0, 0] - 5.6*V[0, 97]*t0[0, 0] - 4*V[0, 97]*t0[0, 1] + 2*V[0, 98] - 2*V[0, 149]*t0[0, 2] - 2*V[0, 149] + V[0, 152]+ objc]
	constraints += [lambda_2[0, 464] == 0]
	constraints += [lambda_2[0, 465] == 0]
	constraints += [lambda_2[0, 375] == 0]
	constraints += [-lambda_2[0, 106] - 120*lambda_2[0, 162] - 1000*lambda_2[0, 197] - lambda_2[0, 377] - lambda_2[0, 378] - 10*lambda_2[0, 379] - 10*lambda_2[0, 380] - 40*lambda_2[0, 385] - 500*lambda_2[0, 395] >= -l*V[0, 98] - 0.0001*V[0, 48] + 2*V[0, 64]*t0[0, 0] - 2.8*V[0, 149]*t0[0, 0] - 2*V[0, 149]*t0[0, 1] + V[0, 153]- objc]
	constraints += [-lambda_2[0, 106] - 120*lambda_2[0, 162] - 1000*lambda_2[0, 197] - lambda_2[0, 377] - lambda_2[0, 378] - 10*lambda_2[0, 379] - 10*lambda_2[0, 380] - 40*lambda_2[0, 385] - 500*lambda_2[0, 395] <= -l*V[0, 98] - 0.0001*V[0, 48] + 2*V[0, 64]*t0[0, 0] - 2.8*V[0, 149]*t0[0, 0] - 2*V[0, 149]*t0[0, 1] + V[0, 153]+ objc]
	constraints += [lambda_2[0, 377] >= -0.0001*V[0, 145]- objc]
	constraints += [lambda_2[0, 377] <= -0.0001*V[0, 145]+ objc]
	constraints += [lambda_2[0, 378] >= -0.0001*V[0, 146]- objc]
	constraints += [lambda_2[0, 378] <= -0.0001*V[0, 146]+ objc]
	constraints += [lambda_2[0, 379] >= -0.0002*V[0, 97]- objc]
	constraints += [lambda_2[0, 379] <= -0.0002*V[0, 97]+ objc]
	constraints += [lambda_2[0, 162] >= -0.0001*V[0, 149]- objc]
	constraints += [lambda_2[0, 162] <= -0.0001*V[0, 149]+ objc]
	constraints += [lambda_2[0, 59] + 1000*lambda_2[0, 108] + 1000*lambda_2[0, 115] + 750000*lambda_2[0, 164] + 750000*lambda_2[0, 171] + 1000000*lambda_2[0, 199] + lambda_2[0, 250] + lambda_2[0, 251] + 10*lambda_2[0, 252] + 10*lambda_2[0, 253] + 40*lambda_2[0, 254] + 40*lambda_2[0, 255] + lambda_2[0, 391] + lambda_2[0, 392] + 100*lambda_2[0, 393] + 100*lambda_2[0, 394] + 1600*lambda_2[0, 395] + 1600*lambda_2[0, 396] + 1000*lambda_2[0, 397] + 1000*lambda_2[0, 398] + 10000*lambda_2[0, 399] + 10000*lambda_2[0, 400] + 40000*lambda_2[0, 401] + 40000*lambda_2[0, 402] + 1000*lambda_2[0, 418] + 1000*lambda_2[0, 419] + 10000*lambda_2[0, 420] + 10000*lambda_2[0, 421] + 40000*lambda_2[0, 422] + 40000*lambda_2[0, 423] + lambda_2[0, 479] + 10*lambda_2[0, 480] + 10*lambda_2[0, 481] + 10*lambda_2[0, 482] + 10*lambda_2[0, 483] + 100*lambda_2[0, 484] + 40*lambda_2[0, 485] + 40*lambda_2[0, 486] + 400*lambda_2[0, 487] + 400*lambda_2[0, 488] + 40*lambda_2[0, 489] + 40*lambda_2[0, 490] + 400*lambda_2[0, 491] + 400*lambda_2[0, 492] + 1600*lambda_2[0, 493] >= -l*V[0, 50] + 2*V[0, 33]*t0[0, 0] - 2*V[0, 48]*t0[0, 0]- objc]
	constraints += [lambda_2[0, 59] + 1000*lambda_2[0, 108] + 1000*lambda_2[0, 115] + 750000*lambda_2[0, 164] + 750000*lambda_2[0, 171] + 1000000*lambda_2[0, 199] + lambda_2[0, 250] + lambda_2[0, 251] + 10*lambda_2[0, 252] + 10*lambda_2[0, 253] + 40*lambda_2[0, 254] + 40*lambda_2[0, 255] + lambda_2[0, 391] + lambda_2[0, 392] + 100*lambda_2[0, 393] + 100*lambda_2[0, 394] + 1600*lambda_2[0, 395] + 1600*lambda_2[0, 396] + 1000*lambda_2[0, 397] + 1000*lambda_2[0, 398] + 10000*lambda_2[0, 399] + 10000*lambda_2[0, 400] + 40000*lambda_2[0, 401] + 40000*lambda_2[0, 402] + 1000*lambda_2[0, 418] + 1000*lambda_2[0, 419] + 10000*lambda_2[0, 420] + 10000*lambda_2[0, 421] + 40000*lambda_2[0, 422] + 40000*lambda_2[0, 423] + lambda_2[0, 479] + 10*lambda_2[0, 480] + 10*lambda_2[0, 481] + 10*lambda_2[0, 482] + 10*lambda_2[0, 483] + 100*lambda_2[0, 484] + 40*lambda_2[0, 485] + 40*lambda_2[0, 486] + 400*lambda_2[0, 487] + 400*lambda_2[0, 488] + 40*lambda_2[0, 489] + 40*lambda_2[0, 490] + 400*lambda_2[0, 491] + 400*lambda_2[0, 492] + 1600*lambda_2[0, 493] <= -l*V[0, 50] + 2*V[0, 33]*t0[0, 0] - 2*V[0, 48]*t0[0, 0]+ objc]
	constraints += [-lambda_2[0, 250] - 2*lambda_2[0, 391] - 1000*lambda_2[0, 397] - 1000*lambda_2[0, 418] - lambda_2[0, 479] - 10*lambda_2[0, 480] - 10*lambda_2[0, 482] - 40*lambda_2[0, 485] - 40*lambda_2[0, 489] >= -l*V[0, 150] + 2*V[0, 114]*t0[0, 0] - 2*V[0, 145]*t0[0, 0]- objc]
	constraints += [-lambda_2[0, 250] - 2*lambda_2[0, 391] - 1000*lambda_2[0, 397] - 1000*lambda_2[0, 418] - lambda_2[0, 479] - 10*lambda_2[0, 480] - 10*lambda_2[0, 482] - 40*lambda_2[0, 485] - 40*lambda_2[0, 489] <= -l*V[0, 150] + 2*V[0, 114]*t0[0, 0] - 2*V[0, 145]*t0[0, 0]+ objc]
	constraints += [lambda_2[0, 391] == 0]
	constraints += [-lambda_2[0, 251] - 2*lambda_2[0, 392] - 1000*lambda_2[0, 398] - 1000*lambda_2[0, 419] - lambda_2[0, 479] - 10*lambda_2[0, 481] - 10*lambda_2[0, 483] - 40*lambda_2[0, 486] - 40*lambda_2[0, 490] >= -l*V[0, 151] + 2*V[0, 115]*t0[0, 0] - 2*V[0, 146]*t0[0, 0] - 25*V[0, 158]- objc]
	constraints += [-lambda_2[0, 251] - 2*lambda_2[0, 392] - 1000*lambda_2[0, 398] - 1000*lambda_2[0, 419] - lambda_2[0, 479] - 10*lambda_2[0, 481] - 10*lambda_2[0, 483] - 40*lambda_2[0, 486] - 40*lambda_2[0, 490] <= -l*V[0, 151] + 2*V[0, 115]*t0[0, 0] - 2*V[0, 146]*t0[0, 0] - 25*V[0, 158]+ objc]
	constraints += [lambda_2[0, 479] == 0]
	constraints += [lambda_2[0, 392] == 0]
	constraints += [-lambda_2[0, 252] - 20*lambda_2[0, 393] - 1000*lambda_2[0, 399] - 1000*lambda_2[0, 420] - lambda_2[0, 480] - lambda_2[0, 481] - 10*lambda_2[0, 484] - 40*lambda_2[0, 487] - 40*lambda_2[0, 491] >= -l*V[0, 152] + 4*V[0, 67]*t0[0, 0] - 4*V[0, 97]*t0[0, 0] - 2*V[0, 152]*t0[0, 2] - 2*V[0, 152] + V[0, 153]- objc]
	constraints += [-lambda_2[0, 252] - 20*lambda_2[0, 393] - 1000*lambda_2[0, 399] - 1000*lambda_2[0, 420] - lambda_2[0, 480] - lambda_2[0, 481] - 10*lambda_2[0, 484] - 40*lambda_2[0, 487] - 40*lambda_2[0, 491] <= -l*V[0, 152] + 4*V[0, 67]*t0[0, 0] - 4*V[0, 97]*t0[0, 0] - 2*V[0, 152]*t0[0, 2] - 2*V[0, 152] + V[0, 153]+ objc]
	constraints += [lambda_2[0, 480] == 0]
	constraints += [lambda_2[0, 481] == 0]
	constraints += [lambda_2[0, 393] == 0]
	constraints += [-lambda_2[0, 254] - 80*lambda_2[0, 395] - 1000*lambda_2[0, 401] - 1000*lambda_2[0, 422] - lambda_2[0, 485] - lambda_2[0, 486] - 10*lambda_2[0, 487] - 10*lambda_2[0, 488] - 40*lambda_2[0, 493] >= -l*V[0, 153] + 2*V[0, 99] + 2*V[0, 118]*t0[0, 0] - 2*V[0, 149]*t0[0, 0] - 2.8*V[0, 152]*t0[0, 0] - 2*V[0, 152]*t0[0, 1]- objc]
	constraints += [-lambda_2[0, 254] - 80*lambda_2[0, 395] - 1000*lambda_2[0, 401] - 1000*lambda_2[0, 422] - lambda_2[0, 485] - lambda_2[0, 486] - 10*lambda_2[0, 487] - 10*lambda_2[0, 488] - 40*lambda_2[0, 493] <= -l*V[0, 153] + 2*V[0, 99] + 2*V[0, 118]*t0[0, 0] - 2*V[0, 149]*t0[0, 0] - 2.8*V[0, 152]*t0[0, 0] - 2*V[0, 152]*t0[0, 1]+ objc]
	constraints += [lambda_2[0, 485] == 0]
	constraints += [lambda_2[0, 486] == 0]
	constraints += [lambda_2[0, 487] == 0]
	constraints += [lambda_2[0, 395] >= -0.0001*V[0, 152]- objc]
	constraints += [lambda_2[0, 395] <= -0.0001*V[0, 152]+ objc]
	constraints += [-lambda_2[0, 108] - 1500*lambda_2[0, 164] - 1000*lambda_2[0, 199] - lambda_2[0, 397] - lambda_2[0, 398] - 10*lambda_2[0, 399] - 10*lambda_2[0, 400] - 40*lambda_2[0, 401] - 40*lambda_2[0, 402] >= -l*V[0, 99] + 2*V[0, 71]*t0[0, 0] - 2*V[0, 152]*t0[0, 0]- objc]
	constraints += [-lambda_2[0, 108] - 1500*lambda_2[0, 164] - 1000*lambda_2[0, 199] - lambda_2[0, 397] - lambda_2[0, 398] - 10*lambda_2[0, 399] - 10*lambda_2[0, 400] - 40*lambda_2[0, 401] - 40*lambda_2[0, 402] <= -l*V[0, 99] + 2*V[0, 71]*t0[0, 0] - 2*V[0, 152]*t0[0, 0]+ objc]
	constraints += [lambda_2[0, 397] == 0]
	constraints += [lambda_2[0, 398] == 0]
	constraints += [lambda_2[0, 399] == 0]
	constraints += [lambda_2[0, 401] == 0]
	constraints += [lambda_2[0, 164] == 0]
	constraints += [lambda_2[0, 56] + 20*lambda_2[0, 105] + 1000*lambda_2[0, 112] + 300*lambda_2[0, 161] + 750000*lambda_2[0, 168] + 20000*lambda_2[0, 196] + lambda_2[0, 238] + lambda_2[0, 239] + 10*lambda_2[0, 240] + 40*lambda_2[0, 244] + 40*lambda_2[0, 248] + 500*lambda_2[0, 253] + lambda_2[0, 367] + lambda_2[0, 368] + 100*lambda_2[0, 369] + 20*lambda_2[0, 370] + 20*lambda_2[0, 371] + 200*lambda_2[0, 372] + 800*lambda_2[0, 376] + 1600*lambda_2[0, 380] + 800*lambda_2[0, 384] + 1600*lambda_2[0, 389] + 10000*lambda_2[0, 394] + 250000*lambda_2[0, 400] + 1000*lambda_2[0, 406] + 1000*lambda_2[0, 407] + 10000*lambda_2[0, 408] + 40000*lambda_2[0, 412] + 40000*lambda_2[0, 416] + 500000*lambda_2[0, 421] + lambda_2[0, 460] + 10*lambda_2[0, 461] + 10*lambda_2[0, 462] + 40*lambda_2[0, 466] + 40*lambda_2[0, 467] + 400*lambda_2[0, 468] + 40*lambda_2[0, 472] + 40*lambda_2[0, 473] + 400*lambda_2[0, 474] + 1600*lambda_2[0, 478] + 500*lambda_2[0, 482] + 500*lambda_2[0, 483] + 5000*lambda_2[0, 484] + 20000*lambda_2[0, 488] + 20000*lambda_2[0, 492] >= -l*V[0, 51] + 2*V[0, 37]*t0[0, 0] + 2*V[0, 48]*t0[0, 2] - 2*V[0, 51] + V[0, 52]- objc]
	constraints += [lambda_2[0, 56] + 20*lambda_2[0, 105] + 1000*lambda_2[0, 112] + 300*lambda_2[0, 161] + 750000*lambda_2[0, 168] + 20000*lambda_2[0, 196] + lambda_2[0, 238] + lambda_2[0, 239] + 10*lambda_2[0, 240] + 40*lambda_2[0, 244] + 40*lambda_2[0, 248] + 500*lambda_2[0, 253] + lambda_2[0, 367] + lambda_2[0, 368] + 100*lambda_2[0, 369] + 20*lambda_2[0, 370] + 20*lambda_2[0, 371] + 200*lambda_2[0, 372] + 800*lambda_2[0, 376] + 1600*lambda_2[0, 380] + 800*lambda_2[0, 384] + 1600*lambda_2[0, 389] + 10000*lambda_2[0, 394] + 250000*lambda_2[0, 400] + 1000*lambda_2[0, 406] + 1000*lambda_2[0, 407] + 10000*lambda_2[0, 408] + 40000*lambda_2[0, 412] + 40000*lambda_2[0, 416] + 500000*lambda_2[0, 421] + lambda_2[0, 460] + 10*lambda_2[0, 461] + 10*lambda_2[0, 462] + 40*lambda_2[0, 466] + 40*lambda_2[0, 467] + 400*lambda_2[0, 468] + 40*lambda_2[0, 472] + 40*lambda_2[0, 473] + 400*lambda_2[0, 474] + 1600*lambda_2[0, 478] + 500*lambda_2[0, 482] + 500*lambda_2[0, 483] + 5000*lambda_2[0, 484] + 20000*lambda_2[0, 488] + 20000*lambda_2[0, 492] <= -l*V[0, 51] + 2*V[0, 37]*t0[0, 0] + 2*V[0, 48]*t0[0, 2] - 2*V[0, 51] + V[0, 52]+ objc]
	constraints += [-lambda_2[0, 238] - 2*lambda_2[0, 367] - 20*lambda_2[0, 370] - 1000*lambda_2[0, 406] - lambda_2[0, 460] - 10*lambda_2[0, 461] - 40*lambda_2[0, 466] - 40*lambda_2[0, 472] - 500*lambda_2[0, 482] >= -l*V[0, 154] + V[0, 47] + 2*V[0, 120]*t0[0, 0] + 2*V[0, 145]*t0[0, 2] - 2*V[0, 154] + V[0, 159]- objc]
	constraints += [-lambda_2[0, 238] - 2*lambda_2[0, 367] - 20*lambda_2[0, 370] - 1000*lambda_2[0, 406] - lambda_2[0, 460] - 10*lambda_2[0, 461] - 40*lambda_2[0, 466] - 40*lambda_2[0, 472] - 500*lambda_2[0, 482] <= -l*V[0, 154] + V[0, 47] + 2*V[0, 120]*t0[0, 0] + 2*V[0, 145]*t0[0, 2] - 2*V[0, 154] + V[0, 159]+ objc]
	constraints += [lambda_2[0, 367] >= V[0, 144]- objc]
	constraints += [lambda_2[0, 367] <= V[0, 144]+ objc]
	constraints += [-lambda_2[0, 239] - 2*lambda_2[0, 368] - 20*lambda_2[0, 371] - 1000*lambda_2[0, 407] - lambda_2[0, 460] - 10*lambda_2[0, 462] - 40*lambda_2[0, 467] - 40*lambda_2[0, 473] - 500*lambda_2[0, 483] >= -l*V[0, 155] - V[0, 46] - 50*V[0, 100] + 2*V[0, 121]*t0[0, 0] + 2*V[0, 146]*t0[0, 2] - 2*V[0, 155] + V[0, 160]- objc]
	constraints += [-lambda_2[0, 239] - 2*lambda_2[0, 368] - 20*lambda_2[0, 371] - 1000*lambda_2[0, 407] - lambda_2[0, 460] - 10*lambda_2[0, 462] - 40*lambda_2[0, 467] - 40*lambda_2[0, 473] - 500*lambda_2[0, 483] <= -l*V[0, 155] - V[0, 46] - 50*V[0, 100] + 2*V[0, 121]*t0[0, 0] + 2*V[0, 146]*t0[0, 2] - 2*V[0, 155] + V[0, 160]+ objc]
	constraints += [lambda_2[0, 460] >= -2*V[0, 95] + 2*V[0, 96]- objc]
	constraints += [lambda_2[0, 460] <= -2*V[0, 95] + 2*V[0, 96]+ objc]
	constraints += [lambda_2[0, 368] >= -V[0, 144]- objc]
	constraints += [lambda_2[0, 368] <= -V[0, 144]+ objc]
	constraints += [-lambda_2[0, 240] - 20*lambda_2[0, 369] - 20*lambda_2[0, 372] - 1000*lambda_2[0, 408] - lambda_2[0, 461] - lambda_2[0, 462] - 40*lambda_2[0, 468] - 40*lambda_2[0, 474] - 500*lambda_2[0, 484] >= -l*V[0, 156] + 4*V[0, 75]*t0[0, 0] + 4*V[0, 97]*t0[0, 2] - 2*V[0, 156]*t0[0, 2] - 4*V[0, 156] + V[0, 157] + V[0, 161]- objc]
	constraints += [-lambda_2[0, 240] - 20*lambda_2[0, 369] - 20*lambda_2[0, 372] - 1000*lambda_2[0, 408] - lambda_2[0, 461] - lambda_2[0, 462] - 40*lambda_2[0, 468] - 40*lambda_2[0, 474] - 500*lambda_2[0, 484] <= -l*V[0, 156] + 4*V[0, 75]*t0[0, 0] + 4*V[0, 97]*t0[0, 2] - 2*V[0, 156]*t0[0, 2] - 4*V[0, 156] + V[0, 157] + V[0, 161]+ objc]
	constraints += [lambda_2[0, 461] >= V[0, 146]- objc]
	constraints += [lambda_2[0, 461] <= V[0, 146]+ objc]
	constraints += [lambda_2[0, 462] >= -V[0, 145]- objc]
	constraints += [lambda_2[0, 462] <= -V[0, 145]+ objc]
	constraints += [lambda_2[0, 369] == 0]
	constraints += [-lambda_2[0, 244] - 20*lambda_2[0, 376] - 80*lambda_2[0, 380] - 1000*lambda_2[0, 412] - lambda_2[0, 466] - lambda_2[0, 467] - 10*lambda_2[0, 468] - 40*lambda_2[0, 478] - 500*lambda_2[0, 488] >= -l*V[0, 157] + 2*V[0, 124]*t0[0, 0] + 2*V[0, 149]*t0[0, 2] - 2.8*V[0, 156]*t0[0, 0] - 2*V[0, 156]*t0[0, 1] - 2*V[0, 157] + V[0, 158] + V[0, 162]- objc]
	constraints += [-lambda_2[0, 244] - 20*lambda_2[0, 376] - 80*lambda_2[0, 380] - 1000*lambda_2[0, 412] - lambda_2[0, 466] - lambda_2[0, 467] - 10*lambda_2[0, 468] - 40*lambda_2[0, 478] - 500*lambda_2[0, 488] <= -l*V[0, 157] + 2*V[0, 124]*t0[0, 0] + 2*V[0, 149]*t0[0, 2] - 2.8*V[0, 156]*t0[0, 0] - 2*V[0, 156]*t0[0, 1] - 2*V[0, 157] + V[0, 158] + V[0, 162]+ objc]
	constraints += [lambda_2[0, 466] >= V[0, 148]- objc]
	constraints += [lambda_2[0, 466] <= V[0, 148]+ objc]
	constraints += [lambda_2[0, 467] >= -V[0, 147]- objc]
	constraints += [lambda_2[0, 467] <= -V[0, 147]+ objc]
	constraints += [lambda_2[0, 468] == 0]
	constraints += [lambda_2[0, 380] >= -0.0001*V[0, 156]- objc]
	constraints += [lambda_2[0, 380] <= -0.0001*V[0, 156]+ objc]
	constraints += [-lambda_2[0, 253] - 20*lambda_2[0, 394] - 1000*lambda_2[0, 400] - 1000*lambda_2[0, 421] - lambda_2[0, 482] - lambda_2[0, 483] - 10*lambda_2[0, 484] - 40*lambda_2[0, 488] - 40*lambda_2[0, 492] >= -l*V[0, 158] + 2*V[0, 127]*t0[0, 0] + 2*V[0, 152]*t0[0, 2] - 2*V[0, 156]*t0[0, 0] - 2*V[0, 158] + V[0, 163]- objc]
	constraints += [-lambda_2[0, 253] - 20*lambda_2[0, 394] - 1000*lambda_2[0, 400] - 1000*lambda_2[0, 421] - lambda_2[0, 482] - lambda_2[0, 483] - 10*lambda_2[0, 484] - 40*lambda_2[0, 488] - 40*lambda_2[0, 492] <= -l*V[0, 158] + 2*V[0, 127]*t0[0, 0] + 2*V[0, 152]*t0[0, 2] - 2*V[0, 156]*t0[0, 0] - 2*V[0, 158] + V[0, 163]+ objc]
	constraints += [lambda_2[0, 482] >= V[0, 151]- objc]
	constraints += [lambda_2[0, 482] <= V[0, 151]+ objc]
	constraints += [lambda_2[0, 483] >= -V[0, 150]- objc]
	constraints += [lambda_2[0, 483] <= -V[0, 150]+ objc]
	constraints += [lambda_2[0, 484] == 0]
	constraints += [lambda_2[0, 488] == 0]
	constraints += [lambda_2[0, 400] == 0]
	constraints += [-lambda_2[0, 105] - 30*lambda_2[0, 161] - 1000*lambda_2[0, 196] - lambda_2[0, 370] - lambda_2[0, 371] - 10*lambda_2[0, 372] - 40*lambda_2[0, 376] - 40*lambda_2[0, 384] - 500*lambda_2[0, 394] >= -l*V[0, 100] + 2*V[0, 80]*t0[0, 0] - 4*V[0, 100] + 2*V[0, 156]*t0[0, 2] + V[0, 164]- objc]
	constraints += [-lambda_2[0, 105] - 30*lambda_2[0, 161] - 1000*lambda_2[0, 196] - lambda_2[0, 370] - lambda_2[0, 371] - 10*lambda_2[0, 372] - 40*lambda_2[0, 376] - 40*lambda_2[0, 384] - 500*lambda_2[0, 394] <= -l*V[0, 100] + 2*V[0, 80]*t0[0, 0] - 4*V[0, 100] + 2*V[0, 156]*t0[0, 2] + V[0, 164]+ objc]
	constraints += [lambda_2[0, 370] >= V[0, 155]- objc]
	constraints += [lambda_2[0, 370] <= V[0, 155]+ objc]
	constraints += [lambda_2[0, 371] >= -V[0, 154]- objc]
	constraints += [lambda_2[0, 371] <= -V[0, 154]+ objc]
	constraints += [lambda_2[0, 372] == 0]
	constraints += [lambda_2[0, 376] == 0]
	constraints += [lambda_2[0, 394] == 0]
	constraints += [lambda_2[0, 161] == 0]
	constraints += [lambda_2[0, 58] + 80*lambda_2[0, 107] + 1000*lambda_2[0, 114] + 4800*lambda_2[0, 163] + 750000*lambda_2[0, 170] + 80000*lambda_2[0, 198] + lambda_2[0, 245] + lambda_2[0, 246] + 10*lambda_2[0, 247] + 10*lambda_2[0, 248] + 40*lambda_2[0, 249] + 500*lambda_2[0, 255] + lambda_2[0, 381] + lambda_2[0, 382] + 100*lambda_2[0, 383] + 100*lambda_2[0, 384] + 1600*lambda_2[0, 385] + 80*lambda_2[0, 386] + 80*lambda_2[0, 387] + 800*lambda_2[0, 388] + 800*lambda_2[0, 389] + 3200*lambda_2[0, 390] + 40000*lambda_2[0, 396] + 250000*lambda_2[0, 402] + 1000*lambda_2[0, 413] + 1000*lambda_2[0, 414] + 10000*lambda_2[0, 415] + 10000*lambda_2[0, 416] + 40000*lambda_2[0, 417] + 500000*lambda_2[0, 423] + lambda_2[0, 469] + 10*lambda_2[0, 470] + 10*lambda_2[0, 471] + 10*lambda_2[0, 472] + 10*lambda_2[0, 473] + 100*lambda_2[0, 474] + 40*lambda_2[0, 475] + 40*lambda_2[0, 476] + 400*lambda_2[0, 477] + 400*lambda_2[0, 478] + 500*lambda_2[0, 489] + 500*lambda_2[0, 490] + 5000*lambda_2[0, 491] + 5000*lambda_2[0, 492] + 20000*lambda_2[0, 493] >= -l*V[0, 52] + 2*V[0, 16] + 2*V[0, 42]*t0[0, 0] + 2*V[0, 48]*t0[0, 1]- objc]
	constraints += [lambda_2[0, 58] + 80*lambda_2[0, 107] + 1000*lambda_2[0, 114] + 4800*lambda_2[0, 163] + 750000*lambda_2[0, 170] + 80000*lambda_2[0, 198] + lambda_2[0, 245] + lambda_2[0, 246] + 10*lambda_2[0, 247] + 10*lambda_2[0, 248] + 40*lambda_2[0, 249] + 500*lambda_2[0, 255] + lambda_2[0, 381] + lambda_2[0, 382] + 100*lambda_2[0, 383] + 100*lambda_2[0, 384] + 1600*lambda_2[0, 385] + 80*lambda_2[0, 386] + 80*lambda_2[0, 387] + 800*lambda_2[0, 388] + 800*lambda_2[0, 389] + 3200*lambda_2[0, 390] + 40000*lambda_2[0, 396] + 250000*lambda_2[0, 402] + 1000*lambda_2[0, 413] + 1000*lambda_2[0, 414] + 10000*lambda_2[0, 415] + 10000*lambda_2[0, 416] + 40000*lambda_2[0, 417] + 500000*lambda_2[0, 423] + lambda_2[0, 469] + 10*lambda_2[0, 470] + 10*lambda_2[0, 471] + 10*lambda_2[0, 472] + 10*lambda_2[0, 473] + 100*lambda_2[0, 474] + 40*lambda_2[0, 475] + 40*lambda_2[0, 476] + 400*lambda_2[0, 477] + 400*lambda_2[0, 478] + 500*lambda_2[0, 489] + 500*lambda_2[0, 490] + 5000*lambda_2[0, 491] + 5000*lambda_2[0, 492] + 20000*lambda_2[0, 493] <= -l*V[0, 52] + 2*V[0, 16] + 2*V[0, 42]*t0[0, 0] + 2*V[0, 48]*t0[0, 1]+ objc]
	constraints += [-lambda_2[0, 245] - 2*lambda_2[0, 381] - 80*lambda_2[0, 386] - 1000*lambda_2[0, 413] - lambda_2[0, 469] - 10*lambda_2[0, 470] - 10*lambda_2[0, 472] - 40*lambda_2[0, 475] - 500*lambda_2[0, 489] >= -l*V[0, 159] + 2*V[0, 102] + 2*V[0, 130]*t0[0, 0] + 2*V[0, 145]*t0[0, 1]- objc]
	constraints += [-lambda_2[0, 245] - 2*lambda_2[0, 381] - 80*lambda_2[0, 386] - 1000*lambda_2[0, 413] - lambda_2[0, 469] - 10*lambda_2[0, 470] - 10*lambda_2[0, 472] - 40*lambda_2[0, 475] - 500*lambda_2[0, 489] <= -l*V[0, 159] + 2*V[0, 102] + 2*V[0, 130]*t0[0, 0] + 2*V[0, 145]*t0[0, 1]+ objc]
	constraints += [lambda_2[0, 381] == 0]
	constraints += [-lambda_2[0, 246] - 2*lambda_2[0, 382] - 80*lambda_2[0, 387] - 1000*lambda_2[0, 414] - lambda_2[0, 469] - 10*lambda_2[0, 471] - 10*lambda_2[0, 473] - 40*lambda_2[0, 476] - 500*lambda_2[0, 490] >= -l*V[0, 160] + 2*V[0, 103] + 2*V[0, 131]*t0[0, 0] + 2*V[0, 146]*t0[0, 1] - 25*V[0, 164]- objc]
	constraints += [-lambda_2[0, 246] - 2*lambda_2[0, 382] - 80*lambda_2[0, 387] - 1000*lambda_2[0, 414] - lambda_2[0, 469] - 10*lambda_2[0, 471] - 10*lambda_2[0, 473] - 40*lambda_2[0, 476] - 500*lambda_2[0, 490] <= -l*V[0, 160] + 2*V[0, 103] + 2*V[0, 131]*t0[0, 0] + 2*V[0, 146]*t0[0, 1] - 25*V[0, 164]+ objc]
	constraints += [lambda_2[0, 469] == 0]
	constraints += [lambda_2[0, 382] == 0]
	constraints += [-lambda_2[0, 247] - 20*lambda_2[0, 383] - 80*lambda_2[0, 388] - 1000*lambda_2[0, 415] - lambda_2[0, 470] - lambda_2[0, 471] - 10*lambda_2[0, 474] - 40*lambda_2[0, 477] - 500*lambda_2[0, 491] >= -l*V[0, 161] + 4*V[0, 85]*t0[0, 0] + 4*V[0, 97]*t0[0, 1] + 2*V[0, 104] - 2*V[0, 161]*t0[0, 2] - 2*V[0, 161] + V[0, 162]- objc]
	constraints += [-lambda_2[0, 247] - 20*lambda_2[0, 383] - 80*lambda_2[0, 388] - 1000*lambda_2[0, 415] - lambda_2[0, 470] - lambda_2[0, 471] - 10*lambda_2[0, 474] - 40*lambda_2[0, 477] - 500*lambda_2[0, 491] <= -l*V[0, 161] + 4*V[0, 85]*t0[0, 0] + 4*V[0, 97]*t0[0, 1] + 2*V[0, 104] - 2*V[0, 161]*t0[0, 2] - 2*V[0, 161] + V[0, 162]+ objc]
	constraints += [lambda_2[0, 470] == 0]
	constraints += [lambda_2[0, 471] == 0]
	constraints += [lambda_2[0, 383] == 0]
	constraints += [-lambda_2[0, 249] - 80*lambda_2[0, 385] - 80*lambda_2[0, 390] - 1000*lambda_2[0, 417] - lambda_2[0, 475] - lambda_2[0, 476] - 10*lambda_2[0, 477] - 10*lambda_2[0, 478] - 500*lambda_2[0, 493] >= -l*V[0, 162] + 2*V[0, 105] + 2*V[0, 134]*t0[0, 0] + 2*V[0, 149]*t0[0, 1] - 2.8*V[0, 161]*t0[0, 0] - 2*V[0, 161]*t0[0, 1] + V[0, 163]- objc]
	constraints += [-lambda_2[0, 249] - 80*lambda_2[0, 385] - 80*lambda_2[0, 390] - 1000*lambda_2[0, 417] - lambda_2[0, 475] - lambda_2[0, 476] - 10*lambda_2[0, 477] - 10*lambda_2[0, 478] - 500*lambda_2[0, 493] <= -l*V[0, 162] + 2*V[0, 105] + 2*V[0, 134]*t0[0, 0] + 2*V[0, 149]*t0[0, 1] - 2.8*V[0, 161]*t0[0, 0] - 2*V[0, 161]*t0[0, 1] + V[0, 163]+ objc]
	constraints += [lambda_2[0, 475] == 0]
	constraints += [lambda_2[0, 476] == 0]
	constraints += [lambda_2[0, 477] == 0]
	constraints += [lambda_2[0, 385] >= -0.0001*V[0, 161]- objc]
	constraints += [lambda_2[0, 385] <= -0.0001*V[0, 161]+ objc]
	constraints += [-lambda_2[0, 255] - 80*lambda_2[0, 396] - 1000*lambda_2[0, 402] - 1000*lambda_2[0, 423] - lambda_2[0, 489] - lambda_2[0, 490] - 10*lambda_2[0, 491] - 10*lambda_2[0, 492] - 40*lambda_2[0, 493] >= -l*V[0, 163] + 2*V[0, 106] + 2*V[0, 137]*t0[0, 0] + 2*V[0, 152]*t0[0, 1] - 2*V[0, 161]*t0[0, 0]- objc]
	constraints += [-lambda_2[0, 255] - 80*lambda_2[0, 396] - 1000*lambda_2[0, 402] - 1000*lambda_2[0, 423] - lambda_2[0, 489] - lambda_2[0, 490] - 10*lambda_2[0, 491] - 10*lambda_2[0, 492] - 40*lambda_2[0, 493] <= -l*V[0, 163] + 2*V[0, 106] + 2*V[0, 137]*t0[0, 0] + 2*V[0, 152]*t0[0, 1] - 2*V[0, 161]*t0[0, 0]+ objc]
	constraints += [lambda_2[0, 489] == 0]
	constraints += [lambda_2[0, 490] == 0]
	constraints += [lambda_2[0, 491] == 0]
	constraints += [lambda_2[0, 493] == 0]
	constraints += [lambda_2[0, 402] == 0]
	constraints += [-lambda_2[0, 248] - 20*lambda_2[0, 384] - 80*lambda_2[0, 389] - 1000*lambda_2[0, 416] - lambda_2[0, 472] - lambda_2[0, 473] - 10*lambda_2[0, 474] - 40*lambda_2[0, 478] - 500*lambda_2[0, 492] >= -l*V[0, 164] + 2*V[0, 101] + 2*V[0, 107] + 2*V[0, 141]*t0[0, 0] + 2*V[0, 156]*t0[0, 1] + 2*V[0, 161]*t0[0, 2] - 2*V[0, 164]- objc]
	constraints += [-lambda_2[0, 248] - 20*lambda_2[0, 384] - 80*lambda_2[0, 389] - 1000*lambda_2[0, 416] - lambda_2[0, 472] - lambda_2[0, 473] - 10*lambda_2[0, 474] - 40*lambda_2[0, 478] - 500*lambda_2[0, 492] <= -l*V[0, 164] + 2*V[0, 101] + 2*V[0, 107] + 2*V[0, 141]*t0[0, 0] + 2*V[0, 156]*t0[0, 1] + 2*V[0, 161]*t0[0, 2] - 2*V[0, 164]+ objc]
	constraints += [lambda_2[0, 472] >= V[0, 160]- objc]
	constraints += [lambda_2[0, 472] <= V[0, 160]+ objc]
	constraints += [lambda_2[0, 473] >= -V[0, 159]- objc]
	constraints += [lambda_2[0, 473] <= -V[0, 159]+ objc]
	constraints += [lambda_2[0, 474] == 0]
	constraints += [lambda_2[0, 478] == 0]
	constraints += [lambda_2[0, 492] == 0]
	constraints += [lambda_2[0, 384] == 0]
	constraints += [-lambda_2[0, 107] - 120*lambda_2[0, 163] - 1000*lambda_2[0, 198] - lambda_2[0, 386] - lambda_2[0, 387] - 10*lambda_2[0, 388] - 10*lambda_2[0, 389] - 40*lambda_2[0, 390] - 500*lambda_2[0, 396] >= -l*V[0, 101] - 0.0001*V[0, 51] + 2*V[0, 91]*t0[0, 0] + 2*V[0, 108] + 2*V[0, 161]*t0[0, 1]- objc]
	constraints += [-lambda_2[0, 107] - 120*lambda_2[0, 163] - 1000*lambda_2[0, 198] - lambda_2[0, 386] - lambda_2[0, 387] - 10*lambda_2[0, 388] - 10*lambda_2[0, 389] - 40*lambda_2[0, 390] - 500*lambda_2[0, 396] <= -l*V[0, 101] - 0.0001*V[0, 51] + 2*V[0, 91]*t0[0, 0] + 2*V[0, 108] + 2*V[0, 161]*t0[0, 1]+ objc]
	constraints += [lambda_2[0, 386] >= -0.0001*V[0, 154]- objc]
	constraints += [lambda_2[0, 386] <= -0.0001*V[0, 154]+ objc]
	constraints += [lambda_2[0, 387] >= -0.0001*V[0, 155]- objc]
	constraints += [lambda_2[0, 387] <= -0.0001*V[0, 155]+ objc]
	constraints += [lambda_2[0, 388] >= -0.0001*V[0, 156]- objc]
	constraints += [lambda_2[0, 388] <= -0.0001*V[0, 156]+ objc]
	constraints += [lambda_2[0, 390] >= -0.0001*V[0, 157]- objc]
	constraints += [lambda_2[0, 390] <= -0.0001*V[0, 157]+ objc]
	constraints += [lambda_2[0, 396] >= -0.0001*V[0, 158]- objc]
	constraints += [lambda_2[0, 396] <= -0.0001*V[0, 158]+ objc]
	constraints += [lambda_2[0, 389] >= -0.0002*V[0, 100]- objc]
	constraints += [lambda_2[0, 389] <= -0.0002*V[0, 100]+ objc]
	constraints += [lambda_2[0, 163] >= -0.0001*V[0, 164]- objc]
	constraints += [lambda_2[0, 163] <= -0.0001*V[0, 164]+ objc]
	constraints += [lambda_2[0, 15] + 1500*lambda_2[0, 23] + 1500000*lambda_2[0, 31] + lambda_2[0, 109] + lambda_2[0, 110] + 10*lambda_2[0, 111] + 10*lambda_2[0, 112] + 40*lambda_2[0, 113] + 40*lambda_2[0, 114] + 500*lambda_2[0, 115] + 1500*lambda_2[0, 165] + 1500*lambda_2[0, 166] + 15000*lambda_2[0, 167] + 15000*lambda_2[0, 168] + 60000*lambda_2[0, 169] + 60000*lambda_2[0, 170] + 750000*lambda_2[0, 171] + lambda_2[0, 193] + lambda_2[0, 194] + 100*lambda_2[0, 195] + 100*lambda_2[0, 196] + 1600*lambda_2[0, 197] + 1600*lambda_2[0, 198] + 250000*lambda_2[0, 199] + lambda_2[0, 403] + 10*lambda_2[0, 404] + 10*lambda_2[0, 405] + 10*lambda_2[0, 406] + 10*lambda_2[0, 407] + 100*lambda_2[0, 408] + 40*lambda_2[0, 409] + 40*lambda_2[0, 410] + 400*lambda_2[0, 411] + 400*lambda_2[0, 412] + 40*lambda_2[0, 413] + 40*lambda_2[0, 414] + 400*lambda_2[0, 415] + 400*lambda_2[0, 416] + 1600*lambda_2[0, 417] + 500*lambda_2[0, 418] + 500*lambda_2[0, 419] + 5000*lambda_2[0, 420] + 5000*lambda_2[0, 421] + 20000*lambda_2[0, 422] + 20000*lambda_2[0, 423] >= -l*V[0, 16] + 2*V[0, 48]*t0[0, 0] - 0.001- objc]
	constraints += [lambda_2[0, 15] + 1500*lambda_2[0, 23] + 1500000*lambda_2[0, 31] + lambda_2[0, 109] + lambda_2[0, 110] + 10*lambda_2[0, 111] + 10*lambda_2[0, 112] + 40*lambda_2[0, 113] + 40*lambda_2[0, 114] + 500*lambda_2[0, 115] + 1500*lambda_2[0, 165] + 1500*lambda_2[0, 166] + 15000*lambda_2[0, 167] + 15000*lambda_2[0, 168] + 60000*lambda_2[0, 169] + 60000*lambda_2[0, 170] + 750000*lambda_2[0, 171] + lambda_2[0, 193] + lambda_2[0, 194] + 100*lambda_2[0, 195] + 100*lambda_2[0, 196] + 1600*lambda_2[0, 197] + 1600*lambda_2[0, 198] + 250000*lambda_2[0, 199] + lambda_2[0, 403] + 10*lambda_2[0, 404] + 10*lambda_2[0, 405] + 10*lambda_2[0, 406] + 10*lambda_2[0, 407] + 100*lambda_2[0, 408] + 40*lambda_2[0, 409] + 40*lambda_2[0, 410] + 400*lambda_2[0, 411] + 400*lambda_2[0, 412] + 40*lambda_2[0, 413] + 40*lambda_2[0, 414] + 400*lambda_2[0, 415] + 400*lambda_2[0, 416] + 1600*lambda_2[0, 417] + 500*lambda_2[0, 418] + 500*lambda_2[0, 419] + 5000*lambda_2[0, 420] + 5000*lambda_2[0, 421] + 20000*lambda_2[0, 422] + 20000*lambda_2[0, 423] <= -l*V[0, 16] + 2*V[0, 48]*t0[0, 0] - 0.001+ objc]
	constraints += [-lambda_2[0, 109] - 1500*lambda_2[0, 165] - 2*lambda_2[0, 193] - lambda_2[0, 403] - 10*lambda_2[0, 404] - 10*lambda_2[0, 406] - 40*lambda_2[0, 409] - 40*lambda_2[0, 413] - 500*lambda_2[0, 418] >= -l*V[0, 102] + 2*V[0, 145]*t0[0, 0]- objc]
	constraints += [-lambda_2[0, 109] - 1500*lambda_2[0, 165] - 2*lambda_2[0, 193] - lambda_2[0, 403] - 10*lambda_2[0, 404] - 10*lambda_2[0, 406] - 40*lambda_2[0, 409] - 40*lambda_2[0, 413] - 500*lambda_2[0, 418] <= -l*V[0, 102] + 2*V[0, 145]*t0[0, 0]+ objc]
	constraints += [lambda_2[0, 193] == 0]
	constraints += [-lambda_2[0, 110] - 1500*lambda_2[0, 166] - 2*lambda_2[0, 194] - lambda_2[0, 403] - 10*lambda_2[0, 405] - 10*lambda_2[0, 407] - 40*lambda_2[0, 410] - 40*lambda_2[0, 414] - 500*lambda_2[0, 419] >= -l*V[0, 103] - 25*V[0, 107] + 2*V[0, 146]*t0[0, 0]- objc]
	constraints += [-lambda_2[0, 110] - 1500*lambda_2[0, 166] - 2*lambda_2[0, 194] - lambda_2[0, 403] - 10*lambda_2[0, 405] - 10*lambda_2[0, 407] - 40*lambda_2[0, 410] - 40*lambda_2[0, 414] - 500*lambda_2[0, 419] <= -l*V[0, 103] - 25*V[0, 107] + 2*V[0, 146]*t0[0, 0]+ objc]
	constraints += [lambda_2[0, 403] == 0]
	constraints += [lambda_2[0, 194] == 0]
	constraints += [-lambda_2[0, 111] - 1500*lambda_2[0, 167] - 20*lambda_2[0, 195] - lambda_2[0, 404] - lambda_2[0, 405] - 10*lambda_2[0, 408] - 40*lambda_2[0, 411] - 40*lambda_2[0, 415] - 500*lambda_2[0, 420] >= -l*V[0, 104] + 4*V[0, 97]*t0[0, 0] - 2*V[0, 104]*t0[0, 2] - 2*V[0, 104] + V[0, 105]- objc]
	constraints += [-lambda_2[0, 111] - 1500*lambda_2[0, 167] - 20*lambda_2[0, 195] - lambda_2[0, 404] - lambda_2[0, 405] - 10*lambda_2[0, 408] - 40*lambda_2[0, 411] - 40*lambda_2[0, 415] - 500*lambda_2[0, 420] <= -l*V[0, 104] + 4*V[0, 97]*t0[0, 0] - 2*V[0, 104]*t0[0, 2] - 2*V[0, 104] + V[0, 105]+ objc]
	constraints += [lambda_2[0, 404] == 0]
	constraints += [lambda_2[0, 405] == 0]
	constraints += [lambda_2[0, 195] == 0]
	constraints += [-lambda_2[0, 113] - 1500*lambda_2[0, 169] - 80*lambda_2[0, 197] - lambda_2[0, 409] - lambda_2[0, 410] - 10*lambda_2[0, 411] - 10*lambda_2[0, 412] - 40*lambda_2[0, 417] - 500*lambda_2[0, 422] >= -l*V[0, 105] - 2.8*V[0, 104]*t0[0, 0] - 2*V[0, 104]*t0[0, 1] + V[0, 106] + 2*V[0, 149]*t0[0, 0]- objc]
	constraints += [-lambda_2[0, 113] - 1500*lambda_2[0, 169] - 80*lambda_2[0, 197] - lambda_2[0, 409] - lambda_2[0, 410] - 10*lambda_2[0, 411] - 10*lambda_2[0, 412] - 40*lambda_2[0, 417] - 500*lambda_2[0, 422] <= -l*V[0, 105] - 2.8*V[0, 104]*t0[0, 0] - 2*V[0, 104]*t0[0, 1] + V[0, 106] + 2*V[0, 149]*t0[0, 0]+ objc]
	constraints += [lambda_2[0, 409] == 0]
	constraints += [lambda_2[0, 410] == 0]
	constraints += [lambda_2[0, 411] == 0]
	constraints += [lambda_2[0, 197] >= -0.0001*V[0, 104]- objc]
	constraints += [lambda_2[0, 197] <= -0.0001*V[0, 104]+ objc]
	constraints += [-lambda_2[0, 115] - 1500*lambda_2[0, 171] - 1000*lambda_2[0, 199] - lambda_2[0, 418] - lambda_2[0, 419] - 10*lambda_2[0, 420] - 10*lambda_2[0, 421] - 40*lambda_2[0, 422] - 40*lambda_2[0, 423] >= -l*V[0, 106] - 2*V[0, 104]*t0[0, 0] + 2*V[0, 152]*t0[0, 0]- objc]
	constraints += [-lambda_2[0, 115] - 1500*lambda_2[0, 171] - 1000*lambda_2[0, 199] - lambda_2[0, 418] - lambda_2[0, 419] - 10*lambda_2[0, 420] - 10*lambda_2[0, 421] - 40*lambda_2[0, 422] - 40*lambda_2[0, 423] <= -l*V[0, 106] - 2*V[0, 104]*t0[0, 0] + 2*V[0, 152]*t0[0, 0]+ objc]
	constraints += [lambda_2[0, 418] == 0]
	constraints += [lambda_2[0, 419] == 0]
	constraints += [lambda_2[0, 420] == 0]
	constraints += [lambda_2[0, 422] == 0]
	constraints += [lambda_2[0, 199] == 0]
	constraints += [-lambda_2[0, 112] - 1500*lambda_2[0, 168] - 20*lambda_2[0, 196] - lambda_2[0, 406] - lambda_2[0, 407] - 10*lambda_2[0, 408] - 40*lambda_2[0, 412] - 40*lambda_2[0, 416] - 500*lambda_2[0, 421] >= -l*V[0, 107] + 2*V[0, 104]*t0[0, 2] - 2*V[0, 107] + V[0, 108] + 2*V[0, 156]*t0[0, 0]- objc]
	constraints += [-lambda_2[0, 112] - 1500*lambda_2[0, 168] - 20*lambda_2[0, 196] - lambda_2[0, 406] - lambda_2[0, 407] - 10*lambda_2[0, 408] - 40*lambda_2[0, 412] - 40*lambda_2[0, 416] - 500*lambda_2[0, 421] <= -l*V[0, 107] + 2*V[0, 104]*t0[0, 2] - 2*V[0, 107] + V[0, 108] + 2*V[0, 156]*t0[0, 0]+ objc]
	constraints += [lambda_2[0, 406] >= V[0, 103]- objc]
	constraints += [lambda_2[0, 406] <= V[0, 103]+ objc]
	constraints += [lambda_2[0, 407] >= -V[0, 102]- objc]
	constraints += [lambda_2[0, 407] <= -V[0, 102]+ objc]
	constraints += [lambda_2[0, 408] == 0]
	constraints += [lambda_2[0, 412] == 0]
	constraints += [lambda_2[0, 421] == 0]
	constraints += [lambda_2[0, 196] == 0]
	constraints += [-lambda_2[0, 114] - 1500*lambda_2[0, 170] - 80*lambda_2[0, 198] - lambda_2[0, 413] - lambda_2[0, 414] - 10*lambda_2[0, 415] - 10*lambda_2[0, 416] - 40*lambda_2[0, 417] - 500*lambda_2[0, 423] >= -l*V[0, 108] + 3*V[0, 24] + 2*V[0, 104]*t0[0, 1] + 2*V[0, 161]*t0[0, 0]- objc]
	constraints += [-lambda_2[0, 114] - 1500*lambda_2[0, 170] - 80*lambda_2[0, 198] - lambda_2[0, 413] - lambda_2[0, 414] - 10*lambda_2[0, 415] - 10*lambda_2[0, 416] - 40*lambda_2[0, 417] - 500*lambda_2[0, 423] <= -l*V[0, 108] + 3*V[0, 24] + 2*V[0, 104]*t0[0, 1] + 2*V[0, 161]*t0[0, 0]+ objc]
	constraints += [lambda_2[0, 413] == 0]
	constraints += [lambda_2[0, 414] == 0]
	constraints += [lambda_2[0, 415] == 0]
	constraints += [lambda_2[0, 417] == 0]
	constraints += [lambda_2[0, 423] == 0]
	constraints += [lambda_2[0, 416] == 0]
	constraints += [lambda_2[0, 198] >= -0.0001*V[0, 107]- objc]
	constraints += [lambda_2[0, 198] <= -0.0001*V[0, 107]+ objc]
	constraints += [-lambda_2[0, 23] - 2000*lambda_2[0, 31] - lambda_2[0, 165] - lambda_2[0, 166] - 10*lambda_2[0, 167] - 10*lambda_2[0, 168] - 40*lambda_2[0, 169] - 40*lambda_2[0, 170] - 500*lambda_2[0, 171] >= -l*V[0, 24] + 2*V[0, 104]*t0[0, 0]- objc]
	constraints += [-lambda_2[0, 23] - 2000*lambda_2[0, 31] - lambda_2[0, 165] - lambda_2[0, 166] - 10*lambda_2[0, 167] - 10*lambda_2[0, 168] - 40*lambda_2[0, 169] - 40*lambda_2[0, 170] - 500*lambda_2[0, 171] <= -l*V[0, 24] + 2*V[0, 104]*t0[0, 0]+ objc]
	constraints += [lambda_2[0, 165] == 0]
	constraints += [lambda_2[0, 166] == 0]
	constraints += [lambda_2[0, 167] == 0]
	constraints += [lambda_2[0, 169] == 0]
	constraints += [lambda_2[0, 171] == 0]
	constraints += [lambda_2[0, 168] == 0]
	constraints += [lambda_2[0, 170] == 0]
	constraints += [lambda_2[0, 31] == 0]


	#------------------The Unsafe conditions------------------
	constraints += [-lambda_3[0, 0] - lambda_3[0, 1] - 10*lambda_3[0, 2] - 10*lambda_3[0, 3] - 40*lambda_3[0, 4] - 40*lambda_3[0, 5] + 10*lambda_3[0, 6] + lambda_3[0, 7] + lambda_3[0, 8] + 100*lambda_3[0, 9] + 100*lambda_3[0, 10] + 1600*lambda_3[0, 11] + 1600*lambda_3[0, 12] + 100*lambda_3[0, 13] - lambda_3[0, 14] - lambda_3[0, 15] - 1000*lambda_3[0, 16] - 1000*lambda_3[0, 17] - 64000*lambda_3[0, 18] - 64000*lambda_3[0, 19] + 1000*lambda_3[0, 20] + lambda_3[0, 21] + 10*lambda_3[0, 22] + 10*lambda_3[0, 23] + 10*lambda_3[0, 24] + 10*lambda_3[0, 25] + 100*lambda_3[0, 26] + 40*lambda_3[0, 27] + 40*lambda_3[0, 28] + 400*lambda_3[0, 29] + 400*lambda_3[0, 30] + 40*lambda_3[0, 31] + 40*lambda_3[0, 32] + 400*lambda_3[0, 33] + 400*lambda_3[0, 34] + 1600*lambda_3[0, 35] - 10*lambda_3[0, 36] - 10*lambda_3[0, 37] - 100*lambda_3[0, 38] - 100*lambda_3[0, 39] - 400*lambda_3[0, 40] - 400*lambda_3[0, 41] - lambda_3[0, 42] - lambda_3[0, 43] - 10*lambda_3[0, 44] - 10*lambda_3[0, 45] - 100*lambda_3[0, 46] - 100*lambda_3[0, 47] - 10*lambda_3[0, 48] - 10*lambda_3[0, 49] - 1000*lambda_3[0, 50] - 100*lambda_3[0, 51] - 100*lambda_3[0, 52] - 1000*lambda_3[0, 53] - 40*lambda_3[0, 54] - 40*lambda_3[0, 55] - 4000*lambda_3[0, 56] - 4000*lambda_3[0, 57] - 1600*lambda_3[0, 58] - 1600*lambda_3[0, 59] - 16000*lambda_3[0, 60] - 16000*lambda_3[0, 61] - 40*lambda_3[0, 62] - 40*lambda_3[0, 63] - 4000*lambda_3[0, 64] - 4000*lambda_3[0, 65] - 64000*lambda_3[0, 66] - 1600*lambda_3[0, 67] - 1600*lambda_3[0, 68] - 16000*lambda_3[0, 69] - 16000*lambda_3[0, 70] - 64000*lambda_3[0, 71] + 10*lambda_3[0, 72] + 10*lambda_3[0, 73] + 1000*lambda_3[0, 74] + 1000*lambda_3[0, 75] + 16000*lambda_3[0, 76] + 16000*lambda_3[0, 77] - 100*lambda_3[0, 78] - 100*lambda_3[0, 79] - 1000*lambda_3[0, 80] - 1000*lambda_3[0, 81] - 4000*lambda_3[0, 82] - 4000*lambda_3[0, 83] - 10*lambda_3[0, 84] - 10*lambda_3[0, 85] - 100*lambda_3[0, 86] - 100*lambda_3[0, 87] - 40*lambda_3[0, 88] - 400*lambda_3[0, 89] - 400*lambda_3[0, 90] - 400*lambda_3[0, 91] - 400*lambda_3[0, 92] - 4000*lambda_3[0, 93] - 40*lambda_3[0, 94] - 400*lambda_3[0, 95] - 400*lambda_3[0, 96] - 400*lambda_3[0, 97] - 400*lambda_3[0, 98] - 4000*lambda_3[0, 99] - 1600*lambda_3[0, 100] - 1600*lambda_3[0, 101] - 16000*lambda_3[0, 102] - 16000*lambda_3[0, 103] + 10*lambda_3[0, 104] + 100*lambda_3[0, 105] + 100*lambda_3[0, 106] + 100*lambda_3[0, 107] + 100*lambda_3[0, 108] + 1000*lambda_3[0, 109] + 400*lambda_3[0, 110] + 400*lambda_3[0, 111] + 4000*lambda_3[0, 112] + 4000*lambda_3[0, 113] + 400*lambda_3[0, 114] + 400*lambda_3[0, 115] + 4000*lambda_3[0, 116] + 4000*lambda_3[0, 117] + 16000*lambda_3[0, 118] >= -V[0, 0]- objc]
	constraints += [-lambda_3[0, 0] - lambda_3[0, 1] - 10*lambda_3[0, 2] - 10*lambda_3[0, 3] - 40*lambda_3[0, 4] - 40*lambda_3[0, 5] + 10*lambda_3[0, 6] + lambda_3[0, 7] + lambda_3[0, 8] + 100*lambda_3[0, 9] + 100*lambda_3[0, 10] + 1600*lambda_3[0, 11] + 1600*lambda_3[0, 12] + 100*lambda_3[0, 13] - lambda_3[0, 14] - lambda_3[0, 15] - 1000*lambda_3[0, 16] - 1000*lambda_3[0, 17] - 64000*lambda_3[0, 18] - 64000*lambda_3[0, 19] + 1000*lambda_3[0, 20] + lambda_3[0, 21] + 10*lambda_3[0, 22] + 10*lambda_3[0, 23] + 10*lambda_3[0, 24] + 10*lambda_3[0, 25] + 100*lambda_3[0, 26] + 40*lambda_3[0, 27] + 40*lambda_3[0, 28] + 400*lambda_3[0, 29] + 400*lambda_3[0, 30] + 40*lambda_3[0, 31] + 40*lambda_3[0, 32] + 400*lambda_3[0, 33] + 400*lambda_3[0, 34] + 1600*lambda_3[0, 35] - 10*lambda_3[0, 36] - 10*lambda_3[0, 37] - 100*lambda_3[0, 38] - 100*lambda_3[0, 39] - 400*lambda_3[0, 40] - 400*lambda_3[0, 41] - lambda_3[0, 42] - lambda_3[0, 43] - 10*lambda_3[0, 44] - 10*lambda_3[0, 45] - 100*lambda_3[0, 46] - 100*lambda_3[0, 47] - 10*lambda_3[0, 48] - 10*lambda_3[0, 49] - 1000*lambda_3[0, 50] - 100*lambda_3[0, 51] - 100*lambda_3[0, 52] - 1000*lambda_3[0, 53] - 40*lambda_3[0, 54] - 40*lambda_3[0, 55] - 4000*lambda_3[0, 56] - 4000*lambda_3[0, 57] - 1600*lambda_3[0, 58] - 1600*lambda_3[0, 59] - 16000*lambda_3[0, 60] - 16000*lambda_3[0, 61] - 40*lambda_3[0, 62] - 40*lambda_3[0, 63] - 4000*lambda_3[0, 64] - 4000*lambda_3[0, 65] - 64000*lambda_3[0, 66] - 1600*lambda_3[0, 67] - 1600*lambda_3[0, 68] - 16000*lambda_3[0, 69] - 16000*lambda_3[0, 70] - 64000*lambda_3[0, 71] + 10*lambda_3[0, 72] + 10*lambda_3[0, 73] + 1000*lambda_3[0, 74] + 1000*lambda_3[0, 75] + 16000*lambda_3[0, 76] + 16000*lambda_3[0, 77] - 100*lambda_3[0, 78] - 100*lambda_3[0, 79] - 1000*lambda_3[0, 80] - 1000*lambda_3[0, 81] - 4000*lambda_3[0, 82] - 4000*lambda_3[0, 83] - 10*lambda_3[0, 84] - 10*lambda_3[0, 85] - 100*lambda_3[0, 86] - 100*lambda_3[0, 87] - 40*lambda_3[0, 88] - 400*lambda_3[0, 89] - 400*lambda_3[0, 90] - 400*lambda_3[0, 91] - 400*lambda_3[0, 92] - 4000*lambda_3[0, 93] - 40*lambda_3[0, 94] - 400*lambda_3[0, 95] - 400*lambda_3[0, 96] - 400*lambda_3[0, 97] - 400*lambda_3[0, 98] - 4000*lambda_3[0, 99] - 1600*lambda_3[0, 100] - 1600*lambda_3[0, 101] - 16000*lambda_3[0, 102] - 16000*lambda_3[0, 103] + 10*lambda_3[0, 104] + 100*lambda_3[0, 105] + 100*lambda_3[0, 106] + 100*lambda_3[0, 107] + 100*lambda_3[0, 108] + 1000*lambda_3[0, 109] + 400*lambda_3[0, 110] + 400*lambda_3[0, 111] + 4000*lambda_3[0, 112] + 4000*lambda_3[0, 113] + 400*lambda_3[0, 114] + 400*lambda_3[0, 115] + 4000*lambda_3[0, 116] + 4000*lambda_3[0, 117] + 16000*lambda_3[0, 118] <= -V[0, 0]+ objc]
	constraints += [lambda_3[0, 0] - 2*lambda_3[0, 7] + 3*lambda_3[0, 14] - lambda_3[0, 21] - 10*lambda_3[0, 22] - 10*lambda_3[0, 24] - 40*lambda_3[0, 27] - 40*lambda_3[0, 31] + 10*lambda_3[0, 36] + 2*lambda_3[0, 42] + lambda_3[0, 43] + 20*lambda_3[0, 44] + 100*lambda_3[0, 46] + 20*lambda_3[0, 48] + 100*lambda_3[0, 51] + 80*lambda_3[0, 54] + 1600*lambda_3[0, 58] + 80*lambda_3[0, 62] + 1600*lambda_3[0, 67] - 20*lambda_3[0, 72] + 100*lambda_3[0, 78] + 10*lambda_3[0, 84] + 10*lambda_3[0, 85] + 100*lambda_3[0, 86] + 40*lambda_3[0, 88] + 400*lambda_3[0, 89] + 400*lambda_3[0, 91] + 40*lambda_3[0, 94] + 400*lambda_3[0, 95] + 400*lambda_3[0, 97] + 1600*lambda_3[0, 100] - 10*lambda_3[0, 104] - 100*lambda_3[0, 105] - 100*lambda_3[0, 107] - 400*lambda_3[0, 110] - 400*lambda_3[0, 114] >= -V[0, 1]- objc]
	constraints += [lambda_3[0, 0] - 2*lambda_3[0, 7] + 3*lambda_3[0, 14] - lambda_3[0, 21] - 10*lambda_3[0, 22] - 10*lambda_3[0, 24] - 40*lambda_3[0, 27] - 40*lambda_3[0, 31] + 10*lambda_3[0, 36] + 2*lambda_3[0, 42] + lambda_3[0, 43] + 20*lambda_3[0, 44] + 100*lambda_3[0, 46] + 20*lambda_3[0, 48] + 100*lambda_3[0, 51] + 80*lambda_3[0, 54] + 1600*lambda_3[0, 58] + 80*lambda_3[0, 62] + 1600*lambda_3[0, 67] - 20*lambda_3[0, 72] + 100*lambda_3[0, 78] + 10*lambda_3[0, 84] + 10*lambda_3[0, 85] + 100*lambda_3[0, 86] + 40*lambda_3[0, 88] + 400*lambda_3[0, 89] + 400*lambda_3[0, 91] + 40*lambda_3[0, 94] + 400*lambda_3[0, 95] + 400*lambda_3[0, 97] + 1600*lambda_3[0, 100] - 10*lambda_3[0, 104] - 100*lambda_3[0, 105] - 100*lambda_3[0, 107] - 400*lambda_3[0, 110] - 400*lambda_3[0, 114] <= -V[0, 1]+ objc]
	constraints += [lambda_3[0, 7] - 3*lambda_3[0, 14] - lambda_3[0, 42] - 10*lambda_3[0, 44] - 10*lambda_3[0, 48] - 40*lambda_3[0, 54] - 40*lambda_3[0, 62] + 10*lambda_3[0, 72] >= -V[0, 9]- objc]
	constraints += [lambda_3[0, 7] - 3*lambda_3[0, 14] - lambda_3[0, 42] - 10*lambda_3[0, 44] - 10*lambda_3[0, 48] - 40*lambda_3[0, 54] - 40*lambda_3[0, 62] + 10*lambda_3[0, 72] <= -V[0, 9]+ objc]
	constraints += [lambda_3[0, 14] >= -V[0, 17]- objc]
	constraints += [lambda_3[0, 14] <= -V[0, 17]+ objc]
	constraints += [lambda_3[0, 1] - 2*lambda_3[0, 8] + 3*lambda_3[0, 15] - lambda_3[0, 21] - 10*lambda_3[0, 23] - 10*lambda_3[0, 25] - 40*lambda_3[0, 28] - 40*lambda_3[0, 32] + 10*lambda_3[0, 37] + lambda_3[0, 42] + 2*lambda_3[0, 43] + 20*lambda_3[0, 45] + 100*lambda_3[0, 47] + 20*lambda_3[0, 49] + 100*lambda_3[0, 52] + 80*lambda_3[0, 55] + 1600*lambda_3[0, 59] + 80*lambda_3[0, 63] + 1600*lambda_3[0, 68] - 20*lambda_3[0, 73] + 100*lambda_3[0, 79] + 10*lambda_3[0, 84] + 10*lambda_3[0, 85] + 100*lambda_3[0, 87] + 40*lambda_3[0, 88] + 400*lambda_3[0, 90] + 400*lambda_3[0, 92] + 40*lambda_3[0, 94] + 400*lambda_3[0, 96] + 400*lambda_3[0, 98] + 1600*lambda_3[0, 101] - 10*lambda_3[0, 104] - 100*lambda_3[0, 106] - 100*lambda_3[0, 108] - 400*lambda_3[0, 111] - 400*lambda_3[0, 115] >= -V[0, 2]- objc]
	constraints += [lambda_3[0, 1] - 2*lambda_3[0, 8] + 3*lambda_3[0, 15] - lambda_3[0, 21] - 10*lambda_3[0, 23] - 10*lambda_3[0, 25] - 40*lambda_3[0, 28] - 40*lambda_3[0, 32] + 10*lambda_3[0, 37] + lambda_3[0, 42] + 2*lambda_3[0, 43] + 20*lambda_3[0, 45] + 100*lambda_3[0, 47] + 20*lambda_3[0, 49] + 100*lambda_3[0, 52] + 80*lambda_3[0, 55] + 1600*lambda_3[0, 59] + 80*lambda_3[0, 63] + 1600*lambda_3[0, 68] - 20*lambda_3[0, 73] + 100*lambda_3[0, 79] + 10*lambda_3[0, 84] + 10*lambda_3[0, 85] + 100*lambda_3[0, 87] + 40*lambda_3[0, 88] + 400*lambda_3[0, 90] + 400*lambda_3[0, 92] + 40*lambda_3[0, 94] + 400*lambda_3[0, 96] + 400*lambda_3[0, 98] + 1600*lambda_3[0, 101] - 10*lambda_3[0, 104] - 100*lambda_3[0, 106] - 100*lambda_3[0, 108] - 400*lambda_3[0, 111] - 400*lambda_3[0, 115] <= -V[0, 2]+ objc]
	constraints += [lambda_3[0, 21] - 2*lambda_3[0, 42] - 2*lambda_3[0, 43] - 10*lambda_3[0, 84] - 10*lambda_3[0, 85] - 40*lambda_3[0, 88] - 40*lambda_3[0, 94] + 10*lambda_3[0, 104] >= -V[0, 25]- objc]
	constraints += [lambda_3[0, 21] - 2*lambda_3[0, 42] - 2*lambda_3[0, 43] - 10*lambda_3[0, 84] - 10*lambda_3[0, 85] - 40*lambda_3[0, 88] - 40*lambda_3[0, 94] + 10*lambda_3[0, 104] <= -V[0, 25]+ objc]
	constraints += [lambda_3[0, 42] >= -V[0, 53]- objc]
	constraints += [lambda_3[0, 42] <= -V[0, 53]+ objc]
	constraints += [lambda_3[0, 8] - 3*lambda_3[0, 15] - lambda_3[0, 43] - 10*lambda_3[0, 45] - 10*lambda_3[0, 49] - 40*lambda_3[0, 55] - 40*lambda_3[0, 63] + 10*lambda_3[0, 73] >= -V[0, 10]- objc]
	constraints += [lambda_3[0, 8] - 3*lambda_3[0, 15] - lambda_3[0, 43] - 10*lambda_3[0, 45] - 10*lambda_3[0, 49] - 40*lambda_3[0, 55] - 40*lambda_3[0, 63] + 10*lambda_3[0, 73] <= -V[0, 10]+ objc]
	constraints += [lambda_3[0, 43] >= -V[0, 54]- objc]
	constraints += [lambda_3[0, 43] <= -V[0, 54]+ objc]
	constraints += [lambda_3[0, 15] >= -V[0, 18]- objc]
	constraints += [lambda_3[0, 15] <= -V[0, 18]+ objc]
	constraints += [lambda_3[0, 2] - 20*lambda_3[0, 9] + 300*lambda_3[0, 16] - lambda_3[0, 22] - lambda_3[0, 23] - 10*lambda_3[0, 26] - 40*lambda_3[0, 29] - 40*lambda_3[0, 33] + 10*lambda_3[0, 38] + lambda_3[0, 44] + lambda_3[0, 45] + 20*lambda_3[0, 46] + 20*lambda_3[0, 47] + 200*lambda_3[0, 50] + 100*lambda_3[0, 53] + 800*lambda_3[0, 56] + 1600*lambda_3[0, 60] + 800*lambda_3[0, 64] + 1600*lambda_3[0, 69] - 200*lambda_3[0, 74] + 100*lambda_3[0, 80] + lambda_3[0, 84] + 10*lambda_3[0, 86] + 10*lambda_3[0, 87] + 40*lambda_3[0, 89] + 40*lambda_3[0, 90] + 400*lambda_3[0, 93] + 40*lambda_3[0, 95] + 40*lambda_3[0, 96] + 400*lambda_3[0, 99] + 1600*lambda_3[0, 102] - 10*lambda_3[0, 105] - 10*lambda_3[0, 106] - 100*lambda_3[0, 109] - 400*lambda_3[0, 112] - 400*lambda_3[0, 116] >= -V[0, 3]- objc]
	constraints += [lambda_3[0, 2] - 20*lambda_3[0, 9] + 300*lambda_3[0, 16] - lambda_3[0, 22] - lambda_3[0, 23] - 10*lambda_3[0, 26] - 40*lambda_3[0, 29] - 40*lambda_3[0, 33] + 10*lambda_3[0, 38] + lambda_3[0, 44] + lambda_3[0, 45] + 20*lambda_3[0, 46] + 20*lambda_3[0, 47] + 200*lambda_3[0, 50] + 100*lambda_3[0, 53] + 800*lambda_3[0, 56] + 1600*lambda_3[0, 60] + 800*lambda_3[0, 64] + 1600*lambda_3[0, 69] - 200*lambda_3[0, 74] + 100*lambda_3[0, 80] + lambda_3[0, 84] + 10*lambda_3[0, 86] + 10*lambda_3[0, 87] + 40*lambda_3[0, 89] + 40*lambda_3[0, 90] + 400*lambda_3[0, 93] + 40*lambda_3[0, 95] + 40*lambda_3[0, 96] + 400*lambda_3[0, 99] + 1600*lambda_3[0, 102] - 10*lambda_3[0, 105] - 10*lambda_3[0, 106] - 100*lambda_3[0, 109] - 400*lambda_3[0, 112] - 400*lambda_3[0, 116] <= -V[0, 3]+ objc]
	constraints += [lambda_3[0, 22] - 2*lambda_3[0, 44] - 20*lambda_3[0, 46] - lambda_3[0, 84] - 10*lambda_3[0, 86] - 40*lambda_3[0, 89] - 40*lambda_3[0, 95] + 10*lambda_3[0, 105] >= -V[0, 26]- objc]
	constraints += [lambda_3[0, 22] - 2*lambda_3[0, 44] - 20*lambda_3[0, 46] - lambda_3[0, 84] - 10*lambda_3[0, 86] - 40*lambda_3[0, 89] - 40*lambda_3[0, 95] + 10*lambda_3[0, 105] <= -V[0, 26]+ objc]
	constraints += [lambda_3[0, 44] >= -V[0, 55]- objc]
	constraints += [lambda_3[0, 44] <= -V[0, 55]+ objc]
	constraints += [lambda_3[0, 23] - 2*lambda_3[0, 45] - 20*lambda_3[0, 47] - lambda_3[0, 84] - 10*lambda_3[0, 87] - 40*lambda_3[0, 90] - 40*lambda_3[0, 96] + 10*lambda_3[0, 106] >= -V[0, 27]- objc]
	constraints += [lambda_3[0, 23] - 2*lambda_3[0, 45] - 20*lambda_3[0, 47] - lambda_3[0, 84] - 10*lambda_3[0, 87] - 40*lambda_3[0, 90] - 40*lambda_3[0, 96] + 10*lambda_3[0, 106] <= -V[0, 27]+ objc]
	constraints += [lambda_3[0, 84] >= -V[0, 109]- objc]
	constraints += [lambda_3[0, 84] <= -V[0, 109]+ objc]
	constraints += [lambda_3[0, 45] >= -V[0, 56]- objc]
	constraints += [lambda_3[0, 45] <= -V[0, 56]+ objc]
	constraints += [lambda_3[0, 9] - 30*lambda_3[0, 16] - lambda_3[0, 46] - lambda_3[0, 47] - 10*lambda_3[0, 50] - 40*lambda_3[0, 56] - 40*lambda_3[0, 64] + 10*lambda_3[0, 74] >= -V[0, 11] - 0.0001- objc]
	constraints += [lambda_3[0, 9] - 30*lambda_3[0, 16] - lambda_3[0, 46] - lambda_3[0, 47] - 10*lambda_3[0, 50] - 40*lambda_3[0, 56] - 40*lambda_3[0, 64] + 10*lambda_3[0, 74] <= -V[0, 11] - 0.0001+ objc]
	constraints += [lambda_3[0, 46] >= -V[0, 57]- objc]
	constraints += [lambda_3[0, 46] <= -V[0, 57]+ objc]
	constraints += [lambda_3[0, 47] >= -V[0, 58]- objc]
	constraints += [lambda_3[0, 47] <= -V[0, 58]+ objc]
	constraints += [lambda_3[0, 16] >= -V[0, 19]- objc]
	constraints += [lambda_3[0, 16] <= -V[0, 19]+ objc]
	constraints += [lambda_3[0, 4] + 1.4*lambda_3[0, 6] - 80*lambda_3[0, 11] + 28.0*lambda_3[0, 13] + 4800*lambda_3[0, 18] + 420.0*lambda_3[0, 20] - lambda_3[0, 27] - lambda_3[0, 28] - 10*lambda_3[0, 29] - 10*lambda_3[0, 30] - 40*lambda_3[0, 35] - 1.4*lambda_3[0, 36] - 1.4*lambda_3[0, 37] - 14.0*lambda_3[0, 38] - 14.0*lambda_3[0, 39] - 46.0*lambda_3[0, 40] - 56.0*lambda_3[0, 41] + lambda_3[0, 54] + lambda_3[0, 55] + 100*lambda_3[0, 56] + 100*lambda_3[0, 57] + 80*lambda_3[0, 58] + 80*lambda_3[0, 59] + 800*lambda_3[0, 60] + 800*lambda_3[0, 61] + 3200*lambda_3[0, 66] + 1600*lambda_3[0, 71] + 1.4*lambda_3[0, 72] + 1.4*lambda_3[0, 73] + 140.0*lambda_3[0, 74] + 140.0*lambda_3[0, 75] + 1440.0*lambda_3[0, 76] + 2240.0*lambda_3[0, 77] - 28.0*lambda_3[0, 78] - 28.0*lambda_3[0, 79] - 280.0*lambda_3[0, 80] - 280.0*lambda_3[0, 81] - 1020.0*lambda_3[0, 82] - 1120.0*lambda_3[0, 83] + lambda_3[0, 88] + 10*lambda_3[0, 89] + 10*lambda_3[0, 90] + 10*lambda_3[0, 91] + 10*lambda_3[0, 92] + 100*lambda_3[0, 93] + 40*lambda_3[0, 100] + 40*lambda_3[0, 101] + 400*lambda_3[0, 102] + 400*lambda_3[0, 103] + 1.4*lambda_3[0, 104] + 14.0*lambda_3[0, 105] + 14.0*lambda_3[0, 106] + 14.0*lambda_3[0, 107] + 14.0*lambda_3[0, 108] + 140.0*lambda_3[0, 109] + 46.0*lambda_3[0, 110] + 46.0*lambda_3[0, 111] + 460.0*lambda_3[0, 112] + 460.0*lambda_3[0, 113] + 56.0*lambda_3[0, 114] + 56.0*lambda_3[0, 115] + 560.0*lambda_3[0, 116] + 560.0*lambda_3[0, 117] + 1840.0*lambda_3[0, 118] >= -V[0, 4]- objc]
	constraints += [lambda_3[0, 4] + 1.4*lambda_3[0, 6] - 80*lambda_3[0, 11] + 28.0*lambda_3[0, 13] + 4800*lambda_3[0, 18] + 420.0*lambda_3[0, 20] - lambda_3[0, 27] - lambda_3[0, 28] - 10*lambda_3[0, 29] - 10*lambda_3[0, 30] - 40*lambda_3[0, 35] - 1.4*lambda_3[0, 36] - 1.4*lambda_3[0, 37] - 14.0*lambda_3[0, 38] - 14.0*lambda_3[0, 39] - 46.0*lambda_3[0, 40] - 56.0*lambda_3[0, 41] + lambda_3[0, 54] + lambda_3[0, 55] + 100*lambda_3[0, 56] + 100*lambda_3[0, 57] + 80*lambda_3[0, 58] + 80*lambda_3[0, 59] + 800*lambda_3[0, 60] + 800*lambda_3[0, 61] + 3200*lambda_3[0, 66] + 1600*lambda_3[0, 71] + 1.4*lambda_3[0, 72] + 1.4*lambda_3[0, 73] + 140.0*lambda_3[0, 74] + 140.0*lambda_3[0, 75] + 1440.0*lambda_3[0, 76] + 2240.0*lambda_3[0, 77] - 28.0*lambda_3[0, 78] - 28.0*lambda_3[0, 79] - 280.0*lambda_3[0, 80] - 280.0*lambda_3[0, 81] - 1020.0*lambda_3[0, 82] - 1120.0*lambda_3[0, 83] + lambda_3[0, 88] + 10*lambda_3[0, 89] + 10*lambda_3[0, 90] + 10*lambda_3[0, 91] + 10*lambda_3[0, 92] + 100*lambda_3[0, 93] + 40*lambda_3[0, 100] + 40*lambda_3[0, 101] + 400*lambda_3[0, 102] + 400*lambda_3[0, 103] + 1.4*lambda_3[0, 104] + 14.0*lambda_3[0, 105] + 14.0*lambda_3[0, 106] + 14.0*lambda_3[0, 107] + 14.0*lambda_3[0, 108] + 140.0*lambda_3[0, 109] + 46.0*lambda_3[0, 110] + 46.0*lambda_3[0, 111] + 460.0*lambda_3[0, 112] + 460.0*lambda_3[0, 113] + 56.0*lambda_3[0, 114] + 56.0*lambda_3[0, 115] + 560.0*lambda_3[0, 116] + 560.0*lambda_3[0, 117] + 1840.0*lambda_3[0, 118] <= -V[0, 4]+ objc]
	constraints += [lambda_3[0, 27] + 1.4*lambda_3[0, 36] - 2*lambda_3[0, 54] - 80*lambda_3[0, 58] - 2.8*lambda_3[0, 72] + 28.0*lambda_3[0, 78] - lambda_3[0, 88] - 10*lambda_3[0, 89] - 10*lambda_3[0, 91] - 40*lambda_3[0, 100] - 1.4*lambda_3[0, 104] - 14.0*lambda_3[0, 105] - 14.0*lambda_3[0, 107] - 46.0*lambda_3[0, 110] - 56.0*lambda_3[0, 114] >= -V[0, 28]- objc]
	constraints += [lambda_3[0, 27] + 1.4*lambda_3[0, 36] - 2*lambda_3[0, 54] - 80*lambda_3[0, 58] - 2.8*lambda_3[0, 72] + 28.0*lambda_3[0, 78] - lambda_3[0, 88] - 10*lambda_3[0, 89] - 10*lambda_3[0, 91] - 40*lambda_3[0, 100] - 1.4*lambda_3[0, 104] - 14.0*lambda_3[0, 105] - 14.0*lambda_3[0, 107] - 46.0*lambda_3[0, 110] - 56.0*lambda_3[0, 114] <= -V[0, 28]+ objc]
	constraints += [lambda_3[0, 54] + 1.4*lambda_3[0, 72] >= -V[0, 59]- objc]
	constraints += [lambda_3[0, 54] + 1.4*lambda_3[0, 72] <= -V[0, 59]+ objc]
	constraints += [lambda_3[0, 28] + 1.4*lambda_3[0, 37] - 2*lambda_3[0, 55] - 80*lambda_3[0, 59] - 2.8*lambda_3[0, 73] + 28.0*lambda_3[0, 79] - lambda_3[0, 88] - 10*lambda_3[0, 90] - 10*lambda_3[0, 92] - 40*lambda_3[0, 101] - 1.4*lambda_3[0, 104] - 14.0*lambda_3[0, 106] - 14.0*lambda_3[0, 108] - 46.0*lambda_3[0, 111] - 56.0*lambda_3[0, 115] >= -V[0, 29]- objc]
	constraints += [lambda_3[0, 28] + 1.4*lambda_3[0, 37] - 2*lambda_3[0, 55] - 80*lambda_3[0, 59] - 2.8*lambda_3[0, 73] + 28.0*lambda_3[0, 79] - lambda_3[0, 88] - 10*lambda_3[0, 90] - 10*lambda_3[0, 92] - 40*lambda_3[0, 101] - 1.4*lambda_3[0, 104] - 14.0*lambda_3[0, 106] - 14.0*lambda_3[0, 108] - 46.0*lambda_3[0, 111] - 56.0*lambda_3[0, 115] <= -V[0, 29]+ objc]
	constraints += [lambda_3[0, 88] + 1.4*lambda_3[0, 104] >= -V[0, 110]- objc]
	constraints += [lambda_3[0, 88] + 1.4*lambda_3[0, 104] <= -V[0, 110]+ objc]
	constraints += [lambda_3[0, 55] + 1.4*lambda_3[0, 73] >= -V[0, 60]- objc]
	constraints += [lambda_3[0, 55] + 1.4*lambda_3[0, 73] <= -V[0, 60]+ objc]
	constraints += [lambda_3[0, 29] + 1.4*lambda_3[0, 38] - 20*lambda_3[0, 56] - 80*lambda_3[0, 60] - 28.0*lambda_3[0, 74] + 28.0*lambda_3[0, 80] - lambda_3[0, 89] - lambda_3[0, 90] - 10*lambda_3[0, 93] - 40*lambda_3[0, 102] - 1.4*lambda_3[0, 105] - 1.4*lambda_3[0, 106] - 14.0*lambda_3[0, 109] - 46.0*lambda_3[0, 112] - 56.0*lambda_3[0, 116] >= -V[0, 30]- objc]
	constraints += [lambda_3[0, 29] + 1.4*lambda_3[0, 38] - 20*lambda_3[0, 56] - 80*lambda_3[0, 60] - 28.0*lambda_3[0, 74] + 28.0*lambda_3[0, 80] - lambda_3[0, 89] - lambda_3[0, 90] - 10*lambda_3[0, 93] - 40*lambda_3[0, 102] - 1.4*lambda_3[0, 105] - 1.4*lambda_3[0, 106] - 14.0*lambda_3[0, 109] - 46.0*lambda_3[0, 112] - 56.0*lambda_3[0, 116] <= -V[0, 30]+ objc]
	constraints += [lambda_3[0, 89] + 1.4*lambda_3[0, 105] >= -V[0, 111]- objc]
	constraints += [lambda_3[0, 89] + 1.4*lambda_3[0, 105] <= -V[0, 111]+ objc]
	constraints += [lambda_3[0, 90] + 1.4*lambda_3[0, 106] >= -V[0, 112]- objc]
	constraints += [lambda_3[0, 90] + 1.4*lambda_3[0, 106] <= -V[0, 112]+ objc]
	constraints += [lambda_3[0, 56] + 1.4*lambda_3[0, 74] >= -V[0, 61]- objc]
	constraints += [lambda_3[0, 56] + 1.4*lambda_3[0, 74] <= -V[0, 61]+ objc]
	constraints += [lambda_3[0, 11] + 1.96*lambda_3[0, 13] - 120*lambda_3[0, 18] + 58.8*lambda_3[0, 20] + 1.4*lambda_3[0, 40] - lambda_3[0, 58] - lambda_3[0, 59] - 10*lambda_3[0, 60] - 10*lambda_3[0, 61] - 40*lambda_3[0, 66] - 102.0*lambda_3[0, 76] - 1.96*lambda_3[0, 78] - 1.96*lambda_3[0, 79] - 19.6*lambda_3[0, 80] - 19.6*lambda_3[0, 81] - 50.4*lambda_3[0, 82] - 78.4*lambda_3[0, 83] - 1.4*lambda_3[0, 110] - 1.4*lambda_3[0, 111] - 14.0*lambda_3[0, 112] - 14.0*lambda_3[0, 113] - 56.0*lambda_3[0, 118] >= -V[0, 12] - 0.0001- objc]
	constraints += [lambda_3[0, 11] + 1.96*lambda_3[0, 13] - 120*lambda_3[0, 18] + 58.8*lambda_3[0, 20] + 1.4*lambda_3[0, 40] - lambda_3[0, 58] - lambda_3[0, 59] - 10*lambda_3[0, 60] - 10*lambda_3[0, 61] - 40*lambda_3[0, 66] - 102.0*lambda_3[0, 76] - 1.96*lambda_3[0, 78] - 1.96*lambda_3[0, 79] - 19.6*lambda_3[0, 80] - 19.6*lambda_3[0, 81] - 50.4*lambda_3[0, 82] - 78.4*lambda_3[0, 83] - 1.4*lambda_3[0, 110] - 1.4*lambda_3[0, 111] - 14.0*lambda_3[0, 112] - 14.0*lambda_3[0, 113] - 56.0*lambda_3[0, 118] <= -V[0, 12] - 0.0001+ objc]
	constraints += [lambda_3[0, 58] + 1.96*lambda_3[0, 78] + 1.4*lambda_3[0, 110] >= -V[0, 62]- objc]
	constraints += [lambda_3[0, 58] + 1.96*lambda_3[0, 78] + 1.4*lambda_3[0, 110] <= -V[0, 62]+ objc]
	constraints += [lambda_3[0, 59] + 1.96*lambda_3[0, 79] + 1.4*lambda_3[0, 111] >= -V[0, 63]- objc]
	constraints += [lambda_3[0, 59] + 1.96*lambda_3[0, 79] + 1.4*lambda_3[0, 111] <= -V[0, 63]+ objc]
	constraints += [lambda_3[0, 60] + 1.96*lambda_3[0, 80] + 1.4*lambda_3[0, 112] >= -V[0, 64]- objc]
	constraints += [lambda_3[0, 60] + 1.96*lambda_3[0, 80] + 1.4*lambda_3[0, 112] <= -V[0, 64]+ objc]
	constraints += [lambda_3[0, 18] + 2.744*lambda_3[0, 20] + 1.4*lambda_3[0, 76] + 1.96*lambda_3[0, 82] >= -V[0, 20]- objc]
	constraints += [lambda_3[0, 18] + 2.744*lambda_3[0, 20] + 1.4*lambda_3[0, 76] + 1.96*lambda_3[0, 82] <= -V[0, 20]+ objc]
	constraints += [lambda_3[0, 6] + 20*lambda_3[0, 13] + 300*lambda_3[0, 20] - lambda_3[0, 36] - lambda_3[0, 37] - 10*lambda_3[0, 38] - 10*lambda_3[0, 39] - 40*lambda_3[0, 40] - 40*lambda_3[0, 41] + lambda_3[0, 72] + lambda_3[0, 73] + 100*lambda_3[0, 74] + 100*lambda_3[0, 75] + 1600*lambda_3[0, 76] + 1600*lambda_3[0, 77] - 20*lambda_3[0, 78] - 20*lambda_3[0, 79] - 200*lambda_3[0, 80] - 200*lambda_3[0, 81] - 800*lambda_3[0, 82] - 800*lambda_3[0, 83] + lambda_3[0, 104] + 10*lambda_3[0, 105] + 10*lambda_3[0, 106] + 10*lambda_3[0, 107] + 10*lambda_3[0, 108] + 100*lambda_3[0, 109] + 40*lambda_3[0, 110] + 40*lambda_3[0, 111] + 400*lambda_3[0, 112] + 400*lambda_3[0, 113] + 40*lambda_3[0, 114] + 40*lambda_3[0, 115] + 400*lambda_3[0, 116] + 400*lambda_3[0, 117] + 1600*lambda_3[0, 118] >= -V[0, 5]- objc]
	constraints += [lambda_3[0, 6] + 20*lambda_3[0, 13] + 300*lambda_3[0, 20] - lambda_3[0, 36] - lambda_3[0, 37] - 10*lambda_3[0, 38] - 10*lambda_3[0, 39] - 40*lambda_3[0, 40] - 40*lambda_3[0, 41] + lambda_3[0, 72] + lambda_3[0, 73] + 100*lambda_3[0, 74] + 100*lambda_3[0, 75] + 1600*lambda_3[0, 76] + 1600*lambda_3[0, 77] - 20*lambda_3[0, 78] - 20*lambda_3[0, 79] - 200*lambda_3[0, 80] - 200*lambda_3[0, 81] - 800*lambda_3[0, 82] - 800*lambda_3[0, 83] + lambda_3[0, 104] + 10*lambda_3[0, 105] + 10*lambda_3[0, 106] + 10*lambda_3[0, 107] + 10*lambda_3[0, 108] + 100*lambda_3[0, 109] + 40*lambda_3[0, 110] + 40*lambda_3[0, 111] + 400*lambda_3[0, 112] + 400*lambda_3[0, 113] + 40*lambda_3[0, 114] + 40*lambda_3[0, 115] + 400*lambda_3[0, 116] + 400*lambda_3[0, 117] + 1600*lambda_3[0, 118] <= -V[0, 5]+ objc]
	constraints += [lambda_3[0, 36] - 2*lambda_3[0, 72] + 20*lambda_3[0, 78] - lambda_3[0, 104] - 10*lambda_3[0, 105] - 10*lambda_3[0, 107] - 40*lambda_3[0, 110] - 40*lambda_3[0, 114] >= -V[0, 31]- objc]
	constraints += [lambda_3[0, 36] - 2*lambda_3[0, 72] + 20*lambda_3[0, 78] - lambda_3[0, 104] - 10*lambda_3[0, 105] - 10*lambda_3[0, 107] - 40*lambda_3[0, 110] - 40*lambda_3[0, 114] <= -V[0, 31]+ objc]
	constraints += [lambda_3[0, 72] >= -V[0, 65]- objc]
	constraints += [lambda_3[0, 72] <= -V[0, 65]+ objc]
	constraints += [lambda_3[0, 37] - 2*lambda_3[0, 73] + 20*lambda_3[0, 79] - lambda_3[0, 104] - 10*lambda_3[0, 106] - 10*lambda_3[0, 108] - 40*lambda_3[0, 111] - 40*lambda_3[0, 115] >= -V[0, 32]- objc]
	constraints += [lambda_3[0, 37] - 2*lambda_3[0, 73] + 20*lambda_3[0, 79] - lambda_3[0, 104] - 10*lambda_3[0, 106] - 10*lambda_3[0, 108] - 40*lambda_3[0, 111] - 40*lambda_3[0, 115] <= -V[0, 32]+ objc]
	constraints += [lambda_3[0, 104] >= -V[0, 113]- objc]
	constraints += [lambda_3[0, 104] <= -V[0, 113]+ objc]
	constraints += [lambda_3[0, 73] >= -V[0, 66]- objc]
	constraints += [lambda_3[0, 73] <= -V[0, 66]+ objc]
	constraints += [lambda_3[0, 38] - 20*lambda_3[0, 74] + 20*lambda_3[0, 80] - lambda_3[0, 105] - lambda_3[0, 106] - 10*lambda_3[0, 109] - 40*lambda_3[0, 112] - 40*lambda_3[0, 116] >= -V[0, 33]- objc]
	constraints += [lambda_3[0, 38] - 20*lambda_3[0, 74] + 20*lambda_3[0, 80] - lambda_3[0, 105] - lambda_3[0, 106] - 10*lambda_3[0, 109] - 40*lambda_3[0, 112] - 40*lambda_3[0, 116] <= -V[0, 33]+ objc]
	constraints += [lambda_3[0, 105] >= -V[0, 114]- objc]
	constraints += [lambda_3[0, 105] <= -V[0, 114]+ objc]
	constraints += [lambda_3[0, 106] >= -V[0, 115]- objc]
	constraints += [lambda_3[0, 106] <= -V[0, 115]+ objc]
	constraints += [lambda_3[0, 74] >= -V[0, 67]- objc]
	constraints += [lambda_3[0, 74] <= -V[0, 67]+ objc]
	constraints += [2.8*lambda_3[0, 13] + 84.0*lambda_3[0, 20] + lambda_3[0, 40] - 80*lambda_3[0, 76] - 2.8*lambda_3[0, 78] - 2.8*lambda_3[0, 79] - 28.0*lambda_3[0, 80] - 28.0*lambda_3[0, 81] - 92.0*lambda_3[0, 82] - 112.0*lambda_3[0, 83] - lambda_3[0, 110] - lambda_3[0, 111] - 10*lambda_3[0, 112] - 10*lambda_3[0, 113] - 40*lambda_3[0, 118] >= -V[0, 34]- objc]
	constraints += [2.8*lambda_3[0, 13] + 84.0*lambda_3[0, 20] + lambda_3[0, 40] - 80*lambda_3[0, 76] - 2.8*lambda_3[0, 78] - 2.8*lambda_3[0, 79] - 28.0*lambda_3[0, 80] - 28.0*lambda_3[0, 81] - 92.0*lambda_3[0, 82] - 112.0*lambda_3[0, 83] - lambda_3[0, 110] - lambda_3[0, 111] - 10*lambda_3[0, 112] - 10*lambda_3[0, 113] - 40*lambda_3[0, 118] <= -V[0, 34]+ objc]
	constraints += [2.8*lambda_3[0, 78] + lambda_3[0, 110] >= -V[0, 116]- objc]
	constraints += [2.8*lambda_3[0, 78] + lambda_3[0, 110] <= -V[0, 116]+ objc]
	constraints += [2.8*lambda_3[0, 79] + lambda_3[0, 111] >= -V[0, 117]- objc]
	constraints += [2.8*lambda_3[0, 79] + lambda_3[0, 111] <= -V[0, 117]+ objc]
	constraints += [2.8*lambda_3[0, 80] + lambda_3[0, 112] >= -V[0, 118]- objc]
	constraints += [2.8*lambda_3[0, 80] + lambda_3[0, 112] <= -V[0, 118]+ objc]
	constraints += [5.88*lambda_3[0, 20] + lambda_3[0, 76] + 2.8*lambda_3[0, 82] >= -V[0, 68]- objc]
	constraints += [5.88*lambda_3[0, 20] + lambda_3[0, 76] + 2.8*lambda_3[0, 82] <= -V[0, 68]+ objc]
	constraints += [lambda_3[0, 13] + 30*lambda_3[0, 20] - lambda_3[0, 78] - lambda_3[0, 79] - 10*lambda_3[0, 80] - 10*lambda_3[0, 81] - 40*lambda_3[0, 82] - 40*lambda_3[0, 83] >= -V[0, 13] - 0.0001- objc]
	constraints += [lambda_3[0, 13] + 30*lambda_3[0, 20] - lambda_3[0, 78] - lambda_3[0, 79] - 10*lambda_3[0, 80] - 10*lambda_3[0, 81] - 40*lambda_3[0, 82] - 40*lambda_3[0, 83] <= -V[0, 13] - 0.0001+ objc]
	constraints += [lambda_3[0, 78] >= -V[0, 69]- objc]
	constraints += [lambda_3[0, 78] <= -V[0, 69]+ objc]
	constraints += [lambda_3[0, 79] >= -V[0, 70]- objc]
	constraints += [lambda_3[0, 79] <= -V[0, 70]+ objc]
	constraints += [lambda_3[0, 80] >= -V[0, 71]- objc]
	constraints += [lambda_3[0, 80] <= -V[0, 71]+ objc]
	constraints += [4.2*lambda_3[0, 20] + lambda_3[0, 82] >= -V[0, 72]- objc]
	constraints += [4.2*lambda_3[0, 20] + lambda_3[0, 82] <= -V[0, 72]+ objc]
	constraints += [lambda_3[0, 20] >= -V[0, 21]- objc]
	constraints += [lambda_3[0, 20] <= -V[0, 21]+ objc]
	constraints += [lambda_3[0, 3] - 20*lambda_3[0, 10] + 300*lambda_3[0, 17] - lambda_3[0, 24] - lambda_3[0, 25] - 10*lambda_3[0, 26] - 40*lambda_3[0, 30] - 40*lambda_3[0, 34] + 10*lambda_3[0, 39] + lambda_3[0, 48] + lambda_3[0, 49] + 100*lambda_3[0, 50] + 20*lambda_3[0, 51] + 20*lambda_3[0, 52] + 200*lambda_3[0, 53] + 800*lambda_3[0, 57] + 1600*lambda_3[0, 61] + 800*lambda_3[0, 65] + 1600*lambda_3[0, 70] - 200*lambda_3[0, 75] + 100*lambda_3[0, 81] + lambda_3[0, 85] + 10*lambda_3[0, 86] + 10*lambda_3[0, 87] + 40*lambda_3[0, 91] + 40*lambda_3[0, 92] + 400*lambda_3[0, 93] + 40*lambda_3[0, 97] + 40*lambda_3[0, 98] + 400*lambda_3[0, 99] + 1600*lambda_3[0, 103] - 10*lambda_3[0, 107] - 10*lambda_3[0, 108] - 100*lambda_3[0, 109] - 400*lambda_3[0, 113] - 400*lambda_3[0, 117] >= -V[0, 6]- objc]
	constraints += [lambda_3[0, 3] - 20*lambda_3[0, 10] + 300*lambda_3[0, 17] - lambda_3[0, 24] - lambda_3[0, 25] - 10*lambda_3[0, 26] - 40*lambda_3[0, 30] - 40*lambda_3[0, 34] + 10*lambda_3[0, 39] + lambda_3[0, 48] + lambda_3[0, 49] + 100*lambda_3[0, 50] + 20*lambda_3[0, 51] + 20*lambda_3[0, 52] + 200*lambda_3[0, 53] + 800*lambda_3[0, 57] + 1600*lambda_3[0, 61] + 800*lambda_3[0, 65] + 1600*lambda_3[0, 70] - 200*lambda_3[0, 75] + 100*lambda_3[0, 81] + lambda_3[0, 85] + 10*lambda_3[0, 86] + 10*lambda_3[0, 87] + 40*lambda_3[0, 91] + 40*lambda_3[0, 92] + 400*lambda_3[0, 93] + 40*lambda_3[0, 97] + 40*lambda_3[0, 98] + 400*lambda_3[0, 99] + 1600*lambda_3[0, 103] - 10*lambda_3[0, 107] - 10*lambda_3[0, 108] - 100*lambda_3[0, 109] - 400*lambda_3[0, 113] - 400*lambda_3[0, 117] <= -V[0, 6]+ objc]
	constraints += [lambda_3[0, 24] - 2*lambda_3[0, 48] - 20*lambda_3[0, 51] - lambda_3[0, 85] - 10*lambda_3[0, 86] - 40*lambda_3[0, 91] - 40*lambda_3[0, 97] + 10*lambda_3[0, 107] >= -V[0, 35]- objc]
	constraints += [lambda_3[0, 24] - 2*lambda_3[0, 48] - 20*lambda_3[0, 51] - lambda_3[0, 85] - 10*lambda_3[0, 86] - 40*lambda_3[0, 91] - 40*lambda_3[0, 97] + 10*lambda_3[0, 107] <= -V[0, 35]+ objc]
	constraints += [lambda_3[0, 48] >= -V[0, 73]- objc]
	constraints += [lambda_3[0, 48] <= -V[0, 73]+ objc]
	constraints += [lambda_3[0, 25] - 2*lambda_3[0, 49] - 20*lambda_3[0, 52] - lambda_3[0, 85] - 10*lambda_3[0, 87] - 40*lambda_3[0, 92] - 40*lambda_3[0, 98] + 10*lambda_3[0, 108] >= -V[0, 36]- objc]
	constraints += [lambda_3[0, 25] - 2*lambda_3[0, 49] - 20*lambda_3[0, 52] - lambda_3[0, 85] - 10*lambda_3[0, 87] - 40*lambda_3[0, 92] - 40*lambda_3[0, 98] + 10*lambda_3[0, 108] <= -V[0, 36]+ objc]
	constraints += [lambda_3[0, 85] >= -V[0, 119]- objc]
	constraints += [lambda_3[0, 85] <= -V[0, 119]+ objc]
	constraints += [lambda_3[0, 49] >= -V[0, 74]- objc]
	constraints += [lambda_3[0, 49] <= -V[0, 74]+ objc]
	constraints += [lambda_3[0, 26] - 20*lambda_3[0, 50] - 20*lambda_3[0, 53] - lambda_3[0, 86] - lambda_3[0, 87] - 40*lambda_3[0, 93] - 40*lambda_3[0, 99] + 10*lambda_3[0, 109] >= -V[0, 37]- objc]
	constraints += [lambda_3[0, 26] - 20*lambda_3[0, 50] - 20*lambda_3[0, 53] - lambda_3[0, 86] - lambda_3[0, 87] - 40*lambda_3[0, 93] - 40*lambda_3[0, 99] + 10*lambda_3[0, 109] <= -V[0, 37]+ objc]
	constraints += [lambda_3[0, 86] >= -V[0, 120]- objc]
	constraints += [lambda_3[0, 86] <= -V[0, 120]+ objc]
	constraints += [lambda_3[0, 87] >= -V[0, 121]- objc]
	constraints += [lambda_3[0, 87] <= -V[0, 121]+ objc]
	constraints += [lambda_3[0, 50] >= -V[0, 75]- objc]
	constraints += [lambda_3[0, 50] <= -V[0, 75]+ objc]
	constraints += [lambda_3[0, 30] + 1.4*lambda_3[0, 39] - 20*lambda_3[0, 57] - 80*lambda_3[0, 61] - 28.0*lambda_3[0, 75] + 28.0*lambda_3[0, 81] - lambda_3[0, 91] - lambda_3[0, 92] - 10*lambda_3[0, 93] - 40*lambda_3[0, 103] - 1.4*lambda_3[0, 107] - 1.4*lambda_3[0, 108] - 14.0*lambda_3[0, 109] - 46.0*lambda_3[0, 113] - 56.0*lambda_3[0, 117] >= -V[0, 38]- objc]
	constraints += [lambda_3[0, 30] + 1.4*lambda_3[0, 39] - 20*lambda_3[0, 57] - 80*lambda_3[0, 61] - 28.0*lambda_3[0, 75] + 28.0*lambda_3[0, 81] - lambda_3[0, 91] - lambda_3[0, 92] - 10*lambda_3[0, 93] - 40*lambda_3[0, 103] - 1.4*lambda_3[0, 107] - 1.4*lambda_3[0, 108] - 14.0*lambda_3[0, 109] - 46.0*lambda_3[0, 113] - 56.0*lambda_3[0, 117] <= -V[0, 38]+ objc]
	constraints += [lambda_3[0, 91] + 1.4*lambda_3[0, 107] >= -V[0, 122]- objc]
	constraints += [lambda_3[0, 91] + 1.4*lambda_3[0, 107] <= -V[0, 122]+ objc]
	constraints += [lambda_3[0, 92] + 1.4*lambda_3[0, 108] >= -V[0, 123]- objc]
	constraints += [lambda_3[0, 92] + 1.4*lambda_3[0, 108] <= -V[0, 123]+ objc]
	constraints += [lambda_3[0, 93] + 1.4*lambda_3[0, 109] >= -V[0, 124]- objc]
	constraints += [lambda_3[0, 93] + 1.4*lambda_3[0, 109] <= -V[0, 124]+ objc]
	constraints += [lambda_3[0, 61] + 1.96*lambda_3[0, 81] + 1.4*lambda_3[0, 113] >= -V[0, 76]- objc]
	constraints += [lambda_3[0, 61] + 1.96*lambda_3[0, 81] + 1.4*lambda_3[0, 113] <= -V[0, 76]+ objc]
	constraints += [lambda_3[0, 39] - 20*lambda_3[0, 75] + 20*lambda_3[0, 81] - lambda_3[0, 107] - lambda_3[0, 108] - 10*lambda_3[0, 109] - 40*lambda_3[0, 113] - 40*lambda_3[0, 117] >= -V[0, 39]- objc]
	constraints += [lambda_3[0, 39] - 20*lambda_3[0, 75] + 20*lambda_3[0, 81] - lambda_3[0, 107] - lambda_3[0, 108] - 10*lambda_3[0, 109] - 40*lambda_3[0, 113] - 40*lambda_3[0, 117] <= -V[0, 39]+ objc]
	constraints += [lambda_3[0, 107] >= -V[0, 125]- objc]
	constraints += [lambda_3[0, 107] <= -V[0, 125]+ objc]
	constraints += [lambda_3[0, 108] >= -V[0, 126]- objc]
	constraints += [lambda_3[0, 108] <= -V[0, 126]+ objc]
	constraints += [lambda_3[0, 109] >= -V[0, 127]- objc]
	constraints += [lambda_3[0, 109] <= -V[0, 127]+ objc]
	constraints += [2.8*lambda_3[0, 81] + lambda_3[0, 113] >= -V[0, 128]- objc]
	constraints += [2.8*lambda_3[0, 81] + lambda_3[0, 113] <= -V[0, 128]+ objc]
	constraints += [lambda_3[0, 81] >= -V[0, 77]- objc]
	constraints += [lambda_3[0, 81] <= -V[0, 77]+ objc]
	constraints += [lambda_3[0, 10] - 30*lambda_3[0, 17] - lambda_3[0, 51] - lambda_3[0, 52] - 10*lambda_3[0, 53] - 40*lambda_3[0, 57] - 40*lambda_3[0, 65] + 10*lambda_3[0, 75] >= -V[0, 14] - 0.0001- objc]
	constraints += [lambda_3[0, 10] - 30*lambda_3[0, 17] - lambda_3[0, 51] - lambda_3[0, 52] - 10*lambda_3[0, 53] - 40*lambda_3[0, 57] - 40*lambda_3[0, 65] + 10*lambda_3[0, 75] <= -V[0, 14] - 0.0001+ objc]
	constraints += [lambda_3[0, 51] >= -V[0, 78]- objc]
	constraints += [lambda_3[0, 51] <= -V[0, 78]+ objc]
	constraints += [lambda_3[0, 52] >= -V[0, 79]- objc]
	constraints += [lambda_3[0, 52] <= -V[0, 79]+ objc]
	constraints += [lambda_3[0, 53] >= -V[0, 80]- objc]
	constraints += [lambda_3[0, 53] <= -V[0, 80]+ objc]
	constraints += [lambda_3[0, 57] + 1.4*lambda_3[0, 75] >= -V[0, 81]- objc]
	constraints += [lambda_3[0, 57] + 1.4*lambda_3[0, 75] <= -V[0, 81]+ objc]
	constraints += [lambda_3[0, 75] >= -V[0, 82]- objc]
	constraints += [lambda_3[0, 75] <= -V[0, 82]+ objc]
	constraints += [lambda_3[0, 17] >= -V[0, 22]- objc]
	constraints += [lambda_3[0, 17] <= -V[0, 22]+ objc]
	constraints += [lambda_3[0, 5] - 80*lambda_3[0, 12] + 4800*lambda_3[0, 19] - lambda_3[0, 31] - lambda_3[0, 32] - 10*lambda_3[0, 33] - 10*lambda_3[0, 34] - 40*lambda_3[0, 35] + 10*lambda_3[0, 41] + lambda_3[0, 62] + lambda_3[0, 63] + 100*lambda_3[0, 64] + 100*lambda_3[0, 65] + 1600*lambda_3[0, 66] + 80*lambda_3[0, 67] + 80*lambda_3[0, 68] + 800*lambda_3[0, 69] + 800*lambda_3[0, 70] + 3200*lambda_3[0, 71] - 800*lambda_3[0, 77] + 100*lambda_3[0, 83] + lambda_3[0, 94] + 10*lambda_3[0, 95] + 10*lambda_3[0, 96] + 10*lambda_3[0, 97] + 10*lambda_3[0, 98] + 100*lambda_3[0, 99] + 40*lambda_3[0, 100] + 40*lambda_3[0, 101] + 400*lambda_3[0, 102] + 400*lambda_3[0, 103] - 10*lambda_3[0, 114] - 10*lambda_3[0, 115] - 100*lambda_3[0, 116] - 100*lambda_3[0, 117] - 400*lambda_3[0, 118] >= -V[0, 7]- objc]
	constraints += [lambda_3[0, 5] - 80*lambda_3[0, 12] + 4800*lambda_3[0, 19] - lambda_3[0, 31] - lambda_3[0, 32] - 10*lambda_3[0, 33] - 10*lambda_3[0, 34] - 40*lambda_3[0, 35] + 10*lambda_3[0, 41] + lambda_3[0, 62] + lambda_3[0, 63] + 100*lambda_3[0, 64] + 100*lambda_3[0, 65] + 1600*lambda_3[0, 66] + 80*lambda_3[0, 67] + 80*lambda_3[0, 68] + 800*lambda_3[0, 69] + 800*lambda_3[0, 70] + 3200*lambda_3[0, 71] - 800*lambda_3[0, 77] + 100*lambda_3[0, 83] + lambda_3[0, 94] + 10*lambda_3[0, 95] + 10*lambda_3[0, 96] + 10*lambda_3[0, 97] + 10*lambda_3[0, 98] + 100*lambda_3[0, 99] + 40*lambda_3[0, 100] + 40*lambda_3[0, 101] + 400*lambda_3[0, 102] + 400*lambda_3[0, 103] - 10*lambda_3[0, 114] - 10*lambda_3[0, 115] - 100*lambda_3[0, 116] - 100*lambda_3[0, 117] - 400*lambda_3[0, 118] <= -V[0, 7]+ objc]
	constraints += [lambda_3[0, 31] - 2*lambda_3[0, 62] - 80*lambda_3[0, 67] - lambda_3[0, 94] - 10*lambda_3[0, 95] - 10*lambda_3[0, 97] - 40*lambda_3[0, 100] + 10*lambda_3[0, 114] >= -V[0, 40]- objc]
	constraints += [lambda_3[0, 31] - 2*lambda_3[0, 62] - 80*lambda_3[0, 67] - lambda_3[0, 94] - 10*lambda_3[0, 95] - 10*lambda_3[0, 97] - 40*lambda_3[0, 100] + 10*lambda_3[0, 114] <= -V[0, 40]+ objc]
	constraints += [lambda_3[0, 62] >= -V[0, 83]- objc]
	constraints += [lambda_3[0, 62] <= -V[0, 83]+ objc]
	constraints += [lambda_3[0, 32] - 2*lambda_3[0, 63] - 80*lambda_3[0, 68] - lambda_3[0, 94] - 10*lambda_3[0, 96] - 10*lambda_3[0, 98] - 40*lambda_3[0, 101] + 10*lambda_3[0, 115] >= -V[0, 41]- objc]
	constraints += [lambda_3[0, 32] - 2*lambda_3[0, 63] - 80*lambda_3[0, 68] - lambda_3[0, 94] - 10*lambda_3[0, 96] - 10*lambda_3[0, 98] - 40*lambda_3[0, 101] + 10*lambda_3[0, 115] <= -V[0, 41]+ objc]
	constraints += [lambda_3[0, 94] >= -V[0, 129]- objc]
	constraints += [lambda_3[0, 94] <= -V[0, 129]+ objc]
	constraints += [lambda_3[0, 63] >= -V[0, 84]- objc]
	constraints += [lambda_3[0, 63] <= -V[0, 84]+ objc]
	constraints += [lambda_3[0, 33] - 20*lambda_3[0, 64] - 80*lambda_3[0, 69] - lambda_3[0, 95] - lambda_3[0, 96] - 10*lambda_3[0, 99] - 40*lambda_3[0, 102] + 10*lambda_3[0, 116] >= -V[0, 42]- objc]
	constraints += [lambda_3[0, 33] - 20*lambda_3[0, 64] - 80*lambda_3[0, 69] - lambda_3[0, 95] - lambda_3[0, 96] - 10*lambda_3[0, 99] - 40*lambda_3[0, 102] + 10*lambda_3[0, 116] <= -V[0, 42]+ objc]
	constraints += [lambda_3[0, 95] >= -V[0, 130]- objc]
	constraints += [lambda_3[0, 95] <= -V[0, 130]+ objc]
	constraints += [lambda_3[0, 96] >= -V[0, 131]- objc]
	constraints += [lambda_3[0, 96] <= -V[0, 131]+ objc]
	constraints += [lambda_3[0, 64] >= -V[0, 85]- objc]
	constraints += [lambda_3[0, 64] <= -V[0, 85]+ objc]
	constraints += [lambda_3[0, 35] + 1.4*lambda_3[0, 41] - 80*lambda_3[0, 66] - 80*lambda_3[0, 71] - 112.0*lambda_3[0, 77] + 28.0*lambda_3[0, 83] - lambda_3[0, 100] - lambda_3[0, 101] - 10*lambda_3[0, 102] - 10*lambda_3[0, 103] - 1.4*lambda_3[0, 114] - 1.4*lambda_3[0, 115] - 14.0*lambda_3[0, 116] - 14.0*lambda_3[0, 117] - 46.0*lambda_3[0, 118] >= -V[0, 43]- objc]
	constraints += [lambda_3[0, 35] + 1.4*lambda_3[0, 41] - 80*lambda_3[0, 66] - 80*lambda_3[0, 71] - 112.0*lambda_3[0, 77] + 28.0*lambda_3[0, 83] - lambda_3[0, 100] - lambda_3[0, 101] - 10*lambda_3[0, 102] - 10*lambda_3[0, 103] - 1.4*lambda_3[0, 114] - 1.4*lambda_3[0, 115] - 14.0*lambda_3[0, 116] - 14.0*lambda_3[0, 117] - 46.0*lambda_3[0, 118] <= -V[0, 43]+ objc]
	constraints += [lambda_3[0, 100] + 1.4*lambda_3[0, 114] >= -V[0, 132]- objc]
	constraints += [lambda_3[0, 100] + 1.4*lambda_3[0, 114] <= -V[0, 132]+ objc]
	constraints += [lambda_3[0, 101] + 1.4*lambda_3[0, 115] >= -V[0, 133]- objc]
	constraints += [lambda_3[0, 101] + 1.4*lambda_3[0, 115] <= -V[0, 133]+ objc]
	constraints += [lambda_3[0, 102] + 1.4*lambda_3[0, 116] >= -V[0, 134]- objc]
	constraints += [lambda_3[0, 102] + 1.4*lambda_3[0, 116] <= -V[0, 134]+ objc]
	constraints += [lambda_3[0, 66] + 1.96*lambda_3[0, 83] + 1.4*lambda_3[0, 118] >= -V[0, 86]- objc]
	constraints += [lambda_3[0, 66] + 1.96*lambda_3[0, 83] + 1.4*lambda_3[0, 118] <= -V[0, 86]+ objc]
	constraints += [lambda_3[0, 41] - 80*lambda_3[0, 77] + 20*lambda_3[0, 83] - lambda_3[0, 114] - lambda_3[0, 115] - 10*lambda_3[0, 116] - 10*lambda_3[0, 117] - 40*lambda_3[0, 118] >= -V[0, 44]- objc]
	constraints += [lambda_3[0, 41] - 80*lambda_3[0, 77] + 20*lambda_3[0, 83] - lambda_3[0, 114] - lambda_3[0, 115] - 10*lambda_3[0, 116] - 10*lambda_3[0, 117] - 40*lambda_3[0, 118] <= -V[0, 44]+ objc]
	constraints += [lambda_3[0, 114] >= -V[0, 135]- objc]
	constraints += [lambda_3[0, 114] <= -V[0, 135]+ objc]
	constraints += [lambda_3[0, 115] >= -V[0, 136]- objc]
	constraints += [lambda_3[0, 115] <= -V[0, 136]+ objc]
	constraints += [lambda_3[0, 116] >= -V[0, 137]- objc]
	constraints += [lambda_3[0, 116] <= -V[0, 137]+ objc]
	constraints += [2.8*lambda_3[0, 83] + lambda_3[0, 118] >= -V[0, 138]- objc]
	constraints += [2.8*lambda_3[0, 83] + lambda_3[0, 118] <= -V[0, 138]+ objc]
	constraints += [lambda_3[0, 83] >= -V[0, 87]- objc]
	constraints += [lambda_3[0, 83] <= -V[0, 87]+ objc]
	constraints += [lambda_3[0, 34] - 20*lambda_3[0, 65] - 80*lambda_3[0, 70] - lambda_3[0, 97] - lambda_3[0, 98] - 10*lambda_3[0, 99] - 40*lambda_3[0, 103] + 10*lambda_3[0, 117] >= -V[0, 45]- objc]
	constraints += [lambda_3[0, 34] - 20*lambda_3[0, 65] - 80*lambda_3[0, 70] - lambda_3[0, 97] - lambda_3[0, 98] - 10*lambda_3[0, 99] - 40*lambda_3[0, 103] + 10*lambda_3[0, 117] <= -V[0, 45]+ objc]
	constraints += [lambda_3[0, 97] >= -V[0, 139]- objc]
	constraints += [lambda_3[0, 97] <= -V[0, 139]+ objc]
	constraints += [lambda_3[0, 98] >= -V[0, 140]- objc]
	constraints += [lambda_3[0, 98] <= -V[0, 140]+ objc]
	constraints += [lambda_3[0, 99] >= -V[0, 141]- objc]
	constraints += [lambda_3[0, 99] <= -V[0, 141]+ objc]
	constraints += [lambda_3[0, 103] + 1.4*lambda_3[0, 117] >= -V[0, 142]- objc]
	constraints += [lambda_3[0, 103] + 1.4*lambda_3[0, 117] <= -V[0, 142]+ objc]
	constraints += [lambda_3[0, 117] >= -V[0, 143]- objc]
	constraints += [lambda_3[0, 117] <= -V[0, 143]+ objc]
	constraints += [lambda_3[0, 65] >= -V[0, 88]- objc]
	constraints += [lambda_3[0, 65] <= -V[0, 88]+ objc]
	constraints += [lambda_3[0, 12] - 120*lambda_3[0, 19] - lambda_3[0, 67] - lambda_3[0, 68] - 10*lambda_3[0, 69] - 10*lambda_3[0, 70] - 40*lambda_3[0, 71] + 10*lambda_3[0, 77] >= -V[0, 15] - 0.0001- objc]
	constraints += [lambda_3[0, 12] - 120*lambda_3[0, 19] - lambda_3[0, 67] - lambda_3[0, 68] - 10*lambda_3[0, 69] - 10*lambda_3[0, 70] - 40*lambda_3[0, 71] + 10*lambda_3[0, 77] <= -V[0, 15] - 0.0001+ objc]
	constraints += [lambda_3[0, 67] >= -V[0, 89]- objc]
	constraints += [lambda_3[0, 67] <= -V[0, 89]+ objc]
	constraints += [lambda_3[0, 68] >= -V[0, 90]- objc]
	constraints += [lambda_3[0, 68] <= -V[0, 90]+ objc]
	constraints += [lambda_3[0, 69] >= -V[0, 91]- objc]
	constraints += [lambda_3[0, 69] <= -V[0, 91]+ objc]
	constraints += [lambda_3[0, 71] + 1.4*lambda_3[0, 77] >= -V[0, 92]- objc]
	constraints += [lambda_3[0, 71] + 1.4*lambda_3[0, 77] <= -V[0, 92]+ objc]
	constraints += [lambda_3[0, 77] >= -V[0, 93]- objc]
	constraints += [lambda_3[0, 77] <= -V[0, 93]+ objc]
	constraints += [lambda_3[0, 70] >= -V[0, 94]- objc]
	constraints += [lambda_3[0, 70] <= -V[0, 94]+ objc]
	constraints += [lambda_3[0, 19] >= -V[0, 23]- objc]
	constraints += [lambda_3[0, 19] <= -V[0, 23]+ objc]
	constraints += [-lambda_3[0, 6] - 20*lambda_3[0, 13] - 300*lambda_3[0, 20] + lambda_3[0, 36] + lambda_3[0, 37] + 10*lambda_3[0, 38] + 10*lambda_3[0, 39] + 40*lambda_3[0, 40] + 40*lambda_3[0, 41] - lambda_3[0, 72] - lambda_3[0, 73] - 100*lambda_3[0, 74] - 100*lambda_3[0, 75] - 1600*lambda_3[0, 76] - 1600*lambda_3[0, 77] + 20*lambda_3[0, 78] + 20*lambda_3[0, 79] + 200*lambda_3[0, 80] + 200*lambda_3[0, 81] + 800*lambda_3[0, 82] + 800*lambda_3[0, 83] - lambda_3[0, 104] - 10*lambda_3[0, 105] - 10*lambda_3[0, 106] - 10*lambda_3[0, 107] - 10*lambda_3[0, 108] - 100*lambda_3[0, 109] - 40*lambda_3[0, 110] - 40*lambda_3[0, 111] - 400*lambda_3[0, 112] - 400*lambda_3[0, 113] - 40*lambda_3[0, 114] - 40*lambda_3[0, 115] - 400*lambda_3[0, 116] - 400*lambda_3[0, 117] - 1600*lambda_3[0, 118] >= -V[0, 8]- objc]
	constraints += [-lambda_3[0, 6] - 20*lambda_3[0, 13] - 300*lambda_3[0, 20] + lambda_3[0, 36] + lambda_3[0, 37] + 10*lambda_3[0, 38] + 10*lambda_3[0, 39] + 40*lambda_3[0, 40] + 40*lambda_3[0, 41] - lambda_3[0, 72] - lambda_3[0, 73] - 100*lambda_3[0, 74] - 100*lambda_3[0, 75] - 1600*lambda_3[0, 76] - 1600*lambda_3[0, 77] + 20*lambda_3[0, 78] + 20*lambda_3[0, 79] + 200*lambda_3[0, 80] + 200*lambda_3[0, 81] + 800*lambda_3[0, 82] + 800*lambda_3[0, 83] - lambda_3[0, 104] - 10*lambda_3[0, 105] - 10*lambda_3[0, 106] - 10*lambda_3[0, 107] - 10*lambda_3[0, 108] - 100*lambda_3[0, 109] - 40*lambda_3[0, 110] - 40*lambda_3[0, 111] - 400*lambda_3[0, 112] - 400*lambda_3[0, 113] - 40*lambda_3[0, 114] - 40*lambda_3[0, 115] - 400*lambda_3[0, 116] - 400*lambda_3[0, 117] - 1600*lambda_3[0, 118] <= -V[0, 8]+ objc]
	constraints += [-lambda_3[0, 36] + 2*lambda_3[0, 72] - 20*lambda_3[0, 78] + lambda_3[0, 104] + 10*lambda_3[0, 105] + 10*lambda_3[0, 107] + 40*lambda_3[0, 110] + 40*lambda_3[0, 114] >= -V[0, 46]- objc]
	constraints += [-lambda_3[0, 36] + 2*lambda_3[0, 72] - 20*lambda_3[0, 78] + lambda_3[0, 104] + 10*lambda_3[0, 105] + 10*lambda_3[0, 107] + 40*lambda_3[0, 110] + 40*lambda_3[0, 114] <= -V[0, 46]+ objc]
	constraints += [-lambda_3[0, 72] >= -V[0, 95]- objc]
	constraints += [-lambda_3[0, 72] <= -V[0, 95]+ objc]
	constraints += [-lambda_3[0, 37] + 2*lambda_3[0, 73] - 20*lambda_3[0, 79] + lambda_3[0, 104] + 10*lambda_3[0, 106] + 10*lambda_3[0, 108] + 40*lambda_3[0, 111] + 40*lambda_3[0, 115] >= -V[0, 47]- objc]
	constraints += [-lambda_3[0, 37] + 2*lambda_3[0, 73] - 20*lambda_3[0, 79] + lambda_3[0, 104] + 10*lambda_3[0, 106] + 10*lambda_3[0, 108] + 40*lambda_3[0, 111] + 40*lambda_3[0, 115] <= -V[0, 47]+ objc]
	constraints += [-lambda_3[0, 104] >= -V[0, 144]- objc]
	constraints += [-lambda_3[0, 104] <= -V[0, 144]+ objc]
	constraints += [-lambda_3[0, 73] >= -V[0, 96]- objc]
	constraints += [-lambda_3[0, 73] <= -V[0, 96]+ objc]
	constraints += [-lambda_3[0, 38] + 20*lambda_3[0, 74] - 20*lambda_3[0, 80] + lambda_3[0, 105] + lambda_3[0, 106] + 10*lambda_3[0, 109] + 40*lambda_3[0, 112] + 40*lambda_3[0, 116] >= -V[0, 48]- objc]
	constraints += [-lambda_3[0, 38] + 20*lambda_3[0, 74] - 20*lambda_3[0, 80] + lambda_3[0, 105] + lambda_3[0, 106] + 10*lambda_3[0, 109] + 40*lambda_3[0, 112] + 40*lambda_3[0, 116] <= -V[0, 48]+ objc]
	constraints += [-lambda_3[0, 105] >= -V[0, 145]- objc]
	constraints += [-lambda_3[0, 105] <= -V[0, 145]+ objc]
	constraints += [-lambda_3[0, 106] >= -V[0, 146]- objc]
	constraints += [-lambda_3[0, 106] <= -V[0, 146]+ objc]
	constraints += [-lambda_3[0, 74] >= -V[0, 97]- objc]
	constraints += [-lambda_3[0, 74] <= -V[0, 97]+ objc]
	constraints += [-2.8*lambda_3[0, 13] - 84.0*lambda_3[0, 20] - lambda_3[0, 40] + 80*lambda_3[0, 76] + 2.8*lambda_3[0, 78] + 2.8*lambda_3[0, 79] + 28.0*lambda_3[0, 80] + 28.0*lambda_3[0, 81] + 92.0*lambda_3[0, 82] + 112.0*lambda_3[0, 83] + lambda_3[0, 110] + lambda_3[0, 111] + 10*lambda_3[0, 112] + 10*lambda_3[0, 113] + 40*lambda_3[0, 118] >= -V[0, 49]- objc]
	constraints += [-2.8*lambda_3[0, 13] - 84.0*lambda_3[0, 20] - lambda_3[0, 40] + 80*lambda_3[0, 76] + 2.8*lambda_3[0, 78] + 2.8*lambda_3[0, 79] + 28.0*lambda_3[0, 80] + 28.0*lambda_3[0, 81] + 92.0*lambda_3[0, 82] + 112.0*lambda_3[0, 83] + lambda_3[0, 110] + lambda_3[0, 111] + 10*lambda_3[0, 112] + 10*lambda_3[0, 113] + 40*lambda_3[0, 118] <= -V[0, 49]+ objc]
	constraints += [-2.8*lambda_3[0, 78] - lambda_3[0, 110] >= -V[0, 147]- objc]
	constraints += [-2.8*lambda_3[0, 78] - lambda_3[0, 110] <= -V[0, 147]+ objc]
	constraints += [-2.8*lambda_3[0, 79] - lambda_3[0, 111] >= -V[0, 148]- objc]
	constraints += [-2.8*lambda_3[0, 79] - lambda_3[0, 111] <= -V[0, 148]+ objc]
	constraints += [-2.8*lambda_3[0, 80] - lambda_3[0, 112] >= -V[0, 149]- objc]
	constraints += [-2.8*lambda_3[0, 80] - lambda_3[0, 112] <= -V[0, 149]+ objc]
	constraints += [-5.88*lambda_3[0, 20] - lambda_3[0, 76] - 2.8*lambda_3[0, 82] >= -V[0, 98]- objc]
	constraints += [-5.88*lambda_3[0, 20] - lambda_3[0, 76] - 2.8*lambda_3[0, 82] <= -V[0, 98]+ objc]
	constraints += [-2*lambda_3[0, 13] - 60*lambda_3[0, 20] + 2*lambda_3[0, 78] + 2*lambda_3[0, 79] + 20*lambda_3[0, 80] + 20*lambda_3[0, 81] + 80*lambda_3[0, 82] + 80*lambda_3[0, 83] >= -V[0, 50]- objc]
	constraints += [-2*lambda_3[0, 13] - 60*lambda_3[0, 20] + 2*lambda_3[0, 78] + 2*lambda_3[0, 79] + 20*lambda_3[0, 80] + 20*lambda_3[0, 81] + 80*lambda_3[0, 82] + 80*lambda_3[0, 83] <= -V[0, 50]+ objc]
	constraints += [-2*lambda_3[0, 78] >= -V[0, 150]- objc]
	constraints += [-2*lambda_3[0, 78] <= -V[0, 150]+ objc]
	constraints += [-2*lambda_3[0, 79] >= -V[0, 151]- objc]
	constraints += [-2*lambda_3[0, 79] <= -V[0, 151]+ objc]
	constraints += [-2*lambda_3[0, 80] >= -V[0, 152]- objc]
	constraints += [-2*lambda_3[0, 80] <= -V[0, 152]+ objc]
	constraints += [-8.4*lambda_3[0, 20] - 2*lambda_3[0, 82] >= -V[0, 153]- objc]
	constraints += [-8.4*lambda_3[0, 20] - 2*lambda_3[0, 82] <= -V[0, 153]+ objc]
	constraints += [-3*lambda_3[0, 20] >= -V[0, 99]- objc]
	constraints += [-3*lambda_3[0, 20] <= -V[0, 99]+ objc]
	constraints += [-lambda_3[0, 39] + 20*lambda_3[0, 75] - 20*lambda_3[0, 81] + lambda_3[0, 107] + lambda_3[0, 108] + 10*lambda_3[0, 109] + 40*lambda_3[0, 113] + 40*lambda_3[0, 117] >= -V[0, 51]- objc]
	constraints += [-lambda_3[0, 39] + 20*lambda_3[0, 75] - 20*lambda_3[0, 81] + lambda_3[0, 107] + lambda_3[0, 108] + 10*lambda_3[0, 109] + 40*lambda_3[0, 113] + 40*lambda_3[0, 117] <= -V[0, 51]+ objc]
	constraints += [-lambda_3[0, 107] >= -V[0, 154]- objc]
	constraints += [-lambda_3[0, 107] <= -V[0, 154]+ objc]
	constraints += [-lambda_3[0, 108] >= -V[0, 155]- objc]
	constraints += [-lambda_3[0, 108] <= -V[0, 155]+ objc]
	constraints += [-lambda_3[0, 109] >= -V[0, 156]- objc]
	constraints += [-lambda_3[0, 109] <= -V[0, 156]+ objc]
	constraints += [-2.8*lambda_3[0, 81] - lambda_3[0, 113] >= -V[0, 157]- objc]
	constraints += [-2.8*lambda_3[0, 81] - lambda_3[0, 113] <= -V[0, 157]+ objc]
	constraints += [-2*lambda_3[0, 81] >= -V[0, 158]- objc]
	constraints += [-2*lambda_3[0, 81] <= -V[0, 158]+ objc]
	constraints += [-lambda_3[0, 75] >= -V[0, 100]- objc]
	constraints += [-lambda_3[0, 75] <= -V[0, 100]+ objc]
	constraints += [-lambda_3[0, 41] + 80*lambda_3[0, 77] - 20*lambda_3[0, 83] + lambda_3[0, 114] + lambda_3[0, 115] + 10*lambda_3[0, 116] + 10*lambda_3[0, 117] + 40*lambda_3[0, 118] >= -V[0, 52]- objc]
	constraints += [-lambda_3[0, 41] + 80*lambda_3[0, 77] - 20*lambda_3[0, 83] + lambda_3[0, 114] + lambda_3[0, 115] + 10*lambda_3[0, 116] + 10*lambda_3[0, 117] + 40*lambda_3[0, 118] <= -V[0, 52]+ objc]
	constraints += [-lambda_3[0, 114] >= -V[0, 159]- objc]
	constraints += [-lambda_3[0, 114] <= -V[0, 159]+ objc]
	constraints += [-lambda_3[0, 115] >= -V[0, 160]- objc]
	constraints += [-lambda_3[0, 115] <= -V[0, 160]+ objc]
	constraints += [-lambda_3[0, 116] >= -V[0, 161]- objc]
	constraints += [-lambda_3[0, 116] <= -V[0, 161]+ objc]
	constraints += [-2.8*lambda_3[0, 83] - lambda_3[0, 118] >= -V[0, 162]- objc]
	constraints += [-2.8*lambda_3[0, 83] - lambda_3[0, 118] <= -V[0, 162]+ objc]
	constraints += [-2*lambda_3[0, 83] >= -V[0, 163]- objc]
	constraints += [-2*lambda_3[0, 83] <= -V[0, 163]+ objc]
	constraints += [-lambda_3[0, 117] >= -V[0, 164]- objc]
	constraints += [-lambda_3[0, 117] <= -V[0, 164]+ objc]
	constraints += [-lambda_3[0, 77] >= -V[0, 101]- objc]
	constraints += [-lambda_3[0, 77] <= -V[0, 101]+ objc]
	constraints += [lambda_3[0, 13] + 30*lambda_3[0, 20] - lambda_3[0, 78] - lambda_3[0, 79] - 10*lambda_3[0, 80] - 10*lambda_3[0, 81] - 40*lambda_3[0, 82] - 40*lambda_3[0, 83] >= -V[0, 16] - 0.0001- objc]
	constraints += [lambda_3[0, 13] + 30*lambda_3[0, 20] - lambda_3[0, 78] - lambda_3[0, 79] - 10*lambda_3[0, 80] - 10*lambda_3[0, 81] - 40*lambda_3[0, 82] - 40*lambda_3[0, 83] <= -V[0, 16] - 0.0001+ objc]
	constraints += [lambda_3[0, 78] >= -V[0, 102]- objc]
	constraints += [lambda_3[0, 78] <= -V[0, 102]+ objc]
	constraints += [lambda_3[0, 79] >= -V[0, 103]- objc]
	constraints += [lambda_3[0, 79] <= -V[0, 103]+ objc]
	constraints += [lambda_3[0, 80] >= -V[0, 104]- objc]
	constraints += [lambda_3[0, 80] <= -V[0, 104]+ objc]
	constraints += [4.2*lambda_3[0, 20] + lambda_3[0, 82] >= -V[0, 105]- objc]
	constraints += [4.2*lambda_3[0, 20] + lambda_3[0, 82] <= -V[0, 105]+ objc]
	constraints += [3*lambda_3[0, 20] >= -V[0, 106]- objc]
	constraints += [3*lambda_3[0, 20] <= -V[0, 106]+ objc]
	constraints += [lambda_3[0, 81] >= -V[0, 107]- objc]
	constraints += [lambda_3[0, 81] <= -V[0, 107]+ objc]
	constraints += [lambda_3[0, 83] >= -V[0, 108]- objc]
	constraints += [lambda_3[0, 83] <= -V[0, 108]+ objc]
	constraints += [-lambda_3[0, 20] >= -V[0, 24]- objc]
	constraints += [-lambda_3[0, 20] <= -V[0, 24]+ objc]
	
	problem = cp.Problem(objective, constraints)
	assert problem.is_dcp()
	assert problem.is_dpp()
	
	# print(t0.shape)
	c0 = np.reshape(c0, (1, 3))
	theta_t0 = torch.from_numpy(c0).float()
	theta_t0.requires_grad = True


	# print("pass the reshaping phase!")
	

	layer = CvxpyLayer(problem, parameters=[t0], variables=[lambda_1, lambda_2, lambda_3, V, objc])
	lambda1_star, lambda2_star, lambda3_star, V_star, objc_star = layer(theta_t0)

	# torch.norm(objc_star).backward()
	objc_star.backward()

	# print("go through this phase!")

	V = V_star.detach().numpy()
	# m = m_star.detach().numpy()
	# n = n_star.detach().numpy()
	# print(V)
	timer.stop()
	initTest, unsafeTest, lieTest = BarrierTest(V, c0, l)
	# print("Not pass Barrier the certificates")
	return V, objc_star.detach().numpy(), theta_t0.grad.detach().numpy()[0], initTest, unsafeTest, lieTest



if __name__ == '__main__':
	# env = Quadrotor()
	# state, done = env.reset(), False
	# tra = []
	# while not done:
	# 	state, reward, done = env.step(0, 0, 0)
	# 	tra.append(state[6:9])
	# 	print(state, reward)

	# tra = np.array(tra)
	# plt.plot(tra[:, 0], label='x')
	# plt.plot(tra[:, 1], label='y')
	# plt.plot(tra[:, 2], label='z')
	# plt.legend()
	# plt.savefig('quadtest.png')

	def Barrier_SVG():
		l = -7.5
		control_param = np.array([0.0]*3)
		control_param = np.reshape(control_param, (1, 3))
		vtheta, state = SVG(control_param)
		weight = np.linspace(0, 500, 250)
		for i in range(100):
			BarGrad = np.array([0, 0, 0])
			# Bslack, Vslack = 100, 100
			Bslack = 0
			vtheta, final_state = SVG(control_param)
			timer = Timer()
			try: 
				B, Bslack, BarGrad, initTest, unsafeTest, BlieTest = BarrierLP(control_param, timer, l)
				print(i, initTest, unsafeTest, BlieTest, Bslack, BarGrad, vtheta, control_param)
				# print(B)
				if initTest and unsafeTest and BlieTest:
					print('Successfully learn a controller with its barrier certificate and Lyapunov function')
					print('Controller: ', control_param)
					print('Valid Barrier is: ', B)
					break
			except Exception as e:
				print(e)
			control_param += 1e-6 * np.clip(vtheta, -1e7, 1e7)
			control_param -= 1e11*BarGrad
			# control_param -= 0.1*np.sign(BarGrad)
			# control_param -= 2*np.clip(LyaGrad, -1, 1)
		SVG(control_param, view=True, V=B)



	def naive_SVG():
		control_param = np.array([0.0]*3)
		control_param = np.reshape(control_param, (1, 3))
		vtheta, state = SVG(control_param)
		for i in range(100):
			vtheta, final_state = SVG(control_param)
			print(control_param, vtheta)
			control_param += 1e-7 * np.clip(vtheta, -1e7, 1e7)
			# if i > 50:
			# 	control_param += 1e-4 * np.clip(vtheta, -1e4, 1e4)
		# print(final_state, vtheta, control_param)
		SVG(control_param, view=True)


	# BarrierConstraints()
	Barrier_SVG()
	# naive_SVG()