from calendar import c
from cmath import e
from this import d
import cvxpy as cp
import numpy as np
import numpy.random as npr
import scipy.sparse as sp
import torch
import scipy
import cvxpylayers
from cvxpylayers.torch.cvxpylayer import CvxpyLayer
import matplotlib.pyplot as plt
from sympy import MatrixSymbol, Matrix
from sympy import *
from itertools import *
import matplotlib.patches as mpatches
import numpy.linalg as LA
from handelman_utils import *
from timer import *


EPR = []
SVG_patch = mpatches.Patch(color='#ff7f0e', label='SVG')
Ours_patch = mpatches.Patch(color='#2ca02c', label='Ours')

class AttControl:
	deltaT = 0.1
	max_iteration = 100
	simul_per_step = 10

	def __init__(self):
		u = np.random.normal(0,1)
		v = np.random.normal(0,1)
		w = np.random.normal(0,1)
		m = np.random.normal(0,1)
		n = np.random.normal(0,1)
		k = np.random.normal(0,1)
		norm = (u*u + v*v + w*w + m*m + n*n + k*k)**(0.5)
		# print(norm, u,v,w,m,n,k)
		normlized_vector = [i / norm for i in (u,v,w,m,n,k)]
		self.x = np.array(normlized_vector)

	def reset(self):
		u = np.random.normal(0,1)
		v = np.random.normal(0,1)
		w = np.random.normal(0,1)
		m = np.random.normal(0,1)
		n = np.random.normal(0,1)
		k = np.random.normal(0,1)
		norm = (u*u + v*v + w*w + m*m + n*n + k*k)**(0.5)
		normlized_vector = [i / norm for i in (u,v,w,m,n,k)]
		self.x = np.array(normlized_vector)
		self.t = 0

		return self.x

	def step(self, u0, u1, u2):
		dt = self.deltaT / self.simul_per_step
		for _ in range(self.simul_per_step):
			a, b, c, d, e, f = self.x[0], self.x[1], self.x[2], self.x[3], self.x[4], self.x[5]

			a_new = a + dt*(0.25*(u0 + b*c))
			b_new = b + dt*(0.5*(u1 - 3*a*c))
			c_new = c + dt*(u2 + 2*a*b)
			
			d_new = d + dt*(0.5*(b*(d*e - f) + c*(d*f + e) + a*(d**2 + 1)))
			e_new = e + dt*(0.5*(a*(d*e + f) + c*(e*f - d) + b*(e**2 + 1)))
			f_new = f + dt*(0.5*(a*(d*f - e) + b*(e*f + d) + c*(f**2 + 1)))

			self.x = np.array([a_new, b_new, c_new, d_new, e_new, f_new])
		self.t += 1
		return self.x, -np.linalg.norm(self.x), self.t == self.max_iteration



def LyaLP(c0, c1, c2, timer, SVG_only=False):
	# X = cp.Variable((6, 6), symmetric=True)
	# Y = cp.Variable((28, 28), symmetric=True)
	timer.start()
	V = cp.Variable((1, 28))
	objc = cp.Variable()
	m = cp.Variable(pos=True)
	n = cp.Variable(pos=True)
	lambda_1 = cp.Variable((1, 209))
	lambda_2 = cp.Variable((1, 209))
	objective = cp.Minimize(objc)
	t0 = cp.Parameter((1, 9))
	t1 = cp.Parameter((1, 13))
	t2 = cp.Parameter((1, 16))
	
	constraints = []

	if SVG_only:
		constraints += [ objc == 0 ]

	constraints += [objc >= 0]

	constraints += [ lambda_1 >= 0 ]
	constraints += [ lambda_2 >= 0 ]

	#-------------------The initial conditions-------------------
	# constraints += [V[0, 0] == 0]
	constraints += [V[0, 0] >= 2*lambda_1[0, 0] + 2*lambda_1[0, 1] + 2*lambda_1[0, 2] + 2*lambda_1[0, 3] + 2*lambda_1[0, 4] + 2*lambda_1[0, 5] + 4*lambda_1[0, 6] + 4*lambda_1[0, 7] + 4*lambda_1[0, 8] + 4*lambda_1[0, 9] + 4*lambda_1[0, 10] + 4*lambda_1[0, 11] + 8*lambda_1[0, 12] + 8*lambda_1[0, 13] + 8*lambda_1[0, 14] + 8*lambda_1[0, 15] + 8*lambda_1[0, 16] + 8*lambda_1[0, 17] + 16*lambda_1[0, 18] + 16*lambda_1[0, 19] + 16*lambda_1[0, 20] + 16*lambda_1[0, 21] + 16*lambda_1[0, 22] + 16*lambda_1[0, 23] + 4*lambda_1[0, 24] + 4*lambda_1[0, 25] + 4*lambda_1[0, 26] + 4*lambda_1[0, 27] + 4*lambda_1[0, 28] + 4*lambda_1[0, 29] + 4*lambda_1[0, 30] + 4*lambda_1[0, 31] + 4*lambda_1[0, 32] + 4*lambda_1[0, 33] + 4*lambda_1[0, 34] + 4*lambda_1[0, 35] + 4*lambda_1[0, 36] + 4*lambda_1[0, 37] + 4*lambda_1[0, 38] + 8*lambda_1[0, 39] + 8*lambda_1[0, 40] + 8*lambda_1[0, 41] + 8*lambda_1[0, 42] + 8*lambda_1[0, 43] + 8*lambda_1[0, 44] + 8*lambda_1[0, 45] + 8*lambda_1[0, 46] + 8*lambda_1[0, 47] + 8*lambda_1[0, 48] + 8*lambda_1[0, 49] + 8*lambda_1[0, 50] + 8*lambda_1[0, 51] + 8*lambda_1[0, 52] + 8*lambda_1[0, 53] + 8*lambda_1[0, 54] + 8*lambda_1[0, 55] + 8*lambda_1[0, 56] + 8*lambda_1[0, 57] + 8*lambda_1[0, 58] + 8*lambda_1[0, 59] + 8*lambda_1[0, 60] + 8*lambda_1[0, 61] + 8*lambda_1[0, 62] + 8*lambda_1[0, 63] + 8*lambda_1[0, 64] + 8*lambda_1[0, 65] + 8*lambda_1[0, 66] + 8*lambda_1[0, 67] + 8*lambda_1[0, 68] + 16*lambda_1[0, 69] + 16*lambda_1[0, 70] + 16*lambda_1[0, 71] + 16*lambda_1[0, 72] + 16*lambda_1[0, 73] + 16*lambda_1[0, 74] + 16*lambda_1[0, 75] + 16*lambda_1[0, 76] + 16*lambda_1[0, 77] + 16*lambda_1[0, 78] + 16*lambda_1[0, 79] + 16*lambda_1[0, 80] + 16*lambda_1[0, 81] + 16*lambda_1[0, 82] + 16*lambda_1[0, 83] + 16*lambda_1[0, 84] + 16*lambda_1[0, 85] + 16*lambda_1[0, 86] + 16*lambda_1[0, 87] + 16*lambda_1[0, 88] + 16*lambda_1[0, 89] + 16*lambda_1[0, 90] + 16*lambda_1[0, 91] + 16*lambda_1[0, 92] + 16*lambda_1[0, 93] + 16*lambda_1[0, 94] + 16*lambda_1[0, 95] + 16*lambda_1[0, 96] + 16*lambda_1[0, 97] + 16*lambda_1[0, 98] + 16*lambda_1[0, 99] + 16*lambda_1[0, 100] + 16*lambda_1[0, 101] + 16*lambda_1[0, 102] + 16*lambda_1[0, 103] + 16*lambda_1[0, 104] + 16*lambda_1[0, 105] + 16*lambda_1[0, 106] + 16*lambda_1[0, 107] + 16*lambda_1[0, 108] + 16*lambda_1[0, 109] + 16*lambda_1[0, 110] + 16*lambda_1[0, 111] + 16*lambda_1[0, 112] + 16*lambda_1[0, 113] + 8*lambda_1[0, 114] + 8*lambda_1[0, 115] + 8*lambda_1[0, 116] + 8*lambda_1[0, 117] + 8*lambda_1[0, 118] + 8*lambda_1[0, 119] + 8*lambda_1[0, 120] + 8*lambda_1[0, 121] + 8*lambda_1[0, 122] + 8*lambda_1[0, 123] + 8*lambda_1[0, 124] + 8*lambda_1[0, 125] + 8*lambda_1[0, 126] + 8*lambda_1[0, 127] + 8*lambda_1[0, 128] + 8*lambda_1[0, 129] + 8*lambda_1[0, 130] + 8*lambda_1[0, 131] + 8*lambda_1[0, 132] + 8*lambda_1[0, 133] + 16*lambda_1[0, 134] + 16*lambda_1[0, 135] + 16*lambda_1[0, 136] + 16*lambda_1[0, 137] + 16*lambda_1[0, 138] + 16*lambda_1[0, 139] + 16*lambda_1[0, 140] + 16*lambda_1[0, 141] + 16*lambda_1[0, 142] + 16*lambda_1[0, 143] + 16*lambda_1[0, 144] + 16*lambda_1[0, 145] + 16*lambda_1[0, 146] + 16*lambda_1[0, 147] + 16*lambda_1[0, 148] + 16*lambda_1[0, 149] + 16*lambda_1[0, 150] + 16*lambda_1[0, 151] + 16*lambda_1[0, 152] + 16*lambda_1[0, 153] + 16*lambda_1[0, 154] + 16*lambda_1[0, 155] + 16*lambda_1[0, 156] + 16*lambda_1[0, 157] + 16*lambda_1[0, 158] + 16*lambda_1[0, 159] + 16*lambda_1[0, 160] + 16*lambda_1[0, 161] + 16*lambda_1[0, 162] + 16*lambda_1[0, 163] + 16*lambda_1[0, 164] + 16*lambda_1[0, 165] + 16*lambda_1[0, 166] + 16*lambda_1[0, 167] + 16*lambda_1[0, 168] + 16*lambda_1[0, 169] + 16*lambda_1[0, 170] + 16*lambda_1[0, 171] + 16*lambda_1[0, 172] + 16*lambda_1[0, 173] + 16*lambda_1[0, 174] + 16*lambda_1[0, 175] + 16*lambda_1[0, 176] + 16*lambda_1[0, 177] + 16*lambda_1[0, 178] + 16*lambda_1[0, 179] + 16*lambda_1[0, 180] + 16*lambda_1[0, 181] + 16*lambda_1[0, 182] + 16*lambda_1[0, 183] + 16*lambda_1[0, 184] + 16*lambda_1[0, 185] + 16*lambda_1[0, 186] + 16*lambda_1[0, 187] + 16*lambda_1[0, 188] + 16*lambda_1[0, 189] + 16*lambda_1[0, 190] + 16*lambda_1[0, 191] + 16*lambda_1[0, 192] + 16*lambda_1[0, 193] + 16*lambda_1[0, 194] + 16*lambda_1[0, 195] + 16*lambda_1[0, 196] + 16*lambda_1[0, 197] + 16*lambda_1[0, 198] + 16*lambda_1[0, 199] + 16*lambda_1[0, 200] + 16*lambda_1[0, 201] + 16*lambda_1[0, 202] + 16*lambda_1[0, 203] + 16*lambda_1[0, 204] + 16*lambda_1[0, 205] + 16*lambda_1[0, 206] + 16*lambda_1[0, 207] + 16*lambda_1[0, 208]- objc]
	constraints += [V[0, 0] <= 2*lambda_1[0, 0] + 2*lambda_1[0, 1] + 2*lambda_1[0, 2] + 2*lambda_1[0, 3] + 2*lambda_1[0, 4] + 2*lambda_1[0, 5] + 4*lambda_1[0, 6] + 4*lambda_1[0, 7] + 4*lambda_1[0, 8] + 4*lambda_1[0, 9] + 4*lambda_1[0, 10] + 4*lambda_1[0, 11] + 8*lambda_1[0, 12] + 8*lambda_1[0, 13] + 8*lambda_1[0, 14] + 8*lambda_1[0, 15] + 8*lambda_1[0, 16] + 8*lambda_1[0, 17] + 16*lambda_1[0, 18] + 16*lambda_1[0, 19] + 16*lambda_1[0, 20] + 16*lambda_1[0, 21] + 16*lambda_1[0, 22] + 16*lambda_1[0, 23] + 4*lambda_1[0, 24] + 4*lambda_1[0, 25] + 4*lambda_1[0, 26] + 4*lambda_1[0, 27] + 4*lambda_1[0, 28] + 4*lambda_1[0, 29] + 4*lambda_1[0, 30] + 4*lambda_1[0, 31] + 4*lambda_1[0, 32] + 4*lambda_1[0, 33] + 4*lambda_1[0, 34] + 4*lambda_1[0, 35] + 4*lambda_1[0, 36] + 4*lambda_1[0, 37] + 4*lambda_1[0, 38] + 8*lambda_1[0, 39] + 8*lambda_1[0, 40] + 8*lambda_1[0, 41] + 8*lambda_1[0, 42] + 8*lambda_1[0, 43] + 8*lambda_1[0, 44] + 8*lambda_1[0, 45] + 8*lambda_1[0, 46] + 8*lambda_1[0, 47] + 8*lambda_1[0, 48] + 8*lambda_1[0, 49] + 8*lambda_1[0, 50] + 8*lambda_1[0, 51] + 8*lambda_1[0, 52] + 8*lambda_1[0, 53] + 8*lambda_1[0, 54] + 8*lambda_1[0, 55] + 8*lambda_1[0, 56] + 8*lambda_1[0, 57] + 8*lambda_1[0, 58] + 8*lambda_1[0, 59] + 8*lambda_1[0, 60] + 8*lambda_1[0, 61] + 8*lambda_1[0, 62] + 8*lambda_1[0, 63] + 8*lambda_1[0, 64] + 8*lambda_1[0, 65] + 8*lambda_1[0, 66] + 8*lambda_1[0, 67] + 8*lambda_1[0, 68] + 16*lambda_1[0, 69] + 16*lambda_1[0, 70] + 16*lambda_1[0, 71] + 16*lambda_1[0, 72] + 16*lambda_1[0, 73] + 16*lambda_1[0, 74] + 16*lambda_1[0, 75] + 16*lambda_1[0, 76] + 16*lambda_1[0, 77] + 16*lambda_1[0, 78] + 16*lambda_1[0, 79] + 16*lambda_1[0, 80] + 16*lambda_1[0, 81] + 16*lambda_1[0, 82] + 16*lambda_1[0, 83] + 16*lambda_1[0, 84] + 16*lambda_1[0, 85] + 16*lambda_1[0, 86] + 16*lambda_1[0, 87] + 16*lambda_1[0, 88] + 16*lambda_1[0, 89] + 16*lambda_1[0, 90] + 16*lambda_1[0, 91] + 16*lambda_1[0, 92] + 16*lambda_1[0, 93] + 16*lambda_1[0, 94] + 16*lambda_1[0, 95] + 16*lambda_1[0, 96] + 16*lambda_1[0, 97] + 16*lambda_1[0, 98] + 16*lambda_1[0, 99] + 16*lambda_1[0, 100] + 16*lambda_1[0, 101] + 16*lambda_1[0, 102] + 16*lambda_1[0, 103] + 16*lambda_1[0, 104] + 16*lambda_1[0, 105] + 16*lambda_1[0, 106] + 16*lambda_1[0, 107] + 16*lambda_1[0, 108] + 16*lambda_1[0, 109] + 16*lambda_1[0, 110] + 16*lambda_1[0, 111] + 16*lambda_1[0, 112] + 16*lambda_1[0, 113] + 8*lambda_1[0, 114] + 8*lambda_1[0, 115] + 8*lambda_1[0, 116] + 8*lambda_1[0, 117] + 8*lambda_1[0, 118] + 8*lambda_1[0, 119] + 8*lambda_1[0, 120] + 8*lambda_1[0, 121] + 8*lambda_1[0, 122] + 8*lambda_1[0, 123] + 8*lambda_1[0, 124] + 8*lambda_1[0, 125] + 8*lambda_1[0, 126] + 8*lambda_1[0, 127] + 8*lambda_1[0, 128] + 8*lambda_1[0, 129] + 8*lambda_1[0, 130] + 8*lambda_1[0, 131] + 8*lambda_1[0, 132] + 8*lambda_1[0, 133] + 16*lambda_1[0, 134] + 16*lambda_1[0, 135] + 16*lambda_1[0, 136] + 16*lambda_1[0, 137] + 16*lambda_1[0, 138] + 16*lambda_1[0, 139] + 16*lambda_1[0, 140] + 16*lambda_1[0, 141] + 16*lambda_1[0, 142] + 16*lambda_1[0, 143] + 16*lambda_1[0, 144] + 16*lambda_1[0, 145] + 16*lambda_1[0, 146] + 16*lambda_1[0, 147] + 16*lambda_1[0, 148] + 16*lambda_1[0, 149] + 16*lambda_1[0, 150] + 16*lambda_1[0, 151] + 16*lambda_1[0, 152] + 16*lambda_1[0, 153] + 16*lambda_1[0, 154] + 16*lambda_1[0, 155] + 16*lambda_1[0, 156] + 16*lambda_1[0, 157] + 16*lambda_1[0, 158] + 16*lambda_1[0, 159] + 16*lambda_1[0, 160] + 16*lambda_1[0, 161] + 16*lambda_1[0, 162] + 16*lambda_1[0, 163] + 16*lambda_1[0, 164] + 16*lambda_1[0, 165] + 16*lambda_1[0, 166] + 16*lambda_1[0, 167] + 16*lambda_1[0, 168] + 16*lambda_1[0, 169] + 16*lambda_1[0, 170] + 16*lambda_1[0, 171] + 16*lambda_1[0, 172] + 16*lambda_1[0, 173] + 16*lambda_1[0, 174] + 16*lambda_1[0, 175] + 16*lambda_1[0, 176] + 16*lambda_1[0, 177] + 16*lambda_1[0, 178] + 16*lambda_1[0, 179] + 16*lambda_1[0, 180] + 16*lambda_1[0, 181] + 16*lambda_1[0, 182] + 16*lambda_1[0, 183] + 16*lambda_1[0, 184] + 16*lambda_1[0, 185] + 16*lambda_1[0, 186] + 16*lambda_1[0, 187] + 16*lambda_1[0, 188] + 16*lambda_1[0, 189] + 16*lambda_1[0, 190] + 16*lambda_1[0, 191] + 16*lambda_1[0, 192] + 16*lambda_1[0, 193] + 16*lambda_1[0, 194] + 16*lambda_1[0, 195] + 16*lambda_1[0, 196] + 16*lambda_1[0, 197] + 16*lambda_1[0, 198] + 16*lambda_1[0, 199] + 16*lambda_1[0, 200] + 16*lambda_1[0, 201] + 16*lambda_1[0, 202] + 16*lambda_1[0, 203] + 16*lambda_1[0, 204] + 16*lambda_1[0, 205] + 16*lambda_1[0, 206] + 16*lambda_1[0, 207] + 16*lambda_1[0, 208]+ objc]
	constraints += [V[0, 1] >= -lambda_1[0, 0] - 4*lambda_1[0, 6] - 12*lambda_1[0, 12] - 32*lambda_1[0, 18] - 2*lambda_1[0, 24] - 2*lambda_1[0, 25] - 2*lambda_1[0, 27] - 2*lambda_1[0, 30] - 2*lambda_1[0, 34] - 8*lambda_1[0, 39] - 4*lambda_1[0, 40] - 8*lambda_1[0, 41] - 4*lambda_1[0, 43] - 8*lambda_1[0, 45] - 4*lambda_1[0, 48] - 8*lambda_1[0, 51] - 4*lambda_1[0, 55] - 8*lambda_1[0, 59] - 4*lambda_1[0, 64] - 24*lambda_1[0, 69] - 8*lambda_1[0, 70] - 24*lambda_1[0, 71] - 8*lambda_1[0, 73] - 24*lambda_1[0, 75] - 8*lambda_1[0, 78] - 24*lambda_1[0, 81] - 8*lambda_1[0, 85] - 24*lambda_1[0, 89] - 8*lambda_1[0, 94] - 16*lambda_1[0, 99] - 16*lambda_1[0, 100] - 16*lambda_1[0, 102] - 16*lambda_1[0, 105] - 16*lambda_1[0, 109] - 4*lambda_1[0, 114] - 4*lambda_1[0, 115] - 4*lambda_1[0, 116] - 4*lambda_1[0, 118] - 4*lambda_1[0, 119] - 4*lambda_1[0, 121] - 4*lambda_1[0, 124] - 4*lambda_1[0, 125] - 4*lambda_1[0, 127] - 4*lambda_1[0, 130] - 16*lambda_1[0, 134] - 8*lambda_1[0, 135] - 8*lambda_1[0, 136] - 16*lambda_1[0, 137] - 8*lambda_1[0, 138] - 16*lambda_1[0, 139] - 8*lambda_1[0, 141] - 8*lambda_1[0, 143] - 8*lambda_1[0, 144] - 16*lambda_1[0, 146] - 8*lambda_1[0, 147] - 16*lambda_1[0, 148] - 8*lambda_1[0, 150] - 16*lambda_1[0, 152] - 8*lambda_1[0, 155] - 8*lambda_1[0, 158] - 8*lambda_1[0, 159] - 8*lambda_1[0, 161] - 16*lambda_1[0, 164] - 8*lambda_1[0, 165] - 16*lambda_1[0, 166] - 8*lambda_1[0, 168] - 16*lambda_1[0, 170] - 8*lambda_1[0, 173] - 16*lambda_1[0, 176] - 8*lambda_1[0, 180] - 8*lambda_1[0, 184] - 8*lambda_1[0, 185] - 8*lambda_1[0, 187] - 8*lambda_1[0, 190] - 8*lambda_1[0, 194] - 8*lambda_1[0, 195] - 8*lambda_1[0, 196] - 8*lambda_1[0, 197] - 8*lambda_1[0, 199] - 8*lambda_1[0, 200] - 8*lambda_1[0, 201] - 8*lambda_1[0, 203] - 8*lambda_1[0, 204] - 8*lambda_1[0, 206]- objc]
	constraints += [V[0, 1] <= -lambda_1[0, 0] - 4*lambda_1[0, 6] - 12*lambda_1[0, 12] - 32*lambda_1[0, 18] - 2*lambda_1[0, 24] - 2*lambda_1[0, 25] - 2*lambda_1[0, 27] - 2*lambda_1[0, 30] - 2*lambda_1[0, 34] - 8*lambda_1[0, 39] - 4*lambda_1[0, 40] - 8*lambda_1[0, 41] - 4*lambda_1[0, 43] - 8*lambda_1[0, 45] - 4*lambda_1[0, 48] - 8*lambda_1[0, 51] - 4*lambda_1[0, 55] - 8*lambda_1[0, 59] - 4*lambda_1[0, 64] - 24*lambda_1[0, 69] - 8*lambda_1[0, 70] - 24*lambda_1[0, 71] - 8*lambda_1[0, 73] - 24*lambda_1[0, 75] - 8*lambda_1[0, 78] - 24*lambda_1[0, 81] - 8*lambda_1[0, 85] - 24*lambda_1[0, 89] - 8*lambda_1[0, 94] - 16*lambda_1[0, 99] - 16*lambda_1[0, 100] - 16*lambda_1[0, 102] - 16*lambda_1[0, 105] - 16*lambda_1[0, 109] - 4*lambda_1[0, 114] - 4*lambda_1[0, 115] - 4*lambda_1[0, 116] - 4*lambda_1[0, 118] - 4*lambda_1[0, 119] - 4*lambda_1[0, 121] - 4*lambda_1[0, 124] - 4*lambda_1[0, 125] - 4*lambda_1[0, 127] - 4*lambda_1[0, 130] - 16*lambda_1[0, 134] - 8*lambda_1[0, 135] - 8*lambda_1[0, 136] - 16*lambda_1[0, 137] - 8*lambda_1[0, 138] - 16*lambda_1[0, 139] - 8*lambda_1[0, 141] - 8*lambda_1[0, 143] - 8*lambda_1[0, 144] - 16*lambda_1[0, 146] - 8*lambda_1[0, 147] - 16*lambda_1[0, 148] - 8*lambda_1[0, 150] - 16*lambda_1[0, 152] - 8*lambda_1[0, 155] - 8*lambda_1[0, 158] - 8*lambda_1[0, 159] - 8*lambda_1[0, 161] - 16*lambda_1[0, 164] - 8*lambda_1[0, 165] - 16*lambda_1[0, 166] - 8*lambda_1[0, 168] - 16*lambda_1[0, 170] - 8*lambda_1[0, 173] - 16*lambda_1[0, 176] - 8*lambda_1[0, 180] - 8*lambda_1[0, 184] - 8*lambda_1[0, 185] - 8*lambda_1[0, 187] - 8*lambda_1[0, 190] - 8*lambda_1[0, 194] - 8*lambda_1[0, 195] - 8*lambda_1[0, 196] - 8*lambda_1[0, 197] - 8*lambda_1[0, 199] - 8*lambda_1[0, 200] - 8*lambda_1[0, 201] - 8*lambda_1[0, 203] - 8*lambda_1[0, 204] - 8*lambda_1[0, 206]+ objc]
	constraints += [V[0, 7] - 0.1 >= lambda_1[0, 6] + 6*lambda_1[0, 12] + 24*lambda_1[0, 18] + 2*lambda_1[0, 39] + 2*lambda_1[0, 41] + 2*lambda_1[0, 45] + 2*lambda_1[0, 51] + 2*lambda_1[0, 59] + 12*lambda_1[0, 69] + 12*lambda_1[0, 71] + 12*lambda_1[0, 75] + 12*lambda_1[0, 81] + 12*lambda_1[0, 89] + 4*lambda_1[0, 99] + 4*lambda_1[0, 100] + 4*lambda_1[0, 102] + 4*lambda_1[0, 105] + 4*lambda_1[0, 109] + 4*lambda_1[0, 134] + 4*lambda_1[0, 137] + 4*lambda_1[0, 139] + 4*lambda_1[0, 146] + 4*lambda_1[0, 148] + 4*lambda_1[0, 152] + 4*lambda_1[0, 164] + 4*lambda_1[0, 166] + 4*lambda_1[0, 170] + 4*lambda_1[0, 176]- objc]
	constraints += [V[0, 7] - 0.1 <= lambda_1[0, 6] + 6*lambda_1[0, 12] + 24*lambda_1[0, 18] + 2*lambda_1[0, 39] + 2*lambda_1[0, 41] + 2*lambda_1[0, 45] + 2*lambda_1[0, 51] + 2*lambda_1[0, 59] + 12*lambda_1[0, 69] + 12*lambda_1[0, 71] + 12*lambda_1[0, 75] + 12*lambda_1[0, 81] + 12*lambda_1[0, 89] + 4*lambda_1[0, 99] + 4*lambda_1[0, 100] + 4*lambda_1[0, 102] + 4*lambda_1[0, 105] + 4*lambda_1[0, 109] + 4*lambda_1[0, 134] + 4*lambda_1[0, 137] + 4*lambda_1[0, 139] + 4*lambda_1[0, 146] + 4*lambda_1[0, 148] + 4*lambda_1[0, 152] + 4*lambda_1[0, 164] + 4*lambda_1[0, 166] + 4*lambda_1[0, 170] + 4*lambda_1[0, 176]+ objc]
	constraints += [V[0, 2] >= -lambda_1[0, 1] - 4*lambda_1[0, 7] - 12*lambda_1[0, 13] - 32*lambda_1[0, 19] - 2*lambda_1[0, 24] - 2*lambda_1[0, 26] - 2*lambda_1[0, 28] - 2*lambda_1[0, 31] - 2*lambda_1[0, 35] - 4*lambda_1[0, 39] - 8*lambda_1[0, 40] - 8*lambda_1[0, 42] - 4*lambda_1[0, 44] - 8*lambda_1[0, 46] - 4*lambda_1[0, 49] - 8*lambda_1[0, 52] - 4*lambda_1[0, 56] - 8*lambda_1[0, 60] - 4*lambda_1[0, 65] - 8*lambda_1[0, 69] - 24*lambda_1[0, 70] - 24*lambda_1[0, 72] - 8*lambda_1[0, 74] - 24*lambda_1[0, 76] - 8*lambda_1[0, 79] - 24*lambda_1[0, 82] - 8*lambda_1[0, 86] - 24*lambda_1[0, 90] - 8*lambda_1[0, 95] - 16*lambda_1[0, 99] - 16*lambda_1[0, 101] - 16*lambda_1[0, 103] - 16*lambda_1[0, 106] - 16*lambda_1[0, 110] - 4*lambda_1[0, 114] - 4*lambda_1[0, 115] - 4*lambda_1[0, 117] - 4*lambda_1[0, 118] - 4*lambda_1[0, 120] - 4*lambda_1[0, 122] - 4*lambda_1[0, 124] - 4*lambda_1[0, 126] - 4*lambda_1[0, 128] - 4*lambda_1[0, 131] - 8*lambda_1[0, 134] - 16*lambda_1[0, 135] - 8*lambda_1[0, 136] - 8*lambda_1[0, 137] - 16*lambda_1[0, 138] - 16*lambda_1[0, 140] - 8*lambda_1[0, 142] - 8*lambda_1[0, 143] - 8*lambda_1[0, 145] - 8*lambda_1[0, 146] - 16*lambda_1[0, 147] - 16*lambda_1[0, 149] - 8*lambda_1[0, 151] - 16*lambda_1[0, 153] - 8*lambda_1[0, 156] - 8*lambda_1[0, 158] - 8*lambda_1[0, 160] - 8*lambda_1[0, 162] - 8*lambda_1[0, 164] - 16*lambda_1[0, 165] - 16*lambda_1[0, 167] - 8*lambda_1[0, 169] - 16*lambda_1[0, 171] - 8*lambda_1[0, 174] - 16*lambda_1[0, 177] - 8*lambda_1[0, 181] - 8*lambda_1[0, 184] - 8*lambda_1[0, 186] - 8*lambda_1[0, 188] - 8*lambda_1[0, 191] - 8*lambda_1[0, 194] - 8*lambda_1[0, 195] - 8*lambda_1[0, 196] - 8*lambda_1[0, 198] - 8*lambda_1[0, 199] - 8*lambda_1[0, 200] - 8*lambda_1[0, 202] - 8*lambda_1[0, 203] - 8*lambda_1[0, 205] - 8*lambda_1[0, 207]- objc]
	constraints += [V[0, 2] <= -lambda_1[0, 1] - 4*lambda_1[0, 7] - 12*lambda_1[0, 13] - 32*lambda_1[0, 19] - 2*lambda_1[0, 24] - 2*lambda_1[0, 26] - 2*lambda_1[0, 28] - 2*lambda_1[0, 31] - 2*lambda_1[0, 35] - 4*lambda_1[0, 39] - 8*lambda_1[0, 40] - 8*lambda_1[0, 42] - 4*lambda_1[0, 44] - 8*lambda_1[0, 46] - 4*lambda_1[0, 49] - 8*lambda_1[0, 52] - 4*lambda_1[0, 56] - 8*lambda_1[0, 60] - 4*lambda_1[0, 65] - 8*lambda_1[0, 69] - 24*lambda_1[0, 70] - 24*lambda_1[0, 72] - 8*lambda_1[0, 74] - 24*lambda_1[0, 76] - 8*lambda_1[0, 79] - 24*lambda_1[0, 82] - 8*lambda_1[0, 86] - 24*lambda_1[0, 90] - 8*lambda_1[0, 95] - 16*lambda_1[0, 99] - 16*lambda_1[0, 101] - 16*lambda_1[0, 103] - 16*lambda_1[0, 106] - 16*lambda_1[0, 110] - 4*lambda_1[0, 114] - 4*lambda_1[0, 115] - 4*lambda_1[0, 117] - 4*lambda_1[0, 118] - 4*lambda_1[0, 120] - 4*lambda_1[0, 122] - 4*lambda_1[0, 124] - 4*lambda_1[0, 126] - 4*lambda_1[0, 128] - 4*lambda_1[0, 131] - 8*lambda_1[0, 134] - 16*lambda_1[0, 135] - 8*lambda_1[0, 136] - 8*lambda_1[0, 137] - 16*lambda_1[0, 138] - 16*lambda_1[0, 140] - 8*lambda_1[0, 142] - 8*lambda_1[0, 143] - 8*lambda_1[0, 145] - 8*lambda_1[0, 146] - 16*lambda_1[0, 147] - 16*lambda_1[0, 149] - 8*lambda_1[0, 151] - 16*lambda_1[0, 153] - 8*lambda_1[0, 156] - 8*lambda_1[0, 158] - 8*lambda_1[0, 160] - 8*lambda_1[0, 162] - 8*lambda_1[0, 164] - 16*lambda_1[0, 165] - 16*lambda_1[0, 167] - 8*lambda_1[0, 169] - 16*lambda_1[0, 171] - 8*lambda_1[0, 174] - 16*lambda_1[0, 177] - 8*lambda_1[0, 181] - 8*lambda_1[0, 184] - 8*lambda_1[0, 186] - 8*lambda_1[0, 188] - 8*lambda_1[0, 191] - 8*lambda_1[0, 194] - 8*lambda_1[0, 195] - 8*lambda_1[0, 196] - 8*lambda_1[0, 198] - 8*lambda_1[0, 199] - 8*lambda_1[0, 200] - 8*lambda_1[0, 202] - 8*lambda_1[0, 203] - 8*lambda_1[0, 205] - 8*lambda_1[0, 207]+ objc]
	constraints += [V[0, 13] >= lambda_1[0, 24] + 4*lambda_1[0, 39] + 4*lambda_1[0, 40] + 12*lambda_1[0, 69] + 12*lambda_1[0, 70] + 16*lambda_1[0, 99] + 2*lambda_1[0, 114] + 2*lambda_1[0, 115] + 2*lambda_1[0, 118] + 2*lambda_1[0, 124] + 8*lambda_1[0, 134] + 8*lambda_1[0, 135] + 4*lambda_1[0, 136] + 8*lambda_1[0, 137] + 8*lambda_1[0, 138] + 4*lambda_1[0, 143] + 8*lambda_1[0, 146] + 8*lambda_1[0, 147] + 4*lambda_1[0, 158] + 8*lambda_1[0, 164] + 8*lambda_1[0, 165] + 4*lambda_1[0, 184] + 4*lambda_1[0, 194] + 4*lambda_1[0, 195] + 4*lambda_1[0, 196] + 4*lambda_1[0, 199] + 4*lambda_1[0, 200] + 4*lambda_1[0, 203]- objc]
	constraints += [V[0, 13] <= lambda_1[0, 24] + 4*lambda_1[0, 39] + 4*lambda_1[0, 40] + 12*lambda_1[0, 69] + 12*lambda_1[0, 70] + 16*lambda_1[0, 99] + 2*lambda_1[0, 114] + 2*lambda_1[0, 115] + 2*lambda_1[0, 118] + 2*lambda_1[0, 124] + 8*lambda_1[0, 134] + 8*lambda_1[0, 135] + 4*lambda_1[0, 136] + 8*lambda_1[0, 137] + 8*lambda_1[0, 138] + 4*lambda_1[0, 143] + 8*lambda_1[0, 146] + 8*lambda_1[0, 147] + 4*lambda_1[0, 158] + 8*lambda_1[0, 164] + 8*lambda_1[0, 165] + 4*lambda_1[0, 184] + 4*lambda_1[0, 194] + 4*lambda_1[0, 195] + 4*lambda_1[0, 196] + 4*lambda_1[0, 199] + 4*lambda_1[0, 200] + 4*lambda_1[0, 203]+ objc]
	constraints += [V[0, 8] - 0.1 >= lambda_1[0, 7] + 6*lambda_1[0, 13] + 24*lambda_1[0, 19] + 2*lambda_1[0, 40] + 2*lambda_1[0, 42] + 2*lambda_1[0, 46] + 2*lambda_1[0, 52] + 2*lambda_1[0, 60] + 12*lambda_1[0, 70] + 12*lambda_1[0, 72] + 12*lambda_1[0, 76] + 12*lambda_1[0, 82] + 12*lambda_1[0, 90] + 4*lambda_1[0, 99] + 4*lambda_1[0, 101] + 4*lambda_1[0, 103] + 4*lambda_1[0, 106] + 4*lambda_1[0, 110] + 4*lambda_1[0, 135] + 4*lambda_1[0, 138] + 4*lambda_1[0, 140] + 4*lambda_1[0, 147] + 4*lambda_1[0, 149] + 4*lambda_1[0, 153] + 4*lambda_1[0, 165] + 4*lambda_1[0, 167] + 4*lambda_1[0, 171] + 4*lambda_1[0, 177]- objc]
	constraints += [V[0, 8] - 0.1 <= lambda_1[0, 7] + 6*lambda_1[0, 13] + 24*lambda_1[0, 19] + 2*lambda_1[0, 40] + 2*lambda_1[0, 42] + 2*lambda_1[0, 46] + 2*lambda_1[0, 52] + 2*lambda_1[0, 60] + 12*lambda_1[0, 70] + 12*lambda_1[0, 72] + 12*lambda_1[0, 76] + 12*lambda_1[0, 82] + 12*lambda_1[0, 90] + 4*lambda_1[0, 99] + 4*lambda_1[0, 101] + 4*lambda_1[0, 103] + 4*lambda_1[0, 106] + 4*lambda_1[0, 110] + 4*lambda_1[0, 135] + 4*lambda_1[0, 138] + 4*lambda_1[0, 140] + 4*lambda_1[0, 147] + 4*lambda_1[0, 149] + 4*lambda_1[0, 153] + 4*lambda_1[0, 165] + 4*lambda_1[0, 167] + 4*lambda_1[0, 171] + 4*lambda_1[0, 177]+ objc]
	constraints += [V[0, 3] >= -lambda_1[0, 2] - 4*lambda_1[0, 8] - 12*lambda_1[0, 14] - 32*lambda_1[0, 20] - 2*lambda_1[0, 25] - 2*lambda_1[0, 26] - 2*lambda_1[0, 29] - 2*lambda_1[0, 32] - 2*lambda_1[0, 36] - 4*lambda_1[0, 41] - 4*lambda_1[0, 42] - 8*lambda_1[0, 43] - 8*lambda_1[0, 44] - 8*lambda_1[0, 47] - 4*lambda_1[0, 50] - 8*lambda_1[0, 53] - 4*lambda_1[0, 57] - 8*lambda_1[0, 61] - 4*lambda_1[0, 66] - 8*lambda_1[0, 71] - 8*lambda_1[0, 72] - 24*lambda_1[0, 73] - 24*lambda_1[0, 74] - 24*lambda_1[0, 77] - 8*lambda_1[0, 80] - 24*lambda_1[0, 83] - 8*lambda_1[0, 87] - 24*lambda_1[0, 91] - 8*lambda_1[0, 96] - 16*lambda_1[0, 100] - 16*lambda_1[0, 101] - 16*lambda_1[0, 104] - 16*lambda_1[0, 107] - 16*lambda_1[0, 111] - 4*lambda_1[0, 114] - 4*lambda_1[0, 116] - 4*lambda_1[0, 117] - 4*lambda_1[0, 119] - 4*lambda_1[0, 120] - 4*lambda_1[0, 123] - 4*lambda_1[0, 125] - 4*lambda_1[0, 126] - 4*lambda_1[0, 129] - 4*lambda_1[0, 132] - 8*lambda_1[0, 134] - 8*lambda_1[0, 135] - 16*lambda_1[0, 136] - 8*lambda_1[0, 139] - 8*lambda_1[0, 140] - 16*lambda_1[0, 141] - 16*lambda_1[0, 142] - 8*lambda_1[0, 144] - 8*lambda_1[0, 145] - 8*lambda_1[0, 148] - 8*lambda_1[0, 149] - 16*lambda_1[0, 150] - 16*lambda_1[0, 151] - 16*lambda_1[0, 154] - 8*lambda_1[0, 157] - 8*lambda_1[0, 159] - 8*lambda_1[0, 160] - 8*lambda_1[0, 163] - 8*lambda_1[0, 166] - 8*lambda_1[0, 167] - 16*lambda_1[0, 168] - 16*lambda_1[0, 169] - 16*lambda_1[0, 172] - 8*lambda_1[0, 175] - 16*lambda_1[0, 178] - 8*lambda_1[0, 182] - 8*lambda_1[0, 185] - 8*lambda_1[0, 186] - 8*lambda_1[0, 189] - 8*lambda_1[0, 192] - 8*lambda_1[0, 194] - 8*lambda_1[0, 195] - 8*lambda_1[0, 197] - 8*lambda_1[0, 198] - 8*lambda_1[0, 199] - 8*lambda_1[0, 201] - 8*lambda_1[0, 202] - 8*lambda_1[0, 204] - 8*lambda_1[0, 205] - 8*lambda_1[0, 208]- objc]
	constraints += [V[0, 3] <= -lambda_1[0, 2] - 4*lambda_1[0, 8] - 12*lambda_1[0, 14] - 32*lambda_1[0, 20] - 2*lambda_1[0, 25] - 2*lambda_1[0, 26] - 2*lambda_1[0, 29] - 2*lambda_1[0, 32] - 2*lambda_1[0, 36] - 4*lambda_1[0, 41] - 4*lambda_1[0, 42] - 8*lambda_1[0, 43] - 8*lambda_1[0, 44] - 8*lambda_1[0, 47] - 4*lambda_1[0, 50] - 8*lambda_1[0, 53] - 4*lambda_1[0, 57] - 8*lambda_1[0, 61] - 4*lambda_1[0, 66] - 8*lambda_1[0, 71] - 8*lambda_1[0, 72] - 24*lambda_1[0, 73] - 24*lambda_1[0, 74] - 24*lambda_1[0, 77] - 8*lambda_1[0, 80] - 24*lambda_1[0, 83] - 8*lambda_1[0, 87] - 24*lambda_1[0, 91] - 8*lambda_1[0, 96] - 16*lambda_1[0, 100] - 16*lambda_1[0, 101] - 16*lambda_1[0, 104] - 16*lambda_1[0, 107] - 16*lambda_1[0, 111] - 4*lambda_1[0, 114] - 4*lambda_1[0, 116] - 4*lambda_1[0, 117] - 4*lambda_1[0, 119] - 4*lambda_1[0, 120] - 4*lambda_1[0, 123] - 4*lambda_1[0, 125] - 4*lambda_1[0, 126] - 4*lambda_1[0, 129] - 4*lambda_1[0, 132] - 8*lambda_1[0, 134] - 8*lambda_1[0, 135] - 16*lambda_1[0, 136] - 8*lambda_1[0, 139] - 8*lambda_1[0, 140] - 16*lambda_1[0, 141] - 16*lambda_1[0, 142] - 8*lambda_1[0, 144] - 8*lambda_1[0, 145] - 8*lambda_1[0, 148] - 8*lambda_1[0, 149] - 16*lambda_1[0, 150] - 16*lambda_1[0, 151] - 16*lambda_1[0, 154] - 8*lambda_1[0, 157] - 8*lambda_1[0, 159] - 8*lambda_1[0, 160] - 8*lambda_1[0, 163] - 8*lambda_1[0, 166] - 8*lambda_1[0, 167] - 16*lambda_1[0, 168] - 16*lambda_1[0, 169] - 16*lambda_1[0, 172] - 8*lambda_1[0, 175] - 16*lambda_1[0, 178] - 8*lambda_1[0, 182] - 8*lambda_1[0, 185] - 8*lambda_1[0, 186] - 8*lambda_1[0, 189] - 8*lambda_1[0, 192] - 8*lambda_1[0, 194] - 8*lambda_1[0, 195] - 8*lambda_1[0, 197] - 8*lambda_1[0, 198] - 8*lambda_1[0, 199] - 8*lambda_1[0, 201] - 8*lambda_1[0, 202] - 8*lambda_1[0, 204] - 8*lambda_1[0, 205] - 8*lambda_1[0, 208]+ objc]
	constraints += [V[0, 14] >= lambda_1[0, 25] + 4*lambda_1[0, 41] + 4*lambda_1[0, 43] + 12*lambda_1[0, 71] + 12*lambda_1[0, 73] + 16*lambda_1[0, 100] + 2*lambda_1[0, 114] + 2*lambda_1[0, 116] + 2*lambda_1[0, 119] + 2*lambda_1[0, 125] + 8*lambda_1[0, 134] + 4*lambda_1[0, 135] + 8*lambda_1[0, 136] + 8*lambda_1[0, 139] + 8*lambda_1[0, 141] + 4*lambda_1[0, 144] + 8*lambda_1[0, 148] + 8*lambda_1[0, 150] + 4*lambda_1[0, 159] + 8*lambda_1[0, 166] + 8*lambda_1[0, 168] + 4*lambda_1[0, 185] + 4*lambda_1[0, 194] + 4*lambda_1[0, 195] + 4*lambda_1[0, 197] + 4*lambda_1[0, 199] + 4*lambda_1[0, 201] + 4*lambda_1[0, 204]- objc]
	constraints += [V[0, 14] <= lambda_1[0, 25] + 4*lambda_1[0, 41] + 4*lambda_1[0, 43] + 12*lambda_1[0, 71] + 12*lambda_1[0, 73] + 16*lambda_1[0, 100] + 2*lambda_1[0, 114] + 2*lambda_1[0, 116] + 2*lambda_1[0, 119] + 2*lambda_1[0, 125] + 8*lambda_1[0, 134] + 4*lambda_1[0, 135] + 8*lambda_1[0, 136] + 8*lambda_1[0, 139] + 8*lambda_1[0, 141] + 4*lambda_1[0, 144] + 8*lambda_1[0, 148] + 8*lambda_1[0, 150] + 4*lambda_1[0, 159] + 8*lambda_1[0, 166] + 8*lambda_1[0, 168] + 4*lambda_1[0, 185] + 4*lambda_1[0, 194] + 4*lambda_1[0, 195] + 4*lambda_1[0, 197] + 4*lambda_1[0, 199] + 4*lambda_1[0, 201] + 4*lambda_1[0, 204]+ objc]
	constraints += [V[0, 15] >= lambda_1[0, 26] + 4*lambda_1[0, 42] + 4*lambda_1[0, 44] + 12*lambda_1[0, 72] + 12*lambda_1[0, 74] + 16*lambda_1[0, 101] + 2*lambda_1[0, 114] + 2*lambda_1[0, 117] + 2*lambda_1[0, 120] + 2*lambda_1[0, 126] + 4*lambda_1[0, 134] + 8*lambda_1[0, 135] + 8*lambda_1[0, 136] + 8*lambda_1[0, 140] + 8*lambda_1[0, 142] + 4*lambda_1[0, 145] + 8*lambda_1[0, 149] + 8*lambda_1[0, 151] + 4*lambda_1[0, 160] + 8*lambda_1[0, 167] + 8*lambda_1[0, 169] + 4*lambda_1[0, 186] + 4*lambda_1[0, 194] + 4*lambda_1[0, 195] + 4*lambda_1[0, 198] + 4*lambda_1[0, 199] + 4*lambda_1[0, 202] + 4*lambda_1[0, 205]- objc]
	constraints += [V[0, 15] <= lambda_1[0, 26] + 4*lambda_1[0, 42] + 4*lambda_1[0, 44] + 12*lambda_1[0, 72] + 12*lambda_1[0, 74] + 16*lambda_1[0, 101] + 2*lambda_1[0, 114] + 2*lambda_1[0, 117] + 2*lambda_1[0, 120] + 2*lambda_1[0, 126] + 4*lambda_1[0, 134] + 8*lambda_1[0, 135] + 8*lambda_1[0, 136] + 8*lambda_1[0, 140] + 8*lambda_1[0, 142] + 4*lambda_1[0, 145] + 8*lambda_1[0, 149] + 8*lambda_1[0, 151] + 4*lambda_1[0, 160] + 8*lambda_1[0, 167] + 8*lambda_1[0, 169] + 4*lambda_1[0, 186] + 4*lambda_1[0, 194] + 4*lambda_1[0, 195] + 4*lambda_1[0, 198] + 4*lambda_1[0, 199] + 4*lambda_1[0, 202] + 4*lambda_1[0, 205]+ objc]
	constraints += [V[0, 9] - 0.1 >= lambda_1[0, 8] + 6*lambda_1[0, 14] + 24*lambda_1[0, 20] + 2*lambda_1[0, 43] + 2*lambda_1[0, 44] + 2*lambda_1[0, 47] + 2*lambda_1[0, 53] + 2*lambda_1[0, 61] + 12*lambda_1[0, 73] + 12*lambda_1[0, 74] + 12*lambda_1[0, 77] + 12*lambda_1[0, 83] + 12*lambda_1[0, 91] + 4*lambda_1[0, 100] + 4*lambda_1[0, 101] + 4*lambda_1[0, 104] + 4*lambda_1[0, 107] + 4*lambda_1[0, 111] + 4*lambda_1[0, 136] + 4*lambda_1[0, 141] + 4*lambda_1[0, 142] + 4*lambda_1[0, 150] + 4*lambda_1[0, 151] + 4*lambda_1[0, 154] + 4*lambda_1[0, 168] + 4*lambda_1[0, 169] + 4*lambda_1[0, 172] + 4*lambda_1[0, 178]- objc]
	constraints += [V[0, 9] - 0.1 <= lambda_1[0, 8] + 6*lambda_1[0, 14] + 24*lambda_1[0, 20] + 2*lambda_1[0, 43] + 2*lambda_1[0, 44] + 2*lambda_1[0, 47] + 2*lambda_1[0, 53] + 2*lambda_1[0, 61] + 12*lambda_1[0, 73] + 12*lambda_1[0, 74] + 12*lambda_1[0, 77] + 12*lambda_1[0, 83] + 12*lambda_1[0, 91] + 4*lambda_1[0, 100] + 4*lambda_1[0, 101] + 4*lambda_1[0, 104] + 4*lambda_1[0, 107] + 4*lambda_1[0, 111] + 4*lambda_1[0, 136] + 4*lambda_1[0, 141] + 4*lambda_1[0, 142] + 4*lambda_1[0, 150] + 4*lambda_1[0, 151] + 4*lambda_1[0, 154] + 4*lambda_1[0, 168] + 4*lambda_1[0, 169] + 4*lambda_1[0, 172] + 4*lambda_1[0, 178]+ objc]
	constraints += [V[0, 4] >= -lambda_1[0, 3] - 4*lambda_1[0, 9] - 12*lambda_1[0, 15] - 32*lambda_1[0, 21] - 2*lambda_1[0, 27] - 2*lambda_1[0, 28] - 2*lambda_1[0, 29] - 2*lambda_1[0, 33] - 2*lambda_1[0, 37] - 4*lambda_1[0, 45] - 4*lambda_1[0, 46] - 4*lambda_1[0, 47] - 8*lambda_1[0, 48] - 8*lambda_1[0, 49] - 8*lambda_1[0, 50] - 8*lambda_1[0, 54] - 4*lambda_1[0, 58] - 8*lambda_1[0, 62] - 4*lambda_1[0, 67] - 8*lambda_1[0, 75] - 8*lambda_1[0, 76] - 8*lambda_1[0, 77] - 24*lambda_1[0, 78] - 24*lambda_1[0, 79] - 24*lambda_1[0, 80] - 24*lambda_1[0, 84] - 8*lambda_1[0, 88] - 24*lambda_1[0, 92] - 8*lambda_1[0, 97] - 16*lambda_1[0, 102] - 16*lambda_1[0, 103] - 16*lambda_1[0, 104] - 16*lambda_1[0, 108] - 16*lambda_1[0, 112] - 4*lambda_1[0, 115] - 4*lambda_1[0, 116] - 4*lambda_1[0, 117] - 4*lambda_1[0, 121] - 4*lambda_1[0, 122] - 4*lambda_1[0, 123] - 4*lambda_1[0, 127] - 4*lambda_1[0, 128] - 4*lambda_1[0, 129] - 4*lambda_1[0, 133] - 8*lambda_1[0, 137] - 8*lambda_1[0, 138] - 8*lambda_1[0, 139] - 8*lambda_1[0, 140] - 8*lambda_1[0, 141] - 8*lambda_1[0, 142] - 16*lambda_1[0, 143] - 16*lambda_1[0, 144] - 16*lambda_1[0, 145] - 8*lambda_1[0, 152] - 8*lambda_1[0, 153] - 8*lambda_1[0, 154] - 16*lambda_1[0, 155] - 16*lambda_1[0, 156] - 16*lambda_1[0, 157] - 8*lambda_1[0, 161] - 8*lambda_1[0, 162] - 8*lambda_1[0, 163] - 8*lambda_1[0, 170] - 8*lambda_1[0, 171] - 8*lambda_1[0, 172] - 16*lambda_1[0, 173] - 16*lambda_1[0, 174] - 16*lambda_1[0, 175] - 16*lambda_1[0, 179] - 8*lambda_1[0, 183] - 8*lambda_1[0, 187] - 8*lambda_1[0, 188] - 8*lambda_1[0, 189] - 8*lambda_1[0, 193] - 8*lambda_1[0, 194] - 8*lambda_1[0, 196] - 8*lambda_1[0, 197] - 8*lambda_1[0, 198] - 8*lambda_1[0, 200] - 8*lambda_1[0, 201] - 8*lambda_1[0, 202] - 8*lambda_1[0, 206] - 8*lambda_1[0, 207] - 8*lambda_1[0, 208]- objc]
	constraints += [V[0, 4] <= -lambda_1[0, 3] - 4*lambda_1[0, 9] - 12*lambda_1[0, 15] - 32*lambda_1[0, 21] - 2*lambda_1[0, 27] - 2*lambda_1[0, 28] - 2*lambda_1[0, 29] - 2*lambda_1[0, 33] - 2*lambda_1[0, 37] - 4*lambda_1[0, 45] - 4*lambda_1[0, 46] - 4*lambda_1[0, 47] - 8*lambda_1[0, 48] - 8*lambda_1[0, 49] - 8*lambda_1[0, 50] - 8*lambda_1[0, 54] - 4*lambda_1[0, 58] - 8*lambda_1[0, 62] - 4*lambda_1[0, 67] - 8*lambda_1[0, 75] - 8*lambda_1[0, 76] - 8*lambda_1[0, 77] - 24*lambda_1[0, 78] - 24*lambda_1[0, 79] - 24*lambda_1[0, 80] - 24*lambda_1[0, 84] - 8*lambda_1[0, 88] - 24*lambda_1[0, 92] - 8*lambda_1[0, 97] - 16*lambda_1[0, 102] - 16*lambda_1[0, 103] - 16*lambda_1[0, 104] - 16*lambda_1[0, 108] - 16*lambda_1[0, 112] - 4*lambda_1[0, 115] - 4*lambda_1[0, 116] - 4*lambda_1[0, 117] - 4*lambda_1[0, 121] - 4*lambda_1[0, 122] - 4*lambda_1[0, 123] - 4*lambda_1[0, 127] - 4*lambda_1[0, 128] - 4*lambda_1[0, 129] - 4*lambda_1[0, 133] - 8*lambda_1[0, 137] - 8*lambda_1[0, 138] - 8*lambda_1[0, 139] - 8*lambda_1[0, 140] - 8*lambda_1[0, 141] - 8*lambda_1[0, 142] - 16*lambda_1[0, 143] - 16*lambda_1[0, 144] - 16*lambda_1[0, 145] - 8*lambda_1[0, 152] - 8*lambda_1[0, 153] - 8*lambda_1[0, 154] - 16*lambda_1[0, 155] - 16*lambda_1[0, 156] - 16*lambda_1[0, 157] - 8*lambda_1[0, 161] - 8*lambda_1[0, 162] - 8*lambda_1[0, 163] - 8*lambda_1[0, 170] - 8*lambda_1[0, 171] - 8*lambda_1[0, 172] - 16*lambda_1[0, 173] - 16*lambda_1[0, 174] - 16*lambda_1[0, 175] - 16*lambda_1[0, 179] - 8*lambda_1[0, 183] - 8*lambda_1[0, 187] - 8*lambda_1[0, 188] - 8*lambda_1[0, 189] - 8*lambda_1[0, 193] - 8*lambda_1[0, 194] - 8*lambda_1[0, 196] - 8*lambda_1[0, 197] - 8*lambda_1[0, 198] - 8*lambda_1[0, 200] - 8*lambda_1[0, 201] - 8*lambda_1[0, 202] - 8*lambda_1[0, 206] - 8*lambda_1[0, 207] - 8*lambda_1[0, 208]+ objc]
	constraints += [V[0, 16] >= lambda_1[0, 27] + 4*lambda_1[0, 45] + 4*lambda_1[0, 48] + 12*lambda_1[0, 75] + 12*lambda_1[0, 78] + 16*lambda_1[0, 102] + 2*lambda_1[0, 115] + 2*lambda_1[0, 116] + 2*lambda_1[0, 121] + 2*lambda_1[0, 127] + 8*lambda_1[0, 137] + 4*lambda_1[0, 138] + 8*lambda_1[0, 139] + 4*lambda_1[0, 141] + 8*lambda_1[0, 143] + 8*lambda_1[0, 144] + 8*lambda_1[0, 152] + 8*lambda_1[0, 155] + 4*lambda_1[0, 161] + 8*lambda_1[0, 170] + 8*lambda_1[0, 173] + 4*lambda_1[0, 187] + 4*lambda_1[0, 194] + 4*lambda_1[0, 196] + 4*lambda_1[0, 197] + 4*lambda_1[0, 200] + 4*lambda_1[0, 201] + 4*lambda_1[0, 206]- objc]
	constraints += [V[0, 16] <= lambda_1[0, 27] + 4*lambda_1[0, 45] + 4*lambda_1[0, 48] + 12*lambda_1[0, 75] + 12*lambda_1[0, 78] + 16*lambda_1[0, 102] + 2*lambda_1[0, 115] + 2*lambda_1[0, 116] + 2*lambda_1[0, 121] + 2*lambda_1[0, 127] + 8*lambda_1[0, 137] + 4*lambda_1[0, 138] + 8*lambda_1[0, 139] + 4*lambda_1[0, 141] + 8*lambda_1[0, 143] + 8*lambda_1[0, 144] + 8*lambda_1[0, 152] + 8*lambda_1[0, 155] + 4*lambda_1[0, 161] + 8*lambda_1[0, 170] + 8*lambda_1[0, 173] + 4*lambda_1[0, 187] + 4*lambda_1[0, 194] + 4*lambda_1[0, 196] + 4*lambda_1[0, 197] + 4*lambda_1[0, 200] + 4*lambda_1[0, 201] + 4*lambda_1[0, 206]+ objc]
	constraints += [V[0, 17] >= lambda_1[0, 28] + 4*lambda_1[0, 46] + 4*lambda_1[0, 49] + 12*lambda_1[0, 76] + 12*lambda_1[0, 79] + 16*lambda_1[0, 103] + 2*lambda_1[0, 115] + 2*lambda_1[0, 117] + 2*lambda_1[0, 122] + 2*lambda_1[0, 128] + 4*lambda_1[0, 137] + 8*lambda_1[0, 138] + 8*lambda_1[0, 140] + 4*lambda_1[0, 142] + 8*lambda_1[0, 143] + 8*lambda_1[0, 145] + 8*lambda_1[0, 153] + 8*lambda_1[0, 156] + 4*lambda_1[0, 162] + 8*lambda_1[0, 171] + 8*lambda_1[0, 174] + 4*lambda_1[0, 188] + 4*lambda_1[0, 194] + 4*lambda_1[0, 196] + 4*lambda_1[0, 198] + 4*lambda_1[0, 200] + 4*lambda_1[0, 202] + 4*lambda_1[0, 207]- objc]
	constraints += [V[0, 17] <= lambda_1[0, 28] + 4*lambda_1[0, 46] + 4*lambda_1[0, 49] + 12*lambda_1[0, 76] + 12*lambda_1[0, 79] + 16*lambda_1[0, 103] + 2*lambda_1[0, 115] + 2*lambda_1[0, 117] + 2*lambda_1[0, 122] + 2*lambda_1[0, 128] + 4*lambda_1[0, 137] + 8*lambda_1[0, 138] + 8*lambda_1[0, 140] + 4*lambda_1[0, 142] + 8*lambda_1[0, 143] + 8*lambda_1[0, 145] + 8*lambda_1[0, 153] + 8*lambda_1[0, 156] + 4*lambda_1[0, 162] + 8*lambda_1[0, 171] + 8*lambda_1[0, 174] + 4*lambda_1[0, 188] + 4*lambda_1[0, 194] + 4*lambda_1[0, 196] + 4*lambda_1[0, 198] + 4*lambda_1[0, 200] + 4*lambda_1[0, 202] + 4*lambda_1[0, 207]+ objc]
	constraints += [V[0, 18] >= lambda_1[0, 29] + 4*lambda_1[0, 47] + 4*lambda_1[0, 50] + 12*lambda_1[0, 77] + 12*lambda_1[0, 80] + 16*lambda_1[0, 104] + 2*lambda_1[0, 116] + 2*lambda_1[0, 117] + 2*lambda_1[0, 123] + 2*lambda_1[0, 129] + 4*lambda_1[0, 139] + 4*lambda_1[0, 140] + 8*lambda_1[0, 141] + 8*lambda_1[0, 142] + 8*lambda_1[0, 144] + 8*lambda_1[0, 145] + 8*lambda_1[0, 154] + 8*lambda_1[0, 157] + 4*lambda_1[0, 163] + 8*lambda_1[0, 172] + 8*lambda_1[0, 175] + 4*lambda_1[0, 189] + 4*lambda_1[0, 194] + 4*lambda_1[0, 197] + 4*lambda_1[0, 198] + 4*lambda_1[0, 201] + 4*lambda_1[0, 202] + 4*lambda_1[0, 208]- objc]
	constraints += [V[0, 18] <= lambda_1[0, 29] + 4*lambda_1[0, 47] + 4*lambda_1[0, 50] + 12*lambda_1[0, 77] + 12*lambda_1[0, 80] + 16*lambda_1[0, 104] + 2*lambda_1[0, 116] + 2*lambda_1[0, 117] + 2*lambda_1[0, 123] + 2*lambda_1[0, 129] + 4*lambda_1[0, 139] + 4*lambda_1[0, 140] + 8*lambda_1[0, 141] + 8*lambda_1[0, 142] + 8*lambda_1[0, 144] + 8*lambda_1[0, 145] + 8*lambda_1[0, 154] + 8*lambda_1[0, 157] + 4*lambda_1[0, 163] + 8*lambda_1[0, 172] + 8*lambda_1[0, 175] + 4*lambda_1[0, 189] + 4*lambda_1[0, 194] + 4*lambda_1[0, 197] + 4*lambda_1[0, 198] + 4*lambda_1[0, 201] + 4*lambda_1[0, 202] + 4*lambda_1[0, 208]+ objc]
	constraints += [V[0, 10] - 0.1 >= lambda_1[0, 9] + 6*lambda_1[0, 15] + 24*lambda_1[0, 21] + 2*lambda_1[0, 48] + 2*lambda_1[0, 49] + 2*lambda_1[0, 50] + 2*lambda_1[0, 54] + 2*lambda_1[0, 62] + 12*lambda_1[0, 78] + 12*lambda_1[0, 79] + 12*lambda_1[0, 80] + 12*lambda_1[0, 84] + 12*lambda_1[0, 92] + 4*lambda_1[0, 102] + 4*lambda_1[0, 103] + 4*lambda_1[0, 104] + 4*lambda_1[0, 108] + 4*lambda_1[0, 112] + 4*lambda_1[0, 143] + 4*lambda_1[0, 144] + 4*lambda_1[0, 145] + 4*lambda_1[0, 155] + 4*lambda_1[0, 156] + 4*lambda_1[0, 157] + 4*lambda_1[0, 173] + 4*lambda_1[0, 174] + 4*lambda_1[0, 175] + 4*lambda_1[0, 179]- objc]
	constraints += [V[0, 10] - 0.1 <= lambda_1[0, 9] + 6*lambda_1[0, 15] + 24*lambda_1[0, 21] + 2*lambda_1[0, 48] + 2*lambda_1[0, 49] + 2*lambda_1[0, 50] + 2*lambda_1[0, 54] + 2*lambda_1[0, 62] + 12*lambda_1[0, 78] + 12*lambda_1[0, 79] + 12*lambda_1[0, 80] + 12*lambda_1[0, 84] + 12*lambda_1[0, 92] + 4*lambda_1[0, 102] + 4*lambda_1[0, 103] + 4*lambda_1[0, 104] + 4*lambda_1[0, 108] + 4*lambda_1[0, 112] + 4*lambda_1[0, 143] + 4*lambda_1[0, 144] + 4*lambda_1[0, 145] + 4*lambda_1[0, 155] + 4*lambda_1[0, 156] + 4*lambda_1[0, 157] + 4*lambda_1[0, 173] + 4*lambda_1[0, 174] + 4*lambda_1[0, 175] + 4*lambda_1[0, 179]+ objc]
	constraints += [V[0, 5] >= -lambda_1[0, 4] - 4*lambda_1[0, 10] - 12*lambda_1[0, 16] - 32*lambda_1[0, 22] - 2*lambda_1[0, 30] - 2*lambda_1[0, 31] - 2*lambda_1[0, 32] - 2*lambda_1[0, 33] - 2*lambda_1[0, 38] - 4*lambda_1[0, 51] - 4*lambda_1[0, 52] - 4*lambda_1[0, 53] - 4*lambda_1[0, 54] - 8*lambda_1[0, 55] - 8*lambda_1[0, 56] - 8*lambda_1[0, 57] - 8*lambda_1[0, 58] - 8*lambda_1[0, 63] - 4*lambda_1[0, 68] - 8*lambda_1[0, 81] - 8*lambda_1[0, 82] - 8*lambda_1[0, 83] - 8*lambda_1[0, 84] - 24*lambda_1[0, 85] - 24*lambda_1[0, 86] - 24*lambda_1[0, 87] - 24*lambda_1[0, 88] - 24*lambda_1[0, 93] - 8*lambda_1[0, 98] - 16*lambda_1[0, 105] - 16*lambda_1[0, 106] - 16*lambda_1[0, 107] - 16*lambda_1[0, 108] - 16*lambda_1[0, 113] - 4*lambda_1[0, 118] - 4*lambda_1[0, 119] - 4*lambda_1[0, 120] - 4*lambda_1[0, 121] - 4*lambda_1[0, 122] - 4*lambda_1[0, 123] - 4*lambda_1[0, 130] - 4*lambda_1[0, 131] - 4*lambda_1[0, 132] - 4*lambda_1[0, 133] - 8*lambda_1[0, 146] - 8*lambda_1[0, 147] - 8*lambda_1[0, 148] - 8*lambda_1[0, 149] - 8*lambda_1[0, 150] - 8*lambda_1[0, 151] - 8*lambda_1[0, 152] - 8*lambda_1[0, 153] - 8*lambda_1[0, 154] - 8*lambda_1[0, 155] - 8*lambda_1[0, 156] - 8*lambda_1[0, 157] - 16*lambda_1[0, 158] - 16*lambda_1[0, 159] - 16*lambda_1[0, 160] - 16*lambda_1[0, 161] - 16*lambda_1[0, 162] - 16*lambda_1[0, 163] - 8*lambda_1[0, 176] - 8*lambda_1[0, 177] - 8*lambda_1[0, 178] - 8*lambda_1[0, 179] - 16*lambda_1[0, 180] - 16*lambda_1[0, 181] - 16*lambda_1[0, 182] - 16*lambda_1[0, 183] - 8*lambda_1[0, 190] - 8*lambda_1[0, 191] - 8*lambda_1[0, 192] - 8*lambda_1[0, 193] - 8*lambda_1[0, 195] - 8*lambda_1[0, 196] - 8*lambda_1[0, 197] - 8*lambda_1[0, 198] - 8*lambda_1[0, 203] - 8*lambda_1[0, 204] - 8*lambda_1[0, 205] - 8*lambda_1[0, 206] - 8*lambda_1[0, 207] - 8*lambda_1[0, 208]- objc]
	constraints += [V[0, 5] <= -lambda_1[0, 4] - 4*lambda_1[0, 10] - 12*lambda_1[0, 16] - 32*lambda_1[0, 22] - 2*lambda_1[0, 30] - 2*lambda_1[0, 31] - 2*lambda_1[0, 32] - 2*lambda_1[0, 33] - 2*lambda_1[0, 38] - 4*lambda_1[0, 51] - 4*lambda_1[0, 52] - 4*lambda_1[0, 53] - 4*lambda_1[0, 54] - 8*lambda_1[0, 55] - 8*lambda_1[0, 56] - 8*lambda_1[0, 57] - 8*lambda_1[0, 58] - 8*lambda_1[0, 63] - 4*lambda_1[0, 68] - 8*lambda_1[0, 81] - 8*lambda_1[0, 82] - 8*lambda_1[0, 83] - 8*lambda_1[0, 84] - 24*lambda_1[0, 85] - 24*lambda_1[0, 86] - 24*lambda_1[0, 87] - 24*lambda_1[0, 88] - 24*lambda_1[0, 93] - 8*lambda_1[0, 98] - 16*lambda_1[0, 105] - 16*lambda_1[0, 106] - 16*lambda_1[0, 107] - 16*lambda_1[0, 108] - 16*lambda_1[0, 113] - 4*lambda_1[0, 118] - 4*lambda_1[0, 119] - 4*lambda_1[0, 120] - 4*lambda_1[0, 121] - 4*lambda_1[0, 122] - 4*lambda_1[0, 123] - 4*lambda_1[0, 130] - 4*lambda_1[0, 131] - 4*lambda_1[0, 132] - 4*lambda_1[0, 133] - 8*lambda_1[0, 146] - 8*lambda_1[0, 147] - 8*lambda_1[0, 148] - 8*lambda_1[0, 149] - 8*lambda_1[0, 150] - 8*lambda_1[0, 151] - 8*lambda_1[0, 152] - 8*lambda_1[0, 153] - 8*lambda_1[0, 154] - 8*lambda_1[0, 155] - 8*lambda_1[0, 156] - 8*lambda_1[0, 157] - 16*lambda_1[0, 158] - 16*lambda_1[0, 159] - 16*lambda_1[0, 160] - 16*lambda_1[0, 161] - 16*lambda_1[0, 162] - 16*lambda_1[0, 163] - 8*lambda_1[0, 176] - 8*lambda_1[0, 177] - 8*lambda_1[0, 178] - 8*lambda_1[0, 179] - 16*lambda_1[0, 180] - 16*lambda_1[0, 181] - 16*lambda_1[0, 182] - 16*lambda_1[0, 183] - 8*lambda_1[0, 190] - 8*lambda_1[0, 191] - 8*lambda_1[0, 192] - 8*lambda_1[0, 193] - 8*lambda_1[0, 195] - 8*lambda_1[0, 196] - 8*lambda_1[0, 197] - 8*lambda_1[0, 198] - 8*lambda_1[0, 203] - 8*lambda_1[0, 204] - 8*lambda_1[0, 205] - 8*lambda_1[0, 206] - 8*lambda_1[0, 207] - 8*lambda_1[0, 208]+ objc]
	constraints += [V[0, 19] >= lambda_1[0, 30] + 4*lambda_1[0, 51] + 4*lambda_1[0, 55] + 12*lambda_1[0, 81] + 12*lambda_1[0, 85] + 16*lambda_1[0, 105] + 2*lambda_1[0, 118] + 2*lambda_1[0, 119] + 2*lambda_1[0, 121] + 2*lambda_1[0, 130] + 8*lambda_1[0, 146] + 4*lambda_1[0, 147] + 8*lambda_1[0, 148] + 4*lambda_1[0, 150] + 8*lambda_1[0, 152] + 4*lambda_1[0, 155] + 8*lambda_1[0, 158] + 8*lambda_1[0, 159] + 8*lambda_1[0, 161] + 8*lambda_1[0, 176] + 8*lambda_1[0, 180] + 4*lambda_1[0, 190] + 4*lambda_1[0, 195] + 4*lambda_1[0, 196] + 4*lambda_1[0, 197] + 4*lambda_1[0, 203] + 4*lambda_1[0, 204] + 4*lambda_1[0, 206]- objc]
	constraints += [V[0, 19] <= lambda_1[0, 30] + 4*lambda_1[0, 51] + 4*lambda_1[0, 55] + 12*lambda_1[0, 81] + 12*lambda_1[0, 85] + 16*lambda_1[0, 105] + 2*lambda_1[0, 118] + 2*lambda_1[0, 119] + 2*lambda_1[0, 121] + 2*lambda_1[0, 130] + 8*lambda_1[0, 146] + 4*lambda_1[0, 147] + 8*lambda_1[0, 148] + 4*lambda_1[0, 150] + 8*lambda_1[0, 152] + 4*lambda_1[0, 155] + 8*lambda_1[0, 158] + 8*lambda_1[0, 159] + 8*lambda_1[0, 161] + 8*lambda_1[0, 176] + 8*lambda_1[0, 180] + 4*lambda_1[0, 190] + 4*lambda_1[0, 195] + 4*lambda_1[0, 196] + 4*lambda_1[0, 197] + 4*lambda_1[0, 203] + 4*lambda_1[0, 204] + 4*lambda_1[0, 206]+ objc]
	constraints += [V[0, 20] >= lambda_1[0, 31] + 4*lambda_1[0, 52] + 4*lambda_1[0, 56] + 12*lambda_1[0, 82] + 12*lambda_1[0, 86] + 16*lambda_1[0, 106] + 2*lambda_1[0, 118] + 2*lambda_1[0, 120] + 2*lambda_1[0, 122] + 2*lambda_1[0, 131] + 4*lambda_1[0, 146] + 8*lambda_1[0, 147] + 8*lambda_1[0, 149] + 4*lambda_1[0, 151] + 8*lambda_1[0, 153] + 4*lambda_1[0, 156] + 8*lambda_1[0, 158] + 8*lambda_1[0, 160] + 8*lambda_1[0, 162] + 8*lambda_1[0, 177] + 8*lambda_1[0, 181] + 4*lambda_1[0, 191] + 4*lambda_1[0, 195] + 4*lambda_1[0, 196] + 4*lambda_1[0, 198] + 4*lambda_1[0, 203] + 4*lambda_1[0, 205] + 4*lambda_1[0, 207]- objc]
	constraints += [V[0, 20] <= lambda_1[0, 31] + 4*lambda_1[0, 52] + 4*lambda_1[0, 56] + 12*lambda_1[0, 82] + 12*lambda_1[0, 86] + 16*lambda_1[0, 106] + 2*lambda_1[0, 118] + 2*lambda_1[0, 120] + 2*lambda_1[0, 122] + 2*lambda_1[0, 131] + 4*lambda_1[0, 146] + 8*lambda_1[0, 147] + 8*lambda_1[0, 149] + 4*lambda_1[0, 151] + 8*lambda_1[0, 153] + 4*lambda_1[0, 156] + 8*lambda_1[0, 158] + 8*lambda_1[0, 160] + 8*lambda_1[0, 162] + 8*lambda_1[0, 177] + 8*lambda_1[0, 181] + 4*lambda_1[0, 191] + 4*lambda_1[0, 195] + 4*lambda_1[0, 196] + 4*lambda_1[0, 198] + 4*lambda_1[0, 203] + 4*lambda_1[0, 205] + 4*lambda_1[0, 207]+ objc]
	constraints += [V[0, 21] >= lambda_1[0, 32] + 4*lambda_1[0, 53] + 4*lambda_1[0, 57] + 12*lambda_1[0, 83] + 12*lambda_1[0, 87] + 16*lambda_1[0, 107] + 2*lambda_1[0, 119] + 2*lambda_1[0, 120] + 2*lambda_1[0, 123] + 2*lambda_1[0, 132] + 4*lambda_1[0, 148] + 4*lambda_1[0, 149] + 8*lambda_1[0, 150] + 8*lambda_1[0, 151] + 8*lambda_1[0, 154] + 4*lambda_1[0, 157] + 8*lambda_1[0, 159] + 8*lambda_1[0, 160] + 8*lambda_1[0, 163] + 8*lambda_1[0, 178] + 8*lambda_1[0, 182] + 4*lambda_1[0, 192] + 4*lambda_1[0, 195] + 4*lambda_1[0, 197] + 4*lambda_1[0, 198] + 4*lambda_1[0, 204] + 4*lambda_1[0, 205] + 4*lambda_1[0, 208]- objc]
	constraints += [V[0, 21] <= lambda_1[0, 32] + 4*lambda_1[0, 53] + 4*lambda_1[0, 57] + 12*lambda_1[0, 83] + 12*lambda_1[0, 87] + 16*lambda_1[0, 107] + 2*lambda_1[0, 119] + 2*lambda_1[0, 120] + 2*lambda_1[0, 123] + 2*lambda_1[0, 132] + 4*lambda_1[0, 148] + 4*lambda_1[0, 149] + 8*lambda_1[0, 150] + 8*lambda_1[0, 151] + 8*lambda_1[0, 154] + 4*lambda_1[0, 157] + 8*lambda_1[0, 159] + 8*lambda_1[0, 160] + 8*lambda_1[0, 163] + 8*lambda_1[0, 178] + 8*lambda_1[0, 182] + 4*lambda_1[0, 192] + 4*lambda_1[0, 195] + 4*lambda_1[0, 197] + 4*lambda_1[0, 198] + 4*lambda_1[0, 204] + 4*lambda_1[0, 205] + 4*lambda_1[0, 208]+ objc]
	constraints += [V[0, 22] >= lambda_1[0, 33] + 4*lambda_1[0, 54] + 4*lambda_1[0, 58] + 12*lambda_1[0, 84] + 12*lambda_1[0, 88] + 16*lambda_1[0, 108] + 2*lambda_1[0, 121] + 2*lambda_1[0, 122] + 2*lambda_1[0, 123] + 2*lambda_1[0, 133] + 4*lambda_1[0, 152] + 4*lambda_1[0, 153] + 4*lambda_1[0, 154] + 8*lambda_1[0, 155] + 8*lambda_1[0, 156] + 8*lambda_1[0, 157] + 8*lambda_1[0, 161] + 8*lambda_1[0, 162] + 8*lambda_1[0, 163] + 8*lambda_1[0, 179] + 8*lambda_1[0, 183] + 4*lambda_1[0, 193] + 4*lambda_1[0, 196] + 4*lambda_1[0, 197] + 4*lambda_1[0, 198] + 4*lambda_1[0, 206] + 4*lambda_1[0, 207] + 4*lambda_1[0, 208]- objc]
	constraints += [V[0, 22] <= lambda_1[0, 33] + 4*lambda_1[0, 54] + 4*lambda_1[0, 58] + 12*lambda_1[0, 84] + 12*lambda_1[0, 88] + 16*lambda_1[0, 108] + 2*lambda_1[0, 121] + 2*lambda_1[0, 122] + 2*lambda_1[0, 123] + 2*lambda_1[0, 133] + 4*lambda_1[0, 152] + 4*lambda_1[0, 153] + 4*lambda_1[0, 154] + 8*lambda_1[0, 155] + 8*lambda_1[0, 156] + 8*lambda_1[0, 157] + 8*lambda_1[0, 161] + 8*lambda_1[0, 162] + 8*lambda_1[0, 163] + 8*lambda_1[0, 179] + 8*lambda_1[0, 183] + 4*lambda_1[0, 193] + 4*lambda_1[0, 196] + 4*lambda_1[0, 197] + 4*lambda_1[0, 198] + 4*lambda_1[0, 206] + 4*lambda_1[0, 207] + 4*lambda_1[0, 208]+ objc]
	constraints += [V[0, 11] - 0.1 >= lambda_1[0, 10] + 6*lambda_1[0, 16] + 24*lambda_1[0, 22] + 2*lambda_1[0, 55] + 2*lambda_1[0, 56] + 2*lambda_1[0, 57] + 2*lambda_1[0, 58] + 2*lambda_1[0, 63] + 12*lambda_1[0, 85] + 12*lambda_1[0, 86] + 12*lambda_1[0, 87] + 12*lambda_1[0, 88] + 12*lambda_1[0, 93] + 4*lambda_1[0, 105] + 4*lambda_1[0, 106] + 4*lambda_1[0, 107] + 4*lambda_1[0, 108] + 4*lambda_1[0, 113] + 4*lambda_1[0, 158] + 4*lambda_1[0, 159] + 4*lambda_1[0, 160] + 4*lambda_1[0, 161] + 4*lambda_1[0, 162] + 4*lambda_1[0, 163] + 4*lambda_1[0, 180] + 4*lambda_1[0, 181] + 4*lambda_1[0, 182] + 4*lambda_1[0, 183]- objc]
	constraints += [V[0, 11] - 0.1 <= lambda_1[0, 10] + 6*lambda_1[0, 16] + 24*lambda_1[0, 22] + 2*lambda_1[0, 55] + 2*lambda_1[0, 56] + 2*lambda_1[0, 57] + 2*lambda_1[0, 58] + 2*lambda_1[0, 63] + 12*lambda_1[0, 85] + 12*lambda_1[0, 86] + 12*lambda_1[0, 87] + 12*lambda_1[0, 88] + 12*lambda_1[0, 93] + 4*lambda_1[0, 105] + 4*lambda_1[0, 106] + 4*lambda_1[0, 107] + 4*lambda_1[0, 108] + 4*lambda_1[0, 113] + 4*lambda_1[0, 158] + 4*lambda_1[0, 159] + 4*lambda_1[0, 160] + 4*lambda_1[0, 161] + 4*lambda_1[0, 162] + 4*lambda_1[0, 163] + 4*lambda_1[0, 180] + 4*lambda_1[0, 181] + 4*lambda_1[0, 182] + 4*lambda_1[0, 183]+ objc]
	constraints += [V[0, 6] >= -lambda_1[0, 5] - 4*lambda_1[0, 11] - 12*lambda_1[0, 17] - 32*lambda_1[0, 23] - 2*lambda_1[0, 34] - 2*lambda_1[0, 35] - 2*lambda_1[0, 36] - 2*lambda_1[0, 37] - 2*lambda_1[0, 38] - 4*lambda_1[0, 59] - 4*lambda_1[0, 60] - 4*lambda_1[0, 61] - 4*lambda_1[0, 62] - 4*lambda_1[0, 63] - 8*lambda_1[0, 64] - 8*lambda_1[0, 65] - 8*lambda_1[0, 66] - 8*lambda_1[0, 67] - 8*lambda_1[0, 68] - 8*lambda_1[0, 89] - 8*lambda_1[0, 90] - 8*lambda_1[0, 91] - 8*lambda_1[0, 92] - 8*lambda_1[0, 93] - 24*lambda_1[0, 94] - 24*lambda_1[0, 95] - 24*lambda_1[0, 96] - 24*lambda_1[0, 97] - 24*lambda_1[0, 98] - 16*lambda_1[0, 109] - 16*lambda_1[0, 110] - 16*lambda_1[0, 111] - 16*lambda_1[0, 112] - 16*lambda_1[0, 113] - 4*lambda_1[0, 124] - 4*lambda_1[0, 125] - 4*lambda_1[0, 126] - 4*lambda_1[0, 127] - 4*lambda_1[0, 128] - 4*lambda_1[0, 129] - 4*lambda_1[0, 130] - 4*lambda_1[0, 131] - 4*lambda_1[0, 132] - 4*lambda_1[0, 133] - 8*lambda_1[0, 164] - 8*lambda_1[0, 165] - 8*lambda_1[0, 166] - 8*lambda_1[0, 167] - 8*lambda_1[0, 168] - 8*lambda_1[0, 169] - 8*lambda_1[0, 170] - 8*lambda_1[0, 171] - 8*lambda_1[0, 172] - 8*lambda_1[0, 173] - 8*lambda_1[0, 174] - 8*lambda_1[0, 175] - 8*lambda_1[0, 176] - 8*lambda_1[0, 177] - 8*lambda_1[0, 178] - 8*lambda_1[0, 179] - 8*lambda_1[0, 180] - 8*lambda_1[0, 181] - 8*lambda_1[0, 182] - 8*lambda_1[0, 183] - 16*lambda_1[0, 184] - 16*lambda_1[0, 185] - 16*lambda_1[0, 186] - 16*lambda_1[0, 187] - 16*lambda_1[0, 188] - 16*lambda_1[0, 189] - 16*lambda_1[0, 190] - 16*lambda_1[0, 191] - 16*lambda_1[0, 192] - 16*lambda_1[0, 193] - 8*lambda_1[0, 199] - 8*lambda_1[0, 200] - 8*lambda_1[0, 201] - 8*lambda_1[0, 202] - 8*lambda_1[0, 203] - 8*lambda_1[0, 204] - 8*lambda_1[0, 205] - 8*lambda_1[0, 206] - 8*lambda_1[0, 207] - 8*lambda_1[0, 208]- objc]
	constraints += [V[0, 6] <= -lambda_1[0, 5] - 4*lambda_1[0, 11] - 12*lambda_1[0, 17] - 32*lambda_1[0, 23] - 2*lambda_1[0, 34] - 2*lambda_1[0, 35] - 2*lambda_1[0, 36] - 2*lambda_1[0, 37] - 2*lambda_1[0, 38] - 4*lambda_1[0, 59] - 4*lambda_1[0, 60] - 4*lambda_1[0, 61] - 4*lambda_1[0, 62] - 4*lambda_1[0, 63] - 8*lambda_1[0, 64] - 8*lambda_1[0, 65] - 8*lambda_1[0, 66] - 8*lambda_1[0, 67] - 8*lambda_1[0, 68] - 8*lambda_1[0, 89] - 8*lambda_1[0, 90] - 8*lambda_1[0, 91] - 8*lambda_1[0, 92] - 8*lambda_1[0, 93] - 24*lambda_1[0, 94] - 24*lambda_1[0, 95] - 24*lambda_1[0, 96] - 24*lambda_1[0, 97] - 24*lambda_1[0, 98] - 16*lambda_1[0, 109] - 16*lambda_1[0, 110] - 16*lambda_1[0, 111] - 16*lambda_1[0, 112] - 16*lambda_1[0, 113] - 4*lambda_1[0, 124] - 4*lambda_1[0, 125] - 4*lambda_1[0, 126] - 4*lambda_1[0, 127] - 4*lambda_1[0, 128] - 4*lambda_1[0, 129] - 4*lambda_1[0, 130] - 4*lambda_1[0, 131] - 4*lambda_1[0, 132] - 4*lambda_1[0, 133] - 8*lambda_1[0, 164] - 8*lambda_1[0, 165] - 8*lambda_1[0, 166] - 8*lambda_1[0, 167] - 8*lambda_1[0, 168] - 8*lambda_1[0, 169] - 8*lambda_1[0, 170] - 8*lambda_1[0, 171] - 8*lambda_1[0, 172] - 8*lambda_1[0, 173] - 8*lambda_1[0, 174] - 8*lambda_1[0, 175] - 8*lambda_1[0, 176] - 8*lambda_1[0, 177] - 8*lambda_1[0, 178] - 8*lambda_1[0, 179] - 8*lambda_1[0, 180] - 8*lambda_1[0, 181] - 8*lambda_1[0, 182] - 8*lambda_1[0, 183] - 16*lambda_1[0, 184] - 16*lambda_1[0, 185] - 16*lambda_1[0, 186] - 16*lambda_1[0, 187] - 16*lambda_1[0, 188] - 16*lambda_1[0, 189] - 16*lambda_1[0, 190] - 16*lambda_1[0, 191] - 16*lambda_1[0, 192] - 16*lambda_1[0, 193] - 8*lambda_1[0, 199] - 8*lambda_1[0, 200] - 8*lambda_1[0, 201] - 8*lambda_1[0, 202] - 8*lambda_1[0, 203] - 8*lambda_1[0, 204] - 8*lambda_1[0, 205] - 8*lambda_1[0, 206] - 8*lambda_1[0, 207] - 8*lambda_1[0, 208]+ objc]
	constraints += [V[0, 23] >= lambda_1[0, 34] + 4*lambda_1[0, 59] + 4*lambda_1[0, 64] + 12*lambda_1[0, 89] + 12*lambda_1[0, 94] + 16*lambda_1[0, 109] + 2*lambda_1[0, 124] + 2*lambda_1[0, 125] + 2*lambda_1[0, 127] + 2*lambda_1[0, 130] + 8*lambda_1[0, 164] + 4*lambda_1[0, 165] + 8*lambda_1[0, 166] + 4*lambda_1[0, 168] + 8*lambda_1[0, 170] + 4*lambda_1[0, 173] + 8*lambda_1[0, 176] + 4*lambda_1[0, 180] + 8*lambda_1[0, 184] + 8*lambda_1[0, 185] + 8*lambda_1[0, 187] + 8*lambda_1[0, 190] + 4*lambda_1[0, 199] + 4*lambda_1[0, 200] + 4*lambda_1[0, 201] + 4*lambda_1[0, 203] + 4*lambda_1[0, 204] + 4*lambda_1[0, 206]- objc]
	constraints += [V[0, 23] <= lambda_1[0, 34] + 4*lambda_1[0, 59] + 4*lambda_1[0, 64] + 12*lambda_1[0, 89] + 12*lambda_1[0, 94] + 16*lambda_1[0, 109] + 2*lambda_1[0, 124] + 2*lambda_1[0, 125] + 2*lambda_1[0, 127] + 2*lambda_1[0, 130] + 8*lambda_1[0, 164] + 4*lambda_1[0, 165] + 8*lambda_1[0, 166] + 4*lambda_1[0, 168] + 8*lambda_1[0, 170] + 4*lambda_1[0, 173] + 8*lambda_1[0, 176] + 4*lambda_1[0, 180] + 8*lambda_1[0, 184] + 8*lambda_1[0, 185] + 8*lambda_1[0, 187] + 8*lambda_1[0, 190] + 4*lambda_1[0, 199] + 4*lambda_1[0, 200] + 4*lambda_1[0, 201] + 4*lambda_1[0, 203] + 4*lambda_1[0, 204] + 4*lambda_1[0, 206]+ objc]
	constraints += [V[0, 24] >= lambda_1[0, 35] + 4*lambda_1[0, 60] + 4*lambda_1[0, 65] + 12*lambda_1[0, 90] + 12*lambda_1[0, 95] + 16*lambda_1[0, 110] + 2*lambda_1[0, 124] + 2*lambda_1[0, 126] + 2*lambda_1[0, 128] + 2*lambda_1[0, 131] + 4*lambda_1[0, 164] + 8*lambda_1[0, 165] + 8*lambda_1[0, 167] + 4*lambda_1[0, 169] + 8*lambda_1[0, 171] + 4*lambda_1[0, 174] + 8*lambda_1[0, 177] + 4*lambda_1[0, 181] + 8*lambda_1[0, 184] + 8*lambda_1[0, 186] + 8*lambda_1[0, 188] + 8*lambda_1[0, 191] + 4*lambda_1[0, 199] + 4*lambda_1[0, 200] + 4*lambda_1[0, 202] + 4*lambda_1[0, 203] + 4*lambda_1[0, 205] + 4*lambda_1[0, 207]- objc]
	constraints += [V[0, 24] <= lambda_1[0, 35] + 4*lambda_1[0, 60] + 4*lambda_1[0, 65] + 12*lambda_1[0, 90] + 12*lambda_1[0, 95] + 16*lambda_1[0, 110] + 2*lambda_1[0, 124] + 2*lambda_1[0, 126] + 2*lambda_1[0, 128] + 2*lambda_1[0, 131] + 4*lambda_1[0, 164] + 8*lambda_1[0, 165] + 8*lambda_1[0, 167] + 4*lambda_1[0, 169] + 8*lambda_1[0, 171] + 4*lambda_1[0, 174] + 8*lambda_1[0, 177] + 4*lambda_1[0, 181] + 8*lambda_1[0, 184] + 8*lambda_1[0, 186] + 8*lambda_1[0, 188] + 8*lambda_1[0, 191] + 4*lambda_1[0, 199] + 4*lambda_1[0, 200] + 4*lambda_1[0, 202] + 4*lambda_1[0, 203] + 4*lambda_1[0, 205] + 4*lambda_1[0, 207]+ objc]
	constraints += [V[0, 25] >= lambda_1[0, 36] + 4*lambda_1[0, 61] + 4*lambda_1[0, 66] + 12*lambda_1[0, 91] + 12*lambda_1[0, 96] + 16*lambda_1[0, 111] + 2*lambda_1[0, 125] + 2*lambda_1[0, 126] + 2*lambda_1[0, 129] + 2*lambda_1[0, 132] + 4*lambda_1[0, 166] + 4*lambda_1[0, 167] + 8*lambda_1[0, 168] + 8*lambda_1[0, 169] + 8*lambda_1[0, 172] + 4*lambda_1[0, 175] + 8*lambda_1[0, 178] + 4*lambda_1[0, 182] + 8*lambda_1[0, 185] + 8*lambda_1[0, 186] + 8*lambda_1[0, 189] + 8*lambda_1[0, 192] + 4*lambda_1[0, 199] + 4*lambda_1[0, 201] + 4*lambda_1[0, 202] + 4*lambda_1[0, 204] + 4*lambda_1[0, 205] + 4*lambda_1[0, 208]- objc]
	constraints += [V[0, 25] <= lambda_1[0, 36] + 4*lambda_1[0, 61] + 4*lambda_1[0, 66] + 12*lambda_1[0, 91] + 12*lambda_1[0, 96] + 16*lambda_1[0, 111] + 2*lambda_1[0, 125] + 2*lambda_1[0, 126] + 2*lambda_1[0, 129] + 2*lambda_1[0, 132] + 4*lambda_1[0, 166] + 4*lambda_1[0, 167] + 8*lambda_1[0, 168] + 8*lambda_1[0, 169] + 8*lambda_1[0, 172] + 4*lambda_1[0, 175] + 8*lambda_1[0, 178] + 4*lambda_1[0, 182] + 8*lambda_1[0, 185] + 8*lambda_1[0, 186] + 8*lambda_1[0, 189] + 8*lambda_1[0, 192] + 4*lambda_1[0, 199] + 4*lambda_1[0, 201] + 4*lambda_1[0, 202] + 4*lambda_1[0, 204] + 4*lambda_1[0, 205] + 4*lambda_1[0, 208]+ objc]
	constraints += [V[0, 26] >= lambda_1[0, 37] + 4*lambda_1[0, 62] + 4*lambda_1[0, 67] + 12*lambda_1[0, 92] + 12*lambda_1[0, 97] + 16*lambda_1[0, 112] + 2*lambda_1[0, 127] + 2*lambda_1[0, 128] + 2*lambda_1[0, 129] + 2*lambda_1[0, 133] + 4*lambda_1[0, 170] + 4*lambda_1[0, 171] + 4*lambda_1[0, 172] + 8*lambda_1[0, 173] + 8*lambda_1[0, 174] + 8*lambda_1[0, 175] + 8*lambda_1[0, 179] + 4*lambda_1[0, 183] + 8*lambda_1[0, 187] + 8*lambda_1[0, 188] + 8*lambda_1[0, 189] + 8*lambda_1[0, 193] + 4*lambda_1[0, 200] + 4*lambda_1[0, 201] + 4*lambda_1[0, 202] + 4*lambda_1[0, 206] + 4*lambda_1[0, 207] + 4*lambda_1[0, 208]- objc]
	constraints += [V[0, 26] <= lambda_1[0, 37] + 4*lambda_1[0, 62] + 4*lambda_1[0, 67] + 12*lambda_1[0, 92] + 12*lambda_1[0, 97] + 16*lambda_1[0, 112] + 2*lambda_1[0, 127] + 2*lambda_1[0, 128] + 2*lambda_1[0, 129] + 2*lambda_1[0, 133] + 4*lambda_1[0, 170] + 4*lambda_1[0, 171] + 4*lambda_1[0, 172] + 8*lambda_1[0, 173] + 8*lambda_1[0, 174] + 8*lambda_1[0, 175] + 8*lambda_1[0, 179] + 4*lambda_1[0, 183] + 8*lambda_1[0, 187] + 8*lambda_1[0, 188] + 8*lambda_1[0, 189] + 8*lambda_1[0, 193] + 4*lambda_1[0, 200] + 4*lambda_1[0, 201] + 4*lambda_1[0, 202] + 4*lambda_1[0, 206] + 4*lambda_1[0, 207] + 4*lambda_1[0, 208]+ objc]
	constraints += [V[0, 27] >= lambda_1[0, 38] + 4*lambda_1[0, 63] + 4*lambda_1[0, 68] + 12*lambda_1[0, 93] + 12*lambda_1[0, 98] + 16*lambda_1[0, 113] + 2*lambda_1[0, 130] + 2*lambda_1[0, 131] + 2*lambda_1[0, 132] + 2*lambda_1[0, 133] + 4*lambda_1[0, 176] + 4*lambda_1[0, 177] + 4*lambda_1[0, 178] + 4*lambda_1[0, 179] + 8*lambda_1[0, 180] + 8*lambda_1[0, 181] + 8*lambda_1[0, 182] + 8*lambda_1[0, 183] + 8*lambda_1[0, 190] + 8*lambda_1[0, 191] + 8*lambda_1[0, 192] + 8*lambda_1[0, 193] + 4*lambda_1[0, 203] + 4*lambda_1[0, 204] + 4*lambda_1[0, 205] + 4*lambda_1[0, 206] + 4*lambda_1[0, 207] + 4*lambda_1[0, 208]- objc]
	constraints += [V[0, 27] <= lambda_1[0, 38] + 4*lambda_1[0, 63] + 4*lambda_1[0, 68] + 12*lambda_1[0, 93] + 12*lambda_1[0, 98] + 16*lambda_1[0, 113] + 2*lambda_1[0, 130] + 2*lambda_1[0, 131] + 2*lambda_1[0, 132] + 2*lambda_1[0, 133] + 4*lambda_1[0, 176] + 4*lambda_1[0, 177] + 4*lambda_1[0, 178] + 4*lambda_1[0, 179] + 8*lambda_1[0, 180] + 8*lambda_1[0, 181] + 8*lambda_1[0, 182] + 8*lambda_1[0, 183] + 8*lambda_1[0, 190] + 8*lambda_1[0, 191] + 8*lambda_1[0, 192] + 8*lambda_1[0, 193] + 4*lambda_1[0, 203] + 4*lambda_1[0, 204] + 4*lambda_1[0, 205] + 4*lambda_1[0, 206] + 4*lambda_1[0, 207] + 4*lambda_1[0, 208]+ objc]
	constraints += [V[0, 12] - 0.1 >= lambda_1[0, 11] + 6*lambda_1[0, 17] + 24*lambda_1[0, 23] + 2*lambda_1[0, 64] + 2*lambda_1[0, 65] + 2*lambda_1[0, 66] + 2*lambda_1[0, 67] + 2*lambda_1[0, 68] + 12*lambda_1[0, 94] + 12*lambda_1[0, 95] + 12*lambda_1[0, 96] + 12*lambda_1[0, 97] + 12*lambda_1[0, 98] + 4*lambda_1[0, 109] + 4*lambda_1[0, 110] + 4*lambda_1[0, 111] + 4*lambda_1[0, 112] + 4*lambda_1[0, 113] + 4*lambda_1[0, 184] + 4*lambda_1[0, 185] + 4*lambda_1[0, 186] + 4*lambda_1[0, 187] + 4*lambda_1[0, 188] + 4*lambda_1[0, 189] + 4*lambda_1[0, 190] + 4*lambda_1[0, 191] + 4*lambda_1[0, 192] + 4*lambda_1[0, 193]- objc]
	constraints += [V[0, 12] - 0.1 <= lambda_1[0, 11] + 6*lambda_1[0, 17] + 24*lambda_1[0, 23] + 2*lambda_1[0, 64] + 2*lambda_1[0, 65] + 2*lambda_1[0, 66] + 2*lambda_1[0, 67] + 2*lambda_1[0, 68] + 12*lambda_1[0, 94] + 12*lambda_1[0, 95] + 12*lambda_1[0, 96] + 12*lambda_1[0, 97] + 12*lambda_1[0, 98] + 4*lambda_1[0, 109] + 4*lambda_1[0, 110] + 4*lambda_1[0, 111] + 4*lambda_1[0, 112] + 4*lambda_1[0, 113] + 4*lambda_1[0, 184] + 4*lambda_1[0, 185] + 4*lambda_1[0, 186] + 4*lambda_1[0, 187] + 4*lambda_1[0, 188] + 4*lambda_1[0, 189] + 4*lambda_1[0, 190] + 4*lambda_1[0, 191] + 4*lambda_1[0, 192] + 4*lambda_1[0, 193]+ objc]

	#------------------The Lie Derivative conditions------------------
	constraints += [-V[0, 4]*t2[0, 15] >= -lambda_2[0, 0] - 4*lambda_2[0, 6] - 12*lambda_2[0, 12] - 32*lambda_2[0, 18] - 2*lambda_2[0, 24] - 2*lambda_2[0, 25] - 2*lambda_2[0, 27] - 2*lambda_2[0, 30] - 2*lambda_2[0, 34] - 8*lambda_2[0, 39] - 4*lambda_2[0, 40] - 8*lambda_2[0, 41] - 4*lambda_2[0, 43] - 8*lambda_2[0, 45] - 4*lambda_2[0, 48] - 8*lambda_2[0, 51] - 4*lambda_2[0, 55] - 8*lambda_2[0, 59] - 4*lambda_2[0, 64] - 24*lambda_2[0, 69] - 8*lambda_2[0, 70] - 24*lambda_2[0, 71] - 8*lambda_2[0, 73] - 24*lambda_2[0, 75] - 8*lambda_2[0, 78] - 24*lambda_2[0, 81] - 8*lambda_2[0, 85] - 24*lambda_2[0, 89] - 8*lambda_2[0, 94] - 16*lambda_2[0, 99] - 16*lambda_2[0, 100] - 16*lambda_2[0, 102] - 16*lambda_2[0, 105] - 16*lambda_2[0, 109] - 4*lambda_2[0, 114] - 4*lambda_2[0, 115] - 4*lambda_2[0, 116] - 4*lambda_2[0, 118] - 4*lambda_2[0, 119] - 4*lambda_2[0, 121] - 4*lambda_2[0, 124] - 4*lambda_2[0, 125] - 4*lambda_2[0, 127] - 4*lambda_2[0, 130] - 16*lambda_2[0, 134] - 8*lambda_2[0, 135] - 8*lambda_2[0, 136] - 16*lambda_2[0, 137] - 8*lambda_2[0, 138] - 16*lambda_2[0, 139] - 8*lambda_2[0, 141] - 8*lambda_2[0, 143] - 8*lambda_2[0, 144] - 16*lambda_2[0, 146] - 8*lambda_2[0, 147] - 16*lambda_2[0, 148] - 8*lambda_2[0, 150] - 16*lambda_2[0, 152] - 8*lambda_2[0, 155] - 8*lambda_2[0, 158] - 8*lambda_2[0, 159] - 8*lambda_2[0, 161] - 16*lambda_2[0, 164] - 8*lambda_2[0, 165] - 16*lambda_2[0, 166] - 8*lambda_2[0, 168] - 16*lambda_2[0, 170] - 8*lambda_2[0, 173] - 16*lambda_2[0, 176] - 8*lambda_2[0, 180] - 8*lambda_2[0, 184] - 8*lambda_2[0, 185] - 8*lambda_2[0, 187] - 8*lambda_2[0, 190] - 8*lambda_2[0, 194] - 8*lambda_2[0, 195] - 8*lambda_2[0, 196] - 8*lambda_2[0, 197] - 8*lambda_2[0, 199] - 8*lambda_2[0, 200] - 8*lambda_2[0, 201] - 8*lambda_2[0, 203] - 8*lambda_2[0, 204] - 8*lambda_2[0, 206]- objc]
	constraints += [-V[0, 4]*t2[0, 15] <= -lambda_2[0, 0] - 4*lambda_2[0, 6] - 12*lambda_2[0, 12] - 32*lambda_2[0, 18] - 2*lambda_2[0, 24] - 2*lambda_2[0, 25] - 2*lambda_2[0, 27] - 2*lambda_2[0, 30] - 2*lambda_2[0, 34] - 8*lambda_2[0, 39] - 4*lambda_2[0, 40] - 8*lambda_2[0, 41] - 4*lambda_2[0, 43] - 8*lambda_2[0, 45] - 4*lambda_2[0, 48] - 8*lambda_2[0, 51] - 4*lambda_2[0, 55] - 8*lambda_2[0, 59] - 4*lambda_2[0, 64] - 24*lambda_2[0, 69] - 8*lambda_2[0, 70] - 24*lambda_2[0, 71] - 8*lambda_2[0, 73] - 24*lambda_2[0, 75] - 8*lambda_2[0, 78] - 24*lambda_2[0, 81] - 8*lambda_2[0, 85] - 24*lambda_2[0, 89] - 8*lambda_2[0, 94] - 16*lambda_2[0, 99] - 16*lambda_2[0, 100] - 16*lambda_2[0, 102] - 16*lambda_2[0, 105] - 16*lambda_2[0, 109] - 4*lambda_2[0, 114] - 4*lambda_2[0, 115] - 4*lambda_2[0, 116] - 4*lambda_2[0, 118] - 4*lambda_2[0, 119] - 4*lambda_2[0, 121] - 4*lambda_2[0, 124] - 4*lambda_2[0, 125] - 4*lambda_2[0, 127] - 4*lambda_2[0, 130] - 16*lambda_2[0, 134] - 8*lambda_2[0, 135] - 8*lambda_2[0, 136] - 16*lambda_2[0, 137] - 8*lambda_2[0, 138] - 16*lambda_2[0, 139] - 8*lambda_2[0, 141] - 8*lambda_2[0, 143] - 8*lambda_2[0, 144] - 16*lambda_2[0, 146] - 8*lambda_2[0, 147] - 16*lambda_2[0, 148] - 8*lambda_2[0, 150] - 16*lambda_2[0, 152] - 8*lambda_2[0, 155] - 8*lambda_2[0, 158] - 8*lambda_2[0, 159] - 8*lambda_2[0, 161] - 16*lambda_2[0, 164] - 8*lambda_2[0, 165] - 16*lambda_2[0, 166] - 8*lambda_2[0, 168] - 16*lambda_2[0, 170] - 8*lambda_2[0, 173] - 16*lambda_2[0, 176] - 8*lambda_2[0, 180] - 8*lambda_2[0, 184] - 8*lambda_2[0, 185] - 8*lambda_2[0, 187] - 8*lambda_2[0, 190] - 8*lambda_2[0, 194] - 8*lambda_2[0, 195] - 8*lambda_2[0, 196] - 8*lambda_2[0, 197] - 8*lambda_2[0, 199] - 8*lambda_2[0, 200] - 8*lambda_2[0, 201] - 8*lambda_2[0, 203] - 8*lambda_2[0, 204] - 8*lambda_2[0, 206]+ objc]
	constraints += [-V[0, 16]*t2[0, 15] - 0.5 >= lambda_2[0, 6] + 6*lambda_2[0, 12] + 24*lambda_2[0, 18] + 2*lambda_2[0, 39] + 2*lambda_2[0, 41] + 2*lambda_2[0, 45] + 2*lambda_2[0, 51] + 2*lambda_2[0, 59] + 12*lambda_2[0, 69] + 12*lambda_2[0, 71] + 12*lambda_2[0, 75] + 12*lambda_2[0, 81] + 12*lambda_2[0, 89] + 4*lambda_2[0, 99] + 4*lambda_2[0, 100] + 4*lambda_2[0, 102] + 4*lambda_2[0, 105] + 4*lambda_2[0, 109] + 4*lambda_2[0, 134] + 4*lambda_2[0, 137] + 4*lambda_2[0, 139] + 4*lambda_2[0, 146] + 4*lambda_2[0, 148] + 4*lambda_2[0, 152] + 4*lambda_2[0, 164] + 4*lambda_2[0, 166] + 4*lambda_2[0, 170] + 4*lambda_2[0, 176]- objc]
	constraints += [-V[0, 16]*t2[0, 15] - 0.5 <= lambda_2[0, 6] + 6*lambda_2[0, 12] + 24*lambda_2[0, 18] + 2*lambda_2[0, 39] + 2*lambda_2[0, 41] + 2*lambda_2[0, 45] + 2*lambda_2[0, 51] + 2*lambda_2[0, 59] + 12*lambda_2[0, 69] + 12*lambda_2[0, 71] + 12*lambda_2[0, 75] + 12*lambda_2[0, 81] + 12*lambda_2[0, 89] + 4*lambda_2[0, 99] + 4*lambda_2[0, 100] + 4*lambda_2[0, 102] + 4*lambda_2[0, 105] + 4*lambda_2[0, 109] + 4*lambda_2[0, 134] + 4*lambda_2[0, 137] + 4*lambda_2[0, 139] + 4*lambda_2[0, 146] + 4*lambda_2[0, 148] + 4*lambda_2[0, 152] + 4*lambda_2[0, 164] + 4*lambda_2[0, 166] + 4*lambda_2[0, 170] + 4*lambda_2[0, 176]+ objc]
	constraints += [-V[0, 4]*t2[0, 0] >= -lambda_2[0, 12] - 8*lambda_2[0, 18] - 2*lambda_2[0, 69] - 2*lambda_2[0, 71] - 2*lambda_2[0, 75] - 2*lambda_2[0, 81] - 2*lambda_2[0, 89]- objc]
	constraints += [-V[0, 4]*t2[0, 0] <= -lambda_2[0, 12] - 8*lambda_2[0, 18] - 2*lambda_2[0, 69] - 2*lambda_2[0, 71] - 2*lambda_2[0, 75] - 2*lambda_2[0, 81] - 2*lambda_2[0, 89]+ objc]
	constraints += [-V[0, 16]*t2[0, 0] >= lambda_2[0, 18]- objc]
	constraints += [-V[0, 16]*t2[0, 0] <= lambda_2[0, 18]+ objc]
	constraints += [-0.5*V[0, 5]*t1[0, 10] >= -lambda_2[0, 1] - 4*lambda_2[0, 7] - 12*lambda_2[0, 13] - 32*lambda_2[0, 19] - 2*lambda_2[0, 24] - 2*lambda_2[0, 26] - 2*lambda_2[0, 28] - 2*lambda_2[0, 31] - 2*lambda_2[0, 35] - 4*lambda_2[0, 39] - 8*lambda_2[0, 40] - 8*lambda_2[0, 42] - 4*lambda_2[0, 44] - 8*lambda_2[0, 46] - 4*lambda_2[0, 49] - 8*lambda_2[0, 52] - 4*lambda_2[0, 56] - 8*lambda_2[0, 60] - 4*lambda_2[0, 65] - 8*lambda_2[0, 69] - 24*lambda_2[0, 70] - 24*lambda_2[0, 72] - 8*lambda_2[0, 74] - 24*lambda_2[0, 76] - 8*lambda_2[0, 79] - 24*lambda_2[0, 82] - 8*lambda_2[0, 86] - 24*lambda_2[0, 90] - 8*lambda_2[0, 95] - 16*lambda_2[0, 99] - 16*lambda_2[0, 101] - 16*lambda_2[0, 103] - 16*lambda_2[0, 106] - 16*lambda_2[0, 110] - 4*lambda_2[0, 114] - 4*lambda_2[0, 115] - 4*lambda_2[0, 117] - 4*lambda_2[0, 118] - 4*lambda_2[0, 120] - 4*lambda_2[0, 122] - 4*lambda_2[0, 124] - 4*lambda_2[0, 126] - 4*lambda_2[0, 128] - 4*lambda_2[0, 131] - 8*lambda_2[0, 134] - 16*lambda_2[0, 135] - 8*lambda_2[0, 136] - 8*lambda_2[0, 137] - 16*lambda_2[0, 138] - 16*lambda_2[0, 140] - 8*lambda_2[0, 142] - 8*lambda_2[0, 143] - 8*lambda_2[0, 145] - 8*lambda_2[0, 146] - 16*lambda_2[0, 147] - 16*lambda_2[0, 149] - 8*lambda_2[0, 151] - 16*lambda_2[0, 153] - 8*lambda_2[0, 156] - 8*lambda_2[0, 158] - 8*lambda_2[0, 160] - 8*lambda_2[0, 162] - 8*lambda_2[0, 164] - 16*lambda_2[0, 165] - 16*lambda_2[0, 167] - 8*lambda_2[0, 169] - 16*lambda_2[0, 171] - 8*lambda_2[0, 174] - 16*lambda_2[0, 177] - 8*lambda_2[0, 181] - 8*lambda_2[0, 184] - 8*lambda_2[0, 186] - 8*lambda_2[0, 188] - 8*lambda_2[0, 191] - 8*lambda_2[0, 194] - 8*lambda_2[0, 195] - 8*lambda_2[0, 196] - 8*lambda_2[0, 198] - 8*lambda_2[0, 199] - 8*lambda_2[0, 200] - 8*lambda_2[0, 202] - 8*lambda_2[0, 203] - 8*lambda_2[0, 205] - 8*lambda_2[0, 207]- objc]
	constraints += [-0.5*V[0, 5]*t1[0, 10] <= -lambda_2[0, 1] - 4*lambda_2[0, 7] - 12*lambda_2[0, 13] - 32*lambda_2[0, 19] - 2*lambda_2[0, 24] - 2*lambda_2[0, 26] - 2*lambda_2[0, 28] - 2*lambda_2[0, 31] - 2*lambda_2[0, 35] - 4*lambda_2[0, 39] - 8*lambda_2[0, 40] - 8*lambda_2[0, 42] - 4*lambda_2[0, 44] - 8*lambda_2[0, 46] - 4*lambda_2[0, 49] - 8*lambda_2[0, 52] - 4*lambda_2[0, 56] - 8*lambda_2[0, 60] - 4*lambda_2[0, 65] - 8*lambda_2[0, 69] - 24*lambda_2[0, 70] - 24*lambda_2[0, 72] - 8*lambda_2[0, 74] - 24*lambda_2[0, 76] - 8*lambda_2[0, 79] - 24*lambda_2[0, 82] - 8*lambda_2[0, 86] - 24*lambda_2[0, 90] - 8*lambda_2[0, 95] - 16*lambda_2[0, 99] - 16*lambda_2[0, 101] - 16*lambda_2[0, 103] - 16*lambda_2[0, 106] - 16*lambda_2[0, 110] - 4*lambda_2[0, 114] - 4*lambda_2[0, 115] - 4*lambda_2[0, 117] - 4*lambda_2[0, 118] - 4*lambda_2[0, 120] - 4*lambda_2[0, 122] - 4*lambda_2[0, 124] - 4*lambda_2[0, 126] - 4*lambda_2[0, 128] - 4*lambda_2[0, 131] - 8*lambda_2[0, 134] - 16*lambda_2[0, 135] - 8*lambda_2[0, 136] - 8*lambda_2[0, 137] - 16*lambda_2[0, 138] - 16*lambda_2[0, 140] - 8*lambda_2[0, 142] - 8*lambda_2[0, 143] - 8*lambda_2[0, 145] - 8*lambda_2[0, 146] - 16*lambda_2[0, 147] - 16*lambda_2[0, 149] - 8*lambda_2[0, 151] - 16*lambda_2[0, 153] - 8*lambda_2[0, 156] - 8*lambda_2[0, 158] - 8*lambda_2[0, 160] - 8*lambda_2[0, 162] - 8*lambda_2[0, 164] - 16*lambda_2[0, 165] - 16*lambda_2[0, 167] - 8*lambda_2[0, 169] - 16*lambda_2[0, 171] - 8*lambda_2[0, 174] - 16*lambda_2[0, 177] - 8*lambda_2[0, 181] - 8*lambda_2[0, 184] - 8*lambda_2[0, 186] - 8*lambda_2[0, 188] - 8*lambda_2[0, 191] - 8*lambda_2[0, 194] - 8*lambda_2[0, 195] - 8*lambda_2[0, 196] - 8*lambda_2[0, 198] - 8*lambda_2[0, 199] - 8*lambda_2[0, 200] - 8*lambda_2[0, 202] - 8*lambda_2[0, 203] - 8*lambda_2[0, 205] - 8*lambda_2[0, 207]+ objc]
	constraints += [-V[0, 17]*t2[0, 15] - 0.5*V[0, 19]*t1[0, 10] >= lambda_2[0, 24] + 4*lambda_2[0, 39] + 4*lambda_2[0, 40] + 12*lambda_2[0, 69] + 12*lambda_2[0, 70] + 16*lambda_2[0, 99] + 2*lambda_2[0, 114] + 2*lambda_2[0, 115] + 2*lambda_2[0, 118] + 2*lambda_2[0, 124] + 8*lambda_2[0, 134] + 8*lambda_2[0, 135] + 4*lambda_2[0, 136] + 8*lambda_2[0, 137] + 8*lambda_2[0, 138] + 4*lambda_2[0, 143] + 8*lambda_2[0, 146] + 8*lambda_2[0, 147] + 4*lambda_2[0, 158] + 8*lambda_2[0, 164] + 8*lambda_2[0, 165] + 4*lambda_2[0, 184] + 4*lambda_2[0, 194] + 4*lambda_2[0, 195] + 4*lambda_2[0, 196] + 4*lambda_2[0, 199] + 4*lambda_2[0, 200] + 4*lambda_2[0, 203]- objc]
	constraints += [-V[0, 17]*t2[0, 15] - 0.5*V[0, 19]*t1[0, 10] <= lambda_2[0, 24] + 4*lambda_2[0, 39] + 4*lambda_2[0, 40] + 12*lambda_2[0, 69] + 12*lambda_2[0, 70] + 16*lambda_2[0, 99] + 2*lambda_2[0, 114] + 2*lambda_2[0, 115] + 2*lambda_2[0, 118] + 2*lambda_2[0, 124] + 8*lambda_2[0, 134] + 8*lambda_2[0, 135] + 4*lambda_2[0, 136] + 8*lambda_2[0, 137] + 8*lambda_2[0, 138] + 4*lambda_2[0, 143] + 8*lambda_2[0, 146] + 8*lambda_2[0, 147] + 4*lambda_2[0, 158] + 8*lambda_2[0, 164] + 8*lambda_2[0, 165] + 4*lambda_2[0, 184] + 4*lambda_2[0, 194] + 4*lambda_2[0, 195] + 4*lambda_2[0, 196] + 4*lambda_2[0, 199] + 4*lambda_2[0, 200] + 4*lambda_2[0, 203]+ objc]
	constraints += [-0.5*V[0, 5]*t1[0, 7] >= -lambda_2[0, 39] - 6*lambda_2[0, 69] - 4*lambda_2[0, 99] - 2*lambda_2[0, 134] - 2*lambda_2[0, 137] - 2*lambda_2[0, 146] - 2*lambda_2[0, 164]- objc]
	constraints += [-0.5*V[0, 5]*t1[0, 7] <= -lambda_2[0, 39] - 6*lambda_2[0, 69] - 4*lambda_2[0, 99] - 2*lambda_2[0, 134] - 2*lambda_2[0, 137] - 2*lambda_2[0, 146] - 2*lambda_2[0, 164]+ objc]
	constraints += [-V[0, 17]*t2[0, 0] - 0.5*V[0, 19]*t1[0, 7] >= lambda_2[0, 69]- objc]
	constraints += [-V[0, 17]*t2[0, 0] - 0.5*V[0, 19]*t1[0, 7] <= lambda_2[0, 69]+ objc]
	constraints += [-0.5*V[0, 20]*t1[0, 10] - 0.5 >= lambda_2[0, 7] + 6*lambda_2[0, 13] + 24*lambda_2[0, 19] + 2*lambda_2[0, 40] + 2*lambda_2[0, 42] + 2*lambda_2[0, 46] + 2*lambda_2[0, 52] + 2*lambda_2[0, 60] + 12*lambda_2[0, 70] + 12*lambda_2[0, 72] + 12*lambda_2[0, 76] + 12*lambda_2[0, 82] + 12*lambda_2[0, 90] + 4*lambda_2[0, 99] + 4*lambda_2[0, 101] + 4*lambda_2[0, 103] + 4*lambda_2[0, 106] + 4*lambda_2[0, 110] + 4*lambda_2[0, 135] + 4*lambda_2[0, 138] + 4*lambda_2[0, 140] + 4*lambda_2[0, 147] + 4*lambda_2[0, 149] + 4*lambda_2[0, 153] + 4*lambda_2[0, 165] + 4*lambda_2[0, 167] + 4*lambda_2[0, 171] + 4*lambda_2[0, 177]- objc]
	constraints += [-0.5*V[0, 20]*t1[0, 10] - 0.5 <= lambda_2[0, 7] + 6*lambda_2[0, 13] + 24*lambda_2[0, 19] + 2*lambda_2[0, 40] + 2*lambda_2[0, 42] + 2*lambda_2[0, 46] + 2*lambda_2[0, 52] + 2*lambda_2[0, 60] + 12*lambda_2[0, 70] + 12*lambda_2[0, 72] + 12*lambda_2[0, 76] + 12*lambda_2[0, 82] + 12*lambda_2[0, 90] + 4*lambda_2[0, 99] + 4*lambda_2[0, 101] + 4*lambda_2[0, 103] + 4*lambda_2[0, 106] + 4*lambda_2[0, 110] + 4*lambda_2[0, 135] + 4*lambda_2[0, 138] + 4*lambda_2[0, 140] + 4*lambda_2[0, 147] + 4*lambda_2[0, 149] + 4*lambda_2[0, 153] + 4*lambda_2[0, 165] + 4*lambda_2[0, 167] + 4*lambda_2[0, 171] + 4*lambda_2[0, 177]+ objc]
	constraints += [-V[0, 4]*t2[0, 8] >= -lambda_2[0, 40] - 6*lambda_2[0, 70] - 4*lambda_2[0, 99] - 2*lambda_2[0, 135] - 2*lambda_2[0, 138] - 2*lambda_2[0, 147] - 2*lambda_2[0, 165]- objc]
	constraints += [-V[0, 4]*t2[0, 8] <= -lambda_2[0, 40] - 6*lambda_2[0, 70] - 4*lambda_2[0, 99] - 2*lambda_2[0, 135] - 2*lambda_2[0, 138] - 2*lambda_2[0, 147] - 2*lambda_2[0, 165]+ objc]
	constraints += [-V[0, 16]*t2[0, 8] - 0.5*V[0, 20]*t1[0, 7] >= lambda_2[0, 99]- objc]
	constraints += [-V[0, 16]*t2[0, 8] - 0.5*V[0, 20]*t1[0, 7] <= lambda_2[0, 99]+ objc]
	constraints += [-0.5*V[0, 5]*t1[0, 0] >= -lambda_2[0, 13] - 8*lambda_2[0, 19] - 2*lambda_2[0, 70] - 2*lambda_2[0, 72] - 2*lambda_2[0, 76] - 2*lambda_2[0, 82] - 2*lambda_2[0, 90]- objc]
	constraints += [-0.5*V[0, 5]*t1[0, 0] <= -lambda_2[0, 13] - 8*lambda_2[0, 19] - 2*lambda_2[0, 70] - 2*lambda_2[0, 72] - 2*lambda_2[0, 76] - 2*lambda_2[0, 82] - 2*lambda_2[0, 90]+ objc]
	constraints += [-V[0, 17]*t2[0, 8] - 0.5*V[0, 19]*t1[0, 0] >= lambda_2[0, 70]- objc]
	constraints += [-V[0, 17]*t2[0, 8] - 0.5*V[0, 19]*t1[0, 0] <= lambda_2[0, 70]+ objc]
	constraints += [-0.5*V[0, 20]*t1[0, 0] >= lambda_2[0, 19]- objc]
	constraints += [-0.5*V[0, 20]*t1[0, 0] <= lambda_2[0, 19]+ objc]
	constraints += [-0.25*V[0, 6]*t0[0, 7] >= -lambda_2[0, 2] - 4*lambda_2[0, 8] - 12*lambda_2[0, 14] - 32*lambda_2[0, 20] - 2*lambda_2[0, 25] - 2*lambda_2[0, 26] - 2*lambda_2[0, 29] - 2*lambda_2[0, 32] - 2*lambda_2[0, 36] - 4*lambda_2[0, 41] - 4*lambda_2[0, 42] - 8*lambda_2[0, 43] - 8*lambda_2[0, 44] - 8*lambda_2[0, 47] - 4*lambda_2[0, 50] - 8*lambda_2[0, 53] - 4*lambda_2[0, 57] - 8*lambda_2[0, 61] - 4*lambda_2[0, 66] - 8*lambda_2[0, 71] - 8*lambda_2[0, 72] - 24*lambda_2[0, 73] - 24*lambda_2[0, 74] - 24*lambda_2[0, 77] - 8*lambda_2[0, 80] - 24*lambda_2[0, 83] - 8*lambda_2[0, 87] - 24*lambda_2[0, 91] - 8*lambda_2[0, 96] - 16*lambda_2[0, 100] - 16*lambda_2[0, 101] - 16*lambda_2[0, 104] - 16*lambda_2[0, 107] - 16*lambda_2[0, 111] - 4*lambda_2[0, 114] - 4*lambda_2[0, 116] - 4*lambda_2[0, 117] - 4*lambda_2[0, 119] - 4*lambda_2[0, 120] - 4*lambda_2[0, 123] - 4*lambda_2[0, 125] - 4*lambda_2[0, 126] - 4*lambda_2[0, 129] - 4*lambda_2[0, 132] - 8*lambda_2[0, 134] - 8*lambda_2[0, 135] - 16*lambda_2[0, 136] - 8*lambda_2[0, 139] - 8*lambda_2[0, 140] - 16*lambda_2[0, 141] - 16*lambda_2[0, 142] - 8*lambda_2[0, 144] - 8*lambda_2[0, 145] - 8*lambda_2[0, 148] - 8*lambda_2[0, 149] - 16*lambda_2[0, 150] - 16*lambda_2[0, 151] - 16*lambda_2[0, 154] - 8*lambda_2[0, 157] - 8*lambda_2[0, 159] - 8*lambda_2[0, 160] - 8*lambda_2[0, 163] - 8*lambda_2[0, 166] - 8*lambda_2[0, 167] - 16*lambda_2[0, 168] - 16*lambda_2[0, 169] - 16*lambda_2[0, 172] - 8*lambda_2[0, 175] - 16*lambda_2[0, 178] - 8*lambda_2[0, 182] - 8*lambda_2[0, 185] - 8*lambda_2[0, 186] - 8*lambda_2[0, 189] - 8*lambda_2[0, 192] - 8*lambda_2[0, 194] - 8*lambda_2[0, 195] - 8*lambda_2[0, 197] - 8*lambda_2[0, 198] - 8*lambda_2[0, 199] - 8*lambda_2[0, 201] - 8*lambda_2[0, 202] - 8*lambda_2[0, 204] - 8*lambda_2[0, 205] - 8*lambda_2[0, 208]- objc]
	constraints += [-0.25*V[0, 6]*t0[0, 7] <= -lambda_2[0, 2] - 4*lambda_2[0, 8] - 12*lambda_2[0, 14] - 32*lambda_2[0, 20] - 2*lambda_2[0, 25] - 2*lambda_2[0, 26] - 2*lambda_2[0, 29] - 2*lambda_2[0, 32] - 2*lambda_2[0, 36] - 4*lambda_2[0, 41] - 4*lambda_2[0, 42] - 8*lambda_2[0, 43] - 8*lambda_2[0, 44] - 8*lambda_2[0, 47] - 4*lambda_2[0, 50] - 8*lambda_2[0, 53] - 4*lambda_2[0, 57] - 8*lambda_2[0, 61] - 4*lambda_2[0, 66] - 8*lambda_2[0, 71] - 8*lambda_2[0, 72] - 24*lambda_2[0, 73] - 24*lambda_2[0, 74] - 24*lambda_2[0, 77] - 8*lambda_2[0, 80] - 24*lambda_2[0, 83] - 8*lambda_2[0, 87] - 24*lambda_2[0, 91] - 8*lambda_2[0, 96] - 16*lambda_2[0, 100] - 16*lambda_2[0, 101] - 16*lambda_2[0, 104] - 16*lambda_2[0, 107] - 16*lambda_2[0, 111] - 4*lambda_2[0, 114] - 4*lambda_2[0, 116] - 4*lambda_2[0, 117] - 4*lambda_2[0, 119] - 4*lambda_2[0, 120] - 4*lambda_2[0, 123] - 4*lambda_2[0, 125] - 4*lambda_2[0, 126] - 4*lambda_2[0, 129] - 4*lambda_2[0, 132] - 8*lambda_2[0, 134] - 8*lambda_2[0, 135] - 16*lambda_2[0, 136] - 8*lambda_2[0, 139] - 8*lambda_2[0, 140] - 16*lambda_2[0, 141] - 16*lambda_2[0, 142] - 8*lambda_2[0, 144] - 8*lambda_2[0, 145] - 8*lambda_2[0, 148] - 8*lambda_2[0, 149] - 16*lambda_2[0, 150] - 16*lambda_2[0, 151] - 16*lambda_2[0, 154] - 8*lambda_2[0, 157] - 8*lambda_2[0, 159] - 8*lambda_2[0, 160] - 8*lambda_2[0, 163] - 8*lambda_2[0, 166] - 8*lambda_2[0, 167] - 16*lambda_2[0, 168] - 16*lambda_2[0, 169] - 16*lambda_2[0, 172] - 8*lambda_2[0, 175] - 16*lambda_2[0, 178] - 8*lambda_2[0, 182] - 8*lambda_2[0, 185] - 8*lambda_2[0, 186] - 8*lambda_2[0, 189] - 8*lambda_2[0, 192] - 8*lambda_2[0, 194] - 8*lambda_2[0, 195] - 8*lambda_2[0, 197] - 8*lambda_2[0, 198] - 8*lambda_2[0, 199] - 8*lambda_2[0, 201] - 8*lambda_2[0, 202] - 8*lambda_2[0, 204] - 8*lambda_2[0, 205] - 8*lambda_2[0, 208]+ objc]
	constraints += [-V[0, 18]*t2[0, 15] - 0.25*V[0, 23]*t0[0, 7] >= lambda_2[0, 25] + 4*lambda_2[0, 41] + 4*lambda_2[0, 43] + 12*lambda_2[0, 71] + 12*lambda_2[0, 73] + 16*lambda_2[0, 100] + 2*lambda_2[0, 114] + 2*lambda_2[0, 116] + 2*lambda_2[0, 119] + 2*lambda_2[0, 125] + 8*lambda_2[0, 134] + 4*lambda_2[0, 135] + 8*lambda_2[0, 136] + 8*lambda_2[0, 139] + 8*lambda_2[0, 141] + 4*lambda_2[0, 144] + 8*lambda_2[0, 148] + 8*lambda_2[0, 150] + 4*lambda_2[0, 159] + 8*lambda_2[0, 166] + 8*lambda_2[0, 168] + 4*lambda_2[0, 185] + 4*lambda_2[0, 194] + 4*lambda_2[0, 195] + 4*lambda_2[0, 197] + 4*lambda_2[0, 199] + 4*lambda_2[0, 201] + 4*lambda_2[0, 204]- objc]
	constraints += [-V[0, 18]*t2[0, 15] - 0.25*V[0, 23]*t0[0, 7] <= lambda_2[0, 25] + 4*lambda_2[0, 41] + 4*lambda_2[0, 43] + 12*lambda_2[0, 71] + 12*lambda_2[0, 73] + 16*lambda_2[0, 100] + 2*lambda_2[0, 114] + 2*lambda_2[0, 116] + 2*lambda_2[0, 119] + 2*lambda_2[0, 125] + 8*lambda_2[0, 134] + 4*lambda_2[0, 135] + 8*lambda_2[0, 136] + 8*lambda_2[0, 139] + 8*lambda_2[0, 141] + 4*lambda_2[0, 144] + 8*lambda_2[0, 148] + 8*lambda_2[0, 150] + 4*lambda_2[0, 159] + 8*lambda_2[0, 166] + 8*lambda_2[0, 168] + 4*lambda_2[0, 185] + 4*lambda_2[0, 194] + 4*lambda_2[0, 195] + 4*lambda_2[0, 197] + 4*lambda_2[0, 199] + 4*lambda_2[0, 201] + 4*lambda_2[0, 204]+ objc]
	constraints += [-V[0, 18]*t2[0, 0] >= lambda_2[0, 71]- objc]
	constraints += [-V[0, 18]*t2[0, 0] <= lambda_2[0, 71]+ objc]
	constraints += [-0.5*V[0, 21]*t1[0, 10] - 0.25*V[0, 24]*t0[0, 7] >= lambda_2[0, 26] + 4*lambda_2[0, 42] + 4*lambda_2[0, 44] + 12*lambda_2[0, 72] + 12*lambda_2[0, 74] + 16*lambda_2[0, 101] + 2*lambda_2[0, 114] + 2*lambda_2[0, 117] + 2*lambda_2[0, 120] + 2*lambda_2[0, 126] + 4*lambda_2[0, 134] + 8*lambda_2[0, 135] + 8*lambda_2[0, 136] + 8*lambda_2[0, 140] + 8*lambda_2[0, 142] + 4*lambda_2[0, 145] + 8*lambda_2[0, 149] + 8*lambda_2[0, 151] + 4*lambda_2[0, 160] + 8*lambda_2[0, 167] + 8*lambda_2[0, 169] + 4*lambda_2[0, 186] + 4*lambda_2[0, 194] + 4*lambda_2[0, 195] + 4*lambda_2[0, 198] + 4*lambda_2[0, 199] + 4*lambda_2[0, 202] + 4*lambda_2[0, 205]- objc]
	constraints += [-0.5*V[0, 21]*t1[0, 10] - 0.25*V[0, 24]*t0[0, 7] <= lambda_2[0, 26] + 4*lambda_2[0, 42] + 4*lambda_2[0, 44] + 12*lambda_2[0, 72] + 12*lambda_2[0, 74] + 16*lambda_2[0, 101] + 2*lambda_2[0, 114] + 2*lambda_2[0, 117] + 2*lambda_2[0, 120] + 2*lambda_2[0, 126] + 4*lambda_2[0, 134] + 8*lambda_2[0, 135] + 8*lambda_2[0, 136] + 8*lambda_2[0, 140] + 8*lambda_2[0, 142] + 4*lambda_2[0, 145] + 8*lambda_2[0, 149] + 8*lambda_2[0, 151] + 4*lambda_2[0, 160] + 8*lambda_2[0, 167] + 8*lambda_2[0, 169] + 4*lambda_2[0, 186] + 4*lambda_2[0, 194] + 4*lambda_2[0, 195] + 4*lambda_2[0, 198] + 4*lambda_2[0, 199] + 4*lambda_2[0, 202] + 4*lambda_2[0, 205]+ objc]
	constraints += [-0.5*V[0, 21]*t1[0, 7] >= lambda_2[0, 134]- objc]
	constraints += [-0.5*V[0, 21]*t1[0, 7] <= lambda_2[0, 134]+ objc]
	constraints += [-V[0, 18]*t2[0, 8] >= lambda_2[0, 135]- objc]
	constraints += [-V[0, 18]*t2[0, 8] <= lambda_2[0, 135]+ objc]
	constraints += [-0.5*V[0, 21]*t1[0, 0] >= lambda_2[0, 72]- objc]
	constraints += [-0.5*V[0, 21]*t1[0, 0] <= lambda_2[0, 72]+ objc]
	constraints += [-0.25*V[0, 25]*t0[0, 7] - 0.5 >= lambda_2[0, 8] + 6*lambda_2[0, 14] + 24*lambda_2[0, 20] + 2*lambda_2[0, 43] + 2*lambda_2[0, 44] + 2*lambda_2[0, 47] + 2*lambda_2[0, 53] + 2*lambda_2[0, 61] + 12*lambda_2[0, 73] + 12*lambda_2[0, 74] + 12*lambda_2[0, 77] + 12*lambda_2[0, 83] + 12*lambda_2[0, 91] + 4*lambda_2[0, 100] + 4*lambda_2[0, 101] + 4*lambda_2[0, 104] + 4*lambda_2[0, 107] + 4*lambda_2[0, 111] + 4*lambda_2[0, 136] + 4*lambda_2[0, 141] + 4*lambda_2[0, 142] + 4*lambda_2[0, 150] + 4*lambda_2[0, 151] + 4*lambda_2[0, 154] + 4*lambda_2[0, 168] + 4*lambda_2[0, 169] + 4*lambda_2[0, 172] + 4*lambda_2[0, 178]- objc]
	constraints += [-0.25*V[0, 25]*t0[0, 7] - 0.5 <= lambda_2[0, 8] + 6*lambda_2[0, 14] + 24*lambda_2[0, 20] + 2*lambda_2[0, 43] + 2*lambda_2[0, 44] + 2*lambda_2[0, 47] + 2*lambda_2[0, 53] + 2*lambda_2[0, 61] + 12*lambda_2[0, 73] + 12*lambda_2[0, 74] + 12*lambda_2[0, 77] + 12*lambda_2[0, 83] + 12*lambda_2[0, 91] + 4*lambda_2[0, 100] + 4*lambda_2[0, 101] + 4*lambda_2[0, 104] + 4*lambda_2[0, 107] + 4*lambda_2[0, 111] + 4*lambda_2[0, 136] + 4*lambda_2[0, 141] + 4*lambda_2[0, 142] + 4*lambda_2[0, 150] + 4*lambda_2[0, 151] + 4*lambda_2[0, 154] + 4*lambda_2[0, 168] + 4*lambda_2[0, 169] + 4*lambda_2[0, 172] + 4*lambda_2[0, 178]+ objc]
	constraints += [-V[0, 4]*t2[0, 7] >= -lambda_2[0, 43] - 6*lambda_2[0, 73] - 4*lambda_2[0, 100] - 2*lambda_2[0, 136] - 2*lambda_2[0, 141] - 2*lambda_2[0, 150] - 2*lambda_2[0, 168]- objc]
	constraints += [-V[0, 4]*t2[0, 7] <= -lambda_2[0, 43] - 6*lambda_2[0, 73] - 4*lambda_2[0, 100] - 2*lambda_2[0, 136] - 2*lambda_2[0, 141] - 2*lambda_2[0, 150] - 2*lambda_2[0, 168]+ objc]
	constraints += [-V[0, 16]*t2[0, 7] >= lambda_2[0, 100]- objc]
	constraints += [-V[0, 16]*t2[0, 7] <= lambda_2[0, 100]+ objc]
	constraints += [-0.5*V[0, 5]*t1[0, 4] >= -lambda_2[0, 44] - 6*lambda_2[0, 74] - 4*lambda_2[0, 101] - 2*lambda_2[0, 136] - 2*lambda_2[0, 142] - 2*lambda_2[0, 151] - 2*lambda_2[0, 169]- objc]
	constraints += [-0.5*V[0, 5]*t1[0, 4] <= -lambda_2[0, 44] - 6*lambda_2[0, 74] - 4*lambda_2[0, 101] - 2*lambda_2[0, 136] - 2*lambda_2[0, 142] - 2*lambda_2[0, 151] - 2*lambda_2[0, 169]+ objc]
	constraints += [-V[0, 17]*t2[0, 7] - 0.5*V[0, 19]*t1[0, 4] >= lambda_2[0, 136]- objc]
	constraints += [-V[0, 17]*t2[0, 7] - 0.5*V[0, 19]*t1[0, 4] <= lambda_2[0, 136]+ objc]
	constraints += [-0.5*V[0, 20]*t1[0, 4] >= lambda_2[0, 101]- objc]
	constraints += [-0.5*V[0, 20]*t1[0, 4] <= lambda_2[0, 101]+ objc]
	constraints += [-0.25*V[0, 6]*t0[0, 0] >= -lambda_2[0, 14] - 8*lambda_2[0, 20] - 2*lambda_2[0, 73] - 2*lambda_2[0, 74] - 2*lambda_2[0, 77] - 2*lambda_2[0, 83] - 2*lambda_2[0, 91]- objc]
	constraints += [-0.25*V[0, 6]*t0[0, 0] <= -lambda_2[0, 14] - 8*lambda_2[0, 20] - 2*lambda_2[0, 73] - 2*lambda_2[0, 74] - 2*lambda_2[0, 77] - 2*lambda_2[0, 83] - 2*lambda_2[0, 91]+ objc]
	constraints += [-V[0, 18]*t2[0, 7] - 0.25*V[0, 23]*t0[0, 0] >= lambda_2[0, 73]- objc]
	constraints += [-V[0, 18]*t2[0, 7] - 0.25*V[0, 23]*t0[0, 0] <= lambda_2[0, 73]+ objc]
	constraints += [-0.5*V[0, 21]*t1[0, 4] - 0.25*V[0, 24]*t0[0, 0] >= lambda_2[0, 74]- objc]
	constraints += [-0.5*V[0, 21]*t1[0, 4] - 0.25*V[0, 24]*t0[0, 0] <= lambda_2[0, 74]+ objc]
	constraints += [-0.25*V[0, 25]*t0[0, 0] >= lambda_2[0, 20]- objc]
	constraints += [-0.25*V[0, 25]*t0[0, 0] <= lambda_2[0, 20]+ objc]
	constraints += [-0.5*V[0, 1] - V[0, 4]*t2[0, 14] >= -lambda_2[0, 3] - 4*lambda_2[0, 9] - 12*lambda_2[0, 15] - 32*lambda_2[0, 21] - 2*lambda_2[0, 27] - 2*lambda_2[0, 28] - 2*lambda_2[0, 29] - 2*lambda_2[0, 33] - 2*lambda_2[0, 37] - 4*lambda_2[0, 45] - 4*lambda_2[0, 46] - 4*lambda_2[0, 47] - 8*lambda_2[0, 48] - 8*lambda_2[0, 49] - 8*lambda_2[0, 50] - 8*lambda_2[0, 54] - 4*lambda_2[0, 58] - 8*lambda_2[0, 62] - 4*lambda_2[0, 67] - 8*lambda_2[0, 75] - 8*lambda_2[0, 76] - 8*lambda_2[0, 77] - 24*lambda_2[0, 78] - 24*lambda_2[0, 79] - 24*lambda_2[0, 80] - 24*lambda_2[0, 84] - 8*lambda_2[0, 88] - 24*lambda_2[0, 92] - 8*lambda_2[0, 97] - 16*lambda_2[0, 102] - 16*lambda_2[0, 103] - 16*lambda_2[0, 104] - 16*lambda_2[0, 108] - 16*lambda_2[0, 112] - 4*lambda_2[0, 115] - 4*lambda_2[0, 116] - 4*lambda_2[0, 117] - 4*lambda_2[0, 121] - 4*lambda_2[0, 122] - 4*lambda_2[0, 123] - 4*lambda_2[0, 127] - 4*lambda_2[0, 128] - 4*lambda_2[0, 129] - 4*lambda_2[0, 133] - 8*lambda_2[0, 137] - 8*lambda_2[0, 138] - 8*lambda_2[0, 139] - 8*lambda_2[0, 140] - 8*lambda_2[0, 141] - 8*lambda_2[0, 142] - 16*lambda_2[0, 143] - 16*lambda_2[0, 144] - 16*lambda_2[0, 145] - 8*lambda_2[0, 152] - 8*lambda_2[0, 153] - 8*lambda_2[0, 154] - 16*lambda_2[0, 155] - 16*lambda_2[0, 156] - 16*lambda_2[0, 157] - 8*lambda_2[0, 161] - 8*lambda_2[0, 162] - 8*lambda_2[0, 163] - 8*lambda_2[0, 170] - 8*lambda_2[0, 171] - 8*lambda_2[0, 172] - 16*lambda_2[0, 173] - 16*lambda_2[0, 174] - 16*lambda_2[0, 175] - 16*lambda_2[0, 179] - 8*lambda_2[0, 183] - 8*lambda_2[0, 187] - 8*lambda_2[0, 188] - 8*lambda_2[0, 189] - 8*lambda_2[0, 193] - 8*lambda_2[0, 194] - 8*lambda_2[0, 196] - 8*lambda_2[0, 197] - 8*lambda_2[0, 198] - 8*lambda_2[0, 200] - 8*lambda_2[0, 201] - 8*lambda_2[0, 202] - 8*lambda_2[0, 206] - 8*lambda_2[0, 207] - 8*lambda_2[0, 208]- objc]
	constraints += [-0.5*V[0, 1] - V[0, 4]*t2[0, 14] <= -lambda_2[0, 3] - 4*lambda_2[0, 9] - 12*lambda_2[0, 15] - 32*lambda_2[0, 21] - 2*lambda_2[0, 27] - 2*lambda_2[0, 28] - 2*lambda_2[0, 29] - 2*lambda_2[0, 33] - 2*lambda_2[0, 37] - 4*lambda_2[0, 45] - 4*lambda_2[0, 46] - 4*lambda_2[0, 47] - 8*lambda_2[0, 48] - 8*lambda_2[0, 49] - 8*lambda_2[0, 50] - 8*lambda_2[0, 54] - 4*lambda_2[0, 58] - 8*lambda_2[0, 62] - 4*lambda_2[0, 67] - 8*lambda_2[0, 75] - 8*lambda_2[0, 76] - 8*lambda_2[0, 77] - 24*lambda_2[0, 78] - 24*lambda_2[0, 79] - 24*lambda_2[0, 80] - 24*lambda_2[0, 84] - 8*lambda_2[0, 88] - 24*lambda_2[0, 92] - 8*lambda_2[0, 97] - 16*lambda_2[0, 102] - 16*lambda_2[0, 103] - 16*lambda_2[0, 104] - 16*lambda_2[0, 108] - 16*lambda_2[0, 112] - 4*lambda_2[0, 115] - 4*lambda_2[0, 116] - 4*lambda_2[0, 117] - 4*lambda_2[0, 121] - 4*lambda_2[0, 122] - 4*lambda_2[0, 123] - 4*lambda_2[0, 127] - 4*lambda_2[0, 128] - 4*lambda_2[0, 129] - 4*lambda_2[0, 133] - 8*lambda_2[0, 137] - 8*lambda_2[0, 138] - 8*lambda_2[0, 139] - 8*lambda_2[0, 140] - 8*lambda_2[0, 141] - 8*lambda_2[0, 142] - 16*lambda_2[0, 143] - 16*lambda_2[0, 144] - 16*lambda_2[0, 145] - 8*lambda_2[0, 152] - 8*lambda_2[0, 153] - 8*lambda_2[0, 154] - 16*lambda_2[0, 155] - 16*lambda_2[0, 156] - 16*lambda_2[0, 157] - 8*lambda_2[0, 161] - 8*lambda_2[0, 162] - 8*lambda_2[0, 163] - 8*lambda_2[0, 170] - 8*lambda_2[0, 171] - 8*lambda_2[0, 172] - 16*lambda_2[0, 173] - 16*lambda_2[0, 174] - 16*lambda_2[0, 175] - 16*lambda_2[0, 179] - 8*lambda_2[0, 183] - 8*lambda_2[0, 187] - 8*lambda_2[0, 188] - 8*lambda_2[0, 189] - 8*lambda_2[0, 193] - 8*lambda_2[0, 194] - 8*lambda_2[0, 196] - 8*lambda_2[0, 197] - 8*lambda_2[0, 198] - 8*lambda_2[0, 200] - 8*lambda_2[0, 201] - 8*lambda_2[0, 202] - 8*lambda_2[0, 206] - 8*lambda_2[0, 207] - 8*lambda_2[0, 208]+ objc]
	constraints += [-1.0*V[0, 7] - 2*V[0, 10]*t2[0, 15] - V[0, 16]*t2[0, 14] >= lambda_2[0, 27] + 4*lambda_2[0, 45] + 4*lambda_2[0, 48] + 12*lambda_2[0, 75] + 12*lambda_2[0, 78] + 16*lambda_2[0, 102] + 2*lambda_2[0, 115] + 2*lambda_2[0, 116] + 2*lambda_2[0, 121] + 2*lambda_2[0, 127] + 8*lambda_2[0, 137] + 4*lambda_2[0, 138] + 8*lambda_2[0, 139] + 4*lambda_2[0, 141] + 8*lambda_2[0, 143] + 8*lambda_2[0, 144] + 8*lambda_2[0, 152] + 8*lambda_2[0, 155] + 4*lambda_2[0, 161] + 8*lambda_2[0, 170] + 8*lambda_2[0, 173] + 4*lambda_2[0, 187] + 4*lambda_2[0, 194] + 4*lambda_2[0, 196] + 4*lambda_2[0, 197] + 4*lambda_2[0, 200] + 4*lambda_2[0, 201] + 4*lambda_2[0, 206]- objc]
	constraints += [-1.0*V[0, 7] - 2*V[0, 10]*t2[0, 15] - V[0, 16]*t2[0, 14] <= lambda_2[0, 27] + 4*lambda_2[0, 45] + 4*lambda_2[0, 48] + 12*lambda_2[0, 75] + 12*lambda_2[0, 78] + 16*lambda_2[0, 102] + 2*lambda_2[0, 115] + 2*lambda_2[0, 116] + 2*lambda_2[0, 121] + 2*lambda_2[0, 127] + 8*lambda_2[0, 137] + 4*lambda_2[0, 138] + 8*lambda_2[0, 139] + 4*lambda_2[0, 141] + 8*lambda_2[0, 143] + 8*lambda_2[0, 144] + 8*lambda_2[0, 152] + 8*lambda_2[0, 155] + 4*lambda_2[0, 161] + 8*lambda_2[0, 170] + 8*lambda_2[0, 173] + 4*lambda_2[0, 187] + 4*lambda_2[0, 194] + 4*lambda_2[0, 196] + 4*lambda_2[0, 197] + 4*lambda_2[0, 200] + 4*lambda_2[0, 201] + 4*lambda_2[0, 206]+ objc]
	constraints += [-0.5*V[0, 1] - V[0, 4]*t2[0, 10] >= -lambda_2[0, 45] - 6*lambda_2[0, 75] - 4*lambda_2[0, 102] - 2*lambda_2[0, 137] - 2*lambda_2[0, 139] - 2*lambda_2[0, 152] - 2*lambda_2[0, 170]- objc]
	constraints += [-0.5*V[0, 1] - V[0, 4]*t2[0, 10] <= -lambda_2[0, 45] - 6*lambda_2[0, 75] - 4*lambda_2[0, 102] - 2*lambda_2[0, 137] - 2*lambda_2[0, 139] - 2*lambda_2[0, 152] - 2*lambda_2[0, 170]+ objc]
	constraints += [-1.0*V[0, 7] - 2*V[0, 10]*t2[0, 0] - V[0, 16]*t2[0, 10] >= lambda_2[0, 75]- objc]
	constraints += [-1.0*V[0, 7] - 2*V[0, 10]*t2[0, 0] - V[0, 16]*t2[0, 10] <= lambda_2[0, 75]+ objc]
	constraints += [-0.5*V[0, 3] - 0.5*V[0, 13] - V[0, 17]*t2[0, 14] - 0.5*V[0, 22]*t1[0, 10] >= lambda_2[0, 28] + 4*lambda_2[0, 46] + 4*lambda_2[0, 49] + 12*lambda_2[0, 76] + 12*lambda_2[0, 79] + 16*lambda_2[0, 103] + 2*lambda_2[0, 115] + 2*lambda_2[0, 117] + 2*lambda_2[0, 122] + 2*lambda_2[0, 128] + 4*lambda_2[0, 137] + 8*lambda_2[0, 138] + 8*lambda_2[0, 140] + 4*lambda_2[0, 142] + 8*lambda_2[0, 143] + 8*lambda_2[0, 145] + 8*lambda_2[0, 153] + 8*lambda_2[0, 156] + 4*lambda_2[0, 162] + 8*lambda_2[0, 171] + 8*lambda_2[0, 174] + 4*lambda_2[0, 188] + 4*lambda_2[0, 194] + 4*lambda_2[0, 196] + 4*lambda_2[0, 198] + 4*lambda_2[0, 200] + 4*lambda_2[0, 202] + 4*lambda_2[0, 207]- objc]
	constraints += [-0.5*V[0, 3] - 0.5*V[0, 13] - V[0, 17]*t2[0, 14] - 0.5*V[0, 22]*t1[0, 10] <= lambda_2[0, 28] + 4*lambda_2[0, 46] + 4*lambda_2[0, 49] + 12*lambda_2[0, 76] + 12*lambda_2[0, 79] + 16*lambda_2[0, 103] + 2*lambda_2[0, 115] + 2*lambda_2[0, 117] + 2*lambda_2[0, 122] + 2*lambda_2[0, 128] + 4*lambda_2[0, 137] + 8*lambda_2[0, 138] + 8*lambda_2[0, 140] + 4*lambda_2[0, 142] + 8*lambda_2[0, 143] + 8*lambda_2[0, 145] + 8*lambda_2[0, 153] + 8*lambda_2[0, 156] + 4*lambda_2[0, 162] + 8*lambda_2[0, 171] + 8*lambda_2[0, 174] + 4*lambda_2[0, 188] + 4*lambda_2[0, 194] + 4*lambda_2[0, 196] + 4*lambda_2[0, 198] + 4*lambda_2[0, 200] + 4*lambda_2[0, 202] + 4*lambda_2[0, 207]+ objc]
	constraints += [-0.5*V[0, 2] - 0.5*V[0, 14] >= -lambda_2[0, 115] - 4*lambda_2[0, 137] - 4*lambda_2[0, 138] - 4*lambda_2[0, 143] - 2*lambda_2[0, 194] - 2*lambda_2[0, 196] - 2*lambda_2[0, 200]- objc]
	constraints += [-0.5*V[0, 2] - 0.5*V[0, 14] <= -lambda_2[0, 115] - 4*lambda_2[0, 137] - 4*lambda_2[0, 138] - 4*lambda_2[0, 143] - 2*lambda_2[0, 194] - 2*lambda_2[0, 196] - 2*lambda_2[0, 200]+ objc]
	constraints += [-1.0*V[0, 13] - V[0, 17]*t2[0, 10] - 0.5*V[0, 22]*t1[0, 7] >= lambda_2[0, 137]- objc]
	constraints += [-1.0*V[0, 13] - V[0, 17]*t2[0, 10] - 0.5*V[0, 22]*t1[0, 7] <= lambda_2[0, 137]+ objc]
	constraints += [-V[0, 4]*t2[0, 4] - 0.5*V[0, 15] >= -lambda_2[0, 46] - 6*lambda_2[0, 76] - 4*lambda_2[0, 103] - 2*lambda_2[0, 138] - 2*lambda_2[0, 140] - 2*lambda_2[0, 153] - 2*lambda_2[0, 171]- objc]
	constraints += [-V[0, 4]*t2[0, 4] - 0.5*V[0, 15] <= -lambda_2[0, 46] - 6*lambda_2[0, 76] - 4*lambda_2[0, 103] - 2*lambda_2[0, 138] - 2*lambda_2[0, 140] - 2*lambda_2[0, 153] - 2*lambda_2[0, 171]+ objc]
	constraints += [-1.0*V[0, 8] - 2*V[0, 10]*t2[0, 8] - V[0, 16]*t2[0, 4] >= lambda_2[0, 138]- objc]
	constraints += [-1.0*V[0, 8] - 2*V[0, 10]*t2[0, 8] - V[0, 16]*t2[0, 4] <= lambda_2[0, 138]+ objc]
	constraints += [-V[0, 17]*t2[0, 4] - 0.5*V[0, 22]*t1[0, 0] >= lambda_2[0, 76]- objc]
	constraints += [-V[0, 17]*t2[0, 4] - 0.5*V[0, 22]*t1[0, 0] <= lambda_2[0, 76]+ objc]
	constraints += [0.5*V[0, 2] - 0.5*V[0, 14] - V[0, 18]*t2[0, 14] - 0.25*V[0, 26]*t0[0, 7] >= lambda_2[0, 29] + 4*lambda_2[0, 47] + 4*lambda_2[0, 50] + 12*lambda_2[0, 77] + 12*lambda_2[0, 80] + 16*lambda_2[0, 104] + 2*lambda_2[0, 116] + 2*lambda_2[0, 117] + 2*lambda_2[0, 123] + 2*lambda_2[0, 129] + 4*lambda_2[0, 139] + 4*lambda_2[0, 140] + 8*lambda_2[0, 141] + 8*lambda_2[0, 142] + 8*lambda_2[0, 144] + 8*lambda_2[0, 145] + 8*lambda_2[0, 154] + 8*lambda_2[0, 157] + 4*lambda_2[0, 163] + 8*lambda_2[0, 172] + 8*lambda_2[0, 175] + 4*lambda_2[0, 189] + 4*lambda_2[0, 194] + 4*lambda_2[0, 197] + 4*lambda_2[0, 198] + 4*lambda_2[0, 201] + 4*lambda_2[0, 202] + 4*lambda_2[0, 208]- objc]
	constraints += [0.5*V[0, 2] - 0.5*V[0, 14] - V[0, 18]*t2[0, 14] - 0.25*V[0, 26]*t0[0, 7] <= lambda_2[0, 29] + 4*lambda_2[0, 47] + 4*lambda_2[0, 50] + 12*lambda_2[0, 77] + 12*lambda_2[0, 80] + 16*lambda_2[0, 104] + 2*lambda_2[0, 116] + 2*lambda_2[0, 117] + 2*lambda_2[0, 123] + 2*lambda_2[0, 129] + 4*lambda_2[0, 139] + 4*lambda_2[0, 140] + 8*lambda_2[0, 141] + 8*lambda_2[0, 142] + 8*lambda_2[0, 144] + 8*lambda_2[0, 145] + 8*lambda_2[0, 154] + 8*lambda_2[0, 157] + 4*lambda_2[0, 163] + 8*lambda_2[0, 172] + 8*lambda_2[0, 175] + 4*lambda_2[0, 189] + 4*lambda_2[0, 194] + 4*lambda_2[0, 197] + 4*lambda_2[0, 198] + 4*lambda_2[0, 201] + 4*lambda_2[0, 202] + 4*lambda_2[0, 208]+ objc]
	constraints += [-0.5*V[0, 3] + 0.5*V[0, 13] >= -lambda_2[0, 116] - 4*lambda_2[0, 139] - 4*lambda_2[0, 141] - 4*lambda_2[0, 144] - 2*lambda_2[0, 194] - 2*lambda_2[0, 197] - 2*lambda_2[0, 201]- objc]
	constraints += [-0.5*V[0, 3] + 0.5*V[0, 13] <= -lambda_2[0, 116] - 4*lambda_2[0, 139] - 4*lambda_2[0, 141] - 4*lambda_2[0, 144] - 2*lambda_2[0, 194] - 2*lambda_2[0, 197] - 2*lambda_2[0, 201]+ objc]
	constraints += [-1.0*V[0, 14] - V[0, 18]*t2[0, 10] >= lambda_2[0, 139]- objc]
	constraints += [-1.0*V[0, 14] - V[0, 18]*t2[0, 10] <= lambda_2[0, 139]+ objc]
	constraints += [1.0*V[0, 8] - 1.0*V[0, 9] >= -lambda_2[0, 117] - 4*lambda_2[0, 140] - 4*lambda_2[0, 142] - 4*lambda_2[0, 145] - 2*lambda_2[0, 194] - 2*lambda_2[0, 198] - 2*lambda_2[0, 202]- objc]
	constraints += [1.0*V[0, 8] - 1.0*V[0, 9] <= -lambda_2[0, 117] - 4*lambda_2[0, 140] - 4*lambda_2[0, 142] - 4*lambda_2[0, 145] - 2*lambda_2[0, 194] - 2*lambda_2[0, 198] - 2*lambda_2[0, 202]+ objc]
	constraints += [-1.0*V[0, 15] >= lambda_2[0, 194]- objc]
	constraints += [-1.0*V[0, 15] <= lambda_2[0, 194]+ objc]
	constraints += [-V[0, 18]*t2[0, 4] >= lambda_2[0, 140]- objc]
	constraints += [-V[0, 18]*t2[0, 4] <= lambda_2[0, 140]+ objc]
	constraints += [0.5*V[0, 15] >= -lambda_2[0, 47] - 6*lambda_2[0, 77] - 4*lambda_2[0, 104] - 2*lambda_2[0, 141] - 2*lambda_2[0, 142] - 2*lambda_2[0, 154] - 2*lambda_2[0, 172]- objc]
	constraints += [0.5*V[0, 15] <= -lambda_2[0, 47] - 6*lambda_2[0, 77] - 4*lambda_2[0, 104] - 2*lambda_2[0, 141] - 2*lambda_2[0, 142] - 2*lambda_2[0, 154] - 2*lambda_2[0, 172]+ objc]
	constraints += [-1.0*V[0, 9] - 2*V[0, 10]*t2[0, 7] >= lambda_2[0, 141]- objc]
	constraints += [-1.0*V[0, 9] - 2*V[0, 10]*t2[0, 7] <= lambda_2[0, 141]+ objc]
	constraints += [-0.5*V[0, 22]*t1[0, 4] >= lambda_2[0, 142]- objc]
	constraints += [-0.5*V[0, 22]*t1[0, 4] <= lambda_2[0, 142]+ objc]
	constraints += [-0.25*V[0, 26]*t0[0, 0] >= lambda_2[0, 77]- objc]
	constraints += [-0.25*V[0, 26]*t0[0, 0] <= lambda_2[0, 77]+ objc]
	constraints += [-2*V[0, 10]*t2[0, 14] - 0.5*V[0, 16] - 0.5 >= lambda_2[0, 9] + 6*lambda_2[0, 15] + 24*lambda_2[0, 21] + 2*lambda_2[0, 48] + 2*lambda_2[0, 49] + 2*lambda_2[0, 50] + 2*lambda_2[0, 54] + 2*lambda_2[0, 62] + 12*lambda_2[0, 78] + 12*lambda_2[0, 79] + 12*lambda_2[0, 80] + 12*lambda_2[0, 84] + 12*lambda_2[0, 92] + 4*lambda_2[0, 102] + 4*lambda_2[0, 103] + 4*lambda_2[0, 104] + 4*lambda_2[0, 108] + 4*lambda_2[0, 112] + 4*lambda_2[0, 143] + 4*lambda_2[0, 144] + 4*lambda_2[0, 145] + 4*lambda_2[0, 155] + 4*lambda_2[0, 156] + 4*lambda_2[0, 157] + 4*lambda_2[0, 173] + 4*lambda_2[0, 174] + 4*lambda_2[0, 175] + 4*lambda_2[0, 179]- objc]
	constraints += [-2*V[0, 10]*t2[0, 14] - 0.5*V[0, 16] - 0.5 <= lambda_2[0, 9] + 6*lambda_2[0, 15] + 24*lambda_2[0, 21] + 2*lambda_2[0, 48] + 2*lambda_2[0, 49] + 2*lambda_2[0, 50] + 2*lambda_2[0, 54] + 2*lambda_2[0, 62] + 12*lambda_2[0, 78] + 12*lambda_2[0, 79] + 12*lambda_2[0, 80] + 12*lambda_2[0, 84] + 12*lambda_2[0, 92] + 4*lambda_2[0, 102] + 4*lambda_2[0, 103] + 4*lambda_2[0, 104] + 4*lambda_2[0, 108] + 4*lambda_2[0, 112] + 4*lambda_2[0, 143] + 4*lambda_2[0, 144] + 4*lambda_2[0, 145] + 4*lambda_2[0, 155] + 4*lambda_2[0, 156] + 4*lambda_2[0, 157] + 4*lambda_2[0, 173] + 4*lambda_2[0, 174] + 4*lambda_2[0, 175] + 4*lambda_2[0, 179]+ objc]
	constraints += [-V[0, 4]*t2[0, 6] >= -lambda_2[0, 48] - 6*lambda_2[0, 78] - 4*lambda_2[0, 102] - 2*lambda_2[0, 143] - 2*lambda_2[0, 144] - 2*lambda_2[0, 155] - 2*lambda_2[0, 173]- objc]
	constraints += [-V[0, 4]*t2[0, 6] <= -lambda_2[0, 48] - 6*lambda_2[0, 78] - 4*lambda_2[0, 102] - 2*lambda_2[0, 143] - 2*lambda_2[0, 144] - 2*lambda_2[0, 155] - 2*lambda_2[0, 173]+ objc]
	constraints += [-2*V[0, 10]*t2[0, 10] - V[0, 16]*t2[0, 6] - 0.5*V[0, 16] >= lambda_2[0, 102]- objc]
	constraints += [-2*V[0, 10]*t2[0, 10] - V[0, 16]*t2[0, 6] - 0.5*V[0, 16] <= lambda_2[0, 102]+ objc]
	constraints += [-0.5*V[0, 18] >= -lambda_2[0, 49] - 6*lambda_2[0, 79] - 4*lambda_2[0, 103] - 2*lambda_2[0, 143] - 2*lambda_2[0, 145] - 2*lambda_2[0, 156] - 2*lambda_2[0, 174]- objc]
	constraints += [-0.5*V[0, 18] <= -lambda_2[0, 49] - 6*lambda_2[0, 79] - 4*lambda_2[0, 103] - 2*lambda_2[0, 143] - 2*lambda_2[0, 145] - 2*lambda_2[0, 156] - 2*lambda_2[0, 174]+ objc]
	constraints += [-V[0, 17]*t2[0, 6] - 0.5*V[0, 17] >= lambda_2[0, 143]- objc]
	constraints += [-V[0, 17]*t2[0, 6] - 0.5*V[0, 17] <= lambda_2[0, 143]+ objc]
	constraints += [-2*V[0, 10]*t2[0, 4] >= lambda_2[0, 103]- objc]
	constraints += [-2*V[0, 10]*t2[0, 4] <= lambda_2[0, 103]+ objc]
	constraints += [0.5*V[0, 17] >= -lambda_2[0, 50] - 6*lambda_2[0, 80] - 4*lambda_2[0, 104] - 2*lambda_2[0, 144] - 2*lambda_2[0, 145] - 2*lambda_2[0, 157] - 2*lambda_2[0, 175]- objc]
	constraints += [0.5*V[0, 17] <= -lambda_2[0, 50] - 6*lambda_2[0, 80] - 4*lambda_2[0, 104] - 2*lambda_2[0, 144] - 2*lambda_2[0, 145] - 2*lambda_2[0, 157] - 2*lambda_2[0, 175]+ objc]
	constraints += [-V[0, 18]*t2[0, 6] - 0.5*V[0, 18] >= lambda_2[0, 144]- objc]
	constraints += [-V[0, 18]*t2[0, 6] - 0.5*V[0, 18] <= lambda_2[0, 144]+ objc]
	constraints += [-V[0, 4]*t2[0, 1] >= -lambda_2[0, 15] - 8*lambda_2[0, 21] - 2*lambda_2[0, 78] - 2*lambda_2[0, 79] - 2*lambda_2[0, 80] - 2*lambda_2[0, 84] - 2*lambda_2[0, 92]- objc]
	constraints += [-V[0, 4]*t2[0, 1] <= -lambda_2[0, 15] - 8*lambda_2[0, 21] - 2*lambda_2[0, 78] - 2*lambda_2[0, 79] - 2*lambda_2[0, 80] - 2*lambda_2[0, 84] - 2*lambda_2[0, 92]+ objc]
	constraints += [-2*V[0, 10]*t2[0, 6] - V[0, 16]*t2[0, 1] >= lambda_2[0, 78]- objc]
	constraints += [-2*V[0, 10]*t2[0, 6] - V[0, 16]*t2[0, 1] <= lambda_2[0, 78]+ objc]
	constraints += [-V[0, 17]*t2[0, 1] >= lambda_2[0, 79]- objc]
	constraints += [-V[0, 17]*t2[0, 1] <= lambda_2[0, 79]+ objc]
	constraints += [-V[0, 18]*t2[0, 1] >= lambda_2[0, 80]- objc]
	constraints += [-V[0, 18]*t2[0, 1] <= lambda_2[0, 80]+ objc]
	constraints += [-2*V[0, 10]*t2[0, 1] >= lambda_2[0, 21]- objc]
	constraints += [-2*V[0, 10]*t2[0, 1] <= lambda_2[0, 21]+ objc]
	constraints += [-0.5*V[0, 2] - 0.5*V[0, 5]*t1[0, 11] >= -lambda_2[0, 4] - 4*lambda_2[0, 10] - 12*lambda_2[0, 16] - 32*lambda_2[0, 22] - 2*lambda_2[0, 30] - 2*lambda_2[0, 31] - 2*lambda_2[0, 32] - 2*lambda_2[0, 33] - 2*lambda_2[0, 38] - 4*lambda_2[0, 51] - 4*lambda_2[0, 52] - 4*lambda_2[0, 53] - 4*lambda_2[0, 54] - 8*lambda_2[0, 55] - 8*lambda_2[0, 56] - 8*lambda_2[0, 57] - 8*lambda_2[0, 58] - 8*lambda_2[0, 63] - 4*lambda_2[0, 68] - 8*lambda_2[0, 81] - 8*lambda_2[0, 82] - 8*lambda_2[0, 83] - 8*lambda_2[0, 84] - 24*lambda_2[0, 85] - 24*lambda_2[0, 86] - 24*lambda_2[0, 87] - 24*lambda_2[0, 88] - 24*lambda_2[0, 93] - 8*lambda_2[0, 98] - 16*lambda_2[0, 105] - 16*lambda_2[0, 106] - 16*lambda_2[0, 107] - 16*lambda_2[0, 108] - 16*lambda_2[0, 113] - 4*lambda_2[0, 118] - 4*lambda_2[0, 119] - 4*lambda_2[0, 120] - 4*lambda_2[0, 121] - 4*lambda_2[0, 122] - 4*lambda_2[0, 123] - 4*lambda_2[0, 130] - 4*lambda_2[0, 131] - 4*lambda_2[0, 132] - 4*lambda_2[0, 133] - 8*lambda_2[0, 146] - 8*lambda_2[0, 147] - 8*lambda_2[0, 148] - 8*lambda_2[0, 149] - 8*lambda_2[0, 150] - 8*lambda_2[0, 151] - 8*lambda_2[0, 152] - 8*lambda_2[0, 153] - 8*lambda_2[0, 154] - 8*lambda_2[0, 155] - 8*lambda_2[0, 156] - 8*lambda_2[0, 157] - 16*lambda_2[0, 158] - 16*lambda_2[0, 159] - 16*lambda_2[0, 160] - 16*lambda_2[0, 161] - 16*lambda_2[0, 162] - 16*lambda_2[0, 163] - 8*lambda_2[0, 176] - 8*lambda_2[0, 177] - 8*lambda_2[0, 178] - 8*lambda_2[0, 179] - 16*lambda_2[0, 180] - 16*lambda_2[0, 181] - 16*lambda_2[0, 182] - 16*lambda_2[0, 183] - 8*lambda_2[0, 190] - 8*lambda_2[0, 191] - 8*lambda_2[0, 192] - 8*lambda_2[0, 193] - 8*lambda_2[0, 195] - 8*lambda_2[0, 196] - 8*lambda_2[0, 197] - 8*lambda_2[0, 198] - 8*lambda_2[0, 203] - 8*lambda_2[0, 204] - 8*lambda_2[0, 205] - 8*lambda_2[0, 206] - 8*lambda_2[0, 207] - 8*lambda_2[0, 208]- objc]
	constraints += [-0.5*V[0, 2] - 0.5*V[0, 5]*t1[0, 11] <= -lambda_2[0, 4] - 4*lambda_2[0, 10] - 12*lambda_2[0, 16] - 32*lambda_2[0, 22] - 2*lambda_2[0, 30] - 2*lambda_2[0, 31] - 2*lambda_2[0, 32] - 2*lambda_2[0, 33] - 2*lambda_2[0, 38] - 4*lambda_2[0, 51] - 4*lambda_2[0, 52] - 4*lambda_2[0, 53] - 4*lambda_2[0, 54] - 8*lambda_2[0, 55] - 8*lambda_2[0, 56] - 8*lambda_2[0, 57] - 8*lambda_2[0, 58] - 8*lambda_2[0, 63] - 4*lambda_2[0, 68] - 8*lambda_2[0, 81] - 8*lambda_2[0, 82] - 8*lambda_2[0, 83] - 8*lambda_2[0, 84] - 24*lambda_2[0, 85] - 24*lambda_2[0, 86] - 24*lambda_2[0, 87] - 24*lambda_2[0, 88] - 24*lambda_2[0, 93] - 8*lambda_2[0, 98] - 16*lambda_2[0, 105] - 16*lambda_2[0, 106] - 16*lambda_2[0, 107] - 16*lambda_2[0, 108] - 16*lambda_2[0, 113] - 4*lambda_2[0, 118] - 4*lambda_2[0, 119] - 4*lambda_2[0, 120] - 4*lambda_2[0, 121] - 4*lambda_2[0, 122] - 4*lambda_2[0, 123] - 4*lambda_2[0, 130] - 4*lambda_2[0, 131] - 4*lambda_2[0, 132] - 4*lambda_2[0, 133] - 8*lambda_2[0, 146] - 8*lambda_2[0, 147] - 8*lambda_2[0, 148] - 8*lambda_2[0, 149] - 8*lambda_2[0, 150] - 8*lambda_2[0, 151] - 8*lambda_2[0, 152] - 8*lambda_2[0, 153] - 8*lambda_2[0, 154] - 8*lambda_2[0, 155] - 8*lambda_2[0, 156] - 8*lambda_2[0, 157] - 16*lambda_2[0, 158] - 16*lambda_2[0, 159] - 16*lambda_2[0, 160] - 16*lambda_2[0, 161] - 16*lambda_2[0, 162] - 16*lambda_2[0, 163] - 8*lambda_2[0, 176] - 8*lambda_2[0, 177] - 8*lambda_2[0, 178] - 8*lambda_2[0, 179] - 16*lambda_2[0, 180] - 16*lambda_2[0, 181] - 16*lambda_2[0, 182] - 16*lambda_2[0, 183] - 8*lambda_2[0, 190] - 8*lambda_2[0, 191] - 8*lambda_2[0, 192] - 8*lambda_2[0, 193] - 8*lambda_2[0, 195] - 8*lambda_2[0, 196] - 8*lambda_2[0, 197] - 8*lambda_2[0, 198] - 8*lambda_2[0, 203] - 8*lambda_2[0, 204] - 8*lambda_2[0, 205] - 8*lambda_2[0, 206] - 8*lambda_2[0, 207] - 8*lambda_2[0, 208]+ objc]
	constraints += [0.5*V[0, 3] - 0.5*V[0, 13] - 0.5*V[0, 19]*t1[0, 11] - V[0, 22]*t2[0, 15] >= lambda_2[0, 30] + 4*lambda_2[0, 51] + 4*lambda_2[0, 55] + 12*lambda_2[0, 81] + 12*lambda_2[0, 85] + 16*lambda_2[0, 105] + 2*lambda_2[0, 118] + 2*lambda_2[0, 119] + 2*lambda_2[0, 121] + 2*lambda_2[0, 130] + 8*lambda_2[0, 146] + 4*lambda_2[0, 147] + 8*lambda_2[0, 148] + 4*lambda_2[0, 150] + 8*lambda_2[0, 152] + 4*lambda_2[0, 155] + 8*lambda_2[0, 158] + 8*lambda_2[0, 159] + 8*lambda_2[0, 161] + 8*lambda_2[0, 176] + 8*lambda_2[0, 180] + 4*lambda_2[0, 190] + 4*lambda_2[0, 195] + 4*lambda_2[0, 196] + 4*lambda_2[0, 197] + 4*lambda_2[0, 203] + 4*lambda_2[0, 204] + 4*lambda_2[0, 206]- objc]
	constraints += [0.5*V[0, 3] - 0.5*V[0, 13] - 0.5*V[0, 19]*t1[0, 11] - V[0, 22]*t2[0, 15] <= lambda_2[0, 30] + 4*lambda_2[0, 51] + 4*lambda_2[0, 55] + 12*lambda_2[0, 81] + 12*lambda_2[0, 85] + 16*lambda_2[0, 105] + 2*lambda_2[0, 118] + 2*lambda_2[0, 119] + 2*lambda_2[0, 121] + 2*lambda_2[0, 130] + 8*lambda_2[0, 146] + 4*lambda_2[0, 147] + 8*lambda_2[0, 148] + 4*lambda_2[0, 150] + 8*lambda_2[0, 152] + 4*lambda_2[0, 155] + 8*lambda_2[0, 158] + 8*lambda_2[0, 159] + 8*lambda_2[0, 161] + 8*lambda_2[0, 176] + 8*lambda_2[0, 180] + 4*lambda_2[0, 190] + 4*lambda_2[0, 195] + 4*lambda_2[0, 196] + 4*lambda_2[0, 197] + 4*lambda_2[0, 203] + 4*lambda_2[0, 204] + 4*lambda_2[0, 206]+ objc]
	constraints += [-0.5*V[0, 5]*t1[0, 6] + 0.5*V[0, 14] >= -lambda_2[0, 51] - 6*lambda_2[0, 81] - 4*lambda_2[0, 105] - 2*lambda_2[0, 146] - 2*lambda_2[0, 148] - 2*lambda_2[0, 152] - 2*lambda_2[0, 176]- objc]
	constraints += [-0.5*V[0, 5]*t1[0, 6] + 0.5*V[0, 14] <= -lambda_2[0, 51] - 6*lambda_2[0, 81] - 4*lambda_2[0, 105] - 2*lambda_2[0, 146] - 2*lambda_2[0, 148] - 2*lambda_2[0, 152] - 2*lambda_2[0, 176]+ objc]
	constraints += [-0.5*V[0, 19]*t1[0, 6] - V[0, 22]*t2[0, 0] >= lambda_2[0, 81]- objc]
	constraints += [-0.5*V[0, 19]*t1[0, 6] - V[0, 22]*t2[0, 0] <= lambda_2[0, 81]+ objc]
	constraints += [-1.0*V[0, 8] - 1.0*V[0, 11]*t1[0, 10] - 0.5*V[0, 20]*t1[0, 11] >= lambda_2[0, 31] + 4*lambda_2[0, 52] + 4*lambda_2[0, 56] + 12*lambda_2[0, 82] + 12*lambda_2[0, 86] + 16*lambda_2[0, 106] + 2*lambda_2[0, 118] + 2*lambda_2[0, 120] + 2*lambda_2[0, 122] + 2*lambda_2[0, 131] + 4*lambda_2[0, 146] + 8*lambda_2[0, 147] + 8*lambda_2[0, 149] + 4*lambda_2[0, 151] + 8*lambda_2[0, 153] + 4*lambda_2[0, 156] + 8*lambda_2[0, 158] + 8*lambda_2[0, 160] + 8*lambda_2[0, 162] + 8*lambda_2[0, 177] + 8*lambda_2[0, 181] + 4*lambda_2[0, 191] + 4*lambda_2[0, 195] + 4*lambda_2[0, 196] + 4*lambda_2[0, 198] + 4*lambda_2[0, 203] + 4*lambda_2[0, 205] + 4*lambda_2[0, 207]- objc]
	constraints += [-1.0*V[0, 8] - 1.0*V[0, 11]*t1[0, 10] - 0.5*V[0, 20]*t1[0, 11] <= lambda_2[0, 31] + 4*lambda_2[0, 52] + 4*lambda_2[0, 56] + 12*lambda_2[0, 82] + 12*lambda_2[0, 86] + 16*lambda_2[0, 106] + 2*lambda_2[0, 118] + 2*lambda_2[0, 120] + 2*lambda_2[0, 122] + 2*lambda_2[0, 131] + 4*lambda_2[0, 146] + 8*lambda_2[0, 147] + 8*lambda_2[0, 149] + 4*lambda_2[0, 151] + 8*lambda_2[0, 153] + 4*lambda_2[0, 156] + 8*lambda_2[0, 158] + 8*lambda_2[0, 160] + 8*lambda_2[0, 162] + 8*lambda_2[0, 177] + 8*lambda_2[0, 181] + 4*lambda_2[0, 191] + 4*lambda_2[0, 195] + 4*lambda_2[0, 196] + 4*lambda_2[0, 198] + 4*lambda_2[0, 203] + 4*lambda_2[0, 205] + 4*lambda_2[0, 207]+ objc]
	constraints += [-0.5*V[0, 1] - V[0, 4]*t2[0, 13] + 0.5*V[0, 15] >= -lambda_2[0, 118] - 4*lambda_2[0, 146] - 4*lambda_2[0, 147] - 4*lambda_2[0, 158] - 2*lambda_2[0, 195] - 2*lambda_2[0, 196] - 2*lambda_2[0, 203]- objc]
	constraints += [-0.5*V[0, 1] - V[0, 4]*t2[0, 13] + 0.5*V[0, 15] <= -lambda_2[0, 118] - 4*lambda_2[0, 146] - 4*lambda_2[0, 147] - 4*lambda_2[0, 158] - 2*lambda_2[0, 195] - 2*lambda_2[0, 196] - 2*lambda_2[0, 203]+ objc]
	constraints += [-1.0*V[0, 7] - 1.0*V[0, 11]*t1[0, 7] - V[0, 16]*t2[0, 13] - 0.5*V[0, 20]*t1[0, 6] >= lambda_2[0, 146]- objc]
	constraints += [-1.0*V[0, 7] - 1.0*V[0, 11]*t1[0, 7] - V[0, 16]*t2[0, 13] - 0.5*V[0, 20]*t1[0, 6] <= lambda_2[0, 146]+ objc]
	constraints += [-0.5*V[0, 2] - 0.5*V[0, 5]*t1[0, 5] >= -lambda_2[0, 52] - 6*lambda_2[0, 82] - 4*lambda_2[0, 106] - 2*lambda_2[0, 147] - 2*lambda_2[0, 149] - 2*lambda_2[0, 153] - 2*lambda_2[0, 177]- objc]
	constraints += [-0.5*V[0, 2] - 0.5*V[0, 5]*t1[0, 5] <= -lambda_2[0, 52] - 6*lambda_2[0, 82] - 4*lambda_2[0, 106] - 2*lambda_2[0, 147] - 2*lambda_2[0, 149] - 2*lambda_2[0, 153] - 2*lambda_2[0, 177]+ objc]
	constraints += [-1.0*V[0, 13] - V[0, 17]*t2[0, 13] - 0.5*V[0, 19]*t1[0, 5] - V[0, 22]*t2[0, 8] >= lambda_2[0, 147]- objc]
	constraints += [-1.0*V[0, 13] - V[0, 17]*t2[0, 13] - 0.5*V[0, 19]*t1[0, 5] - V[0, 22]*t2[0, 8] <= lambda_2[0, 147]+ objc]
	constraints += [-1.0*V[0, 8] - 1.0*V[0, 11]*t1[0, 0] - 0.5*V[0, 20]*t1[0, 5] >= lambda_2[0, 82]- objc]
	constraints += [-1.0*V[0, 8] - 1.0*V[0, 11]*t1[0, 0] - 0.5*V[0, 20]*t1[0, 5] <= lambda_2[0, 82]+ objc]
	constraints += [-0.5*V[0, 1] - 0.5*V[0, 15] - 0.5*V[0, 21]*t1[0, 11] - 0.25*V[0, 27]*t0[0, 7] >= lambda_2[0, 32] + 4*lambda_2[0, 53] + 4*lambda_2[0, 57] + 12*lambda_2[0, 83] + 12*lambda_2[0, 87] + 16*lambda_2[0, 107] + 2*lambda_2[0, 119] + 2*lambda_2[0, 120] + 2*lambda_2[0, 123] + 2*lambda_2[0, 132] + 4*lambda_2[0, 148] + 4*lambda_2[0, 149] + 8*lambda_2[0, 150] + 8*lambda_2[0, 151] + 8*lambda_2[0, 154] + 4*lambda_2[0, 157] + 8*lambda_2[0, 159] + 8*lambda_2[0, 160] + 8*lambda_2[0, 163] + 8*lambda_2[0, 178] + 8*lambda_2[0, 182] + 4*lambda_2[0, 192] + 4*lambda_2[0, 195] + 4*lambda_2[0, 197] + 4*lambda_2[0, 198] + 4*lambda_2[0, 204] + 4*lambda_2[0, 205] + 4*lambda_2[0, 208]- objc]
	constraints += [-0.5*V[0, 1] - 0.5*V[0, 15] - 0.5*V[0, 21]*t1[0, 11] - 0.25*V[0, 27]*t0[0, 7] <= lambda_2[0, 32] + 4*lambda_2[0, 53] + 4*lambda_2[0, 57] + 12*lambda_2[0, 83] + 12*lambda_2[0, 87] + 16*lambda_2[0, 107] + 2*lambda_2[0, 119] + 2*lambda_2[0, 120] + 2*lambda_2[0, 123] + 2*lambda_2[0, 132] + 4*lambda_2[0, 148] + 4*lambda_2[0, 149] + 8*lambda_2[0, 150] + 8*lambda_2[0, 151] + 8*lambda_2[0, 154] + 4*lambda_2[0, 157] + 8*lambda_2[0, 159] + 8*lambda_2[0, 160] + 8*lambda_2[0, 163] + 8*lambda_2[0, 178] + 8*lambda_2[0, 182] + 4*lambda_2[0, 192] + 4*lambda_2[0, 195] + 4*lambda_2[0, 197] + 4*lambda_2[0, 198] + 4*lambda_2[0, 204] + 4*lambda_2[0, 205] + 4*lambda_2[0, 208]+ objc]
	constraints += [-1.0*V[0, 7] + 1.0*V[0, 9] >= -lambda_2[0, 119] - 4*lambda_2[0, 148] - 4*lambda_2[0, 150] - 4*lambda_2[0, 159] - 2*lambda_2[0, 195] - 2*lambda_2[0, 197] - 2*lambda_2[0, 204]- objc]
	constraints += [-1.0*V[0, 7] + 1.0*V[0, 9] <= -lambda_2[0, 119] - 4*lambda_2[0, 148] - 4*lambda_2[0, 150] - 4*lambda_2[0, 159] - 2*lambda_2[0, 195] - 2*lambda_2[0, 197] - 2*lambda_2[0, 204]+ objc]
	constraints += [-0.5*V[0, 21]*t1[0, 6] >= lambda_2[0, 148]- objc]
	constraints += [-0.5*V[0, 21]*t1[0, 6] <= lambda_2[0, 148]+ objc]
	constraints += [-0.5*V[0, 3] - 0.25*V[0, 6]*t0[0, 8] - 0.5*V[0, 13] >= -lambda_2[0, 120] - 4*lambda_2[0, 149] - 4*lambda_2[0, 151] - 4*lambda_2[0, 160] - 2*lambda_2[0, 195] - 2*lambda_2[0, 198] - 2*lambda_2[0, 205]- objc]
	constraints += [-0.5*V[0, 3] - 0.25*V[0, 6]*t0[0, 8] - 0.5*V[0, 13] <= -lambda_2[0, 120] - 4*lambda_2[0, 149] - 4*lambda_2[0, 151] - 4*lambda_2[0, 160] - 2*lambda_2[0, 195] - 2*lambda_2[0, 198] - 2*lambda_2[0, 205]+ objc]
	constraints += [-1.0*V[0, 14] - V[0, 18]*t2[0, 13] - 0.25*V[0, 23]*t0[0, 8] >= lambda_2[0, 195]- objc]
	constraints += [-1.0*V[0, 14] - V[0, 18]*t2[0, 13] - 0.25*V[0, 23]*t0[0, 8] <= lambda_2[0, 195]+ objc]
	constraints += [-1.0*V[0, 15] - 0.5*V[0, 21]*t1[0, 5] - 0.25*V[0, 24]*t0[0, 8] >= lambda_2[0, 149]- objc]
	constraints += [-1.0*V[0, 15] - 0.5*V[0, 21]*t1[0, 5] - 0.25*V[0, 24]*t0[0, 8] <= lambda_2[0, 149]+ objc]
	constraints += [-0.5*V[0, 5]*t1[0, 2] - 0.5*V[0, 14] >= -lambda_2[0, 53] - 6*lambda_2[0, 83] - 4*lambda_2[0, 107] - 2*lambda_2[0, 150] - 2*lambda_2[0, 151] - 2*lambda_2[0, 154] - 2*lambda_2[0, 178]- objc]
	constraints += [-0.5*V[0, 5]*t1[0, 2] - 0.5*V[0, 14] <= -lambda_2[0, 53] - 6*lambda_2[0, 83] - 4*lambda_2[0, 107] - 2*lambda_2[0, 150] - 2*lambda_2[0, 151] - 2*lambda_2[0, 154] - 2*lambda_2[0, 178]+ objc]
	constraints += [-0.5*V[0, 19]*t1[0, 2] - V[0, 22]*t2[0, 7] >= lambda_2[0, 150]- objc]
	constraints += [-0.5*V[0, 19]*t1[0, 2] - V[0, 22]*t2[0, 7] <= lambda_2[0, 150]+ objc]
	constraints += [-1.0*V[0, 9] - 1.0*V[0, 11]*t1[0, 4] - 0.5*V[0, 20]*t1[0, 2] - 0.25*V[0, 25]*t0[0, 8] >= lambda_2[0, 151]- objc]
	constraints += [-1.0*V[0, 9] - 1.0*V[0, 11]*t1[0, 4] - 0.5*V[0, 20]*t1[0, 2] - 0.25*V[0, 25]*t0[0, 8] <= lambda_2[0, 151]+ objc]
	constraints += [-0.5*V[0, 21]*t1[0, 2] - 0.25*V[0, 27]*t0[0, 0] >= lambda_2[0, 83]- objc]
	constraints += [-0.5*V[0, 21]*t1[0, 2] - 0.25*V[0, 27]*t0[0, 0] <= lambda_2[0, 83]+ objc]
	constraints += [-0.25*V[0, 6] - 0.5*V[0, 17] - 0.5*V[0, 19] - 0.5*V[0, 22]*t1[0, 11] - V[0, 22]*t2[0, 14] >= lambda_2[0, 33] + 4*lambda_2[0, 54] + 4*lambda_2[0, 58] + 12*lambda_2[0, 84] + 12*lambda_2[0, 88] + 16*lambda_2[0, 108] + 2*lambda_2[0, 121] + 2*lambda_2[0, 122] + 2*lambda_2[0, 123] + 2*lambda_2[0, 133] + 4*lambda_2[0, 152] + 4*lambda_2[0, 153] + 4*lambda_2[0, 154] + 8*lambda_2[0, 155] + 8*lambda_2[0, 156] + 8*lambda_2[0, 157] + 8*lambda_2[0, 161] + 8*lambda_2[0, 162] + 8*lambda_2[0, 163] + 8*lambda_2[0, 179] + 8*lambda_2[0, 183] + 4*lambda_2[0, 193] + 4*lambda_2[0, 196] + 4*lambda_2[0, 197] + 4*lambda_2[0, 198] + 4*lambda_2[0, 206] + 4*lambda_2[0, 207] + 4*lambda_2[0, 208]- objc]
	constraints += [-0.25*V[0, 6] - 0.5*V[0, 17] - 0.5*V[0, 19] - 0.5*V[0, 22]*t1[0, 11] - V[0, 22]*t2[0, 14] <= lambda_2[0, 33] + 4*lambda_2[0, 54] + 4*lambda_2[0, 58] + 12*lambda_2[0, 84] + 12*lambda_2[0, 88] + 16*lambda_2[0, 108] + 2*lambda_2[0, 121] + 2*lambda_2[0, 122] + 2*lambda_2[0, 123] + 2*lambda_2[0, 133] + 4*lambda_2[0, 152] + 4*lambda_2[0, 153] + 4*lambda_2[0, 154] + 8*lambda_2[0, 155] + 8*lambda_2[0, 156] + 8*lambda_2[0, 157] + 8*lambda_2[0, 161] + 8*lambda_2[0, 162] + 8*lambda_2[0, 163] + 8*lambda_2[0, 179] + 8*lambda_2[0, 183] + 4*lambda_2[0, 193] + 4*lambda_2[0, 196] + 4*lambda_2[0, 197] + 4*lambda_2[0, 198] + 4*lambda_2[0, 206] + 4*lambda_2[0, 207] + 4*lambda_2[0, 208]+ objc]
	constraints += [0.5*V[0, 18] - 0.25*V[0, 23] >= -lambda_2[0, 121] - 4*lambda_2[0, 152] - 4*lambda_2[0, 155] - 4*lambda_2[0, 161] - 2*lambda_2[0, 196] - 2*lambda_2[0, 197] - 2*lambda_2[0, 206]- objc]
	constraints += [0.5*V[0, 18] - 0.25*V[0, 23] <= -lambda_2[0, 121] - 4*lambda_2[0, 152] - 4*lambda_2[0, 155] - 4*lambda_2[0, 161] - 2*lambda_2[0, 196] - 2*lambda_2[0, 197] - 2*lambda_2[0, 206]+ objc]
	constraints += [-0.5*V[0, 19] - 0.5*V[0, 22]*t1[0, 6] - V[0, 22]*t2[0, 10] >= lambda_2[0, 152]- objc]
	constraints += [-0.5*V[0, 19] - 0.5*V[0, 22]*t1[0, 6] - V[0, 22]*t2[0, 10] <= lambda_2[0, 152]+ objc]
	constraints += [-V[0, 4]*t2[0, 11] - 0.5*V[0, 21] - 0.25*V[0, 24] >= -lambda_2[0, 122] - 4*lambda_2[0, 153] - 4*lambda_2[0, 156] - 4*lambda_2[0, 162] - 2*lambda_2[0, 196] - 2*lambda_2[0, 198] - 2*lambda_2[0, 207]- objc]
	constraints += [-V[0, 4]*t2[0, 11] - 0.5*V[0, 21] - 0.25*V[0, 24] <= -lambda_2[0, 122] - 4*lambda_2[0, 153] - 4*lambda_2[0, 156] - 4*lambda_2[0, 162] - 2*lambda_2[0, 196] - 2*lambda_2[0, 198] - 2*lambda_2[0, 207]+ objc]
	constraints += [-2*V[0, 10]*t2[0, 13] - V[0, 16]*t2[0, 11] - 0.5*V[0, 16] - 0.5*V[0, 20] >= lambda_2[0, 196]- objc]
	constraints += [-2*V[0, 10]*t2[0, 13] - V[0, 16]*t2[0, 11] - 0.5*V[0, 16] - 0.5*V[0, 20] <= lambda_2[0, 196]+ objc]
	constraints += [-V[0, 17]*t2[0, 11] - 0.5*V[0, 17] - 0.5*V[0, 22]*t1[0, 5] - V[0, 22]*t2[0, 4] >= lambda_2[0, 153]- objc]
	constraints += [-V[0, 17]*t2[0, 11] - 0.5*V[0, 17] - 0.5*V[0, 22]*t1[0, 5] - V[0, 22]*t2[0, 4] <= lambda_2[0, 153]+ objc]
	constraints += [-0.5*V[0, 16] + 0.5*V[0, 20] - 0.25*V[0, 25] >= -lambda_2[0, 123] - 4*lambda_2[0, 154] - 4*lambda_2[0, 157] - 4*lambda_2[0, 163] - 2*lambda_2[0, 197] - 2*lambda_2[0, 198] - 2*lambda_2[0, 208]- objc]
	constraints += [-0.5*V[0, 16] + 0.5*V[0, 20] - 0.25*V[0, 25] <= -lambda_2[0, 123] - 4*lambda_2[0, 154] - 4*lambda_2[0, 157] - 4*lambda_2[0, 163] - 2*lambda_2[0, 197] - 2*lambda_2[0, 198] - 2*lambda_2[0, 208]+ objc]
	constraints += [-0.5*V[0, 21] >= lambda_2[0, 197]- objc]
	constraints += [-0.5*V[0, 21] <= lambda_2[0, 197]+ objc]
	constraints += [-V[0, 18]*t2[0, 11] - 0.5*V[0, 18] - 0.25*V[0, 26]*t0[0, 8] >= lambda_2[0, 198]- objc]
	constraints += [-V[0, 18]*t2[0, 11] - 0.5*V[0, 18] - 0.25*V[0, 26]*t0[0, 8] <= lambda_2[0, 198]+ objc]
	constraints += [-0.5*V[0, 22]*t1[0, 2] >= lambda_2[0, 154]- objc]
	constraints += [-0.5*V[0, 22]*t1[0, 2] <= lambda_2[0, 154]+ objc]
	constraints += [-0.25*V[0, 26] >= -lambda_2[0, 54] - 6*lambda_2[0, 84] - 4*lambda_2[0, 108] - 2*lambda_2[0, 155] - 2*lambda_2[0, 156] - 2*lambda_2[0, 157] - 2*lambda_2[0, 179]- objc]
	constraints += [-0.25*V[0, 26] <= -lambda_2[0, 54] - 6*lambda_2[0, 84] - 4*lambda_2[0, 108] - 2*lambda_2[0, 155] - 2*lambda_2[0, 156] - 2*lambda_2[0, 157] - 2*lambda_2[0, 179]+ objc]
	constraints += [-V[0, 22]*t2[0, 6] >= lambda_2[0, 155]- objc]
	constraints += [-V[0, 22]*t2[0, 6] <= lambda_2[0, 155]+ objc]
	constraints += [-2*V[0, 10]*t2[0, 11] >= lambda_2[0, 156]- objc]
	constraints += [-2*V[0, 10]*t2[0, 11] <= lambda_2[0, 156]+ objc]
	constraints += [-V[0, 22]*t2[0, 1] >= lambda_2[0, 84]- objc]
	constraints += [-V[0, 22]*t2[0, 1] <= lambda_2[0, 84]+ objc]
	constraints += [-1.0*V[0, 11]*t1[0, 11] - 0.5*V[0, 20] - 0.5 >= lambda_2[0, 10] + 6*lambda_2[0, 16] + 24*lambda_2[0, 22] + 2*lambda_2[0, 55] + 2*lambda_2[0, 56] + 2*lambda_2[0, 57] + 2*lambda_2[0, 58] + 2*lambda_2[0, 63] + 12*lambda_2[0, 85] + 12*lambda_2[0, 86] + 12*lambda_2[0, 87] + 12*lambda_2[0, 88] + 12*lambda_2[0, 93] + 4*lambda_2[0, 105] + 4*lambda_2[0, 106] + 4*lambda_2[0, 107] + 4*lambda_2[0, 108] + 4*lambda_2[0, 113] + 4*lambda_2[0, 158] + 4*lambda_2[0, 159] + 4*lambda_2[0, 160] + 4*lambda_2[0, 161] + 4*lambda_2[0, 162] + 4*lambda_2[0, 163] + 4*lambda_2[0, 180] + 4*lambda_2[0, 181] + 4*lambda_2[0, 182] + 4*lambda_2[0, 183]- objc]
	constraints += [-1.0*V[0, 11]*t1[0, 11] - 0.5*V[0, 20] - 0.5 <= lambda_2[0, 10] + 6*lambda_2[0, 16] + 24*lambda_2[0, 22] + 2*lambda_2[0, 55] + 2*lambda_2[0, 56] + 2*lambda_2[0, 57] + 2*lambda_2[0, 58] + 2*lambda_2[0, 63] + 12*lambda_2[0, 85] + 12*lambda_2[0, 86] + 12*lambda_2[0, 87] + 12*lambda_2[0, 88] + 12*lambda_2[0, 93] + 4*lambda_2[0, 105] + 4*lambda_2[0, 106] + 4*lambda_2[0, 107] + 4*lambda_2[0, 108] + 4*lambda_2[0, 113] + 4*lambda_2[0, 158] + 4*lambda_2[0, 159] + 4*lambda_2[0, 160] + 4*lambda_2[0, 161] + 4*lambda_2[0, 162] + 4*lambda_2[0, 163] + 4*lambda_2[0, 180] + 4*lambda_2[0, 181] + 4*lambda_2[0, 182] + 4*lambda_2[0, 183]+ objc]
	constraints += [-V[0, 4]*t2[0, 9] + 0.5*V[0, 21] >= -lambda_2[0, 55] - 6*lambda_2[0, 85] - 4*lambda_2[0, 105] - 2*lambda_2[0, 158] - 2*lambda_2[0, 159] - 2*lambda_2[0, 161] - 2*lambda_2[0, 180]- objc]
	constraints += [-V[0, 4]*t2[0, 9] + 0.5*V[0, 21] <= -lambda_2[0, 55] - 6*lambda_2[0, 85] - 4*lambda_2[0, 105] - 2*lambda_2[0, 158] - 2*lambda_2[0, 159] - 2*lambda_2[0, 161] - 2*lambda_2[0, 180]+ objc]
	constraints += [-1.0*V[0, 11]*t1[0, 6] - V[0, 16]*t2[0, 9] >= lambda_2[0, 105]- objc]
	constraints += [-1.0*V[0, 11]*t1[0, 6] - V[0, 16]*t2[0, 9] <= lambda_2[0, 105]+ objc]
	constraints += [-0.5*V[0, 5]*t1[0, 3] >= -lambda_2[0, 56] - 6*lambda_2[0, 86] - 4*lambda_2[0, 106] - 2*lambda_2[0, 158] - 2*lambda_2[0, 160] - 2*lambda_2[0, 162] - 2*lambda_2[0, 181]- objc]
	constraints += [-0.5*V[0, 5]*t1[0, 3] <= -lambda_2[0, 56] - 6*lambda_2[0, 86] - 4*lambda_2[0, 106] - 2*lambda_2[0, 158] - 2*lambda_2[0, 160] - 2*lambda_2[0, 162] - 2*lambda_2[0, 181]+ objc]
	constraints += [-V[0, 17]*t2[0, 9] - 0.5*V[0, 19]*t1[0, 3] - 0.5*V[0, 19] - V[0, 22]*t2[0, 13] >= lambda_2[0, 158]- objc]
	constraints += [-V[0, 17]*t2[0, 9] - 0.5*V[0, 19]*t1[0, 3] - 0.5*V[0, 19] - V[0, 22]*t2[0, 13] <= lambda_2[0, 158]+ objc]
	constraints += [-1.0*V[0, 11]*t1[0, 5] - 0.5*V[0, 20]*t1[0, 3] - 0.5*V[0, 20] >= lambda_2[0, 106]- objc]
	constraints += [-1.0*V[0, 11]*t1[0, 5] - 0.5*V[0, 20]*t1[0, 3] - 0.5*V[0, 20] <= lambda_2[0, 106]+ objc]
	constraints += [-0.5*V[0, 19] >= -lambda_2[0, 57] - 6*lambda_2[0, 87] - 4*lambda_2[0, 107] - 2*lambda_2[0, 159] - 2*lambda_2[0, 160] - 2*lambda_2[0, 163] - 2*lambda_2[0, 182]- objc]
	constraints += [-0.5*V[0, 19] <= -lambda_2[0, 57] - 6*lambda_2[0, 87] - 4*lambda_2[0, 107] - 2*lambda_2[0, 159] - 2*lambda_2[0, 160] - 2*lambda_2[0, 163] - 2*lambda_2[0, 182]+ objc]
	constraints += [-V[0, 18]*t2[0, 9] >= lambda_2[0, 159]- objc]
	constraints += [-V[0, 18]*t2[0, 9] <= lambda_2[0, 159]+ objc]
	constraints += [-0.5*V[0, 21]*t1[0, 3] - 0.5*V[0, 21] - 0.25*V[0, 27]*t0[0, 8] >= lambda_2[0, 160]- objc]
	constraints += [-0.5*V[0, 21]*t1[0, 3] - 0.5*V[0, 21] - 0.25*V[0, 27]*t0[0, 8] <= lambda_2[0, 160]+ objc]
	constraints += [-1.0*V[0, 11]*t1[0, 2] >= lambda_2[0, 107]- objc]
	constraints += [-1.0*V[0, 11]*t1[0, 2] <= lambda_2[0, 107]+ objc]
	constraints += [-V[0, 4]*t2[0, 3] - 0.25*V[0, 27] >= -lambda_2[0, 58] - 6*lambda_2[0, 88] - 4*lambda_2[0, 108] - 2*lambda_2[0, 161] - 2*lambda_2[0, 162] - 2*lambda_2[0, 163] - 2*lambda_2[0, 183]- objc]
	constraints += [-V[0, 4]*t2[0, 3] - 0.25*V[0, 27] <= -lambda_2[0, 58] - 6*lambda_2[0, 88] - 4*lambda_2[0, 108] - 2*lambda_2[0, 161] - 2*lambda_2[0, 162] - 2*lambda_2[0, 163] - 2*lambda_2[0, 183]+ objc]
	constraints += [-2*V[0, 10]*t2[0, 9] - V[0, 16]*t2[0, 3] >= lambda_2[0, 161]- objc]
	constraints += [-2*V[0, 10]*t2[0, 9] - V[0, 16]*t2[0, 3] <= lambda_2[0, 161]+ objc]
	constraints += [-V[0, 17]*t2[0, 3] - 0.5*V[0, 22]*t1[0, 3] - V[0, 22]*t2[0, 11] >= lambda_2[0, 162]- objc]
	constraints += [-V[0, 17]*t2[0, 3] - 0.5*V[0, 22]*t1[0, 3] - V[0, 22]*t2[0, 11] <= lambda_2[0, 162]+ objc]
	constraints += [-V[0, 18]*t2[0, 3] >= lambda_2[0, 163]- objc]
	constraints += [-V[0, 18]*t2[0, 3] <= lambda_2[0, 163]+ objc]
	constraints += [-2*V[0, 10]*t2[0, 3] >= lambda_2[0, 108]- objc]
	constraints += [-2*V[0, 10]*t2[0, 3] <= lambda_2[0, 108]+ objc]
	constraints += [-0.5*V[0, 5]*t1[0, 1] >= -lambda_2[0, 16] - 8*lambda_2[0, 22] - 2*lambda_2[0, 85] - 2*lambda_2[0, 86] - 2*lambda_2[0, 87] - 2*lambda_2[0, 88] - 2*lambda_2[0, 93]- objc]
	constraints += [-0.5*V[0, 5]*t1[0, 1] <= -lambda_2[0, 16] - 8*lambda_2[0, 22] - 2*lambda_2[0, 85] - 2*lambda_2[0, 86] - 2*lambda_2[0, 87] - 2*lambda_2[0, 88] - 2*lambda_2[0, 93]+ objc]
	constraints += [-0.5*V[0, 19]*t1[0, 1] - V[0, 22]*t2[0, 9] >= lambda_2[0, 85]- objc]
	constraints += [-0.5*V[0, 19]*t1[0, 1] - V[0, 22]*t2[0, 9] <= lambda_2[0, 85]+ objc]
	constraints += [-1.0*V[0, 11]*t1[0, 3] - 0.5*V[0, 20]*t1[0, 1] >= lambda_2[0, 86]- objc]
	constraints += [-1.0*V[0, 11]*t1[0, 3] - 0.5*V[0, 20]*t1[0, 1] <= lambda_2[0, 86]+ objc]
	constraints += [-0.5*V[0, 21]*t1[0, 1] >= lambda_2[0, 87]- objc]
	constraints += [-0.5*V[0, 21]*t1[0, 1] <= lambda_2[0, 87]+ objc]
	constraints += [-0.5*V[0, 22]*t1[0, 1] - V[0, 22]*t2[0, 3] >= lambda_2[0, 88]- objc]
	constraints += [-0.5*V[0, 22]*t1[0, 1] - V[0, 22]*t2[0, 3] <= lambda_2[0, 88]+ objc]
	constraints += [-1.0*V[0, 11]*t1[0, 1] >= lambda_2[0, 22]- objc]
	constraints += [-1.0*V[0, 11]*t1[0, 1] <= lambda_2[0, 22]+ objc]
	constraints += [-0.5*V[0, 3] - 0.25*V[0, 6]*t0[0, 6] >= -lambda_2[0, 5] - 4*lambda_2[0, 11] - 12*lambda_2[0, 17] - 32*lambda_2[0, 23] - 2*lambda_2[0, 34] - 2*lambda_2[0, 35] - 2*lambda_2[0, 36] - 2*lambda_2[0, 37] - 2*lambda_2[0, 38] - 4*lambda_2[0, 59] - 4*lambda_2[0, 60] - 4*lambda_2[0, 61] - 4*lambda_2[0, 62] - 4*lambda_2[0, 63] - 8*lambda_2[0, 64] - 8*lambda_2[0, 65] - 8*lambda_2[0, 66] - 8*lambda_2[0, 67] - 8*lambda_2[0, 68] - 8*lambda_2[0, 89] - 8*lambda_2[0, 90] - 8*lambda_2[0, 91] - 8*lambda_2[0, 92] - 8*lambda_2[0, 93] - 24*lambda_2[0, 94] - 24*lambda_2[0, 95] - 24*lambda_2[0, 96] - 24*lambda_2[0, 97] - 24*lambda_2[0, 98] - 16*lambda_2[0, 109] - 16*lambda_2[0, 110] - 16*lambda_2[0, 111] - 16*lambda_2[0, 112] - 16*lambda_2[0, 113] - 4*lambda_2[0, 124] - 4*lambda_2[0, 125] - 4*lambda_2[0, 126] - 4*lambda_2[0, 127] - 4*lambda_2[0, 128] - 4*lambda_2[0, 129] - 4*lambda_2[0, 130] - 4*lambda_2[0, 131] - 4*lambda_2[0, 132] - 4*lambda_2[0, 133] - 8*lambda_2[0, 164] - 8*lambda_2[0, 165] - 8*lambda_2[0, 166] - 8*lambda_2[0, 167] - 8*lambda_2[0, 168] - 8*lambda_2[0, 169] - 8*lambda_2[0, 170] - 8*lambda_2[0, 171] - 8*lambda_2[0, 172] - 8*lambda_2[0, 173] - 8*lambda_2[0, 174] - 8*lambda_2[0, 175] - 8*lambda_2[0, 176] - 8*lambda_2[0, 177] - 8*lambda_2[0, 178] - 8*lambda_2[0, 179] - 8*lambda_2[0, 180] - 8*lambda_2[0, 181] - 8*lambda_2[0, 182] - 8*lambda_2[0, 183] - 16*lambda_2[0, 184] - 16*lambda_2[0, 185] - 16*lambda_2[0, 186] - 16*lambda_2[0, 187] - 16*lambda_2[0, 188] - 16*lambda_2[0, 189] - 16*lambda_2[0, 190] - 16*lambda_2[0, 191] - 16*lambda_2[0, 192] - 16*lambda_2[0, 193] - 8*lambda_2[0, 199] - 8*lambda_2[0, 200] - 8*lambda_2[0, 201] - 8*lambda_2[0, 202] - 8*lambda_2[0, 203] - 8*lambda_2[0, 204] - 8*lambda_2[0, 205] - 8*lambda_2[0, 206] - 8*lambda_2[0, 207] - 8*lambda_2[0, 208]- objc]
	constraints += [-0.5*V[0, 3] - 0.25*V[0, 6]*t0[0, 6] <= -lambda_2[0, 5] - 4*lambda_2[0, 11] - 12*lambda_2[0, 17] - 32*lambda_2[0, 23] - 2*lambda_2[0, 34] - 2*lambda_2[0, 35] - 2*lambda_2[0, 36] - 2*lambda_2[0, 37] - 2*lambda_2[0, 38] - 4*lambda_2[0, 59] - 4*lambda_2[0, 60] - 4*lambda_2[0, 61] - 4*lambda_2[0, 62] - 4*lambda_2[0, 63] - 8*lambda_2[0, 64] - 8*lambda_2[0, 65] - 8*lambda_2[0, 66] - 8*lambda_2[0, 67] - 8*lambda_2[0, 68] - 8*lambda_2[0, 89] - 8*lambda_2[0, 90] - 8*lambda_2[0, 91] - 8*lambda_2[0, 92] - 8*lambda_2[0, 93] - 24*lambda_2[0, 94] - 24*lambda_2[0, 95] - 24*lambda_2[0, 96] - 24*lambda_2[0, 97] - 24*lambda_2[0, 98] - 16*lambda_2[0, 109] - 16*lambda_2[0, 110] - 16*lambda_2[0, 111] - 16*lambda_2[0, 112] - 16*lambda_2[0, 113] - 4*lambda_2[0, 124] - 4*lambda_2[0, 125] - 4*lambda_2[0, 126] - 4*lambda_2[0, 127] - 4*lambda_2[0, 128] - 4*lambda_2[0, 129] - 4*lambda_2[0, 130] - 4*lambda_2[0, 131] - 4*lambda_2[0, 132] - 4*lambda_2[0, 133] - 8*lambda_2[0, 164] - 8*lambda_2[0, 165] - 8*lambda_2[0, 166] - 8*lambda_2[0, 167] - 8*lambda_2[0, 168] - 8*lambda_2[0, 169] - 8*lambda_2[0, 170] - 8*lambda_2[0, 171] - 8*lambda_2[0, 172] - 8*lambda_2[0, 173] - 8*lambda_2[0, 174] - 8*lambda_2[0, 175] - 8*lambda_2[0, 176] - 8*lambda_2[0, 177] - 8*lambda_2[0, 178] - 8*lambda_2[0, 179] - 8*lambda_2[0, 180] - 8*lambda_2[0, 181] - 8*lambda_2[0, 182] - 8*lambda_2[0, 183] - 16*lambda_2[0, 184] - 16*lambda_2[0, 185] - 16*lambda_2[0, 186] - 16*lambda_2[0, 187] - 16*lambda_2[0, 188] - 16*lambda_2[0, 189] - 16*lambda_2[0, 190] - 16*lambda_2[0, 191] - 16*lambda_2[0, 192] - 16*lambda_2[0, 193] - 8*lambda_2[0, 199] - 8*lambda_2[0, 200] - 8*lambda_2[0, 201] - 8*lambda_2[0, 202] - 8*lambda_2[0, 203] - 8*lambda_2[0, 204] - 8*lambda_2[0, 205] - 8*lambda_2[0, 206] - 8*lambda_2[0, 207] - 8*lambda_2[0, 208]+ objc]
	constraints += [-0.5*V[0, 2] - 0.5*V[0, 14] - 0.25*V[0, 23]*t0[0, 6] - V[0, 26]*t2[0, 15] >= lambda_2[0, 34] + 4*lambda_2[0, 59] + 4*lambda_2[0, 64] + 12*lambda_2[0, 89] + 12*lambda_2[0, 94] + 16*lambda_2[0, 109] + 2*lambda_2[0, 124] + 2*lambda_2[0, 125] + 2*lambda_2[0, 127] + 2*lambda_2[0, 130] + 8*lambda_2[0, 164] + 4*lambda_2[0, 165] + 8*lambda_2[0, 166] + 4*lambda_2[0, 168] + 8*lambda_2[0, 170] + 4*lambda_2[0, 173] + 8*lambda_2[0, 176] + 4*lambda_2[0, 180] + 8*lambda_2[0, 184] + 8*lambda_2[0, 185] + 8*lambda_2[0, 187] + 8*lambda_2[0, 190] + 4*lambda_2[0, 199] + 4*lambda_2[0, 200] + 4*lambda_2[0, 201] + 4*lambda_2[0, 203] + 4*lambda_2[0, 204] + 4*lambda_2[0, 206]- objc]
	constraints += [-0.5*V[0, 2] - 0.5*V[0, 14] - 0.25*V[0, 23]*t0[0, 6] - V[0, 26]*t2[0, 15] <= lambda_2[0, 34] + 4*lambda_2[0, 59] + 4*lambda_2[0, 64] + 12*lambda_2[0, 89] + 12*lambda_2[0, 94] + 16*lambda_2[0, 109] + 2*lambda_2[0, 124] + 2*lambda_2[0, 125] + 2*lambda_2[0, 127] + 2*lambda_2[0, 130] + 8*lambda_2[0, 164] + 4*lambda_2[0, 165] + 8*lambda_2[0, 166] + 4*lambda_2[0, 168] + 8*lambda_2[0, 170] + 4*lambda_2[0, 173] + 8*lambda_2[0, 176] + 4*lambda_2[0, 180] + 8*lambda_2[0, 184] + 8*lambda_2[0, 185] + 8*lambda_2[0, 187] + 8*lambda_2[0, 190] + 4*lambda_2[0, 199] + 4*lambda_2[0, 200] + 4*lambda_2[0, 201] + 4*lambda_2[0, 203] + 4*lambda_2[0, 204] + 4*lambda_2[0, 206]+ objc]
	constraints += [-0.25*V[0, 6]*t0[0, 4] - 0.5*V[0, 13] >= -lambda_2[0, 59] - 6*lambda_2[0, 89] - 4*lambda_2[0, 109] - 2*lambda_2[0, 164] - 2*lambda_2[0, 166] - 2*lambda_2[0, 170] - 2*lambda_2[0, 176]- objc]
	constraints += [-0.25*V[0, 6]*t0[0, 4] - 0.5*V[0, 13] <= -lambda_2[0, 59] - 6*lambda_2[0, 89] - 4*lambda_2[0, 109] - 2*lambda_2[0, 164] - 2*lambda_2[0, 166] - 2*lambda_2[0, 170] - 2*lambda_2[0, 176]+ objc]
	constraints += [-0.25*V[0, 23]*t0[0, 4] - V[0, 26]*t2[0, 0] >= lambda_2[0, 89]- objc]
	constraints += [-0.25*V[0, 23]*t0[0, 4] - V[0, 26]*t2[0, 0] <= lambda_2[0, 89]+ objc]
	constraints += [0.5*V[0, 1] - 0.5*V[0, 15] - 0.25*V[0, 24]*t0[0, 6] - 0.5*V[0, 27]*t1[0, 10] >= lambda_2[0, 35] + 4*lambda_2[0, 60] + 4*lambda_2[0, 65] + 12*lambda_2[0, 90] + 12*lambda_2[0, 95] + 16*lambda_2[0, 110] + 2*lambda_2[0, 124] + 2*lambda_2[0, 126] + 2*lambda_2[0, 128] + 2*lambda_2[0, 131] + 4*lambda_2[0, 164] + 8*lambda_2[0, 165] + 8*lambda_2[0, 167] + 4*lambda_2[0, 169] + 8*lambda_2[0, 171] + 4*lambda_2[0, 174] + 8*lambda_2[0, 177] + 4*lambda_2[0, 181] + 8*lambda_2[0, 184] + 8*lambda_2[0, 186] + 8*lambda_2[0, 188] + 8*lambda_2[0, 191] + 4*lambda_2[0, 199] + 4*lambda_2[0, 200] + 4*lambda_2[0, 202] + 4*lambda_2[0, 203] + 4*lambda_2[0, 205] + 4*lambda_2[0, 207]- objc]
	constraints += [0.5*V[0, 1] - 0.5*V[0, 15] - 0.25*V[0, 24]*t0[0, 6] - 0.5*V[0, 27]*t1[0, 10] <= lambda_2[0, 35] + 4*lambda_2[0, 60] + 4*lambda_2[0, 65] + 12*lambda_2[0, 90] + 12*lambda_2[0, 95] + 16*lambda_2[0, 110] + 2*lambda_2[0, 124] + 2*lambda_2[0, 126] + 2*lambda_2[0, 128] + 2*lambda_2[0, 131] + 4*lambda_2[0, 164] + 8*lambda_2[0, 165] + 8*lambda_2[0, 167] + 4*lambda_2[0, 169] + 8*lambda_2[0, 171] + 4*lambda_2[0, 174] + 8*lambda_2[0, 177] + 4*lambda_2[0, 181] + 8*lambda_2[0, 184] + 8*lambda_2[0, 186] + 8*lambda_2[0, 188] + 8*lambda_2[0, 191] + 4*lambda_2[0, 199] + 4*lambda_2[0, 200] + 4*lambda_2[0, 202] + 4*lambda_2[0, 203] + 4*lambda_2[0, 205] + 4*lambda_2[0, 207]+ objc]
	constraints += [1.0*V[0, 7] - 1.0*V[0, 8] >= -lambda_2[0, 124] - 4*lambda_2[0, 164] - 4*lambda_2[0, 165] - 4*lambda_2[0, 184] - 2*lambda_2[0, 199] - 2*lambda_2[0, 200] - 2*lambda_2[0, 203]- objc]
	constraints += [1.0*V[0, 7] - 1.0*V[0, 8] <= -lambda_2[0, 124] - 4*lambda_2[0, 164] - 4*lambda_2[0, 165] - 4*lambda_2[0, 184] - 2*lambda_2[0, 199] - 2*lambda_2[0, 200] - 2*lambda_2[0, 203]+ objc]
	constraints += [-0.25*V[0, 24]*t0[0, 4] - 0.5*V[0, 27]*t1[0, 7] >= lambda_2[0, 164]- objc]
	constraints += [-0.25*V[0, 24]*t0[0, 4] - 0.5*V[0, 27]*t1[0, 7] <= lambda_2[0, 164]+ objc]
	constraints += [-0.25*V[0, 6]*t0[0, 3] + 0.5*V[0, 13] >= -lambda_2[0, 60] - 6*lambda_2[0, 90] - 4*lambda_2[0, 110] - 2*lambda_2[0, 165] - 2*lambda_2[0, 167] - 2*lambda_2[0, 171] - 2*lambda_2[0, 177]- objc]
	constraints += [-0.25*V[0, 6]*t0[0, 3] + 0.5*V[0, 13] <= -lambda_2[0, 60] - 6*lambda_2[0, 90] - 4*lambda_2[0, 110] - 2*lambda_2[0, 165] - 2*lambda_2[0, 167] - 2*lambda_2[0, 171] - 2*lambda_2[0, 177]+ objc]
	constraints += [-0.25*V[0, 23]*t0[0, 3] - V[0, 26]*t2[0, 8] >= lambda_2[0, 165]- objc]
	constraints += [-0.25*V[0, 23]*t0[0, 3] - V[0, 26]*t2[0, 8] <= lambda_2[0, 165]+ objc]
	constraints += [-0.25*V[0, 24]*t0[0, 3] - 0.5*V[0, 27]*t1[0, 0] >= lambda_2[0, 90]- objc]
	constraints += [-0.25*V[0, 24]*t0[0, 3] - 0.5*V[0, 27]*t1[0, 0] <= lambda_2[0, 90]+ objc]
	constraints += [-1.0*V[0, 9] - 0.5*V[0, 12]*t0[0, 7] - 0.25*V[0, 25]*t0[0, 6] >= lambda_2[0, 36] + 4*lambda_2[0, 61] + 4*lambda_2[0, 66] + 12*lambda_2[0, 91] + 12*lambda_2[0, 96] + 16*lambda_2[0, 111] + 2*lambda_2[0, 125] + 2*lambda_2[0, 126] + 2*lambda_2[0, 129] + 2*lambda_2[0, 132] + 4*lambda_2[0, 166] + 4*lambda_2[0, 167] + 8*lambda_2[0, 168] + 8*lambda_2[0, 169] + 8*lambda_2[0, 172] + 4*lambda_2[0, 175] + 8*lambda_2[0, 178] + 4*lambda_2[0, 182] + 8*lambda_2[0, 185] + 8*lambda_2[0, 186] + 8*lambda_2[0, 189] + 8*lambda_2[0, 192] + 4*lambda_2[0, 199] + 4*lambda_2[0, 201] + 4*lambda_2[0, 202] + 4*lambda_2[0, 204] + 4*lambda_2[0, 205] + 4*lambda_2[0, 208]- objc]
	constraints += [-1.0*V[0, 9] - 0.5*V[0, 12]*t0[0, 7] - 0.25*V[0, 25]*t0[0, 6] <= lambda_2[0, 36] + 4*lambda_2[0, 61] + 4*lambda_2[0, 66] + 12*lambda_2[0, 91] + 12*lambda_2[0, 96] + 16*lambda_2[0, 111] + 2*lambda_2[0, 125] + 2*lambda_2[0, 126] + 2*lambda_2[0, 129] + 2*lambda_2[0, 132] + 4*lambda_2[0, 166] + 4*lambda_2[0, 167] + 8*lambda_2[0, 168] + 8*lambda_2[0, 169] + 8*lambda_2[0, 172] + 4*lambda_2[0, 175] + 8*lambda_2[0, 178] + 4*lambda_2[0, 182] + 8*lambda_2[0, 185] + 8*lambda_2[0, 186] + 8*lambda_2[0, 189] + 8*lambda_2[0, 192] + 4*lambda_2[0, 199] + 4*lambda_2[0, 201] + 4*lambda_2[0, 202] + 4*lambda_2[0, 204] + 4*lambda_2[0, 205] + 4*lambda_2[0, 208]+ objc]
	constraints += [-0.5*V[0, 1] - 0.5*V[0, 15] >= -lambda_2[0, 125] - 4*lambda_2[0, 166] - 4*lambda_2[0, 168] - 4*lambda_2[0, 185] - 2*lambda_2[0, 199] - 2*lambda_2[0, 201] - 2*lambda_2[0, 204]- objc]
	constraints += [-0.5*V[0, 1] - 0.5*V[0, 15] <= -lambda_2[0, 125] - 4*lambda_2[0, 166] - 4*lambda_2[0, 168] - 4*lambda_2[0, 185] - 2*lambda_2[0, 199] - 2*lambda_2[0, 201] - 2*lambda_2[0, 204]+ objc]
	constraints += [-1.0*V[0, 7] - 0.25*V[0, 25]*t0[0, 4] >= lambda_2[0, 166]- objc]
	constraints += [-1.0*V[0, 7] - 0.25*V[0, 25]*t0[0, 4] <= lambda_2[0, 166]+ objc]
	constraints += [-0.5*V[0, 2] - 0.5*V[0, 5]*t1[0, 9] + 0.5*V[0, 14] >= -lambda_2[0, 126] - 4*lambda_2[0, 167] - 4*lambda_2[0, 169] - 4*lambda_2[0, 186] - 2*lambda_2[0, 199] - 2*lambda_2[0, 202] - 2*lambda_2[0, 205]- objc]
	constraints += [-0.5*V[0, 2] - 0.5*V[0, 5]*t1[0, 9] + 0.5*V[0, 14] <= -lambda_2[0, 126] - 4*lambda_2[0, 167] - 4*lambda_2[0, 169] - 4*lambda_2[0, 186] - 2*lambda_2[0, 199] - 2*lambda_2[0, 202] - 2*lambda_2[0, 205]+ objc]
	constraints += [-1.0*V[0, 13] - 0.5*V[0, 19]*t1[0, 9] >= lambda_2[0, 199]- objc]
	constraints += [-1.0*V[0, 13] - 0.5*V[0, 19]*t1[0, 9] <= lambda_2[0, 199]+ objc]
	constraints += [-1.0*V[0, 8] - 0.5*V[0, 20]*t1[0, 9] - 0.25*V[0, 25]*t0[0, 3] >= lambda_2[0, 167]- objc]
	constraints += [-1.0*V[0, 8] - 0.5*V[0, 20]*t1[0, 9] - 0.25*V[0, 25]*t0[0, 3] <= lambda_2[0, 167]+ objc]
	constraints += [-0.5*V[0, 3] - 0.25*V[0, 6]*t0[0, 2] >= -lambda_2[0, 61] - 6*lambda_2[0, 91] - 4*lambda_2[0, 111] - 2*lambda_2[0, 168] - 2*lambda_2[0, 169] - 2*lambda_2[0, 172] - 2*lambda_2[0, 178]- objc]
	constraints += [-0.5*V[0, 3] - 0.25*V[0, 6]*t0[0, 2] <= -lambda_2[0, 61] - 6*lambda_2[0, 91] - 4*lambda_2[0, 111] - 2*lambda_2[0, 168] - 2*lambda_2[0, 169] - 2*lambda_2[0, 172] - 2*lambda_2[0, 178]+ objc]
	constraints += [-1.0*V[0, 14] - 0.25*V[0, 23]*t0[0, 2] - V[0, 26]*t2[0, 7] >= lambda_2[0, 168]- objc]
	constraints += [-1.0*V[0, 14] - 0.25*V[0, 23]*t0[0, 2] - V[0, 26]*t2[0, 7] <= lambda_2[0, 168]+ objc]
	constraints += [-1.0*V[0, 15] - 0.5*V[0, 21]*t1[0, 9] - 0.25*V[0, 24]*t0[0, 2] - 0.5*V[0, 27]*t1[0, 4] >= lambda_2[0, 169]- objc]
	constraints += [-1.0*V[0, 15] - 0.5*V[0, 21]*t1[0, 9] - 0.25*V[0, 24]*t0[0, 2] - 0.5*V[0, 27]*t1[0, 4] <= lambda_2[0, 169]+ objc]
	constraints += [-1.0*V[0, 9] - 0.5*V[0, 12]*t0[0, 0] - 0.25*V[0, 25]*t0[0, 2] >= lambda_2[0, 91]- objc]
	constraints += [-1.0*V[0, 9] - 0.5*V[0, 12]*t0[0, 0] - 0.25*V[0, 25]*t0[0, 2] <= lambda_2[0, 91]+ objc]
	constraints += [1.5*V[0, 5] - 0.5*V[0, 18] - 0.5*V[0, 23] - 0.25*V[0, 26]*t0[0, 6] - V[0, 26]*t2[0, 14] >= lambda_2[0, 37] + 4*lambda_2[0, 62] + 4*lambda_2[0, 67] + 12*lambda_2[0, 92] + 12*lambda_2[0, 97] + 16*lambda_2[0, 112] + 2*lambda_2[0, 127] + 2*lambda_2[0, 128] + 2*lambda_2[0, 129] + 2*lambda_2[0, 133] + 4*lambda_2[0, 170] + 4*lambda_2[0, 171] + 4*lambda_2[0, 172] + 8*lambda_2[0, 173] + 8*lambda_2[0, 174] + 8*lambda_2[0, 175] + 8*lambda_2[0, 179] + 4*lambda_2[0, 183] + 8*lambda_2[0, 187] + 8*lambda_2[0, 188] + 8*lambda_2[0, 189] + 8*lambda_2[0, 193] + 4*lambda_2[0, 200] + 4*lambda_2[0, 201] + 4*lambda_2[0, 202] + 4*lambda_2[0, 206] + 4*lambda_2[0, 207] + 4*lambda_2[0, 208]- objc]
	constraints += [1.5*V[0, 5] - 0.5*V[0, 18] - 0.5*V[0, 23] - 0.25*V[0, 26]*t0[0, 6] - V[0, 26]*t2[0, 14] <= lambda_2[0, 37] + 4*lambda_2[0, 62] + 4*lambda_2[0, 67] + 12*lambda_2[0, 92] + 12*lambda_2[0, 97] + 16*lambda_2[0, 112] + 2*lambda_2[0, 127] + 2*lambda_2[0, 128] + 2*lambda_2[0, 129] + 2*lambda_2[0, 133] + 4*lambda_2[0, 170] + 4*lambda_2[0, 171] + 4*lambda_2[0, 172] + 8*lambda_2[0, 173] + 8*lambda_2[0, 174] + 8*lambda_2[0, 175] + 8*lambda_2[0, 179] + 4*lambda_2[0, 183] + 8*lambda_2[0, 187] + 8*lambda_2[0, 188] + 8*lambda_2[0, 189] + 8*lambda_2[0, 193] + 4*lambda_2[0, 200] + 4*lambda_2[0, 201] + 4*lambda_2[0, 202] + 4*lambda_2[0, 206] + 4*lambda_2[0, 207] + 4*lambda_2[0, 208]+ objc]
	constraints += [-0.5*V[0, 17] + 1.5*V[0, 19] >= -lambda_2[0, 127] - 4*lambda_2[0, 170] - 4*lambda_2[0, 173] - 4*lambda_2[0, 187] - 2*lambda_2[0, 200] - 2*lambda_2[0, 201] - 2*lambda_2[0, 206]- objc]
	constraints += [-0.5*V[0, 17] + 1.5*V[0, 19] <= -lambda_2[0, 127] - 4*lambda_2[0, 170] - 4*lambda_2[0, 173] - 4*lambda_2[0, 187] - 2*lambda_2[0, 200] - 2*lambda_2[0, 201] - 2*lambda_2[0, 206]+ objc]
	constraints += [-0.5*V[0, 23] - 0.25*V[0, 26]*t0[0, 4] - V[0, 26]*t2[0, 10] >= lambda_2[0, 170]- objc]
	constraints += [-0.5*V[0, 23] - 0.25*V[0, 26]*t0[0, 4] - V[0, 26]*t2[0, 10] <= lambda_2[0, 170]+ objc]
	constraints += [0.5*V[0, 16] + 1.5*V[0, 20] - 0.5*V[0, 25] >= -lambda_2[0, 128] - 4*lambda_2[0, 171] - 4*lambda_2[0, 174] - 4*lambda_2[0, 188] - 2*lambda_2[0, 200] - 2*lambda_2[0, 202] - 2*lambda_2[0, 207]- objc]
	constraints += [0.5*V[0, 16] + 1.5*V[0, 20] - 0.5*V[0, 25] <= -lambda_2[0, 128] - 4*lambda_2[0, 171] - 4*lambda_2[0, 174] - 4*lambda_2[0, 188] - 2*lambda_2[0, 200] - 2*lambda_2[0, 202] - 2*lambda_2[0, 207]+ objc]
	constraints += [-0.5*V[0, 24] >= lambda_2[0, 200]- objc]
	constraints += [-0.5*V[0, 24] <= lambda_2[0, 200]+ objc]
	constraints += [-0.25*V[0, 26]*t0[0, 3] - V[0, 26]*t2[0, 4] >= lambda_2[0, 171]- objc]
	constraints += [-0.25*V[0, 26]*t0[0, 3] - V[0, 26]*t2[0, 4] <= lambda_2[0, 171]+ objc]
	constraints += [-V[0, 4]*t2[0, 12] + 1.5*V[0, 21] + 0.5*V[0, 24] >= -lambda_2[0, 129] - 4*lambda_2[0, 172] - 4*lambda_2[0, 175] - 4*lambda_2[0, 189] - 2*lambda_2[0, 201] - 2*lambda_2[0, 202] - 2*lambda_2[0, 208]- objc]
	constraints += [-V[0, 4]*t2[0, 12] + 1.5*V[0, 21] + 0.5*V[0, 24] <= -lambda_2[0, 129] - 4*lambda_2[0, 172] - 4*lambda_2[0, 175] - 4*lambda_2[0, 189] - 2*lambda_2[0, 201] - 2*lambda_2[0, 202] - 2*lambda_2[0, 208]+ objc]
	constraints += [-V[0, 16]*t2[0, 12] - 0.5*V[0, 16] - 0.5*V[0, 25] >= lambda_2[0, 201]- objc]
	constraints += [-V[0, 16]*t2[0, 12] - 0.5*V[0, 16] - 0.5*V[0, 25] <= lambda_2[0, 201]+ objc]
	constraints += [-V[0, 17]*t2[0, 12] - 0.5*V[0, 17] - 0.5*V[0, 22]*t1[0, 9] >= lambda_2[0, 202]- objc]
	constraints += [-V[0, 17]*t2[0, 12] - 0.5*V[0, 17] - 0.5*V[0, 22]*t1[0, 9] <= lambda_2[0, 202]+ objc]
	constraints += [-V[0, 18]*t2[0, 12] - 0.5*V[0, 18] - 0.25*V[0, 26]*t0[0, 2] >= lambda_2[0, 172]- objc]
	constraints += [-V[0, 18]*t2[0, 12] - 0.5*V[0, 18] - 0.25*V[0, 26]*t0[0, 2] <= lambda_2[0, 172]+ objc]
	constraints += [1.5*V[0, 22] >= -lambda_2[0, 62] - 6*lambda_2[0, 92] - 4*lambda_2[0, 112] - 2*lambda_2[0, 173] - 2*lambda_2[0, 174] - 2*lambda_2[0, 175] - 2*lambda_2[0, 179]- objc]
	constraints += [1.5*V[0, 22] <= -lambda_2[0, 62] - 6*lambda_2[0, 92] - 4*lambda_2[0, 112] - 2*lambda_2[0, 173] - 2*lambda_2[0, 174] - 2*lambda_2[0, 175] - 2*lambda_2[0, 179]+ objc]
	constraints += [-V[0, 26]*t2[0, 6] >= lambda_2[0, 173]- objc]
	constraints += [-V[0, 26]*t2[0, 6] <= lambda_2[0, 173]+ objc]
	constraints += [-2*V[0, 10]*t2[0, 12] >= lambda_2[0, 175]- objc]
	constraints += [-2*V[0, 10]*t2[0, 12] <= lambda_2[0, 175]+ objc]
	constraints += [-V[0, 26]*t2[0, 1] >= lambda_2[0, 92]- objc]
	constraints += [-V[0, 26]*t2[0, 1] <= lambda_2[0, 92]+ objc]
	constraints += [-2*V[0, 4] - 0.5*V[0, 21] - 0.5*V[0, 24] - 0.25*V[0, 27]*t0[0, 6] - 0.5*V[0, 27]*t1[0, 11] >= lambda_2[0, 38] + 4*lambda_2[0, 63] + 4*lambda_2[0, 68] + 12*lambda_2[0, 93] + 12*lambda_2[0, 98] + 16*lambda_2[0, 113] + 2*lambda_2[0, 130] + 2*lambda_2[0, 131] + 2*lambda_2[0, 132] + 2*lambda_2[0, 133] + 4*lambda_2[0, 176] + 4*lambda_2[0, 177] + 4*lambda_2[0, 178] + 4*lambda_2[0, 179] + 8*lambda_2[0, 180] + 8*lambda_2[0, 181] + 8*lambda_2[0, 182] + 8*lambda_2[0, 183] + 8*lambda_2[0, 190] + 8*lambda_2[0, 191] + 8*lambda_2[0, 192] + 8*lambda_2[0, 193] + 4*lambda_2[0, 203] + 4*lambda_2[0, 204] + 4*lambda_2[0, 205] + 4*lambda_2[0, 206] + 4*lambda_2[0, 207] + 4*lambda_2[0, 208]- objc]
	constraints += [-2*V[0, 4] - 0.5*V[0, 21] - 0.5*V[0, 24] - 0.25*V[0, 27]*t0[0, 6] - 0.5*V[0, 27]*t1[0, 11] <= lambda_2[0, 38] + 4*lambda_2[0, 63] + 4*lambda_2[0, 68] + 12*lambda_2[0, 93] + 12*lambda_2[0, 98] + 16*lambda_2[0, 113] + 2*lambda_2[0, 130] + 2*lambda_2[0, 131] + 2*lambda_2[0, 132] + 2*lambda_2[0, 133] + 4*lambda_2[0, 176] + 4*lambda_2[0, 177] + 4*lambda_2[0, 178] + 4*lambda_2[0, 179] + 8*lambda_2[0, 180] + 8*lambda_2[0, 181] + 8*lambda_2[0, 182] + 8*lambda_2[0, 183] + 8*lambda_2[0, 190] + 8*lambda_2[0, 191] + 8*lambda_2[0, 192] + 8*lambda_2[0, 193] + 4*lambda_2[0, 203] + 4*lambda_2[0, 204] + 4*lambda_2[0, 205] + 4*lambda_2[0, 206] + 4*lambda_2[0, 207] + 4*lambda_2[0, 208]+ objc]
	constraints += [-2*V[0, 16] - 0.5*V[0, 20] + 0.5*V[0, 25] >= -lambda_2[0, 130] - 4*lambda_2[0, 176] - 4*lambda_2[0, 180] - 4*lambda_2[0, 190] - 2*lambda_2[0, 203] - 2*lambda_2[0, 204] - 2*lambda_2[0, 206]- objc]
	constraints += [-2*V[0, 16] - 0.5*V[0, 20] + 0.5*V[0, 25] <= -lambda_2[0, 130] - 4*lambda_2[0, 176] - 4*lambda_2[0, 180] - 4*lambda_2[0, 190] - 2*lambda_2[0, 203] - 2*lambda_2[0, 204] - 2*lambda_2[0, 206]+ objc]
	constraints += [-0.25*V[0, 27]*t0[0, 4] - 0.5*V[0, 27]*t1[0, 6] >= lambda_2[0, 176]- objc]
	constraints += [-0.25*V[0, 27]*t0[0, 4] - 0.5*V[0, 27]*t1[0, 6] <= lambda_2[0, 176]+ objc]
	constraints += [-2*V[0, 17] + 0.5*V[0, 19] >= -lambda_2[0, 131] - 4*lambda_2[0, 177] - 4*lambda_2[0, 181] - 4*lambda_2[0, 191] - 2*lambda_2[0, 203] - 2*lambda_2[0, 205] - 2*lambda_2[0, 207]- objc]
	constraints += [-2*V[0, 17] + 0.5*V[0, 19] <= -lambda_2[0, 131] - 4*lambda_2[0, 177] - 4*lambda_2[0, 181] - 4*lambda_2[0, 191] - 2*lambda_2[0, 203] - 2*lambda_2[0, 205] - 2*lambda_2[0, 207]+ objc]
	constraints += [-0.5*V[0, 23] - V[0, 26]*t2[0, 13] >= lambda_2[0, 203]- objc]
	constraints += [-0.5*V[0, 23] - V[0, 26]*t2[0, 13] <= lambda_2[0, 203]+ objc]
	constraints += [-0.5*V[0, 24] - 0.25*V[0, 27]*t0[0, 3] - 0.5*V[0, 27]*t1[0, 5] >= lambda_2[0, 177]- objc]
	constraints += [-0.5*V[0, 24] - 0.25*V[0, 27]*t0[0, 3] - 0.5*V[0, 27]*t1[0, 5] <= lambda_2[0, 177]+ objc]
	constraints += [-0.5*V[0, 5]*t1[0, 12] - 2*V[0, 18] - 0.5*V[0, 23] >= -lambda_2[0, 132] - 4*lambda_2[0, 178] - 4*lambda_2[0, 182] - 4*lambda_2[0, 192] - 2*lambda_2[0, 204] - 2*lambda_2[0, 205] - 2*lambda_2[0, 208]- objc]
	constraints += [-0.5*V[0, 5]*t1[0, 12] - 2*V[0, 18] - 0.5*V[0, 23] <= -lambda_2[0, 132] - 4*lambda_2[0, 178] - 4*lambda_2[0, 182] - 4*lambda_2[0, 192] - 2*lambda_2[0, 204] - 2*lambda_2[0, 205] - 2*lambda_2[0, 208]+ objc]
	constraints += [-0.5*V[0, 19]*t1[0, 12] - 0.5*V[0, 19] >= lambda_2[0, 204]- objc]
	constraints += [-0.5*V[0, 19]*t1[0, 12] - 0.5*V[0, 19] <= lambda_2[0, 204]+ objc]
	constraints += [-1.0*V[0, 11]*t1[0, 9] - 0.5*V[0, 12]*t0[0, 8] - 0.5*V[0, 20]*t1[0, 12] - 0.5*V[0, 20] - 0.5*V[0, 25] >= lambda_2[0, 205]- objc]
	constraints += [-1.0*V[0, 11]*t1[0, 9] - 0.5*V[0, 12]*t0[0, 8] - 0.5*V[0, 20]*t1[0, 12] - 0.5*V[0, 20] - 0.5*V[0, 25] <= lambda_2[0, 205]+ objc]
	constraints += [-0.5*V[0, 21]*t1[0, 12] - 0.5*V[0, 21] - 0.25*V[0, 27]*t0[0, 2] - 0.5*V[0, 27]*t1[0, 2] >= lambda_2[0, 178]- objc]
	constraints += [-0.5*V[0, 21]*t1[0, 12] - 0.5*V[0, 21] - 0.25*V[0, 27]*t0[0, 2] - 0.5*V[0, 27]*t1[0, 2] <= lambda_2[0, 178]+ objc]
	constraints += [-4*V[0, 10] + 3.0*V[0, 11] - 0.5*V[0, 12] >= -lambda_2[0, 133] - 4*lambda_2[0, 179] - 4*lambda_2[0, 183] - 4*lambda_2[0, 193] - 2*lambda_2[0, 206] - 2*lambda_2[0, 207] - 2*lambda_2[0, 208]- objc]
	constraints += [-4*V[0, 10] + 3.0*V[0, 11] - 0.5*V[0, 12] <= -lambda_2[0, 133] - 4*lambda_2[0, 179] - 4*lambda_2[0, 183] - 4*lambda_2[0, 193] - 2*lambda_2[0, 206] - 2*lambda_2[0, 207] - 2*lambda_2[0, 208]+ objc]
	constraints += [-V[0, 26]*t2[0, 11] >= lambda_2[0, 207]- objc]
	constraints += [-V[0, 26]*t2[0, 11] <= lambda_2[0, 207]+ objc]
	constraints += [-0.5*V[0, 22]*t1[0, 12] - V[0, 22]*t2[0, 12] >= lambda_2[0, 208]- objc]
	constraints += [-0.5*V[0, 22]*t1[0, 12] - V[0, 22]*t2[0, 12] <= lambda_2[0, 208]+ objc]
	constraints += [-2*V[0, 22] >= -lambda_2[0, 63] - 6*lambda_2[0, 93] - 4*lambda_2[0, 113] - 2*lambda_2[0, 180] - 2*lambda_2[0, 181] - 2*lambda_2[0, 182] - 2*lambda_2[0, 183]- objc]
	constraints += [-2*V[0, 22] <= -lambda_2[0, 63] - 6*lambda_2[0, 93] - 4*lambda_2[0, 113] - 2*lambda_2[0, 180] - 2*lambda_2[0, 181] - 2*lambda_2[0, 182] - 2*lambda_2[0, 183]+ objc]
	constraints += [-V[0, 26]*t2[0, 9] >= lambda_2[0, 180]- objc]
	constraints += [-V[0, 26]*t2[0, 9] <= lambda_2[0, 180]+ objc]
	constraints += [-0.5*V[0, 27]*t1[0, 3] >= lambda_2[0, 181]- objc]
	constraints += [-0.5*V[0, 27]*t1[0, 3] <= lambda_2[0, 181]+ objc]
	constraints += [-1.0*V[0, 11]*t1[0, 12] >= lambda_2[0, 182]- objc]
	constraints += [-1.0*V[0, 11]*t1[0, 12] <= lambda_2[0, 182]+ objc]
	constraints += [-V[0, 26]*t2[0, 3] >= lambda_2[0, 183]- objc]
	constraints += [-V[0, 26]*t2[0, 3] <= lambda_2[0, 183]+ objc]
	constraints += [-0.5*V[0, 27]*t1[0, 1] >= lambda_2[0, 93]- objc]
	constraints += [-0.5*V[0, 27]*t1[0, 1] <= lambda_2[0, 93]+ objc]
	constraints += [-0.5*V[0, 12]*t0[0, 6] - 0.5*V[0, 25] - 0.5 >= lambda_2[0, 11] + 6*lambda_2[0, 17] + 24*lambda_2[0, 23] + 2*lambda_2[0, 64] + 2*lambda_2[0, 65] + 2*lambda_2[0, 66] + 2*lambda_2[0, 67] + 2*lambda_2[0, 68] + 12*lambda_2[0, 94] + 12*lambda_2[0, 95] + 12*lambda_2[0, 96] + 12*lambda_2[0, 97] + 12*lambda_2[0, 98] + 4*lambda_2[0, 109] + 4*lambda_2[0, 110] + 4*lambda_2[0, 111] + 4*lambda_2[0, 112] + 4*lambda_2[0, 113] + 4*lambda_2[0, 184] + 4*lambda_2[0, 185] + 4*lambda_2[0, 186] + 4*lambda_2[0, 187] + 4*lambda_2[0, 188] + 4*lambda_2[0, 189] + 4*lambda_2[0, 190] + 4*lambda_2[0, 191] + 4*lambda_2[0, 192] + 4*lambda_2[0, 193]- objc]
	constraints += [-0.5*V[0, 12]*t0[0, 6] - 0.5*V[0, 25] - 0.5 <= lambda_2[0, 11] + 6*lambda_2[0, 17] + 24*lambda_2[0, 23] + 2*lambda_2[0, 64] + 2*lambda_2[0, 65] + 2*lambda_2[0, 66] + 2*lambda_2[0, 67] + 2*lambda_2[0, 68] + 12*lambda_2[0, 94] + 12*lambda_2[0, 95] + 12*lambda_2[0, 96] + 12*lambda_2[0, 97] + 12*lambda_2[0, 98] + 4*lambda_2[0, 109] + 4*lambda_2[0, 110] + 4*lambda_2[0, 111] + 4*lambda_2[0, 112] + 4*lambda_2[0, 113] + 4*lambda_2[0, 184] + 4*lambda_2[0, 185] + 4*lambda_2[0, 186] + 4*lambda_2[0, 187] + 4*lambda_2[0, 188] + 4*lambda_2[0, 189] + 4*lambda_2[0, 190] + 4*lambda_2[0, 191] + 4*lambda_2[0, 192] + 4*lambda_2[0, 193]+ objc]
	constraints += [-V[0, 4]*t2[0, 5] - 0.5*V[0, 24] >= -lambda_2[0, 64] - 6*lambda_2[0, 94] - 4*lambda_2[0, 109] - 2*lambda_2[0, 184] - 2*lambda_2[0, 185] - 2*lambda_2[0, 187] - 2*lambda_2[0, 190]- objc]
	constraints += [-V[0, 4]*t2[0, 5] - 0.5*V[0, 24] <= -lambda_2[0, 64] - 6*lambda_2[0, 94] - 4*lambda_2[0, 109] - 2*lambda_2[0, 184] - 2*lambda_2[0, 185] - 2*lambda_2[0, 187] - 2*lambda_2[0, 190]+ objc]
	constraints += [-0.5*V[0, 12]*t0[0, 4] - V[0, 16]*t2[0, 5] >= lambda_2[0, 109]- objc]
	constraints += [-0.5*V[0, 12]*t0[0, 4] - V[0, 16]*t2[0, 5] <= lambda_2[0, 109]+ objc]
	constraints += [0.5*V[0, 23] >= -lambda_2[0, 65] - 6*lambda_2[0, 95] - 4*lambda_2[0, 110] - 2*lambda_2[0, 184] - 2*lambda_2[0, 186] - 2*lambda_2[0, 188] - 2*lambda_2[0, 191]- objc]
	constraints += [0.5*V[0, 23] <= -lambda_2[0, 65] - 6*lambda_2[0, 95] - 4*lambda_2[0, 110] - 2*lambda_2[0, 184] - 2*lambda_2[0, 186] - 2*lambda_2[0, 188] - 2*lambda_2[0, 191]+ objc]
	constraints += [-V[0, 17]*t2[0, 5] >= lambda_2[0, 184]- objc]
	constraints += [-V[0, 17]*t2[0, 5] <= lambda_2[0, 184]+ objc]
	constraints += [-0.5*V[0, 12]*t0[0, 3] >= lambda_2[0, 110]- objc]
	constraints += [-0.5*V[0, 12]*t0[0, 3] <= lambda_2[0, 110]+ objc]
	constraints += [-0.25*V[0, 6]*t0[0, 5] >= -lambda_2[0, 66] - 6*lambda_2[0, 96] - 4*lambda_2[0, 111] - 2*lambda_2[0, 185] - 2*lambda_2[0, 186] - 2*lambda_2[0, 189] - 2*lambda_2[0, 192]- objc]
	constraints += [-0.25*V[0, 6]*t0[0, 5] <= -lambda_2[0, 66] - 6*lambda_2[0, 96] - 4*lambda_2[0, 111] - 2*lambda_2[0, 185] - 2*lambda_2[0, 186] - 2*lambda_2[0, 189] - 2*lambda_2[0, 192]+ objc]
	constraints += [-V[0, 18]*t2[0, 5] - 0.25*V[0, 23]*t0[0, 5] - 0.5*V[0, 23] >= lambda_2[0, 185]- objc]
	constraints += [-V[0, 18]*t2[0, 5] - 0.25*V[0, 23]*t0[0, 5] - 0.5*V[0, 23] <= lambda_2[0, 185]+ objc]
	constraints += [-0.25*V[0, 24]*t0[0, 5] - 0.5*V[0, 24] - 0.5*V[0, 27]*t1[0, 9] >= lambda_2[0, 186]- objc]
	constraints += [-0.25*V[0, 24]*t0[0, 5] - 0.5*V[0, 24] - 0.5*V[0, 27]*t1[0, 9] <= lambda_2[0, 186]+ objc]
	constraints += [-0.5*V[0, 12]*t0[0, 2] - 0.25*V[0, 25]*t0[0, 5] - 0.5*V[0, 25] >= lambda_2[0, 111]- objc]
	constraints += [-0.5*V[0, 12]*t0[0, 2] - 0.25*V[0, 25]*t0[0, 5] - 0.5*V[0, 25] <= lambda_2[0, 111]+ objc]
	constraints += [-V[0, 4]*t2[0, 2] + 1.5*V[0, 27] >= -lambda_2[0, 67] - 6*lambda_2[0, 97] - 4*lambda_2[0, 112] - 2*lambda_2[0, 187] - 2*lambda_2[0, 188] - 2*lambda_2[0, 189] - 2*lambda_2[0, 193]- objc]
	constraints += [-V[0, 4]*t2[0, 2] + 1.5*V[0, 27] <= -lambda_2[0, 67] - 6*lambda_2[0, 97] - 4*lambda_2[0, 112] - 2*lambda_2[0, 187] - 2*lambda_2[0, 188] - 2*lambda_2[0, 189] - 2*lambda_2[0, 193]+ objc]
	constraints += [-2*V[0, 10]*t2[0, 5] - V[0, 16]*t2[0, 2] >= lambda_2[0, 187]- objc]
	constraints += [-2*V[0, 10]*t2[0, 5] - V[0, 16]*t2[0, 2] <= lambda_2[0, 187]+ objc]
	constraints += [-V[0, 17]*t2[0, 2] >= lambda_2[0, 188]- objc]
	constraints += [-V[0, 17]*t2[0, 2] <= lambda_2[0, 188]+ objc]
	constraints += [-V[0, 18]*t2[0, 2] - 0.25*V[0, 26]*t0[0, 5] - V[0, 26]*t2[0, 12] >= lambda_2[0, 189]- objc]
	constraints += [-V[0, 18]*t2[0, 2] - 0.25*V[0, 26]*t0[0, 5] - V[0, 26]*t2[0, 12] <= lambda_2[0, 189]+ objc]
	constraints += [-2*V[0, 10]*t2[0, 2] >= lambda_2[0, 112]- objc]
	constraints += [-2*V[0, 10]*t2[0, 2] <= lambda_2[0, 112]+ objc]
	constraints += [-0.5*V[0, 5]*t1[0, 8] - 2*V[0, 26] >= -lambda_2[0, 68] - 6*lambda_2[0, 98] - 4*lambda_2[0, 113] - 2*lambda_2[0, 190] - 2*lambda_2[0, 191] - 2*lambda_2[0, 192] - 2*lambda_2[0, 193]- objc]
	constraints += [-0.5*V[0, 5]*t1[0, 8] - 2*V[0, 26] <= -lambda_2[0, 68] - 6*lambda_2[0, 98] - 4*lambda_2[0, 113] - 2*lambda_2[0, 190] - 2*lambda_2[0, 191] - 2*lambda_2[0, 192] - 2*lambda_2[0, 193]+ objc]
	constraints += [-0.5*V[0, 19]*t1[0, 8] - V[0, 22]*t2[0, 5] >= lambda_2[0, 190]- objc]
	constraints += [-0.5*V[0, 19]*t1[0, 8] - V[0, 22]*t2[0, 5] <= lambda_2[0, 190]+ objc]
	constraints += [-0.5*V[0, 20]*t1[0, 8] >= lambda_2[0, 191]- objc]
	constraints += [-0.5*V[0, 20]*t1[0, 8] <= lambda_2[0, 191]+ objc]
	constraints += [-0.5*V[0, 21]*t1[0, 8] - 0.25*V[0, 27]*t0[0, 5] - 0.5*V[0, 27]*t1[0, 12] >= lambda_2[0, 192]- objc]
	constraints += [-0.5*V[0, 21]*t1[0, 8] - 0.25*V[0, 27]*t0[0, 5] - 0.5*V[0, 27]*t1[0, 12] <= lambda_2[0, 192]+ objc]
	constraints += [-0.5*V[0, 22]*t1[0, 8] - V[0, 22]*t2[0, 2] >= lambda_2[0, 193]- objc]
	constraints += [-0.5*V[0, 22]*t1[0, 8] - V[0, 22]*t2[0, 2] <= lambda_2[0, 193]+ objc]
	constraints += [-1.0*V[0, 11]*t1[0, 8] >= lambda_2[0, 113]- objc]
	constraints += [-1.0*V[0, 11]*t1[0, 8] <= lambda_2[0, 113]+ objc]
	constraints += [-0.25*V[0, 6]*t0[0, 1] >= -lambda_2[0, 17] - 8*lambda_2[0, 23] - 2*lambda_2[0, 94] - 2*lambda_2[0, 95] - 2*lambda_2[0, 96] - 2*lambda_2[0, 97] - 2*lambda_2[0, 98]- objc]
	constraints += [-0.25*V[0, 6]*t0[0, 1] <= -lambda_2[0, 17] - 8*lambda_2[0, 23] - 2*lambda_2[0, 94] - 2*lambda_2[0, 95] - 2*lambda_2[0, 96] - 2*lambda_2[0, 97] - 2*lambda_2[0, 98]+ objc]
	constraints += [-0.25*V[0, 23]*t0[0, 1] - V[0, 26]*t2[0, 5] >= lambda_2[0, 94]- objc]
	constraints += [-0.25*V[0, 23]*t0[0, 1] - V[0, 26]*t2[0, 5] <= lambda_2[0, 94]+ objc]
	constraints += [-0.25*V[0, 24]*t0[0, 1] >= lambda_2[0, 95]- objc]
	constraints += [-0.25*V[0, 24]*t0[0, 1] <= lambda_2[0, 95]+ objc]
	constraints += [-0.5*V[0, 12]*t0[0, 5] - 0.25*V[0, 25]*t0[0, 1] >= lambda_2[0, 96]- objc]
	constraints += [-0.5*V[0, 12]*t0[0, 5] - 0.25*V[0, 25]*t0[0, 1] <= lambda_2[0, 96]+ objc]
	constraints += [-0.25*V[0, 26]*t0[0, 1] - V[0, 26]*t2[0, 2] >= lambda_2[0, 97]- objc]
	constraints += [-0.25*V[0, 26]*t0[0, 1] - V[0, 26]*t2[0, 2] <= lambda_2[0, 97]+ objc]
	constraints += [-0.25*V[0, 27]*t0[0, 1] - 0.5*V[0, 27]*t1[0, 8] >= lambda_2[0, 98]- objc]
	constraints += [-0.25*V[0, 27]*t0[0, 1] - 0.5*V[0, 27]*t1[0, 8] <= lambda_2[0, 98]+ objc]
	constraints += [-0.5*V[0, 12]*t0[0, 1] >= lambda_2[0, 23]- objc]
	constraints += [-0.5*V[0, 12]*t0[0, 1] <= lambda_2[0, 23]+ objc]

	# constraints += lambda_1

	constraints += [V >= -0.5]
	# # # constraints += [V != 0]
	constraints += [V <= 0.5]
	# constraints += [cp.abs(V) >= 0.001]

	problem = cp.Problem(objective, constraints)
	assert problem.is_dcp()
	assert problem.is_dpp()

	c0 = np.reshape(c0, (1, 9))
	theta_t0 = torch.from_numpy(c0).float()
	theta_t0.requires_grad = True

	c1 = np.reshape(c1, (1, 13))
	theta_t1 = torch.from_numpy(c1).float()
	theta_t1.requires_grad = True

	c2 = np.reshape(c2, (1, 16))
	theta_t2 = torch.from_numpy(c2).float()
	theta_t2.requires_grad = True

	layer = CvxpyLayer(problem, parameters=[t0, t1, t2], variables=[lambda_1, lambda_2, V, objc])
	lambda1_star, lambda2_star, V_star, objc_star = layer(theta_t0, theta_t1, theta_t2, solver_args={'solve_method':'ECOS'})

	torch.norm(objc_star).backward()
	# objc_star.backward()

	V = V_star.detach().numpy()[0]
	# m = m_star.detach().numpy()
	# n = n_star.detach().numpy()
	timer.stop()
	valueTest, LieTest = LyaTest(V, c0, c1, c2)
	
	return V, objc_star.detach().numpy(), theta_t0.grad.detach().numpy(), theta_t1.grad.detach().numpy(), theta_t2.grad.detach().numpy(), valueTest, LieTest


## Generate the Lyapunov conditions
def LyapunovConstraints():

	def generateConstraints(exp1, exp2, file, degree):
		for x in range(degree+1):
			for y in range(degree+1):
				for z in range(degree+1):
					for m in range(degree+1):
						for n in range(degree+1):
							for p in range(degree+1):
								if x + y + z + m + n + p <= degree:
									if exp1.coeff(a,x).coeff(b,y).coeff(c,z).coeff(d,m).coeff(e,n).coeff(f,p) != 0:
										if exp2.coeff(a,x).coeff(b,y).coeff(c,z).coeff(d,m).coeff(e,n).coeff(f,p) != 0:
											file.write('constraints += [' + str(exp1.coeff(a,x).coeff(b,y).coeff(c,z).coeff(d,m).coeff(e,n).coeff(f,p)) + ' >= ' + str(exp2.coeff(a,x).coeff(b,y).coeff(c,z).coeff(d,m).coeff(e,n).coeff(f,p)) + '- objc' + ']\n')
											file.write('constraints += [' + str(exp1.coeff(a,x).coeff(b,y).coeff(c,z).coeff(d,m).coeff(e,n).coeff(f,p)) + ' <= ' + str(exp2.coeff(a,x).coeff(b,y).coeff(c,z).coeff(d,m).coeff(e,n).coeff(f,p)) + '+ objc' + ']\n')
												# print('constraints += [', exp1.coeff(x,a).coeff(y,b).coeff(z,c).coeff(m,d).coeff(n,e).coeff(p,f), ' == ', exp2.coeff(x,a).coeff(y,b).coeff(z,c).coeff(m,d).coeff(n,e).coeff(p,f), ']')
										else:
											file.write('constraints += [' + str(exp1.coeff(a,x).coeff(b,y).coeff(c,z).coeff(d,m).coeff(e,n).coeff(f,p)) + ' == ' + str(exp2.coeff(a,x).coeff(b,y).coeff(c,z).coeff(d,m).coeff(e,n).coeff(f,p)) + ']\n')

	a, b, c, d, e, f, m, n = symbols('a,b,c,d,e,f, m, n')
	# Confined in the [-2,2]^6 spaces
	Poly = [2-a, 2-b, 2-c, 2-d, 2-e, 2-f]
	X = [a, b, c, d, e, f]
	# print("setting up")
	# Generate the possible handelman product to the power defined
	poly_list = Matrix(possible_handelman_generation(4, Poly))
	# print("generating poly_list")
	# incorporate the interval with handelman basis
	monomial = monomial_generation(2, X)
	monomial.remove(1)
	monomial_list = Matrix(monomial)
	# print("generating monomial terms")
	# print(monomial_list)
	V = MatrixSymbol('V', 1, len(monomial_list))
	lambda_poly_der = MatrixSymbol('lambda_2', 1, len(poly_list))
	lambda_poly_init = MatrixSymbol('lambda_1', 1, len(poly_list))

	lhs_init = V * monomial_list - 0.1*Matrix([a**2 + b**2 + c**2 + d**2 + e**2 + f**2])
	lhs_init = lhs_init[0, 0].expand()
	# print("Get done the left hand side mul")
	
	rhs_init = lambda_poly_init * poly_list
	# print("Get done the right hand side mul")
	rhs_init = rhs_init[0, 0].expand()
	file = open("cons_deg2_3.txt","w")
	file.write("#-------------------The initial conditions-------------------\n")
	generateConstraints(lhs_init, rhs_init, file, degree=2)
		# f.close()
	# Lya = V*quadraticBase
	# Lya = expand(Lya[0, 0])

	# partiala = diff(lhs_init, a)
	# partialb = diff(lhs_init, b)
	# partialc = diff(lhs_init, c)
	# partiald = diff(lhs_init, d)
	# partiale = diff(lhs_init, e)
	# partialf = diff(lhs_init, f)
	# gradVtox = Matrix([[partiala, partialb, partialc, partiald, partiale, partialf]])

	# u0Base = Matrix([[d**3, a**3, a*d**2, a*e**2, a*f**2, a**2*d, a, d, b*d*e]])
	# u1Base = Matrix([[e**3, b**3, b*d**2, b**2*e, d**2*e, b*e**2, b*f**2, e*f**2, a**2*b, a*d*e, e, b, a*b*d]])
	# u2Base = Matrix([[f**3, c**3, a**2*c, b**2*c, c*e**2, a**2*f, c**2*f, d**2*f, e**2*f, b**2*f, c*f**2, b*c*e, a*c*d, b*e*f, c, f]])
	
	# f.close()
	# print("Start writing to the .txt file")
	
	# temp = monomial_generation(3, X)
	# temp.remove(1)
	u0Base = Matrix([[d**3, a**3, a*d**2, a*e**2, a*f**2, a**2*d, a, d, b*d*e]])
	u1Base = Matrix([[e**3, b**3, b*d**2, b**2*e, d**2*e, b*e**2, b*f**2, e*f**2, a**2*b, a*d*e, e, b, a*b*d]])
	u2Base = Matrix([[f**3, c**3, a**2*c, b**2*c, c*e**2, a**2*f, c**2*f, d**2*f, e**2*f, b**2*f, c*f**2, b*c*e, a*c*d, b*e*f, c, f]])

	t0 = MatrixSymbol('t0', 1, 9)
	t1 = MatrixSymbol('t1', 1, 13)
	t2 = MatrixSymbol('t2', 1, 16)

	u0 = t0*u0Base.T
	u1 = t1*u1Base.T
	u2 = t2*u2Base.T
	u0 = expand(u0[0, 0])
	u1 = expand(u1[0, 0])
	u2 = expand(u2[0, 0])

	dynamics = [0.25*(u0 + b*c), 
				0.5*(u1 - 3*a*c), 
				u2 + 2*a*b, 
				0.5*(b*(d*e - f) + c*(d*f + e) + a*(d**2 + 1)), 
				0.5*(a*(d*e + f) + c*(e*f - d) + b*(e**2 + 1)),  
				0.5*(a*(d*f - e) + b*(e*f + d) + c*(f**2 + 1))]
	# lhs_der= -gradVtox*dynamics - n*Matrix([2 - a**2 - b**2 - c**2 - d**2 - e**2 - f**2])
	# lhs_der = expand(lhs_der[0, 0])
	temp = monomial_generation(2, X)
	monomial_der = GetDerivative(dynamics, temp, X)
	lhs_der = - V * monomial_der - 0.5*Matrix([a**2 + b**2 + c**2 + d**2 + e**2 + f**2])
	lhs_der = lhs_der[0,0].expand()
	rhs_der = lambda_poly_der * poly_list
	rhs_der = rhs_der[0,0].expand()

	# with open('cons.txt', 'a+') as f:
	file.write("\n")
	file.write("#------------------The Lie Derivative conditions------------------\n")
	generateConstraints(lhs_der, rhs_der, file, degree=4)
	file.write("\n")
	file.write("#------------------Monomial and Polynomial Terms------------------\n")
	file.write("polynomial terms:"+str(monomial_list)+"\n")
	file.write("number of polynomial terms:"+str(len(monomial_list))+"\n")
	file.write(str(len(poly_list))+"\n")
	file.write("\n")
	file.write("#------------------Lie Derivative test------------------\n")
	temp = V*monomial_der
	file.write(str(expand(temp[0, 0]))+"\n")
	file.close()




def LyaTest(V, c0, c1, c2):
	assert V.shape == (28, )
	# print("pass 1")
	t0 = np.reshape(c0, (1, 9))
	t1 = np.reshape(c1, (1, 13))
	t2 = np.reshape(c2, (1, 16))

	valueTest, LieTest = True, True
	for j in range(10000):
		u = np.random.normal(0,1)
		v = np.random.normal(0,1)
		w = np.random.normal(0,1)
		m = np.random.normal(0,1)
		n = np.random.normal(0,1)
		k = np.random.normal(0,1)
		norm = (u*u + v*v + w*w + m*m + n*n + k*k)**(0.5)
		# print(norm, u,v,w,m,n,k)
		normlized_vector = [np.sqrt(2)* i / norm for i in (u,v,w,m,n,k)]
		a, b, c, d, e, f = normlized_vector[0], normlized_vector[1], normlized_vector[2], normlized_vector[3], normlized_vector[4], normlized_vector[5]
		value = V.dot(np.array([1, f, e, d, c, b, a, f**2, e**2, d**2, c**2, b**2, a**2, e*f, d*f, d*e, c*f, c*e, c*d, b*f, b*e, b*d, b*c, a*f, a*e, a*d, a*c, a*b]))
		if value < 0:
			valueTest = False
		V = np.reshape(V, (1, 28))
		# Lie = 0.5*a**4*V[0, 12]*t0[0, 18] + a**4*V[0, 26]*t2[0, 18] + 0.5*a**4*V[0, 27]*t1[0, 18] + 1.0*a**3*b*V[0, 11]*t1[0, 18] + 0.5*a**3*b*V[0, 12]*t0[0, 63] + a**3*b*V[0, 22]*t2[0, 18] + a**3*b*V[0, 26]*t2[0, 63] + 0.25*a**3*b*V[0, 27]*t0[0, 18] + 0.5*a**3*b*V[0, 27]*t1[0, 63] + 2*a**3*c*V[0, 10]*t2[0, 18] + 0.5*a**3*c*V[0, 12]*t0[0, 62] + 0.5*a**3*c*V[0, 22]*t1[0, 18] + 0.25*a**3*c*V[0, 26]*t0[0, 18] + a**3*c*V[0, 26]*t2[0, 62] + 0.5*a**3*c*V[0, 27]*t1[0, 62] + 0.5*a**3*d*V[0, 12]*t0[0, 61] + a**3*d*V[0, 18]*t2[0, 18] + 0.5*a**3*d*V[0, 21]*t1[0, 18] + 0.25*a**3*d*V[0, 25]*t0[0, 18] + a**3*d*V[0, 26]*t2[0, 61] + 0.5*a**3*d*V[0, 27]*t1[0, 61] + 0.5*a**3*e*V[0, 12]*t0[0, 60] + a**3*e*V[0, 17]*t2[0, 18] + 0.5*a**3*e*V[0, 20]*t1[0, 18] + 0.25*a**3*e*V[0, 24]*t0[0, 18] + a**3*e*V[0, 26]*t2[0, 60] + 0.5*a**3*e*V[0, 27]*t1[0, 60] + 0.5*a**3*f*V[0, 12]*t0[0, 59] + a**3*f*V[0, 16]*t2[0, 18] + 0.5*a**3*f*V[0, 19]*t1[0, 18] + 0.25*a**3*f*V[0, 23]*t0[0, 18] + a**3*f*V[0, 26]*t2[0, 59] + 0.5*a**3*f*V[0, 27]*t1[0, 59] + a**3*V[0, 4]*t2[0, 18] + 0.5*a**3*V[0, 5]*t1[0, 18] + 0.25*a**3*V[0, 6]*t0[0, 18] + 0.5*a**3*V[0, 12]*t0[0, 12] + a**3*V[0, 26]*t2[0, 12] + 0.5*a**3*V[0, 27]*t1[0, 12] + 1.0*a**2*b**2*V[0, 11]*t1[0, 63] + 0.5*a**2*b**2*V[0, 12]*t0[0, 58] + a**2*b**2*V[0, 22]*t2[0, 63] + a**2*b**2*V[0, 26]*t2[0, 58] + 0.25*a**2*b**2*V[0, 27]*t0[0, 63] + 0.5*a**2*b**2*V[0, 27]*t1[0, 58] + 2*a**2*b*c*V[0, 10]*t2[0, 63] + 1.0*a**2*b*c*V[0, 11]*t1[0, 62] + 0.5*a**2*b*c*V[0, 12]*t0[0, 83] + 0.5*a**2*b*c*V[0, 22]*t1[0, 63] + a**2*b*c*V[0, 22]*t2[0, 62] + 0.25*a**2*b*c*V[0, 26]*t0[0, 63] + a**2*b*c*V[0, 26]*t2[0, 83] + 0.25*a**2*b*c*V[0, 27]*t0[0, 62] + 0.5*a**2*b*c*V[0, 27]*t1[0, 83] + 1.0*a**2*b*d*V[0, 11]*t1[0, 61] + 0.5*a**2*b*d*V[0, 12]*t0[0, 82] + a**2*b*d*V[0, 18]*t2[0, 63] + 0.5*a**2*b*d*V[0, 21]*t1[0, 63] + a**2*b*d*V[0, 22]*t2[0, 61] + 0.25*a**2*b*d*V[0, 25]*t0[0, 63] + a**2*b*d*V[0, 26]*t2[0, 82] + 0.25*a**2*b*d*V[0, 27]*t0[0, 61] + 0.5*a**2*b*d*V[0, 27]*t1[0, 82] + 1.0*a**2*b*e*V[0, 11]*t1[0, 60] + 0.5*a**2*b*e*V[0, 12]*t0[0, 81] + a**2*b*e*V[0, 17]*t2[0, 63] + 0.5*a**2*b*e*V[0, 20]*t1[0, 63] + a**2*b*e*V[0, 22]*t2[0, 60] + 0.25*a**2*b*e*V[0, 24]*t0[0, 63] + a**2*b*e*V[0, 26]*t2[0, 81] + 0.25*a**2*b*e*V[0, 27]*t0[0, 60] + 0.5*a**2*b*e*V[0, 27]*t1[0, 81] + 1.0*a**2*b*f*V[0, 11]*t1[0, 59] + 0.5*a**2*b*f*V[0, 12]*t0[0, 80] + a**2*b*f*V[0, 16]*t2[0, 63] + 0.5*a**2*b*f*V[0, 19]*t1[0, 63] + a**2*b*f*V[0, 22]*t2[0, 59] + 0.25*a**2*b*f*V[0, 23]*t0[0, 63] + a**2*b*f*V[0, 26]*t2[0, 80] + 0.25*a**2*b*f*V[0, 27]*t0[0, 59] + 0.5*a**2*b*f*V[0, 27]*t1[0, 80] + a**2*b*V[0, 4]*t2[0, 63] + 0.5*a**2*b*V[0, 5]*t1[0, 63] + 0.25*a**2*b*V[0, 6]*t0[0, 63] + 1.0*a**2*b*V[0, 11]*t1[0, 12] + 0.5*a**2*b*V[0, 12]*t0[0, 33] + a**2*b*V[0, 22]*t2[0, 12] + a**2*b*V[0, 26]*t2[0, 33] + 2*a**2*b*V[0, 26] + 0.25*a**2*b*V[0, 27]*t0[0, 12] + 0.5*a**2*b*V[0, 27]*t1[0, 33] + 2*a**2*c**2*V[0, 10]*t2[0, 62] + 0.5*a**2*c**2*V[0, 12]*t0[0, 57] + 0.5*a**2*c**2*V[0, 22]*t1[0, 62] + 0.25*a**2*c**2*V[0, 26]*t0[0, 62] + a**2*c**2*V[0, 26]*t2[0, 57] + 0.5*a**2*c**2*V[0, 27]*t1[0, 57] + 2*a**2*c*d*V[0, 10]*t2[0, 61] + 0.5*a**2*c*d*V[0, 12]*t0[0, 79] + a**2*c*d*V[0, 18]*t2[0, 62] + 0.5*a**2*c*d*V[0, 21]*t1[0, 62] + 0.5*a**2*c*d*V[0, 22]*t1[0, 61] + 0.25*a**2*c*d*V[0, 25]*t0[0, 62] + 0.25*a**2*c*d*V[0, 26]*t0[0, 61] + a**2*c*d*V[0, 26]*t2[0, 79] + 0.5*a**2*c*d*V[0, 27]*t1[0, 79] + 2*a**2*c*e*V[0, 10]*t2[0, 60] + 0.5*a**2*c*e*V[0, 12]*t0[0, 78] + a**2*c*e*V[0, 17]*t2[0, 62] + 0.5*a**2*c*e*V[0, 20]*t1[0, 62] + 0.5*a**2*c*e*V[0, 22]*t1[0, 60] + 0.25*a**2*c*e*V[0, 24]*t0[0, 62] + 0.25*a**2*c*e*V[0, 26]*t0[0, 60] + a**2*c*e*V[0, 26]*t2[0, 78] + 0.5*a**2*c*e*V[0, 27]*t1[0, 78] + 2*a**2*c*f*V[0, 10]*t2[0, 59] + 0.5*a**2*c*f*V[0, 12]*t0[0, 77] + a**2*c*f*V[0, 16]*t2[0, 62] + 0.5*a**2*c*f*V[0, 19]*t1[0, 62] + 0.5*a**2*c*f*V[0, 22]*t1[0, 59] + 0.25*a**2*c*f*V[0, 23]*t0[0, 62] + 0.25*a**2*c*f*V[0, 26]*t0[0, 59] + a**2*c*f*V[0, 26]*t2[0, 77] + 0.5*a**2*c*f*V[0, 27]*t1[0, 77] + a**2*c*V[0, 4]*t2[0, 62] + 0.5*a**2*c*V[0, 5]*t1[0, 62] + 0.25*a**2*c*V[0, 6]*t0[0, 62] + 2*a**2*c*V[0, 10]*t2[0, 12] + 0.5*a**2*c*V[0, 12]*t0[0, 32] + 0.5*a**2*c*V[0, 22]*t1[0, 12] + 0.25*a**2*c*V[0, 26]*t0[0, 12] + a**2*c*V[0, 26]*t2[0, 32] + 0.5*a**2*c*V[0, 27]*t1[0, 32] - 1.5*a**2*c*V[0, 27] + 0.5*a**2*d**2*V[0, 12]*t0[0, 56] + a**2*d**2*V[0, 18]*t2[0, 61] + 0.5*a**2*d**2*V[0, 21]*t1[0, 61] + 0.25*a**2*d**2*V[0, 25]*t0[0, 61] + 0.5*a**2*d**2*V[0, 25] + a**2*d**2*V[0, 26]*t2[0, 56] + 0.5*a**2*d**2*V[0, 27]*t1[0, 56] + 0.5*a**2*d*e*V[0, 12]*t0[0, 76] + a**2*d*e*V[0, 17]*t2[0, 61] + a**2*d*e*V[0, 18]*t2[0, 60] + 0.5*a**2*d*e*V[0, 20]*t1[0, 61] + 0.5*a**2*d*e*V[0, 21]*t1[0, 60] + 0.25*a**2*d*e*V[0, 24]*t0[0, 61] + 0.5*a**2*d*e*V[0, 24] + 0.25*a**2*d*e*V[0, 25]*t0[0, 60] + a**2*d*e*V[0, 26]*t2[0, 76] + 0.5*a**2*d*e*V[0, 27]*t1[0, 76] + 0.5*a**2*d*f*V[0, 12]*t0[0, 75] + a**2*d*f*V[0, 16]*t2[0, 61] + a**2*d*f*V[0, 18]*t2[0, 59] + 0.5*a**2*d*f*V[0, 19]*t1[0, 61] + 0.5*a**2*d*f*V[0, 21]*t1[0, 59] + 0.25*a**2*d*f*V[0, 23]*t0[0, 61] + 0.5*a**2*d*f*V[0, 23] + 0.25*a**2*d*f*V[0, 25]*t0[0, 59] + a**2*d*f*V[0, 26]*t2[0, 75] + 0.5*a**2*d*f*V[0, 27]*t1[0, 75] + a**2*d*V[0, 4]*t2[0, 61] + 0.5*a**2*d*V[0, 5]*t1[0, 61] + 0.25*a**2*d*V[0, 6]*t0[0, 61] + 0.5*a**2*d*V[0, 12]*t0[0, 31] + a**2*d*V[0, 18]*t2[0, 12] + 0.5*a**2*d*V[0, 21]*t1[0, 12] + 0.25*a**2*d*V[0, 25]*t0[0, 12] + a**2*d*V[0, 26]*t2[0, 31] + 0.5*a**2*d*V[0, 27]*t1[0, 31] + 0.5*a**2*e**2*V[0, 12]*t0[0, 55] + a**2*e**2*V[0, 17]*t2[0, 60] + 0.5*a**2*e**2*V[0, 20]*t1[0, 60] + 0.25*a**2*e**2*V[0, 24]*t0[0, 60] + a**2*e**2*V[0, 26]*t2[0, 55] + 0.5*a**2*e**2*V[0, 27]*t1[0, 55] + 0.5*a**2*e*f*V[0, 12]*t0[0, 74] + a**2*e*f*V[0, 16]*t2[0, 60] + a**2*e*f*V[0, 17]*t2[0, 59] + 0.5*a**2*e*f*V[0, 19]*t1[0, 60] + 0.5*a**2*e*f*V[0, 20]*t1[0, 59] + 0.25*a**2*e*f*V[0, 23]*t0[0, 60] + 0.25*a**2*e*f*V[0, 24]*t0[0, 59] + a**2*e*f*V[0, 26]*t2[0, 74] + 0.5*a**2*e*f*V[0, 27]*t1[0, 74] + a**2*e*V[0, 4]*t2[0, 60] + 0.5*a**2*e*V[0, 5]*t1[0, 60] + 0.25*a**2*e*V[0, 6]*t0[0, 60] + 0.5*a**2*e*V[0, 12]*t0[0, 30] + a**2*e*V[0, 17]*t2[0, 12] + 0.5*a**2*e*V[0, 20]*t1[0, 12] - 0.5*a**2*e*V[0, 23] + 0.25*a**2*e*V[0, 24]*t0[0, 12] + a**2*e*V[0, 26]*t2[0, 30] + 0.5*a**2*e*V[0, 27]*t1[0, 30] + 0.5*a**2*f**2*V[0, 12]*t0[0, 54] + a**2*f**2*V[0, 16]*t2[0, 59] + 0.5*a**2*f**2*V[0, 19]*t1[0, 59] + 0.25*a**2*f**2*V[0, 23]*t0[0, 59] + a**2*f**2*V[0, 26]*t2[0, 54] + 0.5*a**2*f**2*V[0, 27]*t1[0, 54] + a**2*f*V[0, 4]*t2[0, 59] + 0.5*a**2*f*V[0, 5]*t1[0, 59] + 0.25*a**2*f*V[0, 6]*t0[0, 59] + 0.5*a**2*f*V[0, 12]*t0[0, 29] + a**2*f*V[0, 16]*t2[0, 12] + 0.5*a**2*f*V[0, 19]*t1[0, 12] + 0.25*a**2*f*V[0, 23]*t0[0, 12] + 0.5*a**2*f*V[0, 24] + a**2*f*V[0, 26]*t2[0, 29] + 0.5*a**2*f*V[0, 27]*t1[0, 29] + a**2*V[0, 4]*t2[0, 12] + 0.5*a**2*V[0, 5]*t1[0, 12] + 0.25*a**2*V[0, 6]*t0[0, 12] + 0.5*a**2*V[0, 12]*t0[0, 6] + 0.5*a**2*V[0, 25] + a**2*V[0, 26]*t2[0, 6] + 0.5*a**2*V[0, 27]*t1[0, 6] + 1.0*a*b**3*V[0, 11]*t1[0, 58] + 0.5*a*b**3*V[0, 12]*t0[0, 17] + a*b**3*V[0, 22]*t2[0, 58] + a*b**3*V[0, 26]*t2[0, 17] + 0.25*a*b**3*V[0, 27]*t0[0, 58] + 0.5*a*b**3*V[0, 27]*t1[0, 17] + 2*a*b**2*c*V[0, 10]*t2[0, 58] + 1.0*a*b**2*c*V[0, 11]*t1[0, 83] + 0.5*a*b**2*c*V[0, 12]*t0[0, 53] + 0.5*a*b**2*c*V[0, 22]*t1[0, 58] + a*b**2*c*V[0, 22]*t2[0, 83] + 0.25*a*b**2*c*V[0, 26]*t0[0, 58] + a*b**2*c*V[0, 26]*t2[0, 53] + 0.25*a*b**2*c*V[0, 27]*t0[0, 83] + 0.5*a*b**2*c*V[0, 27]*t1[0, 53] + 1.0*a*b**2*d*V[0, 11]*t1[0, 82] + 0.5*a*b**2*d*V[0, 12]*t0[0, 52] + a*b**2*d*V[0, 18]*t2[0, 58] + 0.5*a*b**2*d*V[0, 21]*t1[0, 58] + a*b**2*d*V[0, 22]*t2[0, 82] + 0.25*a*b**2*d*V[0, 25]*t0[0, 58] + a*b**2*d*V[0, 26]*t2[0, 52] + 0.25*a*b**2*d*V[0, 27]*t0[0, 82] + 0.5*a*b**2*d*V[0, 27]*t1[0, 52] + 1.0*a*b**2*e*V[0, 11]*t1[0, 81] + 0.5*a*b**2*e*V[0, 12]*t0[0, 51] + a*b**2*e*V[0, 17]*t2[0, 58] + 0.5*a*b**2*e*V[0, 20]*t1[0, 58] + a*b**2*e*V[0, 22]*t2[0, 81] + 0.25*a*b**2*e*V[0, 24]*t0[0, 58] + a*b**2*e*V[0, 26]*t2[0, 51] + 0.25*a*b**2*e*V[0, 27]*t0[0, 81] + 0.5*a*b**2*e*V[0, 27]*t1[0, 51] + 1.0*a*b**2*f*V[0, 11]*t1[0, 80] + 0.5*a*b**2*f*V[0, 12]*t0[0, 50] + a*b**2*f*V[0, 16]*t2[0, 58] + 0.5*a*b**2*f*V[0, 19]*t1[0, 58] + a*b**2*f*V[0, 22]*t2[0, 80] + 0.25*a*b**2*f*V[0, 23]*t0[0, 58] + a*b**2*f*V[0, 26]*t2[0, 50] + 0.25*a*b**2*f*V[0, 27]*t0[0, 80] + 0.5*a*b**2*f*V[0, 27]*t1[0, 50] + a*b**2*V[0, 4]*t2[0, 58] + 0.5*a*b**2*V[0, 5]*t1[0, 58] + 0.25*a*b**2*V[0, 6]*t0[0, 58] + 1.0*a*b**2*V[0, 11]*t1[0, 33] + 0.5*a*b**2*V[0, 12]*t0[0, 11] + a*b**2*V[0, 22]*t2[0, 33] + 2*a*b**2*V[0, 22] + a*b**2*V[0, 26]*t2[0, 11] + 0.25*a*b**2*V[0, 27]*t0[0, 33] + 0.5*a*b**2*V[0, 27]*t1[0, 11] + 2*a*b*c**2*V[0, 10]*t2[0, 83] + 1.0*a*b*c**2*V[0, 11]*t1[0, 57] + 0.5*a*b*c**2*V[0, 12]*t0[0, 49] + 0.5*a*b*c**2*V[0, 22]*t1[0, 83] + a*b*c**2*V[0, 22]*t2[0, 57] + 0.25*a*b*c**2*V[0, 26]*t0[0, 83] + a*b*c**2*V[0, 26]*t2[0, 49] + 0.25*a*b*c**2*V[0, 27]*t0[0, 57] + 0.5*a*b*c**2*V[0, 27]*t1[0, 49] + 2*a*b*c*d*V[0, 10]*t2[0, 82] + 1.0*a*b*c*d*V[0, 11]*t1[0, 79] + 0.5*a*b*c*d*V[0, 12]*t0[0, 73] + a*b*c*d*V[0, 18]*t2[0, 83] + 0.5*a*b*c*d*V[0, 21]*t1[0, 83] + 0.5*a*b*c*d*V[0, 22]*t1[0, 82] + a*b*c*d*V[0, 22]*t2[0, 79] + 0.25*a*b*c*d*V[0, 25]*t0[0, 83] + 0.25*a*b*c*d*V[0, 26]*t0[0, 82] + a*b*c*d*V[0, 26]*t2[0, 73] + 0.25*a*b*c*d*V[0, 27]*t0[0, 79] + 0.5*a*b*c*d*V[0, 27]*t1[0, 73] + 2*a*b*c*e*V[0, 10]*t2[0, 81] + 1.0*a*b*c*e*V[0, 11]*t1[0, 78] + 0.5*a*b*c*e*V[0, 12]*t0[0, 72] + a*b*c*e*V[0, 17]*t2[0, 83] + 0.5*a*b*c*e*V[0, 20]*t1[0, 83] + 0.5*a*b*c*e*V[0, 22]*t1[0, 81] + a*b*c*e*V[0, 22]*t2[0, 78] + 0.25*a*b*c*e*V[0, 24]*t0[0, 83] + 0.25*a*b*c*e*V[0, 26]*t0[0, 81] + a*b*c*e*V[0, 26]*t2[0, 72] + 0.25*a*b*c*e*V[0, 27]*t0[0, 78] + 0.5*a*b*c*e*V[0, 27]*t1[0, 72] + 2*a*b*c*f*V[0, 10]*t2[0, 80] + 1.0*a*b*c*f*V[0, 11]*t1[0, 77] + 0.5*a*b*c*f*V[0, 12]*t0[0, 71] + a*b*c*f*V[0, 16]*t2[0, 83] + 0.5*a*b*c*f*V[0, 19]*t1[0, 83] + 0.5*a*b*c*f*V[0, 22]*t1[0, 80] + a*b*c*f*V[0, 22]*t2[0, 77] + 0.25*a*b*c*f*V[0, 23]*t0[0, 83] + 0.25*a*b*c*f*V[0, 26]*t0[0, 80] + a*b*c*f*V[0, 26]*t2[0, 71] + 0.25*a*b*c*f*V[0, 27]*t0[0, 77] + 0.5*a*b*c*f*V[0, 27]*t1[0, 71] + a*b*c*V[0, 4]*t2[0, 83] + 0.5*a*b*c*V[0, 5]*t1[0, 83] + 0.25*a*b*c*V[0, 6]*t0[0, 83] + 2*a*b*c*V[0, 10]*t2[0, 33] + 4*a*b*c*V[0, 10] + 1.0*a*b*c*V[0, 11]*t1[0, 32] - 3.0*a*b*c*V[0, 11] + 0.5*a*b*c*V[0, 12]*t0[0, 28] + 0.5*a*b*c*V[0, 12] + 0.5*a*b*c*V[0, 22]*t1[0, 33] + a*b*c*V[0, 22]*t2[0, 32] + 0.25*a*b*c*V[0, 26]*t0[0, 33] + a*b*c*V[0, 26]*t2[0, 28] + 0.25*a*b*c*V[0, 27]*t0[0, 32] + 0.5*a*b*c*V[0, 27]*t1[0, 28] + 1.0*a*b*d**2*V[0, 11]*t1[0, 56] + 0.5*a*b*d**2*V[0, 12]*t0[0, 48] + a*b*d**2*V[0, 18]*t2[0, 82] + 0.5*a*b*d**2*V[0, 21]*t1[0, 82] + 0.5*a*b*d**2*V[0, 21] + a*b*d**2*V[0, 22]*t2[0, 56] + 0.25*a*b*d**2*V[0, 25]*t0[0, 82] + a*b*d**2*V[0, 26]*t2[0, 48] + 0.25*a*b*d**2*V[0, 27]*t0[0, 56] + 0.5*a*b*d**2*V[0, 27]*t1[0, 48] + 1.0*a*b*d*e*V[0, 11]*t1[0, 76] + 0.5*a*b*d*e*V[0, 12]*t0[0, 70] + a*b*d*e*V[0, 17]*t2[0, 82] + a*b*d*e*V[0, 18]*t2[0, 81] + 0.5*a*b*d*e*V[0, 20]*t1[0, 82] + 0.5*a*b*d*e*V[0, 20] + 0.5*a*b*d*e*V[0, 21]*t1[0, 81] + a*b*d*e*V[0, 22]*t2[0, 76] + 0.25*a*b*d*e*V[0, 24]*t0[0, 82] + 0.25*a*b*d*e*V[0, 25]*t0[0, 81] + 0.5*a*b*d*e*V[0, 25] + a*b*d*e*V[0, 26]*t2[0, 70] + 0.25*a*b*d*e*V[0, 27]*t0[0, 76] + 0.5*a*b*d*e*V[0, 27]*t1[0, 70] + 1.0*a*b*d*f*V[0, 11]*t1[0, 75] + 0.5*a*b*d*f*V[0, 12]*t0[0, 69] + a*b*d*f*V[0, 16]*t2[0, 82] + a*b*d*f*V[0, 18]*t2[0, 80] + 0.5*a*b*d*f*V[0, 19]*t1[0, 82] + 0.5*a*b*d*f*V[0, 19] + 0.5*a*b*d*f*V[0, 21]*t1[0, 80] + a*b*d*f*V[0, 22]*t2[0, 75] + 0.25*a*b*d*f*V[0, 23]*t0[0, 82] + 0.25*a*b*d*f*V[0, 25]*t0[0, 80] + a*b*d*f*V[0, 26]*t2[0, 69] + 0.25*a*b*d*f*V[0, 27]*t0[0, 75] + 0.5*a*b*d*f*V[0, 27]*t1[0, 69] + a*b*d*V[0, 4]*t2[0, 82] + 0.5*a*b*d*V[0, 5]*t1[0, 82] + 0.25*a*b*d*V[0, 6]*t0[0, 82] + 1.0*a*b*d*V[0, 11]*t1[0, 31] + 0.5*a*b*d*V[0, 12]*t0[0, 27] + a*b*d*V[0, 18]*t2[0, 33] + 2*a*b*d*V[0, 18] + 0.5*a*b*d*V[0, 21]*t1[0, 33] + a*b*d*V[0, 22]*t2[0, 31] + 0.5*a*b*d*V[0, 23] + 0.25*a*b*d*V[0, 25]*t0[0, 33] + a*b*d*V[0, 26]*t2[0, 27] + 0.25*a*b*d*V[0, 27]*t0[0, 31] + 0.5*a*b*d*V[0, 27]*t1[0, 27] + 1.0*a*b*e**2*V[0, 11]*t1[0, 55] + 0.5*a*b*e**2*V[0, 12]*t0[0, 47] + a*b*e**2*V[0, 17]*t2[0, 81] + 0.5*a*b*e**2*V[0, 20]*t1[0, 81] + a*b*e**2*V[0, 22]*t2[0, 55] + 0.25*a*b*e**2*V[0, 24]*t0[0, 81] + 0.5*a*b*e**2*V[0, 24] + a*b*e**2*V[0, 26]*t2[0, 47] + 0.25*a*b*e**2*V[0, 27]*t0[0, 55] + 0.5*a*b*e**2*V[0, 27]*t1[0, 47] + 1.0*a*b*e*f*V[0, 11]*t1[0, 74] + 0.5*a*b*e*f*V[0, 12]*t0[0, 68] + a*b*e*f*V[0, 16]*t2[0, 81] + a*b*e*f*V[0, 17]*t2[0, 80] + 0.5*a*b*e*f*V[0, 19]*t1[0, 81] + 0.5*a*b*e*f*V[0, 20]*t1[0, 80] + a*b*e*f*V[0, 22]*t2[0, 74] + 0.25*a*b*e*f*V[0, 23]*t0[0, 81] + 0.5*a*b*e*f*V[0, 23] + 0.25*a*b*e*f*V[0, 24]*t0[0, 80] + a*b*e*f*V[0, 26]*t2[0, 68] + 0.25*a*b*e*f*V[0, 27]*t0[0, 74] + 0.5*a*b*e*f*V[0, 27]*t1[0, 68] + a*b*e*V[0, 4]*t2[0, 81] + 0.5*a*b*e*V[0, 5]*t1[0, 81] + 0.25*a*b*e*V[0, 6]*t0[0, 81] + 1.0*a*b*e*V[0, 11]*t1[0, 30] + 0.5*a*b*e*V[0, 12]*t0[0, 26] + a*b*e*V[0, 17]*t2[0, 33] + 2*a*b*e*V[0, 17] - 0.5*a*b*e*V[0, 19] + 0.5*a*b*e*V[0, 20]*t1[0, 33] + a*b*e*V[0, 22]*t2[0, 30] + 0.25*a*b*e*V[0, 24]*t0[0, 33] + a*b*e*V[0, 26]*t2[0, 26] + 0.25*a*b*e*V[0, 27]*t0[0, 30] + 0.5*a*b*e*V[0, 27]*t1[0, 26] + 1.0*a*b*f**2*V[0, 11]*t1[0, 54] + 0.5*a*b*f**2*V[0, 12]*t0[0, 46] + a*b*f**2*V[0, 16]*t2[0, 80] + 0.5*a*b*f**2*V[0, 19]*t1[0, 80] + a*b*f**2*V[0, 22]*t2[0, 54] + 0.25*a*b*f**2*V[0, 23]*t0[0, 80] + a*b*f**2*V[0, 26]*t2[0, 46] + 0.25*a*b*f**2*V[0, 27]*t0[0, 54] + 0.5*a*b*f**2*V[0, 27]*t1[0, 46] + a*b*f*V[0, 4]*t2[0, 80] + 0.5*a*b*f*V[0, 5]*t1[0, 80] + 0.25*a*b*f*V[0, 6]*t0[0, 80] + 1.0*a*b*f*V[0, 11]*t1[0, 29] + 0.5*a*b*f*V[0, 12]*t0[0, 25] + a*b*f*V[0, 16]*t2[0, 33] + 2*a*b*f*V[0, 16] + 0.5*a*b*f*V[0, 19]*t1[0, 33] + 0.5*a*b*f*V[0, 20] + a*b*f*V[0, 22]*t2[0, 29] + 0.25*a*b*f*V[0, 23]*t0[0, 33] - 0.5*a*b*f*V[0, 25] + a*b*f*V[0, 26]*t2[0, 25] + 0.25*a*b*f*V[0, 27]*t0[0, 29] + 0.5*a*b*f*V[0, 27]*t1[0, 25] + a*b*V[0, 4]*t2[0, 33] + 2*a*b*V[0, 4] + 0.5*a*b*V[0, 5]*t1[0, 33] + 0.25*a*b*V[0, 6]*t0[0, 33] + 1.0*a*b*V[0, 11]*t1[0, 6] + 0.5*a*b*V[0, 12]*t0[0, 5] + 0.5*a*b*V[0, 21] + a*b*V[0, 22]*t2[0, 6] + 0.5*a*b*V[0, 24] + a*b*V[0, 26]*t2[0, 5] + 0.25*a*b*V[0, 27]*t0[0, 6] + 0.5*a*b*V[0, 27]*t1[0, 5] + 2*a*c**3*V[0, 10]*t2[0, 57] + 0.5*a*c**3*V[0, 12]*t0[0, 16] + 0.5*a*c**3*V[0, 22]*t1[0, 57] + 0.25*a*c**3*V[0, 26]*t0[0, 57] + a*c**3*V[0, 26]*t2[0, 16] + 0.5*a*c**3*V[0, 27]*t1[0, 16] + 2*a*c**2*d*V[0, 10]*t2[0, 79] + 0.5*a*c**2*d*V[0, 12]*t0[0, 45] + a*c**2*d*V[0, 18]*t2[0, 57] + 0.5*a*c**2*d*V[0, 21]*t1[0, 57] + 0.5*a*c**2*d*V[0, 22]*t1[0, 79] + 0.25*a*c**2*d*V[0, 25]*t0[0, 57] + 0.25*a*c**2*d*V[0, 26]*t0[0, 79] + a*c**2*d*V[0, 26]*t2[0, 45] + 0.5*a*c**2*d*V[0, 27]*t1[0, 45] + 2*a*c**2*e*V[0, 10]*t2[0, 78] + 0.5*a*c**2*e*V[0, 12]*t0[0, 44] + a*c**2*e*V[0, 17]*t2[0, 57] + 0.5*a*c**2*e*V[0, 20]*t1[0, 57] + 0.5*a*c**2*e*V[0, 22]*t1[0, 78] + 0.25*a*c**2*e*V[0, 24]*t0[0, 57] + 0.25*a*c**2*e*V[0, 26]*t0[0, 78] + a*c**2*e*V[0, 26]*t2[0, 44] + 0.5*a*c**2*e*V[0, 27]*t1[0, 44] + 2*a*c**2*f*V[0, 10]*t2[0, 77] + 0.5*a*c**2*f*V[0, 12]*t0[0, 43] + a*c**2*f*V[0, 16]*t2[0, 57] + 0.5*a*c**2*f*V[0, 19]*t1[0, 57] + 0.5*a*c**2*f*V[0, 22]*t1[0, 77] + 0.25*a*c**2*f*V[0, 23]*t0[0, 57] + 0.25*a*c**2*f*V[0, 26]*t0[0, 77] + a*c**2*f*V[0, 26]*t2[0, 43] + 0.5*a*c**2*f*V[0, 27]*t1[0, 43] + a*c**2*V[0, 4]*t2[0, 57] + 0.5*a*c**2*V[0, 5]*t1[0, 57] + 0.25*a*c**2*V[0, 6]*t0[0, 57] + 2*a*c**2*V[0, 10]*t2[0, 32] + 0.5*a*c**2*V[0, 12]*t0[0, 10] + 0.5*a*c**2*V[0, 22]*t1[0, 32] - 1.5*a*c**2*V[0, 22] + 0.25*a*c**2*V[0, 26]*t0[0, 32] + a*c**2*V[0, 26]*t2[0, 10] + 0.5*a*c**2*V[0, 27]*t1[0, 10] + 2*a*c*d**2*V[0, 10]*t2[0, 56] + 0.5*a*c*d**2*V[0, 12]*t0[0, 42] + a*c*d**2*V[0, 18]*t2[0, 79] + 0.5*a*c*d**2*V[0, 18] + 0.5*a*c*d**2*V[0, 21]*t1[0, 79] + 0.5*a*c*d**2*V[0, 22]*t1[0, 56] + 0.25*a*c*d**2*V[0, 25]*t0[0, 79] + 0.25*a*c*d**2*V[0, 26]*t0[0, 56] + a*c*d**2*V[0, 26]*t2[0, 42] + 0.5*a*c*d**2*V[0, 27]*t1[0, 42] + 2*a*c*d*e*V[0, 10]*t2[0, 76] + 0.5*a*c*d*e*V[0, 12]*t0[0, 67] + a*c*d*e*V[0, 17]*t2[0, 79] + 0.5*a*c*d*e*V[0, 17] + a*c*d*e*V[0, 18]*t2[0, 78] + 0.5*a*c*d*e*V[0, 20]*t1[0, 79] + 0.5*a*c*d*e*V[0, 21]*t1[0, 78] + 0.5*a*c*d*e*V[0, 22]*t1[0, 76] + 0.25*a*c*d*e*V[0, 24]*t0[0, 79] + 0.25*a*c*d*e*V[0, 25]*t0[0, 78] + 0.25*a*c*d*e*V[0, 26]*t0[0, 76] + a*c*d*e*V[0, 26]*t2[0, 67] + 0.5*a*c*d*e*V[0, 27]*t1[0, 67] + 2*a*c*d*f*V[0, 10]*t2[0, 75] + 0.5*a*c*d*f*V[0, 12]*t0[0, 66] + a*c*d*f*V[0, 16]*t2[0, 79] + 0.5*a*c*d*f*V[0, 16] + a*c*d*f*V[0, 18]*t2[0, 77] + 0.5*a*c*d*f*V[0, 19]*t1[0, 79] + 0.5*a*c*d*f*V[0, 21]*t1[0, 77] + 0.5*a*c*d*f*V[0, 22]*t1[0, 75] + 0.25*a*c*d*f*V[0, 23]*t0[0, 79] + 0.25*a*c*d*f*V[0, 25]*t0[0, 77] + 0.5*a*c*d*f*V[0, 25] + 0.25*a*c*d*f*V[0, 26]*t0[0, 75] + a*c*d*f*V[0, 26]*t2[0, 66] + 0.5*a*c*d*f*V[0, 27]*t1[0, 66] + a*c*d*V[0, 4]*t2[0, 79] + 0.5*a*c*d*V[0, 5]*t1[0, 79] + 0.25*a*c*d*V[0, 6]*t0[0, 79] + 2*a*c*d*V[0, 10]*t2[0, 31] + 0.5*a*c*d*V[0, 12]*t0[0, 24] + a*c*d*V[0, 18]*t2[0, 32] + 0.5*a*c*d*V[0, 21]*t1[0, 32] - 1.5*a*c*d*V[0, 21] + 0.5*a*c*d*V[0, 22]*t1[0, 31] - 0.5*a*c*d*V[0, 24] + 0.25*a*c*d*V[0, 25]*t0[0, 32] + 0.25*a*c*d*V[0, 26]*t0[0, 31] + a*c*d*V[0, 26]*t2[0, 24] + 0.5*a*c*d*V[0, 27]*t1[0, 24] + 2*a*c*e**2*V[0, 10]*t2[0, 55] + 0.5*a*c*e**2*V[0, 12]*t0[0, 41] + a*c*e**2*V[0, 17]*t2[0, 78] + 0.5*a*c*e**2*V[0, 20]*t1[0, 78] + 0.5*a*c*e**2*V[0, 22]*t1[0, 55] + 0.25*a*c*e**2*V[0, 24]*t0[0, 78] + 0.25*a*c*e**2*V[0, 26]*t0[0, 55] + a*c*e**2*V[0, 26]*t2[0, 41] + 0.5*a*c*e**2*V[0, 27]*t1[0, 41] + 2*a*c*e*f*V[0, 10]*t2[0, 74] + 0.5*a*c*e*f*V[0, 12]*t0[0, 65] + a*c*e*f*V[0, 16]*t2[0, 78] + a*c*e*f*V[0, 17]*t2[0, 77] + 0.5*a*c*e*f*V[0, 19]*t1[0, 78] + 0.5*a*c*e*f*V[0, 20]*t1[0, 77] + 0.5*a*c*e*f*V[0, 22]*t1[0, 74] + 0.25*a*c*e*f*V[0, 23]*t0[0, 78] + 0.25*a*c*e*f*V[0, 24]*t0[0, 77] + 0.5*a*c*e*f*V[0, 24] + 0.25*a*c*e*f*V[0, 26]*t0[0, 74] + a*c*e*f*V[0, 26]*t2[0, 65] + 0.5*a*c*e*f*V[0, 27]*t1[0, 65] + a*c*e*V[0, 4]*t2[0, 78] + 0.5*a*c*e*V[0, 5]*t1[0, 78] + 0.25*a*c*e*V[0, 6]*t0[0, 78] + 2*a*c*e*V[0, 10]*t2[0, 30] + 0.5*a*c*e*V[0, 12]*t0[0, 23] - 0.5*a*c*e*V[0, 16] + a*c*e*V[0, 17]*t2[0, 32] + 0.5*a*c*e*V[0, 20]*t1[0, 32] - 1.5*a*c*e*V[0, 20] + 0.5*a*c*e*V[0, 22]*t1[0, 30] + 0.25*a*c*e*V[0, 24]*t0[0, 32] + 0.5*a*c*e*V[0, 25] + 0.25*a*c*e*V[0, 26]*t0[0, 30] + a*c*e*V[0, 26]*t2[0, 23] + 0.5*a*c*e*V[0, 27]*t1[0, 23] + 2*a*c*f**2*V[0, 10]*t2[0, 54] + 0.5*a*c*f**2*V[0, 12]*t0[0, 40] + a*c*f**2*V[0, 16]*t2[0, 77] + 0.5*a*c*f**2*V[0, 19]*t1[0, 77] + 0.5*a*c*f**2*V[0, 22]*t1[0, 54] + 0.25*a*c*f**2*V[0, 23]*t0[0, 77] + 0.5*a*c*f**2*V[0, 23] + 0.25*a*c*f**2*V[0, 26]*t0[0, 54] + a*c*f**2*V[0, 26]*t2[0, 40] + 0.5*a*c*f**2*V[0, 27]*t1[0, 40] + a*c*f*V[0, 4]*t2[0, 77] + 0.5*a*c*f*V[0, 5]*t1[0, 77] + 0.25*a*c*f*V[0, 6]*t0[0, 77] + 2*a*c*f*V[0, 10]*t2[0, 29] + 0.5*a*c*f*V[0, 12]*t0[0, 22] + a*c*f*V[0, 16]*t2[0, 32] + 0.5*a*c*f*V[0, 17] + 0.5*a*c*f*V[0, 19]*t1[0, 32] - 1.5*a*c*f*V[0, 19] + 0.5*a*c*f*V[0, 22]*t1[0, 29] + 0.25*a*c*f*V[0, 23]*t0[0, 32] + 0.25*a*c*f*V[0, 26]*t0[0, 29] + a*c*f*V[0, 26]*t2[0, 22] + 0.5*a*c*f*V[0, 27]*t1[0, 22] + a*c*V[0, 4]*t2[0, 32] + 0.5*a*c*V[0, 5]*t1[0, 32] - 1.5*a*c*V[0, 5] + 0.25*a*c*V[0, 6]*t0[0, 32] + 2*a*c*V[0, 10]*t2[0, 6] + 0.5*a*c*V[0, 12]*t0[0, 4] + 0.5*a*c*V[0, 18] + 0.5*a*c*V[0, 22]*t1[0, 6] + 0.5*a*c*V[0, 23] + 0.25*a*c*V[0, 26]*t0[0, 6] + a*c*V[0, 26]*t2[0, 4] + 0.5*a*c*V[0, 27]*t1[0, 4] + 1.0*a*d**3*V[0, 9] + 0.5*a*d**3*V[0, 12]*t0[0, 15] + a*d**3*V[0, 18]*t2[0, 56] + 0.5*a*d**3*V[0, 21]*t1[0, 56] + 0.25*a*d**3*V[0, 25]*t0[0, 56] + a*d**3*V[0, 26]*t2[0, 15] + 0.5*a*d**3*V[0, 27]*t1[0, 15] + 0.5*a*d**2*e*V[0, 12]*t0[0, 39] + 1.0*a*d**2*e*V[0, 15] + a*d**2*e*V[0, 17]*t2[0, 56] + a*d**2*e*V[0, 18]*t2[0, 76] + 0.5*a*d**2*e*V[0, 20]*t1[0, 56] + 0.5*a*d**2*e*V[0, 21]*t1[0, 76] + 0.25*a*d**2*e*V[0, 24]*t0[0, 56] + 0.25*a*d**2*e*V[0, 25]*t0[0, 76] + a*d**2*e*V[0, 26]*t2[0, 39] + 0.5*a*d**2*e*V[0, 27]*t1[0, 39] + 0.5*a*d**2*f*V[0, 12]*t0[0, 38] + 1.0*a*d**2*f*V[0, 14] + a*d**2*f*V[0, 16]*t2[0, 56] + a*d**2*f*V[0, 18]*t2[0, 75] + 0.5*a*d**2*f*V[0, 19]*t1[0, 56] + 0.5*a*d**2*f*V[0, 21]*t1[0, 75] + 0.25*a*d**2*f*V[0, 23]*t0[0, 56] + 0.25*a*d**2*f*V[0, 25]*t0[0, 75] + a*d**2*f*V[0, 26]*t2[0, 38] + 0.5*a*d**2*f*V[0, 27]*t1[0, 38] + 0.5*a*d**2*V[0, 3] + a*d**2*V[0, 4]*t2[0, 56] + 0.5*a*d**2*V[0, 5]*t1[0, 56] + 0.25*a*d**2*V[0, 6]*t0[0, 56] + 0.5*a*d**2*V[0, 12]*t0[0, 9] + a*d**2*V[0, 18]*t2[0, 31] + 0.5*a*d**2*V[0, 21]*t1[0, 31] + 0.25*a*d**2*V[0, 25]*t0[0, 31] + a*d**2*V[0, 26]*t2[0, 9] + 0.5*a*d**2*V[0, 27]*t1[0, 9] + 1.0*a*d*e**2*V[0, 8] + 0.5*a*d*e**2*V[0, 12]*t0[0, 37] + a*d*e**2*V[0, 17]*t2[0, 76] + a*d*e**2*V[0, 18]*t2[0, 55] + 0.5*a*d*e**2*V[0, 20]*t1[0, 76] + 0.5*a*d*e**2*V[0, 21]*t1[0, 55] + 0.25*a*d*e**2*V[0, 24]*t0[0, 76] + 0.25*a*d*e**2*V[0, 25]*t0[0, 55] + a*d*e**2*V[0, 26]*t2[0, 37] + 0.5*a*d*e**2*V[0, 27]*t1[0, 37] + 0.5*a*d*e*f*V[0, 12]*t0[0, 64] + 1.0*a*d*e*f*V[0, 13] + a*d*e*f*V[0, 16]*t2[0, 76] + a*d*e*f*V[0, 17]*t2[0, 75] + a*d*e*f*V[0, 18]*t2[0, 74] + 0.5*a*d*e*f*V[0, 19]*t1[0, 76] + 0.5*a*d*e*f*V[0, 20]*t1[0, 75] + 0.5*a*d*e*f*V[0, 21]*t1[0, 74] + 0.25*a*d*e*f*V[0, 23]*t0[0, 76] + 0.25*a*d*e*f*V[0, 24]*t0[0, 75] + 0.25*a*d*e*f*V[0, 25]*t0[0, 74] + a*d*e*f*V[0, 26]*t2[0, 64] + 0.5*a*d*e*f*V[0, 27]*t1[0, 64] + 0.5*a*d*e*V[0, 2] + a*d*e*V[0, 4]*t2[0, 76] + 0.5*a*d*e*V[0, 5]*t1[0, 76] + 0.25*a*d*e*V[0, 6]*t0[0, 76] + 0.5*a*d*e*V[0, 12]*t0[0, 21] - 0.5*a*d*e*V[0, 14] + a*d*e*V[0, 17]*t2[0, 31] + a*d*e*V[0, 18]*t2[0, 30] + 0.5*a*d*e*V[0, 20]*t1[0, 31] + 0.5*a*d*e*V[0, 21]*t1[0, 30] + 0.25*a*d*e*V[0, 24]*t0[0, 31] + 0.25*a*d*e*V[0, 25]*t0[0, 30] + a*d*e*V[0, 26]*t2[0, 21] + 0.5*a*d*e*V[0, 27]*t1[0, 21] + 1.0*a*d*f**2*V[0, 7] + 0.5*a*d*f**2*V[0, 12]*t0[0, 36] + a*d*f**2*V[0, 16]*t2[0, 75] + a*d*f**2*V[0, 18]*t2[0, 54] + 0.5*a*d*f**2*V[0, 19]*t1[0, 75] + 0.5*a*d*f**2*V[0, 21]*t1[0, 54] + 0.25*a*d*f**2*V[0, 23]*t0[0, 75] + 0.25*a*d*f**2*V[0, 25]*t0[0, 54] + a*d*f**2*V[0, 26]*t2[0, 36] + 0.5*a*d*f**2*V[0, 27]*t1[0, 36] + 0.5*a*d*f*V[0, 1] + a*d*f*V[0, 4]*t2[0, 75] + 0.5*a*d*f*V[0, 5]*t1[0, 75] + 0.25*a*d*f*V[0, 6]*t0[0, 75] + 0.5*a*d*f*V[0, 12]*t0[0, 20] + 0.5*a*d*f*V[0, 15] + a*d*f*V[0, 16]*t2[0, 31] + a*d*f*V[0, 18]*t2[0, 29] + 0.5*a*d*f*V[0, 19]*t1[0, 31] + 0.5*a*d*f*V[0, 21]*t1[0, 29] + 0.25*a*d*f*V[0, 23]*t0[0, 31] + 0.25*a*d*f*V[0, 25]*t0[0, 29] + a*d*f*V[0, 26]*t2[0, 20] + 0.5*a*d*f*V[0, 27]*t1[0, 20] + a*d*V[0, 4]*t2[0, 31] + 0.5*a*d*V[0, 5]*t1[0, 31] + 0.25*a*d*V[0, 6]*t0[0, 31] + 1.0*a*d*V[0, 9] + 0.5*a*d*V[0, 12]*t0[0, 3] + a*d*V[0, 18]*t2[0, 6] + 0.5*a*d*V[0, 21]*t1[0, 6] + 0.25*a*d*V[0, 25]*t0[0, 6] + a*d*V[0, 26]*t2[0, 3] + 0.5*a*d*V[0, 27]*t1[0, 3] + 0.5*a*e**3*V[0, 12]*t0[0, 14] + a*e**3*V[0, 17]*t2[0, 55] + 0.5*a*e**3*V[0, 20]*t1[0, 55] + 0.25*a*e**3*V[0, 24]*t0[0, 55] + a*e**3*V[0, 26]*t2[0, 14] + 0.5*a*e**3*V[0, 27]*t1[0, 14] + 0.5*a*e**2*f*V[0, 12]*t0[0, 35] + a*e**2*f*V[0, 16]*t2[0, 55] + a*e**2*f*V[0, 17]*t2[0, 74] + 0.5*a*e**2*f*V[0, 19]*t1[0, 55] + 0.5*a*e**2*f*V[0, 20]*t1[0, 74] + 0.25*a*e**2*f*V[0, 23]*t0[0, 55] + 0.25*a*e**2*f*V[0, 24]*t0[0, 74] + a*e**2*f*V[0, 26]*t2[0, 35] + 0.5*a*e**2*f*V[0, 27]*t1[0, 35] + a*e**2*V[0, 4]*t2[0, 55] + 0.5*a*e**2*V[0, 5]*t1[0, 55] + 0.25*a*e**2*V[0, 6]*t0[0, 55] + 0.5*a*e**2*V[0, 12]*t0[0, 8] - 0.5*a*e**2*V[0, 13] + a*e**2*V[0, 17]*t2[0, 30] + 0.5*a*e**2*V[0, 20]*t1[0, 30] + 0.25*a*e**2*V[0, 24]*t0[0, 30] + a*e**2*V[0, 26]*t2[0, 8] + 0.5*a*e**2*V[0, 27]*t1[0, 8] + 0.5*a*e*f**2*V[0, 12]*t0[0, 34] + a*e*f**2*V[0, 16]*t2[0, 74] + a*e*f**2*V[0, 17]*t2[0, 54] + 0.5*a*e*f**2*V[0, 19]*t1[0, 74] + 0.5*a*e*f**2*V[0, 20]*t1[0, 54] + 0.25*a*e*f**2*V[0, 23]*t0[0, 74] + 0.25*a*e*f**2*V[0, 24]*t0[0, 54] + a*e*f**2*V[0, 26]*t2[0, 34] + 0.5*a*e*f**2*V[0, 27]*t1[0, 34] + a*e*f*V[0, 4]*t2[0, 74] + 0.5*a*e*f*V[0, 5]*t1[0, 74] + 0.25*a*e*f*V[0, 6]*t0[0, 74] - 1.0*a*e*f*V[0, 7] + 1.0*a*e*f*V[0, 8] + 0.5*a*e*f*V[0, 12]*t0[0, 19] + a*e*f*V[0, 16]*t2[0, 30] + a*e*f*V[0, 17]*t2[0, 29] + 0.5*a*e*f*V[0, 19]*t1[0, 30] + 0.5*a*e*f*V[0, 20]*t1[0, 29] + 0.25*a*e*f*V[0, 23]*t0[0, 30] + 0.25*a*e*f*V[0, 24]*t0[0, 29] + a*e*f*V[0, 26]*t2[0, 19] + 0.5*a*e*f*V[0, 27]*t1[0, 19] - 0.5*a*e*V[0, 1] + a*e*V[0, 4]*t2[0, 30] + 0.5*a*e*V[0, 5]*t1[0, 30] + 0.25*a*e*V[0, 6]*t0[0, 30] + 0.5*a*e*V[0, 12]*t0[0, 2] + 0.5*a*e*V[0, 15] + a*e*V[0, 17]*t2[0, 6] + 0.5*a*e*V[0, 20]*t1[0, 6] + 0.25*a*e*V[0, 24]*t0[0, 6] + a*e*V[0, 26]*t2[0, 2] + 0.5*a*e*V[0, 27]*t1[0, 2] + 0.5*a*f**3*V[0, 12]*t0[0, 13] + a*f**3*V[0, 16]*t2[0, 54] + 0.5*a*f**3*V[0, 19]*t1[0, 54] + 0.25*a*f**3*V[0, 23]*t0[0, 54] + a*f**3*V[0, 26]*t2[0, 13] + 0.5*a*f**3*V[0, 27]*t1[0, 13] + a*f**2*V[0, 4]*t2[0, 54] + 0.5*a*f**2*V[0, 5]*t1[0, 54] + 0.25*a*f**2*V[0, 6]*t0[0, 54] + 0.5*a*f**2*V[0, 12]*t0[0, 7] + 0.5*a*f**2*V[0, 13] + a*f**2*V[0, 16]*t2[0, 29] + 0.5*a*f**2*V[0, 19]*t1[0, 29] + 0.25*a*f**2*V[0, 23]*t0[0, 29] + a*f**2*V[0, 26]*t2[0, 7] + 0.5*a*f**2*V[0, 27]*t1[0, 7] + 0.5*a*f*V[0, 2] + a*f*V[0, 4]*t2[0, 29] + 0.5*a*f*V[0, 5]*t1[0, 29] + 0.25*a*f*V[0, 6]*t0[0, 29] + 0.5*a*f*V[0, 12]*t0[0, 1] + 0.5*a*f*V[0, 14] + a*f*V[0, 16]*t2[0, 6] + 0.5*a*f*V[0, 19]*t1[0, 6] + 0.25*a*f*V[0, 23]*t0[0, 6] + a*f*V[0, 26]*t2[0, 1] + 0.5*a*f*V[0, 27]*t1[0, 1] + 0.5*a*V[0, 3] + a*V[0, 4]*t2[0, 6] + 0.5*a*V[0, 5]*t1[0, 6] + 0.25*a*V[0, 6]*t0[0, 6] + 0.5*a*V[0, 12]*t0[0, 0] + a*V[0, 26]*t2[0, 0] + 0.5*a*V[0, 27]*t1[0, 0] + 1.0*b**4*V[0, 11]*t1[0, 17] + b**4*V[0, 22]*t2[0, 17] + 0.25*b**4*V[0, 27]*t0[0, 17] + 2*b**3*c*V[0, 10]*t2[0, 17] + 1.0*b**3*c*V[0, 11]*t1[0, 53] + 0.5*b**3*c*V[0, 22]*t1[0, 17] + b**3*c*V[0, 22]*t2[0, 53] + 0.25*b**3*c*V[0, 26]*t0[0, 17] + 0.25*b**3*c*V[0, 27]*t0[0, 53] + 1.0*b**3*d*V[0, 11]*t1[0, 52] + b**3*d*V[0, 18]*t2[0, 17] + 0.5*b**3*d*V[0, 21]*t1[0, 17] + b**3*d*V[0, 22]*t2[0, 52] + 0.25*b**3*d*V[0, 25]*t0[0, 17] + 0.25*b**3*d*V[0, 27]*t0[0, 52] + 1.0*b**3*e*V[0, 11]*t1[0, 51] + b**3*e*V[0, 17]*t2[0, 17] + 0.5*b**3*e*V[0, 20]*t1[0, 17] + b**3*e*V[0, 22]*t2[0, 51] + 0.25*b**3*e*V[0, 24]*t0[0, 17] + 0.25*b**3*e*V[0, 27]*t0[0, 51] + 1.0*b**3*f*V[0, 11]*t1[0, 50] + b**3*f*V[0, 16]*t2[0, 17] + 0.5*b**3*f*V[0, 19]*t1[0, 17] + b**3*f*V[0, 22]*t2[0, 50] + 0.25*b**3*f*V[0, 23]*t0[0, 17] + 0.25*b**3*f*V[0, 27]*t0[0, 50] + b**3*V[0, 4]*t2[0, 17] + 0.5*b**3*V[0, 5]*t1[0, 17] + 0.25*b**3*V[0, 6]*t0[0, 17] + 1.0*b**3*V[0, 11]*t1[0, 11] + b**3*V[0, 22]*t2[0, 11] + 0.25*b**3*V[0, 27]*t0[0, 11] + 2*b**2*c**2*V[0, 10]*t2[0, 53] + 1.0*b**2*c**2*V[0, 11]*t1[0, 49] + 0.5*b**2*c**2*V[0, 22]*t1[0, 53] + b**2*c**2*V[0, 22]*t2[0, 49] + 0.25*b**2*c**2*V[0, 26]*t0[0, 53] + 0.25*b**2*c**2*V[0, 27]*t0[0, 49] + 2*b**2*c*d*V[0, 10]*t2[0, 52] + 1.0*b**2*c*d*V[0, 11]*t1[0, 73] + b**2*c*d*V[0, 18]*t2[0, 53] + 0.5*b**2*c*d*V[0, 21]*t1[0, 53] + 0.5*b**2*c*d*V[0, 22]*t1[0, 52] + b**2*c*d*V[0, 22]*t2[0, 73] + 0.25*b**2*c*d*V[0, 25]*t0[0, 53] + 0.25*b**2*c*d*V[0, 26]*t0[0, 52] + 0.25*b**2*c*d*V[0, 27]*t0[0, 73] + 2*b**2*c*e*V[0, 10]*t2[0, 51] + 1.0*b**2*c*e*V[0, 11]*t1[0, 72] + b**2*c*e*V[0, 17]*t2[0, 53] + 0.5*b**2*c*e*V[0, 20]*t1[0, 53] + 0.5*b**2*c*e*V[0, 22]*t1[0, 51] + b**2*c*e*V[0, 22]*t2[0, 72] + 0.25*b**2*c*e*V[0, 24]*t0[0, 53] + 0.25*b**2*c*e*V[0, 26]*t0[0, 51] + 0.25*b**2*c*e*V[0, 27]*t0[0, 72] + 2*b**2*c*f*V[0, 10]*t2[0, 50] + 1.0*b**2*c*f*V[0, 11]*t1[0, 71] + b**2*c*f*V[0, 16]*t2[0, 53] + 0.5*b**2*c*f*V[0, 19]*t1[0, 53] + 0.5*b**2*c*f*V[0, 22]*t1[0, 50] + b**2*c*f*V[0, 22]*t2[0, 71] + 0.25*b**2*c*f*V[0, 23]*t0[0, 53] + 0.25*b**2*c*f*V[0, 26]*t0[0, 50] + 0.25*b**2*c*f*V[0, 27]*t0[0, 71] + b**2*c*V[0, 4]*t2[0, 53] + 0.5*b**2*c*V[0, 5]*t1[0, 53] + 0.25*b**2*c*V[0, 6]*t0[0, 53] + 2*b**2*c*V[0, 10]*t2[0, 11] + 1.0*b**2*c*V[0, 11]*t1[0, 28] + 0.5*b**2*c*V[0, 22]*t1[0, 11] + b**2*c*V[0, 22]*t2[0, 28] + 0.25*b**2*c*V[0, 26]*t0[0, 11] + 0.25*b**2*c*V[0, 27]*t0[0, 28] + 0.25*b**2*c*V[0, 27] + 1.0*b**2*d**2*V[0, 11]*t1[0, 48] + b**2*d**2*V[0, 18]*t2[0, 52] + 0.5*b**2*d**2*V[0, 21]*t1[0, 52] + b**2*d**2*V[0, 22]*t2[0, 48] + 0.25*b**2*d**2*V[0, 25]*t0[0, 52] + 0.25*b**2*d**2*V[0, 27]*t0[0, 48] + 1.0*b**2*d*e*V[0, 11]*t1[0, 70] + b**2*d*e*V[0, 17]*t2[0, 52] + b**2*d*e*V[0, 18]*t2[0, 51] + 0.5*b**2*d*e*V[0, 20]*t1[0, 52] + 0.5*b**2*d*e*V[0, 21]*t1[0, 51] + 0.5*b**2*d*e*V[0, 21] + b**2*d*e*V[0, 22]*t2[0, 70] + 0.25*b**2*d*e*V[0, 24]*t0[0, 52] + 0.25*b**2*d*e*V[0, 25]*t0[0, 51] + 0.25*b**2*d*e*V[0, 27]*t0[0, 70] + 1.0*b**2*d*f*V[0, 11]*t1[0, 69] + b**2*d*f*V[0, 16]*t2[0, 52] + b**2*d*f*V[0, 18]*t2[0, 50] + 0.5*b**2*d*f*V[0, 19]*t1[0, 52] + 0.5*b**2*d*f*V[0, 21]*t1[0, 50] + b**2*d*f*V[0, 22]*t2[0, 69] + 0.25*b**2*d*f*V[0, 23]*t0[0, 52] + 0.25*b**2*d*f*V[0, 25]*t0[0, 50] + 0.25*b**2*d*f*V[0, 27]*t0[0, 69] + b**2*d*V[0, 4]*t2[0, 52] + 0.5*b**2*d*V[0, 5]*t1[0, 52] + 0.25*b**2*d*V[0, 6]*t0[0, 52] + 1.0*b**2*d*V[0, 11]*t1[0, 27] + b**2*d*V[0, 18]*t2[0, 11] + 0.5*b**2*d*V[0, 19] + 0.5*b**2*d*V[0, 21]*t1[0, 11] + b**2*d*V[0, 22]*t2[0, 27] + 0.25*b**2*d*V[0, 25]*t0[0, 11] + 0.25*b**2*d*V[0, 27]*t0[0, 27] + 1.0*b**2*e**2*V[0, 11]*t1[0, 47] + b**2*e**2*V[0, 17]*t2[0, 51] + 0.5*b**2*e**2*V[0, 20]*t1[0, 51] + 0.5*b**2*e**2*V[0, 20] + b**2*e**2*V[0, 22]*t2[0, 47] + 0.25*b**2*e**2*V[0, 24]*t0[0, 51] + 0.25*b**2*e**2*V[0, 27]*t0[0, 47] + 1.0*b**2*e*f*V[0, 11]*t1[0, 68] + b**2*e*f*V[0, 16]*t2[0, 51] + b**2*e*f*V[0, 17]*t2[0, 50] + 0.5*b**2*e*f*V[0, 19]*t1[0, 51] + 0.5*b**2*e*f*V[0, 19] + 0.5*b**2*e*f*V[0, 20]*t1[0, 50] + b**2*e*f*V[0, 22]*t2[0, 68] + 0.25*b**2*e*f*V[0, 23]*t0[0, 51] + 0.25*b**2*e*f*V[0, 24]*t0[0, 50] + 0.25*b**2*e*f*V[0, 27]*t0[0, 68] + b**2*e*V[0, 4]*t2[0, 51] + 0.5*b**2*e*V[0, 5]*t1[0, 51] + 0.25*b**2*e*V[0, 6]*t0[0, 51] + 1.0*b**2*e*V[0, 11]*t1[0, 26] + b**2*e*V[0, 17]*t2[0, 11] + 0.5*b**2*e*V[0, 20]*t1[0, 11] + b**2*e*V[0, 22]*t2[0, 26] + 0.25*b**2*e*V[0, 24]*t0[0, 11] + 0.25*b**2*e*V[0, 27]*t0[0, 26] + 1.0*b**2*f**2*V[0, 11]*t1[0, 46] + b**2*f**2*V[0, 16]*t2[0, 50] + 0.5*b**2*f**2*V[0, 19]*t1[0, 50] + b**2*f**2*V[0, 22]*t2[0, 46] + 0.25*b**2*f**2*V[0, 23]*t0[0, 50] + 0.25*b**2*f**2*V[0, 27]*t0[0, 46] + b**2*f*V[0, 4]*t2[0, 50] + 0.5*b**2*f*V[0, 5]*t1[0, 50] + 0.25*b**2*f*V[0, 6]*t0[0, 50] + 1.0*b**2*f*V[0, 11]*t1[0, 25] + b**2*f*V[0, 16]*t2[0, 11] + 0.5*b**2*f*V[0, 19]*t1[0, 11] - 0.5*b**2*f*V[0, 21] + b**2*f*V[0, 22]*t2[0, 25] + 0.25*b**2*f*V[0, 23]*t0[0, 11] + 0.25*b**2*f*V[0, 27]*t0[0, 25] + b**2*V[0, 4]*t2[0, 11] + 0.5*b**2*V[0, 5]*t1[0, 11] + 0.25*b**2*V[0, 6]*t0[0, 11] + 1.0*b**2*V[0, 11]*t1[0, 5] + 0.5*b**2*V[0, 20] + b**2*V[0, 22]*t2[0, 5] + 0.25*b**2*V[0, 27]*t0[0, 5] + 2*b*c**3*V[0, 10]*t2[0, 49] + 1.0*b*c**3*V[0, 11]*t1[0, 16] + 0.5*b*c**3*V[0, 22]*t1[0, 49] + b*c**3*V[0, 22]*t2[0, 16] + 0.25*b*c**3*V[0, 26]*t0[0, 49] + 0.25*b*c**3*V[0, 27]*t0[0, 16] + 2*b*c**2*d*V[0, 10]*t2[0, 73] + 1.0*b*c**2*d*V[0, 11]*t1[0, 45] + b*c**2*d*V[0, 18]*t2[0, 49] + 0.5*b*c**2*d*V[0, 21]*t1[0, 49] + 0.5*b*c**2*d*V[0, 22]*t1[0, 73] + b*c**2*d*V[0, 22]*t2[0, 45] + 0.25*b*c**2*d*V[0, 25]*t0[0, 49] + 0.25*b*c**2*d*V[0, 26]*t0[0, 73] + 0.25*b*c**2*d*V[0, 27]*t0[0, 45] + 2*b*c**2*e*V[0, 10]*t2[0, 72] + 1.0*b*c**2*e*V[0, 11]*t1[0, 44] + b*c**2*e*V[0, 17]*t2[0, 49] + 0.5*b*c**2*e*V[0, 20]*t1[0, 49] + 0.5*b*c**2*e*V[0, 22]*t1[0, 72] + b*c**2*e*V[0, 22]*t2[0, 44] + 0.25*b*c**2*e*V[0, 24]*t0[0, 49] + 0.25*b*c**2*e*V[0, 26]*t0[0, 72] + 0.25*b*c**2*e*V[0, 27]*t0[0, 44] + 2*b*c**2*f*V[0, 10]*t2[0, 71] + 1.0*b*c**2*f*V[0, 11]*t1[0, 43] + b*c**2*f*V[0, 16]*t2[0, 49] + 0.5*b*c**2*f*V[0, 19]*t1[0, 49] + 0.5*b*c**2*f*V[0, 22]*t1[0, 71] + b*c**2*f*V[0, 22]*t2[0, 43] + 0.25*b*c**2*f*V[0, 23]*t0[0, 49] + 0.25*b*c**2*f*V[0, 26]*t0[0, 71] + 0.25*b*c**2*f*V[0, 27]*t0[0, 43] + b*c**2*V[0, 4]*t2[0, 49] + 0.5*b*c**2*V[0, 5]*t1[0, 49] + 0.25*b*c**2*V[0, 6]*t0[0, 49] + 2*b*c**2*V[0, 10]*t2[0, 28] + 1.0*b*c**2*V[0, 11]*t1[0, 10] + 0.5*b*c**2*V[0, 22]*t1[0, 28] + b*c**2*V[0, 22]*t2[0, 10] + 0.25*b*c**2*V[0, 26]*t0[0, 28] + 0.25*b*c**2*V[0, 26] + 0.25*b*c**2*V[0, 27]*t0[0, 10] + 2*b*c*d**2*V[0, 10]*t2[0, 48] + 1.0*b*c*d**2*V[0, 11]*t1[0, 42] + b*c*d**2*V[0, 18]*t2[0, 73] + 0.5*b*c*d**2*V[0, 21]*t1[0, 73] + 0.5*b*c*d**2*V[0, 22]*t1[0, 48] + b*c*d**2*V[0, 22]*t2[0, 42] + 0.25*b*c*d**2*V[0, 25]*t0[0, 73] + 0.25*b*c*d**2*V[0, 26]*t0[0, 48] + 0.25*b*c*d**2*V[0, 27]*t0[0, 42] + 2*b*c*d*e*V[0, 10]*t2[0, 70] + 1.0*b*c*d*e*V[0, 11]*t1[0, 67] + b*c*d*e*V[0, 17]*t2[0, 73] + b*c*d*e*V[0, 18]*t2[0, 72] + 0.5*b*c*d*e*V[0, 18] + 0.5*b*c*d*e*V[0, 20]*t1[0, 73] + 0.5*b*c*d*e*V[0, 21]*t1[0, 72] + 0.5*b*c*d*e*V[0, 22]*t1[0, 70] + b*c*d*e*V[0, 22]*t2[0, 67] + 0.25*b*c*d*e*V[0, 24]*t0[0, 73] + 0.25*b*c*d*e*V[0, 25]*t0[0, 72] + 0.25*b*c*d*e*V[0, 26]*t0[0, 70] + 0.25*b*c*d*e*V[0, 27]*t0[0, 67] + 2*b*c*d*f*V[0, 10]*t2[0, 69] + 1.0*b*c*d*f*V[0, 11]*t1[0, 66] + b*c*d*f*V[0, 16]*t2[0, 73] + b*c*d*f*V[0, 18]*t2[0, 71] + 0.5*b*c*d*f*V[0, 19]*t1[0, 73] + 0.5*b*c*d*f*V[0, 21]*t1[0, 71] + 0.5*b*c*d*f*V[0, 21] + 0.5*b*c*d*f*V[0, 22]*t1[0, 69] + b*c*d*f*V[0, 22]*t2[0, 66] + 0.25*b*c*d*f*V[0, 23]*t0[0, 73] + 0.25*b*c*d*f*V[0, 25]*t0[0, 71] + 0.25*b*c*d*f*V[0, 26]*t0[0, 69] + 0.25*b*c*d*f*V[0, 27]*t0[0, 66] + b*c*d*V[0, 4]*t2[0, 73] + 0.5*b*c*d*V[0, 5]*t1[0, 73] + 0.25*b*c*d*V[0, 6]*t0[0, 73] + 2*b*c*d*V[0, 10]*t2[0, 27] + 1.0*b*c*d*V[0, 11]*t1[0, 24] + 0.5*b*c*d*V[0, 16] + b*c*d*V[0, 18]*t2[0, 28] - 0.5*b*c*d*V[0, 20] + 0.5*b*c*d*V[0, 21]*t1[0, 28] + 0.5*b*c*d*V[0, 22]*t1[0, 27] + b*c*d*V[0, 22]*t2[0, 24] + 0.25*b*c*d*V[0, 25]*t0[0, 28] + 0.25*b*c*d*V[0, 25] + 0.25*b*c*d*V[0, 26]*t0[0, 27] + 0.25*b*c*d*V[0, 27]*t0[0, 24] + 2*b*c*e**2*V[0, 10]*t2[0, 47] + 1.0*b*c*e**2*V[0, 11]*t1[0, 41] + b*c*e**2*V[0, 17]*t2[0, 72] + 0.5*b*c*e**2*V[0, 17] + 0.5*b*c*e**2*V[0, 20]*t1[0, 72] + 0.5*b*c*e**2*V[0, 22]*t1[0, 47] + b*c*e**2*V[0, 22]*t2[0, 41] + 0.25*b*c*e**2*V[0, 24]*t0[0, 72] + 0.25*b*c*e**2*V[0, 26]*t0[0, 47] + 0.25*b*c*e**2*V[0, 27]*t0[0, 41] + 2*b*c*e*f*V[0, 10]*t2[0, 68] + 1.0*b*c*e*f*V[0, 11]*t1[0, 65] + b*c*e*f*V[0, 16]*t2[0, 72] + 0.5*b*c*e*f*V[0, 16] + b*c*e*f*V[0, 17]*t2[0, 71] + 0.5*b*c*e*f*V[0, 19]*t1[0, 72] + 0.5*b*c*e*f*V[0, 20]*t1[0, 71] + 0.5*b*c*e*f*V[0, 20] + 0.5*b*c*e*f*V[0, 22]*t1[0, 68] + b*c*e*f*V[0, 22]*t2[0, 65] + 0.25*b*c*e*f*V[0, 23]*t0[0, 72] + 0.25*b*c*e*f*V[0, 24]*t0[0, 71] + 0.25*b*c*e*f*V[0, 26]*t0[0, 68] + 0.25*b*c*e*f*V[0, 27]*t0[0, 65] + b*c*e*V[0, 4]*t2[0, 72] + 0.5*b*c*e*V[0, 5]*t1[0, 72] + 0.25*b*c*e*V[0, 6]*t0[0, 72] + 2*b*c*e*V[0, 10]*t2[0, 26] + 1.0*b*c*e*V[0, 11]*t1[0, 23] + b*c*e*V[0, 17]*t2[0, 28] + 0.5*b*c*e*V[0, 20]*t1[0, 28] + 0.5*b*c*e*V[0, 21] + 0.5*b*c*e*V[0, 22]*t1[0, 26] + b*c*e*V[0, 22]*t2[0, 23] + 0.25*b*c*e*V[0, 24]*t0[0, 28] + 0.25*b*c*e*V[0, 24] + 0.25*b*c*e*V[0, 26]*t0[0, 26] + 0.25*b*c*e*V[0, 27]*t0[0, 23] + 2*b*c*f**2*V[0, 10]*t2[0, 46] + 1.0*b*c*f**2*V[0, 11]*t1[0, 40] + b*c*f**2*V[0, 16]*t2[0, 71] + 0.5*b*c*f**2*V[0, 19]*t1[0, 71] + 0.5*b*c*f**2*V[0, 19] + 0.5*b*c*f**2*V[0, 22]*t1[0, 46] + b*c*f**2*V[0, 22]*t2[0, 40] + 0.25*b*c*f**2*V[0, 23]*t0[0, 71] + 0.25*b*c*f**2*V[0, 26]*t0[0, 46] + 0.25*b*c*f**2*V[0, 27]*t0[0, 40] + b*c*f*V[0, 4]*t2[0, 71] + 0.5*b*c*f*V[0, 5]*t1[0, 71] + 0.25*b*c*f*V[0, 6]*t0[0, 71] + 2*b*c*f*V[0, 10]*t2[0, 25] + 1.0*b*c*f*V[0, 11]*t1[0, 22] + b*c*f*V[0, 16]*t2[0, 28] - 0.5*b*c*f*V[0, 18] + 0.5*b*c*f*V[0, 19]*t1[0, 28] + 0.5*b*c*f*V[0, 22]*t1[0, 25] + b*c*f*V[0, 22]*t2[0, 22] + 0.25*b*c*f*V[0, 23]*t0[0, 28] + 0.25*b*c*f*V[0, 23] + 0.25*b*c*f*V[0, 26]*t0[0, 25] + 0.25*b*c*f*V[0, 27]*t0[0, 22] + b*c*V[0, 4]*t2[0, 28] + 0.5*b*c*V[0, 5]*t1[0, 28] + 0.25*b*c*V[0, 6]*t0[0, 28] + 0.25*b*c*V[0, 6] + 2*b*c*V[0, 10]*t2[0, 5] + 1.0*b*c*V[0, 11]*t1[0, 4] + 0.5*b*c*V[0, 17] + 0.5*b*c*V[0, 19] + 0.5*b*c*V[0, 22]*t1[0, 5] + b*c*V[0, 22]*t2[0, 4] + 0.25*b*c*V[0, 26]*t0[0, 5] + 0.25*b*c*V[0, 27]*t0[0, 4] + 1.0*b*d**3*V[0, 11]*t1[0, 15] + b*d**3*V[0, 18]*t2[0, 48] + 0.5*b*d**3*V[0, 21]*t1[0, 48] + b*d**3*V[0, 22]*t2[0, 15] + 0.25*b*d**3*V[0, 25]*t0[0, 48] + 0.25*b*d**3*V[0, 27]*t0[0, 15] + 1.0*b*d**2*e*V[0, 9] + 1.0*b*d**2*e*V[0, 11]*t1[0, 39] + b*d**2*e*V[0, 17]*t2[0, 48] + b*d**2*e*V[0, 18]*t2[0, 70] + 0.5*b*d**2*e*V[0, 20]*t1[0, 48] + 0.5*b*d**2*e*V[0, 21]*t1[0, 70] + b*d**2*e*V[0, 22]*t2[0, 39] + 0.25*b*d**2*e*V[0, 24]*t0[0, 48] + 0.25*b*d**2*e*V[0, 25]*t0[0, 70] + 0.25*b*d**2*e*V[0, 27]*t0[0, 39] + 1.0*b*d**2*f*V[0, 11]*t1[0, 38] + b*d**2*f*V[0, 16]*t2[0, 48] + b*d**2*f*V[0, 18]*t2[0, 69] + 0.5*b*d**2*f*V[0, 19]*t1[0, 48] + 0.5*b*d**2*f*V[0, 21]*t1[0, 69] + b*d**2*f*V[0, 22]*t2[0, 38] + 0.25*b*d**2*f*V[0, 23]*t0[0, 48] + 0.25*b*d**2*f*V[0, 25]*t0[0, 69] + 0.25*b*d**2*f*V[0, 27]*t0[0, 38] + b*d**2*V[0, 4]*t2[0, 48] + 0.5*b*d**2*V[0, 5]*t1[0, 48] + 0.25*b*d**2*V[0, 6]*t0[0, 48] + 1.0*b*d**2*V[0, 11]*t1[0, 9] + 0.5*b*d**2*V[0, 14] + b*d**2*V[0, 18]*t2[0, 27] + 0.5*b*d**2*V[0, 21]*t1[0, 27] + b*d**2*V[0, 22]*t2[0, 9] + 0.25*b*d**2*V[0, 25]*t0[0, 27] + 0.25*b*d**2*V[0, 27]*t0[0, 9] + 1.0*b*d*e**2*V[0, 11]*t1[0, 37] + 1.0*b*d*e**2*V[0, 15] + b*d*e**2*V[0, 17]*t2[0, 70] + b*d*e**2*V[0, 18]*t2[0, 47] + 0.5*b*d*e**2*V[0, 20]*t1[0, 70] + 0.5*b*d*e**2*V[0, 21]*t1[0, 47] + b*d*e**2*V[0, 22]*t2[0, 37] + 0.25*b*d*e**2*V[0, 24]*t0[0, 70] + 0.25*b*d*e**2*V[0, 25]*t0[0, 47] + 0.25*b*d*e**2*V[0, 27]*t0[0, 37] + 1.0*b*d*e*f*V[0, 11]*t1[0, 64] + 1.0*b*d*e*f*V[0, 14] + b*d*e*f*V[0, 16]*t2[0, 70] + b*d*e*f*V[0, 17]*t2[0, 69] + b*d*e*f*V[0, 18]*t2[0, 68] + 0.5*b*d*e*f*V[0, 19]*t1[0, 70] + 0.5*b*d*e*f*V[0, 20]*t1[0, 69] + 0.5*b*d*e*f*V[0, 21]*t1[0, 68] + b*d*e*f*V[0, 22]*t2[0, 64] + 0.25*b*d*e*f*V[0, 23]*t0[0, 70] + 0.25*b*d*e*f*V[0, 24]*t0[0, 69] + 0.25*b*d*e*f*V[0, 25]*t0[0, 68] + 0.25*b*d*e*f*V[0, 27]*t0[0, 64] + 0.5*b*d*e*V[0, 3] + b*d*e*V[0, 4]*t2[0, 70] + 0.5*b*d*e*V[0, 5]*t1[0, 70] + 0.25*b*d*e*V[0, 6]*t0[0, 70] + 1.0*b*d*e*V[0, 11]*t1[0, 21] + 0.5*b*d*e*V[0, 13] + b*d*e*V[0, 17]*t2[0, 27] + b*d*e*V[0, 18]*t2[0, 26] + 0.5*b*d*e*V[0, 20]*t1[0, 27] + 0.5*b*d*e*V[0, 21]*t1[0, 26] + b*d*e*V[0, 22]*t2[0, 21] + 0.25*b*d*e*V[0, 24]*t0[0, 27] + 0.25*b*d*e*V[0, 25]*t0[0, 26] + 0.25*b*d*e*V[0, 27]*t0[0, 21] + 1.0*b*d*f**2*V[0, 11]*t1[0, 36] + b*d*f**2*V[0, 16]*t2[0, 69] + b*d*f**2*V[0, 18]*t2[0, 46] + 0.5*b*d*f**2*V[0, 19]*t1[0, 69] + 0.5*b*d*f**2*V[0, 21]*t1[0, 46] + b*d*f**2*V[0, 22]*t2[0, 36] + 0.25*b*d*f**2*V[0, 23]*t0[0, 69] + 0.25*b*d*f**2*V[0, 25]*t0[0, 46] + 0.25*b*d*f**2*V[0, 27]*t0[0, 36] + b*d*f*V[0, 4]*t2[0, 69] + 0.5*b*d*f*V[0, 5]*t1[0, 69] + 0.25*b*d*f*V[0, 6]*t0[0, 69] + 1.0*b*d*f*V[0, 7] - 1.0*b*d*f*V[0, 9] + 1.0*b*d*f*V[0, 11]*t1[0, 20] + b*d*f*V[0, 16]*t2[0, 27] + b*d*f*V[0, 18]*t2[0, 25] + 0.5*b*d*f*V[0, 19]*t1[0, 27] + 0.5*b*d*f*V[0, 21]*t1[0, 25] + b*d*f*V[0, 22]*t2[0, 20] + 0.25*b*d*f*V[0, 23]*t0[0, 27] + 0.25*b*d*f*V[0, 25]*t0[0, 25] + 0.25*b*d*f*V[0, 27]*t0[0, 20] + 0.5*b*d*V[0, 1] + b*d*V[0, 4]*t2[0, 27] + 0.5*b*d*V[0, 5]*t1[0, 27] + 0.25*b*d*V[0, 6]*t0[0, 27] + 1.0*b*d*V[0, 11]*t1[0, 3] + 0.5*b*d*V[0, 15] + b*d*V[0, 18]*t2[0, 5] + 0.5*b*d*V[0, 21]*t1[0, 5] + b*d*V[0, 22]*t2[0, 3] + 0.25*b*d*V[0, 25]*t0[0, 5] + 0.25*b*d*V[0, 27]*t0[0, 3] + 1.0*b*e**3*V[0, 8] + 1.0*b*e**3*V[0, 11]*t1[0, 14] + b*e**3*V[0, 17]*t2[0, 47] + 0.5*b*e**3*V[0, 20]*t1[0, 47] + b*e**3*V[0, 22]*t2[0, 14] + 0.25*b*e**3*V[0, 24]*t0[0, 47] + 0.25*b*e**3*V[0, 27]*t0[0, 14] + 1.0*b*e**2*f*V[0, 11]*t1[0, 35] + 1.0*b*e**2*f*V[0, 13] + b*e**2*f*V[0, 16]*t2[0, 47] + b*e**2*f*V[0, 17]*t2[0, 68] + 0.5*b*e**2*f*V[0, 19]*t1[0, 47] + 0.5*b*e**2*f*V[0, 20]*t1[0, 68] + b*e**2*f*V[0, 22]*t2[0, 35] + 0.25*b*e**2*f*V[0, 23]*t0[0, 47] + 0.25*b*e**2*f*V[0, 24]*t0[0, 68] + 0.25*b*e**2*f*V[0, 27]*t0[0, 35] + 0.5*b*e**2*V[0, 2] + b*e**2*V[0, 4]*t2[0, 47] + 0.5*b*e**2*V[0, 5]*t1[0, 47] + 0.25*b*e**2*V[0, 6]*t0[0, 47] + 1.0*b*e**2*V[0, 11]*t1[0, 8] + b*e**2*V[0, 17]*t2[0, 26] + 0.5*b*e**2*V[0, 20]*t1[0, 26] + b*e**2*V[0, 22]*t2[0, 8] + 0.25*b*e**2*V[0, 24]*t0[0, 26] + 0.25*b*e**2*V[0, 27]*t0[0, 8] + 1.0*b*e*f**2*V[0, 7] + 1.0*b*e*f**2*V[0, 11]*t1[0, 34] + b*e*f**2*V[0, 16]*t2[0, 68] + b*e*f**2*V[0, 17]*t2[0, 46] + 0.5*b*e*f**2*V[0, 19]*t1[0, 68] + 0.5*b*e*f**2*V[0, 20]*t1[0, 46] + b*e*f**2*V[0, 22]*t2[0, 34] + 0.25*b*e*f**2*V[0, 23]*t0[0, 68] + 0.25*b*e*f**2*V[0, 24]*t0[0, 46] + 0.25*b*e*f**2*V[0, 27]*t0[0, 34] + 0.5*b*e*f*V[0, 1] + b*e*f*V[0, 4]*t2[0, 68] + 0.5*b*e*f*V[0, 5]*t1[0, 68] + 0.25*b*e*f*V[0, 6]*t0[0, 68] + 1.0*b*e*f*V[0, 11]*t1[0, 19] - 0.5*b*e*f*V[0, 15] + b*e*f*V[0, 16]*t2[0, 26] + b*e*f*V[0, 17]*t2[0, 25] + 0.5*b*e*f*V[0, 19]*t1[0, 26] + 0.5*b*e*f*V[0, 20]*t1[0, 25] + b*e*f*V[0, 22]*t2[0, 19] + 0.25*b*e*f*V[0, 23]*t0[0, 26] + 0.25*b*e*f*V[0, 24]*t0[0, 25] + 0.25*b*e*f*V[0, 27]*t0[0, 19] + b*e*V[0, 4]*t2[0, 26] + 0.5*b*e*V[0, 5]*t1[0, 26] + 0.25*b*e*V[0, 6]*t0[0, 26] + 1.0*b*e*V[0, 8] + 1.0*b*e*V[0, 11]*t1[0, 2] + b*e*V[0, 17]*t2[0, 5] + 0.5*b*e*V[0, 20]*t1[0, 5] + b*e*V[0, 22]*t2[0, 2] + 0.25*b*e*V[0, 24]*t0[0, 5] + 0.25*b*e*V[0, 27]*t0[0, 2] + 1.0*b*f**3*V[0, 11]*t1[0, 13] + b*f**3*V[0, 16]*t2[0, 46] + 0.5*b*f**3*V[0, 19]*t1[0, 46] + b*f**3*V[0, 22]*t2[0, 13] + 0.25*b*f**3*V[0, 23]*t0[0, 46] + 0.25*b*f**3*V[0, 27]*t0[0, 13] + b*f**2*V[0, 4]*t2[0, 46] + 0.5*b*f**2*V[0, 5]*t1[0, 46] + 0.25*b*f**2*V[0, 6]*t0[0, 46] + 1.0*b*f**2*V[0, 11]*t1[0, 7] - 0.5*b*f**2*V[0, 14] + b*f**2*V[0, 16]*t2[0, 25] + 0.5*b*f**2*V[0, 19]*t1[0, 25] + b*f**2*V[0, 22]*t2[0, 7] + 0.25*b*f**2*V[0, 23]*t0[0, 25] + 0.25*b*f**2*V[0, 27]*t0[0, 7] - 0.5*b*f*V[0, 3] + b*f*V[0, 4]*t2[0, 25] + 0.5*b*f*V[0, 5]*t1[0, 25] + 0.25*b*f*V[0, 6]*t0[0, 25] + 1.0*b*f*V[0, 11]*t1[0, 1] + 0.5*b*f*V[0, 13] + b*f*V[0, 16]*t2[0, 5] + 0.5*b*f*V[0, 19]*t1[0, 5] + b*f*V[0, 22]*t2[0, 1] + 0.25*b*f*V[0, 23]*t0[0, 5] + 0.25*b*f*V[0, 27]*t0[0, 1] + 0.5*b*V[0, 2] + b*V[0, 4]*t2[0, 5] + 0.5*b*V[0, 5]*t1[0, 5] + 0.25*b*V[0, 6]*t0[0, 5] + 1.0*b*V[0, 11]*t1[0, 0] + b*V[0, 22]*t2[0, 0] + 0.25*b*V[0, 27]*t0[0, 0] + 2*c**4*V[0, 10]*t2[0, 16] + 0.5*c**4*V[0, 22]*t1[0, 16] + 0.25*c**4*V[0, 26]*t0[0, 16] + 2*c**3*d*V[0, 10]*t2[0, 45] + c**3*d*V[0, 18]*t2[0, 16] + 0.5*c**3*d*V[0, 21]*t1[0, 16] + 0.5*c**3*d*V[0, 22]*t1[0, 45] + 0.25*c**3*d*V[0, 25]*t0[0, 16] + 0.25*c**3*d*V[0, 26]*t0[0, 45] + 2*c**3*e*V[0, 10]*t2[0, 44] + c**3*e*V[0, 17]*t2[0, 16] + 0.5*c**3*e*V[0, 20]*t1[0, 16] + 0.5*c**3*e*V[0, 22]*t1[0, 44] + 0.25*c**3*e*V[0, 24]*t0[0, 16] + 0.25*c**3*e*V[0, 26]*t0[0, 44] + 2*c**3*f*V[0, 10]*t2[0, 43] + c**3*f*V[0, 16]*t2[0, 16] + 0.5*c**3*f*V[0, 19]*t1[0, 16] + 0.5*c**3*f*V[0, 22]*t1[0, 43] + 0.25*c**3*f*V[0, 23]*t0[0, 16] + 0.25*c**3*f*V[0, 26]*t0[0, 43] + c**3*V[0, 4]*t2[0, 16] + 0.5*c**3*V[0, 5]*t1[0, 16] + 0.25*c**3*V[0, 6]*t0[0, 16] + 2*c**3*V[0, 10]*t2[0, 10] + 0.5*c**3*V[0, 22]*t1[0, 10] + 0.25*c**3*V[0, 26]*t0[0, 10] + 2*c**2*d**2*V[0, 10]*t2[0, 42] + c**2*d**2*V[0, 18]*t2[0, 45] + 0.5*c**2*d**2*V[0, 21]*t1[0, 45] + 0.5*c**2*d**2*V[0, 22]*t1[0, 42] + 0.25*c**2*d**2*V[0, 25]*t0[0, 45] + 0.25*c**2*d**2*V[0, 26]*t0[0, 42] + 2*c**2*d*e*V[0, 10]*t2[0, 67] + c**2*d*e*V[0, 17]*t2[0, 45] + c**2*d*e*V[0, 18]*t2[0, 44] + 0.5*c**2*d*e*V[0, 20]*t1[0, 45] + 0.5*c**2*d*e*V[0, 21]*t1[0, 44] + 0.5*c**2*d*e*V[0, 22]*t1[0, 67] + 0.25*c**2*d*e*V[0, 24]*t0[0, 45] + 0.25*c**2*d*e*V[0, 25]*t0[0, 44] + 0.25*c**2*d*e*V[0, 26]*t0[0, 67] + 2*c**2*d*f*V[0, 10]*t2[0, 66] + c**2*d*f*V[0, 16]*t2[0, 45] + c**2*d*f*V[0, 18]*t2[0, 43] + 0.5*c**2*d*f*V[0, 18] + 0.5*c**2*d*f*V[0, 19]*t1[0, 45] + 0.5*c**2*d*f*V[0, 21]*t1[0, 43] + 0.5*c**2*d*f*V[0, 22]*t1[0, 66] + 0.25*c**2*d*f*V[0, 23]*t0[0, 45] + 0.25*c**2*d*f*V[0, 25]*t0[0, 43] + 0.25*c**2*d*f*V[0, 26]*t0[0, 66] + c**2*d*V[0, 4]*t2[0, 45] + 0.5*c**2*d*V[0, 5]*t1[0, 45] + 0.25*c**2*d*V[0, 6]*t0[0, 45] + 2*c**2*d*V[0, 10]*t2[0, 24] - 0.5*c**2*d*V[0, 17] + c**2*d*V[0, 18]*t2[0, 10] + 0.5*c**2*d*V[0, 21]*t1[0, 10] + 0.5*c**2*d*V[0, 22]*t1[0, 24] + 0.25*c**2*d*V[0, 25]*t0[0, 10] + 0.25*c**2*d*V[0, 26]*t0[0, 24] + 2*c**2*e**2*V[0, 10]*t2[0, 41] + c**2*e**2*V[0, 17]*t2[0, 44] + 0.5*c**2*e**2*V[0, 20]*t1[0, 44] + 0.5*c**2*e**2*V[0, 22]*t1[0, 41] + 0.25*c**2*e**2*V[0, 24]*t0[0, 44] + 0.25*c**2*e**2*V[0, 26]*t0[0, 41] + 2*c**2*e*f*V[0, 10]*t2[0, 65] + c**2*e*f*V[0, 16]*t2[0, 44] + c**2*e*f*V[0, 17]*t2[0, 43] + 0.5*c**2*e*f*V[0, 17] + 0.5*c**2*e*f*V[0, 19]*t1[0, 44] + 0.5*c**2*e*f*V[0, 20]*t1[0, 43] + 0.5*c**2*e*f*V[0, 22]*t1[0, 65] + 0.25*c**2*e*f*V[0, 23]*t0[0, 44] + 0.25*c**2*e*f*V[0, 24]*t0[0, 43] + 0.25*c**2*e*f*V[0, 26]*t0[0, 65] + c**2*e*V[0, 4]*t2[0, 44] + 0.5*c**2*e*V[0, 5]*t1[0, 44] + 0.25*c**2*e*V[0, 6]*t0[0, 44] + 2*c**2*e*V[0, 10]*t2[0, 23] + c**2*e*V[0, 17]*t2[0, 10] + 0.5*c**2*e*V[0, 18] + 0.5*c**2*e*V[0, 20]*t1[0, 10] + 0.5*c**2*e*V[0, 22]*t1[0, 23] + 0.25*c**2*e*V[0, 24]*t0[0, 10] + 0.25*c**2*e*V[0, 26]*t0[0, 23] + 2*c**2*f**2*V[0, 10]*t2[0, 40] + c**2*f**2*V[0, 16]*t2[0, 43] + 0.5*c**2*f**2*V[0, 16] + 0.5*c**2*f**2*V[0, 19]*t1[0, 43] + 0.5*c**2*f**2*V[0, 22]*t1[0, 40] + 0.25*c**2*f**2*V[0, 23]*t0[0, 43] + 0.25*c**2*f**2*V[0, 26]*t0[0, 40] + c**2*f*V[0, 4]*t2[0, 43] + 0.5*c**2*f*V[0, 5]*t1[0, 43] + 0.25*c**2*f*V[0, 6]*t0[0, 43] + 2*c**2*f*V[0, 10]*t2[0, 22] + c**2*f*V[0, 16]*t2[0, 10] + 0.5*c**2*f*V[0, 19]*t1[0, 10] + 0.5*c**2*f*V[0, 22]*t1[0, 22] + 0.25*c**2*f*V[0, 23]*t0[0, 10] + 0.25*c**2*f*V[0, 26]*t0[0, 22] + c**2*V[0, 4]*t2[0, 10] + 0.5*c**2*V[0, 5]*t1[0, 10] + 0.25*c**2*V[0, 6]*t0[0, 10] + 2*c**2*V[0, 10]*t2[0, 4] + 0.5*c**2*V[0, 16] + 0.5*c**2*V[0, 22]*t1[0, 4] + 0.25*c**2*V[0, 26]*t0[0, 4] + 2*c*d**3*V[0, 10]*t2[0, 15] + c*d**3*V[0, 18]*t2[0, 42] + 0.5*c*d**3*V[0, 21]*t1[0, 42] + 0.5*c*d**3*V[0, 22]*t1[0, 15] + 0.25*c*d**3*V[0, 25]*t0[0, 42] + 0.25*c*d**3*V[0, 26]*t0[0, 15] + 2*c*d**2*e*V[0, 10]*t2[0, 39] + c*d**2*e*V[0, 17]*t2[0, 42] + c*d**2*e*V[0, 18]*t2[0, 67] + 0.5*c*d**2*e*V[0, 20]*t1[0, 42] + 0.5*c*d**2*e*V[0, 21]*t1[0, 67] + 0.5*c*d**2*e*V[0, 22]*t1[0, 39] + 0.25*c*d**2*e*V[0, 24]*t0[0, 42] + 0.25*c*d**2*e*V[0, 25]*t0[0, 67] + 0.25*c*d**2*e*V[0, 26]*t0[0, 39] + 1.0*c*d**2*f*V[0, 9] + 2*c*d**2*f*V[0, 10]*t2[0, 38] + c*d**2*f*V[0, 16]*t2[0, 42] + c*d**2*f*V[0, 18]*t2[0, 66] + 0.5*c*d**2*f*V[0, 19]*t1[0, 42] + 0.5*c*d**2*f*V[0, 21]*t1[0, 66] + 0.5*c*d**2*f*V[0, 22]*t1[0, 38] + 0.25*c*d**2*f*V[0, 23]*t0[0, 42] + 0.25*c*d**2*f*V[0, 25]*t0[0, 66] + 0.25*c*d**2*f*V[0, 26]*t0[0, 38] + c*d**2*V[0, 4]*t2[0, 42] + 0.5*c*d**2*V[0, 5]*t1[0, 42] + 0.25*c*d**2*V[0, 6]*t0[0, 42] + 2*c*d**2*V[0, 10]*t2[0, 9] - 0.5*c*d**2*V[0, 15] + c*d**2*V[0, 18]*t2[0, 24] + 0.5*c*d**2*V[0, 21]*t1[0, 24] + 0.5*c*d**2*V[0, 22]*t1[0, 9] + 0.25*c*d**2*V[0, 25]*t0[0, 24] + 0.25*c*d**2*V[0, 26]*t0[0, 9] + 2*c*d*e**2*V[0, 10]*t2[0, 37] + c*d*e**2*V[0, 17]*t2[0, 67] + c*d*e**2*V[0, 18]*t2[0, 41] + 0.5*c*d*e**2*V[0, 20]*t1[0, 67] + 0.5*c*d*e**2*V[0, 21]*t1[0, 41] + 0.5*c*d*e**2*V[0, 22]*t1[0, 37] + 0.25*c*d*e**2*V[0, 24]*t0[0, 67] + 0.25*c*d*e**2*V[0, 25]*t0[0, 41] + 0.25*c*d*e**2*V[0, 26]*t0[0, 37] + 2*c*d*e*f*V[0, 10]*t2[0, 64] + 1.0*c*d*e*f*V[0, 15] + c*d*e*f*V[0, 16]*t2[0, 67] + c*d*e*f*V[0, 17]*t2[0, 66] + c*d*e*f*V[0, 18]*t2[0, 65] + 0.5*c*d*e*f*V[0, 19]*t1[0, 67] + 0.5*c*d*e*f*V[0, 20]*t1[0, 66] + 0.5*c*d*e*f*V[0, 21]*t1[0, 65] + 0.5*c*d*e*f*V[0, 22]*t1[0, 64] + 0.25*c*d*e*f*V[0, 23]*t0[0, 67] + 0.25*c*d*e*f*V[0, 24]*t0[0, 66] + 0.25*c*d*e*f*V[0, 25]*t0[0, 65] + 0.25*c*d*e*f*V[0, 26]*t0[0, 64] + c*d*e*V[0, 4]*t2[0, 67] + 0.5*c*d*e*V[0, 5]*t1[0, 67] + 0.25*c*d*e*V[0, 6]*t0[0, 67] - 1.0*c*d*e*V[0, 8] + 1.0*c*d*e*V[0, 9] + 2*c*d*e*V[0, 10]*t2[0, 21] + c*d*e*V[0, 17]*t2[0, 24] + c*d*e*V[0, 18]*t2[0, 23] + 0.5*c*d*e*V[0, 20]*t1[0, 24] + 0.5*c*d*e*V[0, 21]*t1[0, 23] + 0.5*c*d*e*V[0, 22]*t1[0, 21] + 0.25*c*d*e*V[0, 24]*t0[0, 24] + 0.25*c*d*e*V[0, 25]*t0[0, 23] + 0.25*c*d*e*V[0, 26]*t0[0, 21] + 2*c*d*f**2*V[0, 10]*t2[0, 36] + 1.0*c*d*f**2*V[0, 14] + c*d*f**2*V[0, 16]*t2[0, 66] + c*d*f**2*V[0, 18]*t2[0, 40] + 0.5*c*d*f**2*V[0, 19]*t1[0, 66] + 0.5*c*d*f**2*V[0, 21]*t1[0, 40] + 0.5*c*d*f**2*V[0, 22]*t1[0, 36] + 0.25*c*d*f**2*V[0, 23]*t0[0, 66] + 0.25*c*d*f**2*V[0, 25]*t0[0, 40] + 0.25*c*d*f**2*V[0, 26]*t0[0, 36] + 0.5*c*d*f*V[0, 3] + c*d*f*V[0, 4]*t2[0, 66] + 0.5*c*d*f*V[0, 5]*t1[0, 66] + 0.25*c*d*f*V[0, 6]*t0[0, 66] + 2*c*d*f*V[0, 10]*t2[0, 20] - 0.5*c*d*f*V[0, 13] + c*d*f*V[0, 16]*t2[0, 24] + c*d*f*V[0, 18]*t2[0, 22] + 0.5*c*d*f*V[0, 19]*t1[0, 24] + 0.5*c*d*f*V[0, 21]*t1[0, 22] + 0.5*c*d*f*V[0, 22]*t1[0, 20] + 0.25*c*d*f*V[0, 23]*t0[0, 24] + 0.25*c*d*f*V[0, 25]*t0[0, 22] + 0.25*c*d*f*V[0, 26]*t0[0, 20] - 0.5*c*d*V[0, 2] + c*d*V[0, 4]*t2[0, 24] + 0.5*c*d*V[0, 5]*t1[0, 24] + 0.25*c*d*V[0, 6]*t0[0, 24] + 2*c*d*V[0, 10]*t2[0, 3] + 0.5*c*d*V[0, 14] + c*d*V[0, 18]*t2[0, 4] + 0.5*c*d*V[0, 21]*t1[0, 4] + 0.5*c*d*V[0, 22]*t1[0, 3] + 0.25*c*d*V[0, 25]*t0[0, 4] + 0.25*c*d*V[0, 26]*t0[0, 3] + 2*c*e**3*V[0, 10]*t2[0, 14] + c*e**3*V[0, 17]*t2[0, 41] + 0.5*c*e**3*V[0, 20]*t1[0, 41] + 0.5*c*e**3*V[0, 22]*t1[0, 14] + 0.25*c*e**3*V[0, 24]*t0[0, 41] + 0.25*c*e**3*V[0, 26]*t0[0, 14] + 1.0*c*e**2*f*V[0, 8] + 2*c*e**2*f*V[0, 10]*t2[0, 35] + c*e**2*f*V[0, 16]*t2[0, 41] + c*e**2*f*V[0, 17]*t2[0, 65] + 0.5*c*e**2*f*V[0, 19]*t1[0, 41] + 0.5*c*e**2*f*V[0, 20]*t1[0, 65] + 0.5*c*e**2*f*V[0, 22]*t1[0, 35] + 0.25*c*e**2*f*V[0, 23]*t0[0, 41] + 0.25*c*e**2*f*V[0, 24]*t0[0, 65] + 0.25*c*e**2*f*V[0, 26]*t0[0, 35] + c*e**2*V[0, 4]*t2[0, 41] + 0.5*c*e**2*V[0, 5]*t1[0, 41] + 0.25*c*e**2*V[0, 6]*t0[0, 41] + 2*c*e**2*V[0, 10]*t2[0, 8] + 0.5*c*e**2*V[0, 15] + c*e**2*V[0, 17]*t2[0, 23] + 0.5*c*e**2*V[0, 20]*t1[0, 23] + 0.5*c*e**2*V[0, 22]*t1[0, 8] + 0.25*c*e**2*V[0, 24]*t0[0, 23] + 0.25*c*e**2*V[0, 26]*t0[0, 8] + 2*c*e*f**2*V[0, 10]*t2[0, 34] + 1.0*c*e*f**2*V[0, 13] + c*e*f**2*V[0, 16]*t2[0, 65] + c*e*f**2*V[0, 17]*t2[0, 40] + 0.5*c*e*f**2*V[0, 19]*t1[0, 65] + 0.5*c*e*f**2*V[0, 20]*t1[0, 40] + 0.5*c*e*f**2*V[0, 22]*t1[0, 34] + 0.25*c*e*f**2*V[0, 23]*t0[0, 65] + 0.25*c*e*f**2*V[0, 24]*t0[0, 40] + 0.25*c*e*f**2*V[0, 26]*t0[0, 34] + 0.5*c*e*f*V[0, 2] + c*e*f*V[0, 4]*t2[0, 65] + 0.5*c*e*f*V[0, 5]*t1[0, 65] + 0.25*c*e*f*V[0, 6]*t0[0, 65] + 2*c*e*f*V[0, 10]*t2[0, 19] + 0.5*c*e*f*V[0, 14] + c*e*f*V[0, 16]*t2[0, 23] + c*e*f*V[0, 17]*t2[0, 22] + 0.5*c*e*f*V[0, 19]*t1[0, 23] + 0.5*c*e*f*V[0, 20]*t1[0, 22] + 0.5*c*e*f*V[0, 22]*t1[0, 19] + 0.25*c*e*f*V[0, 23]*t0[0, 23] + 0.25*c*e*f*V[0, 24]*t0[0, 22] + 0.25*c*e*f*V[0, 26]*t0[0, 19] + 0.5*c*e*V[0, 3] + c*e*V[0, 4]*t2[0, 23] + 0.5*c*e*V[0, 5]*t1[0, 23] + 0.25*c*e*V[0, 6]*t0[0, 23] + 2*c*e*V[0, 10]*t2[0, 2] + 0.5*c*e*V[0, 13] + c*e*V[0, 17]*t2[0, 4] + 0.5*c*e*V[0, 20]*t1[0, 4] + 0.5*c*e*V[0, 22]*t1[0, 2] + 0.25*c*e*V[0, 24]*t0[0, 4] + 0.25*c*e*V[0, 26]*t0[0, 2] + 1.0*c*f**3*V[0, 7] + 2*c*f**3*V[0, 10]*t2[0, 13] + c*f**3*V[0, 16]*t2[0, 40] + 0.5*c*f**3*V[0, 19]*t1[0, 40] + 0.5*c*f**3*V[0, 22]*t1[0, 13] + 0.25*c*f**3*V[0, 23]*t0[0, 40] + 0.25*c*f**3*V[0, 26]*t0[0, 13] + 0.5*c*f**2*V[0, 1] + c*f**2*V[0, 4]*t2[0, 40] + 0.5*c*f**2*V[0, 5]*t1[0, 40] + 0.25*c*f**2*V[0, 6]*t0[0, 40] + 2*c*f**2*V[0, 10]*t2[0, 7] + c*f**2*V[0, 16]*t2[0, 22] + 0.5*c*f**2*V[0, 19]*t1[0, 22] + 0.5*c*f**2*V[0, 22]*t1[0, 7] + 0.25*c*f**2*V[0, 23]*t0[0, 22] + 0.25*c*f**2*V[0, 26]*t0[0, 7] + c*f*V[0, 4]*t2[0, 22] + 0.5*c*f*V[0, 5]*t1[0, 22] + 0.25*c*f*V[0, 6]*t0[0, 22] + 1.0*c*f*V[0, 7] + 2*c*f*V[0, 10]*t2[0, 1] + c*f*V[0, 16]*t2[0, 4] + 0.5*c*f*V[0, 19]*t1[0, 4] + 0.5*c*f*V[0, 22]*t1[0, 1] + 0.25*c*f*V[0, 23]*t0[0, 4] + 0.25*c*f*V[0, 26]*t0[0, 1] + 0.5*c*V[0, 1] + c*V[0, 4]*t2[0, 4] + 0.5*c*V[0, 5]*t1[0, 4] + 0.25*c*V[0, 6]*t0[0, 4] + 2*c*V[0, 10]*t2[0, 0] + 0.5*c*V[0, 22]*t1[0, 0] + 0.25*c*V[0, 26]*t0[0, 0] + d**4*V[0, 18]*t2[0, 15] + 0.5*d**4*V[0, 21]*t1[0, 15] + 0.25*d**4*V[0, 25]*t0[0, 15] + d**3*e*V[0, 17]*t2[0, 15] + d**3*e*V[0, 18]*t2[0, 39] + 0.5*d**3*e*V[0, 20]*t1[0, 15] + 0.5*d**3*e*V[0, 21]*t1[0, 39] + 0.25*d**3*e*V[0, 24]*t0[0, 15] + 0.25*d**3*e*V[0, 25]*t0[0, 39] + d**3*f*V[0, 16]*t2[0, 15] + d**3*f*V[0, 18]*t2[0, 38] + 0.5*d**3*f*V[0, 19]*t1[0, 15] + 0.5*d**3*f*V[0, 21]*t1[0, 38] + 0.25*d**3*f*V[0, 23]*t0[0, 15] + 0.25*d**3*f*V[0, 25]*t0[0, 38] + d**3*V[0, 4]*t2[0, 15] + 0.5*d**3*V[0, 5]*t1[0, 15] + 0.25*d**3*V[0, 6]*t0[0, 15] + d**3*V[0, 18]*t2[0, 9] + 0.5*d**3*V[0, 21]*t1[0, 9] + 0.25*d**3*V[0, 25]*t0[0, 9] + d**2*e**2*V[0, 17]*t2[0, 39] + d**2*e**2*V[0, 18]*t2[0, 37] + 0.5*d**2*e**2*V[0, 20]*t1[0, 39] + 0.5*d**2*e**2*V[0, 21]*t1[0, 37] + 0.25*d**2*e**2*V[0, 24]*t0[0, 39] + 0.25*d**2*e**2*V[0, 25]*t0[0, 37] + d**2*e*f*V[0, 16]*t2[0, 39] + d**2*e*f*V[0, 17]*t2[0, 38] + d**2*e*f*V[0, 18]*t2[0, 64] + 0.5*d**2*e*f*V[0, 19]*t1[0, 39] + 0.5*d**2*e*f*V[0, 20]*t1[0, 38] + 0.5*d**2*e*f*V[0, 21]*t1[0, 64] + 0.25*d**2*e*f*V[0, 23]*t0[0, 39] + 0.25*d**2*e*f*V[0, 24]*t0[0, 38] + 0.25*d**2*e*f*V[0, 25]*t0[0, 64] + d**2*e*V[0, 4]*t2[0, 39] + 0.5*d**2*e*V[0, 5]*t1[0, 39] + 0.25*d**2*e*V[0, 6]*t0[0, 39] + d**2*e*V[0, 17]*t2[0, 9] + d**2*e*V[0, 18]*t2[0, 21] + 0.5*d**2*e*V[0, 20]*t1[0, 9] + 0.5*d**2*e*V[0, 21]*t1[0, 21] + 0.25*d**2*e*V[0, 24]*t0[0, 9] + 0.25*d**2*e*V[0, 25]*t0[0, 21] + d**2*f**2*V[0, 16]*t2[0, 38] + d**2*f**2*V[0, 18]*t2[0, 36] + 0.5*d**2*f**2*V[0, 19]*t1[0, 38] + 0.5*d**2*f**2*V[0, 21]*t1[0, 36] + 0.25*d**2*f**2*V[0, 23]*t0[0, 38] + 0.25*d**2*f**2*V[0, 25]*t0[0, 36] + d**2*f*V[0, 4]*t2[0, 38] + 0.5*d**2*f*V[0, 5]*t1[0, 38] + 0.25*d**2*f*V[0, 6]*t0[0, 38] + d**2*f*V[0, 16]*t2[0, 9] + d**2*f*V[0, 18]*t2[0, 20] + 0.5*d**2*f*V[0, 19]*t1[0, 9] + 0.5*d**2*f*V[0, 21]*t1[0, 20] + 0.25*d**2*f*V[0, 23]*t0[0, 9] + 0.25*d**2*f*V[0, 25]*t0[0, 20] + d**2*V[0, 4]*t2[0, 9] + 0.5*d**2*V[0, 5]*t1[0, 9] + 0.25*d**2*V[0, 6]*t0[0, 9] + d**2*V[0, 18]*t2[0, 3] + 0.5*d**2*V[0, 21]*t1[0, 3] + 0.25*d**2*V[0, 25]*t0[0, 3] + d*e**3*V[0, 17]*t2[0, 37] + d*e**3*V[0, 18]*t2[0, 14] + 0.5*d*e**3*V[0, 20]*t1[0, 37] + 0.5*d*e**3*V[0, 21]*t1[0, 14] + 0.25*d*e**3*V[0, 24]*t0[0, 37] + 0.25*d*e**3*V[0, 25]*t0[0, 14] + d*e**2*f*V[0, 16]*t2[0, 37] + d*e**2*f*V[0, 17]*t2[0, 64] + d*e**2*f*V[0, 18]*t2[0, 35] + 0.5*d*e**2*f*V[0, 19]*t1[0, 37] + 0.5*d*e**2*f*V[0, 20]*t1[0, 64] + 0.5*d*e**2*f*V[0, 21]*t1[0, 35] + 0.25*d*e**2*f*V[0, 23]*t0[0, 37] + 0.25*d*e**2*f*V[0, 24]*t0[0, 64] + 0.25*d*e**2*f*V[0, 25]*t0[0, 35] + d*e**2*V[0, 4]*t2[0, 37] + 0.5*d*e**2*V[0, 5]*t1[0, 37] + 0.25*d*e**2*V[0, 6]*t0[0, 37] + d*e**2*V[0, 17]*t2[0, 21] + d*e**2*V[0, 18]*t2[0, 8] + 0.5*d*e**2*V[0, 20]*t1[0, 21] + 0.5*d*e**2*V[0, 21]*t1[0, 8] + 0.25*d*e**2*V[0, 24]*t0[0, 21] + 0.25*d*e**2*V[0, 25]*t0[0, 8] + d*e*f**2*V[0, 16]*t2[0, 64] + d*e*f**2*V[0, 17]*t2[0, 36] + d*e*f**2*V[0, 18]*t2[0, 34] + 0.5*d*e*f**2*V[0, 19]*t1[0, 64] + 0.5*d*e*f**2*V[0, 20]*t1[0, 36] + 0.5*d*e*f**2*V[0, 21]*t1[0, 34] + 0.25*d*e*f**2*V[0, 23]*t0[0, 64] + 0.25*d*e*f**2*V[0, 24]*t0[0, 36] + 0.25*d*e*f**2*V[0, 25]*t0[0, 34] + d*e*f*V[0, 4]*t2[0, 64] + 0.5*d*e*f*V[0, 5]*t1[0, 64] + 0.25*d*e*f*V[0, 6]*t0[0, 64] + d*e*f*V[0, 16]*t2[0, 21] + d*e*f*V[0, 17]*t2[0, 20] + d*e*f*V[0, 18]*t2[0, 19] + 0.5*d*e*f*V[0, 19]*t1[0, 21] + 0.5*d*e*f*V[0, 20]*t1[0, 20] + 0.5*d*e*f*V[0, 21]*t1[0, 19] + 0.25*d*e*f*V[0, 23]*t0[0, 21] + 0.25*d*e*f*V[0, 24]*t0[0, 20] + 0.25*d*e*f*V[0, 25]*t0[0, 19] + d*e*V[0, 4]*t2[0, 21] + 0.5*d*e*V[0, 5]*t1[0, 21] + 0.25*d*e*V[0, 6]*t0[0, 21] + d*e*V[0, 17]*t2[0, 3] + d*e*V[0, 18]*t2[0, 2] + 0.5*d*e*V[0, 20]*t1[0, 3] + 0.5*d*e*V[0, 21]*t1[0, 2] + 0.25*d*e*V[0, 24]*t0[0, 3] + 0.25*d*e*V[0, 25]*t0[0, 2] + d*f**3*V[0, 16]*t2[0, 36] + d*f**3*V[0, 18]*t2[0, 13] + 0.5*d*f**3*V[0, 19]*t1[0, 36] + 0.5*d*f**3*V[0, 21]*t1[0, 13] + 0.25*d*f**3*V[0, 23]*t0[0, 36] + 0.25*d*f**3*V[0, 25]*t0[0, 13] + d*f**2*V[0, 4]*t2[0, 36] + 0.5*d*f**2*V[0, 5]*t1[0, 36] + 0.25*d*f**2*V[0, 6]*t0[0, 36] + d*f**2*V[0, 16]*t2[0, 20] + d*f**2*V[0, 18]*t2[0, 7] + 0.5*d*f**2*V[0, 19]*t1[0, 20] + 0.5*d*f**2*V[0, 21]*t1[0, 7] + 0.25*d*f**2*V[0, 23]*t0[0, 20] + 0.25*d*f**2*V[0, 25]*t0[0, 7] + d*f*V[0, 4]*t2[0, 20] + 0.5*d*f*V[0, 5]*t1[0, 20] + 0.25*d*f*V[0, 6]*t0[0, 20] + d*f*V[0, 16]*t2[0, 3] + d*f*V[0, 18]*t2[0, 1] + 0.5*d*f*V[0, 19]*t1[0, 3] + 0.5*d*f*V[0, 21]*t1[0, 1] + 0.25*d*f*V[0, 23]*t0[0, 3] + 0.25*d*f*V[0, 25]*t0[0, 1] + d*V[0, 4]*t2[0, 3] + 0.5*d*V[0, 5]*t1[0, 3] + 0.25*d*V[0, 6]*t0[0, 3] + d*V[0, 18]*t2[0, 0] + 0.5*d*V[0, 21]*t1[0, 0] + 0.25*d*V[0, 25]*t0[0, 0] + e**4*V[0, 17]*t2[0, 14] + 0.5*e**4*V[0, 20]*t1[0, 14] + 0.25*e**4*V[0, 24]*t0[0, 14] + e**3*f*V[0, 16]*t2[0, 14] + e**3*f*V[0, 17]*t2[0, 35] + 0.5*e**3*f*V[0, 19]*t1[0, 14] + 0.5*e**3*f*V[0, 20]*t1[0, 35] + 0.25*e**3*f*V[0, 23]*t0[0, 14] + 0.25*e**3*f*V[0, 24]*t0[0, 35] + e**3*V[0, 4]*t2[0, 14] + 0.5*e**3*V[0, 5]*t1[0, 14] + 0.25*e**3*V[0, 6]*t0[0, 14] + e**3*V[0, 17]*t2[0, 8] + 0.5*e**3*V[0, 20]*t1[0, 8] + 0.25*e**3*V[0, 24]*t0[0, 8] + e**2*f**2*V[0, 16]*t2[0, 35] + e**2*f**2*V[0, 17]*t2[0, 34] + 0.5*e**2*f**2*V[0, 19]*t1[0, 35] + 0.5*e**2*f**2*V[0, 20]*t1[0, 34] + 0.25*e**2*f**2*V[0, 23]*t0[0, 35] + 0.25*e**2*f**2*V[0, 24]*t0[0, 34] + e**2*f*V[0, 4]*t2[0, 35] + 0.5*e**2*f*V[0, 5]*t1[0, 35] + 0.25*e**2*f*V[0, 6]*t0[0, 35] + e**2*f*V[0, 16]*t2[0, 8] + e**2*f*V[0, 17]*t2[0, 19] + 0.5*e**2*f*V[0, 19]*t1[0, 8] + 0.5*e**2*f*V[0, 20]*t1[0, 19] + 0.25*e**2*f*V[0, 23]*t0[0, 8] + 0.25*e**2*f*V[0, 24]*t0[0, 19] + e**2*V[0, 4]*t2[0, 8] + 0.5*e**2*V[0, 5]*t1[0, 8] + 0.25*e**2*V[0, 6]*t0[0, 8] + e**2*V[0, 17]*t2[0, 2] + 0.5*e**2*V[0, 20]*t1[0, 2] + 0.25*e**2*V[0, 24]*t0[0, 2] + e*f**3*V[0, 16]*t2[0, 34] + e*f**3*V[0, 17]*t2[0, 13] + 0.5*e*f**3*V[0, 19]*t1[0, 34] + 0.5*e*f**3*V[0, 20]*t1[0, 13] + 0.25*e*f**3*V[0, 23]*t0[0, 34] + 0.25*e*f**3*V[0, 24]*t0[0, 13] + e*f**2*V[0, 4]*t2[0, 34] + 0.5*e*f**2*V[0, 5]*t1[0, 34] + 0.25*e*f**2*V[0, 6]*t0[0, 34] + e*f**2*V[0, 16]*t2[0, 19] + e*f**2*V[0, 17]*t2[0, 7] + 0.5*e*f**2*V[0, 19]*t1[0, 19] + 0.5*e*f**2*V[0, 20]*t1[0, 7] + 0.25*e*f**2*V[0, 23]*t0[0, 19] + 0.25*e*f**2*V[0, 24]*t0[0, 7] + e*f*V[0, 4]*t2[0, 19] + 0.5*e*f*V[0, 5]*t1[0, 19] + 0.25*e*f*V[0, 6]*t0[0, 19] + e*f*V[0, 16]*t2[0, 2] + e*f*V[0, 17]*t2[0, 1] + 0.5*e*f*V[0, 19]*t1[0, 2] + 0.5*e*f*V[0, 20]*t1[0, 1] + 0.25*e*f*V[0, 23]*t0[0, 2] + 0.25*e*f*V[0, 24]*t0[0, 1] + e*V[0, 4]*t2[0, 2] + 0.5*e*V[0, 5]*t1[0, 2] + 0.25*e*V[0, 6]*t0[0, 2] + e*V[0, 17]*t2[0, 0] + 0.5*e*V[0, 20]*t1[0, 0] + 0.25*e*V[0, 24]*t0[0, 0] + f**4*V[0, 16]*t2[0, 13] + 0.5*f**4*V[0, 19]*t1[0, 13] + 0.25*f**4*V[0, 23]*t0[0, 13] + f**3*V[0, 4]*t2[0, 13] + 0.5*f**3*V[0, 5]*t1[0, 13] + 0.25*f**3*V[0, 6]*t0[0, 13] + f**3*V[0, 16]*t2[0, 7] + 0.5*f**3*V[0, 19]*t1[0, 7] + 0.25*f**3*V[0, 23]*t0[0, 7] + f**2*V[0, 4]*t2[0, 7] + 0.5*f**2*V[0, 5]*t1[0, 7] + 0.25*f**2*V[0, 6]*t0[0, 7] + f**2*V[0, 16]*t2[0, 1] + 0.5*f**2*V[0, 19]*t1[0, 1] + 0.25*f**2*V[0, 23]*t0[0, 1] + f*V[0, 4]*t2[0, 1] + 0.5*f*V[0, 5]*t1[0, 1] + 0.25*f*V[0, 6]*t0[0, 1] + f*V[0, 16]*t2[0, 0] + 0.5*f*V[0, 19]*t1[0, 0] + 0.25*f*V[0, 23]*t0[0, 0] + V[0, 4]*t2[0, 0] + 0.5*V[0, 5]*t1[0, 0] + 0.25*V[0, 6]*t0[0, 0]
		Lie = 0.5*a**4*V[0, 11]*t0[0, 1] + 0.25*a**3*b*V[0, 26]*t0[0, 1] + 0.5*a**3*b*V[0, 26]*t1[0, 8] + 0.25*a**3*c*V[0, 25]*t0[0, 1] + a**3*c*V[0, 25]*t2[0, 2] + 0.5*a**3*d*V[0, 11]*t0[0, 5] + 0.25*a**3*d*V[0, 24]*t0[0, 1] + 0.25*a**3*e*V[0, 23]*t0[0, 1] + 0.25*a**3*f*V[0, 22]*t0[0, 1] + a**3*f*V[0, 25]*t2[0, 5] + 0.25*a**3*V[0, 5]*t0[0, 1] + 1.0*a**2*b**2*V[0, 10]*t1[0, 8] + 0.5*a**2*b*c*V[0, 21]*t1[0, 8] + a**2*b*c*V[0, 21]*t2[0, 2] + 0.5*a**2*b*d*V[0, 20]*t1[0, 8] + 0.25*a**2*b*d*V[0, 26]*t0[0, 5] + 0.5*a**2*b*d*V[0, 26]*t1[0, 12] + 0.5*a**2*b*e*V[0, 19]*t1[0, 8] + 0.5*a**2*b*f*V[0, 18]*t1[0, 8] + a**2*b*f*V[0, 21]*t2[0, 5] + 0.5*a**2*b*V[0, 4]*t1[0, 8] + 2*a**2*b*V[0, 25] + 2*a**2*c**2*V[0, 9]*t2[0, 2] + a**2*c*d*V[0, 17]*t2[0, 2] + 0.25*a**2*c*d*V[0, 25]*t0[0, 5] + a**2*c*d*V[0, 25]*t2[0, 12] + a**2*c*e*V[0, 16]*t2[0, 2] + 2*a**2*c*f*V[0, 9]*t2[0, 5] + a**2*c*f*V[0, 15]*t2[0, 2] + a**2*c*V[0, 3]*t2[0, 2] - 1.5*a**2*c*V[0, 26] + 0.5*a**2*d**2*V[0, 11]*t0[0, 2] + 0.25*a**2*d**2*V[0, 24]*t0[0, 5] + 0.5*a**2*d**2*V[0, 24] + 0.25*a**2*d*e*V[0, 23]*t0[0, 5] + 0.5*a**2*d*e*V[0, 23] + 0.5*a**2*d*e*V[0, 26]*t1[0, 9] + a**2*d*f*V[0, 17]*t2[0, 5] + 0.25*a**2*d*f*V[0, 22]*t0[0, 5] + 0.5*a**2*d*f*V[0, 22] + 0.25*a**2*d*V[0, 5]*t0[0, 5] + 0.5*a**2*e**2*V[0, 11]*t0[0, 3] + a**2*e*f*V[0, 16]*t2[0, 5] - 0.5*a**2*e*V[0, 22] + 0.5*a**2*f**2*V[0, 11]*t0[0, 4] + a**2*f**2*V[0, 15]*t2[0, 5] + a**2*f*V[0, 3]*t2[0, 5] + 0.5*a**2*f*V[0, 23] + 0.5*a**2*V[0, 11]*t0[0, 6] + 0.5*a**2*V[0, 24] + 0.5*a*b**3*V[0, 26]*t1[0, 1] + a*b**2*c*V[0, 25]*t2[0, 3] + 1.0*a*b**2*d*V[0, 10]*t1[0, 12] + 0.5*a*b**2*e*V[0, 26]*t1[0, 3] + a*b**2*f*V[0, 25]*t2[0, 9] + 2*a*b**2*V[0, 21] + 0.5*a*b*c*d*V[0, 21]*t1[0, 12] + a*b*c*d*V[0, 21]*t2[0, 12] + a*b*c*e*V[0, 25]*t2[0, 11] + 4*a*b*c*V[0, 9] - 3.0*a*b*c*V[0, 10] + 0.5*a*b*c*V[0, 11] + 0.5*a*b*d**2*V[0, 20]*t1[0, 12] + 0.5*a*b*d**2*V[0, 20] + 0.25*a*b*d**2*V[0, 26]*t0[0, 2] + 0.5*a*b*d**2*V[0, 26]*t1[0, 2] + 1.0*a*b*d*e*V[0, 10]*t1[0, 9] + 0.5*a*b*d*e*V[0, 11]*t0[0, 8] + 0.5*a*b*d*e*V[0, 19]*t1[0, 12] + 0.5*a*b*d*e*V[0, 19] + 0.5*a*b*d*e*V[0, 24] + 0.5*a*b*d*f*V[0, 18]*t1[0, 12] + 0.5*a*b*d*f*V[0, 18] + 0.5*a*b*d*V[0, 4]*t1[0, 12] + 2*a*b*d*V[0, 17] + 0.5*a*b*d*V[0, 22] + 0.5*a*b*e**2*V[0, 23] + 0.25*a*b*e**2*V[0, 26]*t0[0, 3] + 0.5*a*b*e**2*V[0, 26]*t1[0, 5] + 0.5*a*b*e*f*V[0, 22] + a*b*e*f*V[0, 25]*t2[0, 13] + 2*a*b*e*V[0, 16] - 0.5*a*b*e*V[0, 18] + 0.25*a*b*f**2*V[0, 26]*t0[0, 4] + 0.5*a*b*f**2*V[0, 26]*t1[0, 6] + 2*a*b*f*V[0, 15] + 0.5*a*b*f*V[0, 19] - 0.5*a*b*f*V[0, 24] + 2*a*b*V[0, 3] + 0.5*a*b*V[0, 20] + 0.5*a*b*V[0, 23] + 0.25*a*b*V[0, 26]*t0[0, 6] + 0.5*a*b*V[0, 26]*t1[0, 11] + a*c**3*V[0, 25]*t2[0, 1] + 2*a*c**2*d*V[0, 9]*t2[0, 12] + a*c**2*f*V[0, 25]*t2[0, 6] - 1.5*a*c**2*V[0, 21] + a*c*d**2*V[0, 17]*t2[0, 12] + 0.5*a*c*d**2*V[0, 17] + 0.25*a*c*d**2*V[0, 25]*t0[0, 2] + a*c*d*e*V[0, 16]*t2[0, 12] + 0.5*a*c*d*e*V[0, 16] + 0.5*a*c*d*e*V[0, 21]*t1[0, 9] + a*c*d*f*V[0, 15]*t2[0, 12] + 0.5*a*c*d*f*V[0, 15] + 0.5*a*c*d*f*V[0, 24] + a*c*d*V[0, 3]*t2[0, 12] - 1.5*a*c*d*V[0, 20] - 0.5*a*c*d*V[0, 23] + 0.25*a*c*e**2*V[0, 25]*t0[0, 3] + a*c*e**2*V[0, 25]*t2[0, 4] + 0.5*a*c*e*f*V[0, 23] - 0.5*a*c*e*V[0, 15] - 1.5*a*c*e*V[0, 19] + 0.5*a*c*e*V[0, 24] + 0.5*a*c*f**2*V[0, 22] + 0.25*a*c*f**2*V[0, 25]*t0[0, 4] + a*c*f**2*V[0, 25]*t2[0, 10] + 0.5*a*c*f*V[0, 16] - 1.5*a*c*f*V[0, 18] - 1.5*a*c*V[0, 4] + 0.5*a*c*V[0, 17] + 0.5*a*c*V[0, 22] + 0.25*a*c*V[0, 25]*t0[0, 6] + a*c*V[0, 25]*t2[0, 14] + 1.0*a*d**3*V[0, 8] + 0.5*a*d**3*V[0, 11]*t0[0, 0] + 0.25*a*d**3*V[0, 24]*t0[0, 2] + 1.0*a*d**2*e*V[0, 14] + 0.5*a*d**2*e*V[0, 20]*t1[0, 9] + 0.25*a*d**2*e*V[0, 23]*t0[0, 2] + 0.5*a*d**2*e*V[0, 26]*t1[0, 4] + 1.0*a*d**2*f*V[0, 13] + 0.25*a*d**2*f*V[0, 22]*t0[0, 2] + a*d**2*f*V[0, 25]*t2[0, 7] + 0.5*a*d**2*V[0, 2] + 0.25*a*d**2*V[0, 5]*t0[0, 2] + 1.0*a*d*e**2*V[0, 7] + 0.5*a*d*e**2*V[0, 19]*t1[0, 9] + 0.25*a*d*e**2*V[0, 24]*t0[0, 3] + 1.0*a*d*e*f*V[0, 12] + 0.5*a*d*e*f*V[0, 18]*t1[0, 9] + 0.5*a*d*e*V[0, 1] + 0.5*a*d*e*V[0, 4]*t1[0, 9] - 0.5*a*d*e*V[0, 13] + 1.0*a*d*f**2*V[0, 6] + 0.25*a*d*f**2*V[0, 24]*t0[0, 4] + 0.5*a*d*f*V[0, 0] + 0.5*a*d*f*V[0, 14] + 1.0*a*d*V[0, 8] + 0.5*a*d*V[0, 11]*t0[0, 7] + 0.25*a*d*V[0, 24]*t0[0, 6] + 0.25*a*e**3*V[0, 23]*t0[0, 3] + 0.5*a*e**3*V[0, 26]*t1[0, 0] + 0.25*a*e**2*f*V[0, 22]*t0[0, 3] + a*e**2*f*V[0, 25]*t2[0, 8] + 0.25*a*e**2*V[0, 5]*t0[0, 3] - 0.5*a*e**2*V[0, 12] + 0.25*a*e*f**2*V[0, 23]*t0[0, 4] + 0.5*a*e*f**2*V[0, 26]*t1[0, 7] - 1.0*a*e*f*V[0, 6] + 1.0*a*e*f*V[0, 7] - 0.5*a*e*V[0, 0] + 0.5*a*e*V[0, 14] + 0.25*a*e*V[0, 23]*t0[0, 6] + 0.5*a*e*V[0, 26]*t1[0, 10] + 0.25*a*f**3*V[0, 22]*t0[0, 4] + a*f**3*V[0, 25]*t2[0, 0] + 0.25*a*f**2*V[0, 5]*t0[0, 4] + 0.5*a*f**2*V[0, 12] + 0.5*a*f*V[0, 1] + 0.5*a*f*V[0, 13] + 0.25*a*f*V[0, 22]*t0[0, 6] + a*f*V[0, 25]*t2[0, 15] + 0.5*a*V[0, 2] + 0.25*a*V[0, 5]*t0[0, 6] + 1.0*b**4*V[0, 10]*t1[0, 1] + 0.5*b**3*c*V[0, 21]*t1[0, 1] + b**3*c*V[0, 21]*t2[0, 3] + 0.5*b**3*d*V[0, 20]*t1[0, 1] + 1.0*b**3*e*V[0, 10]*t1[0, 3] + 0.5*b**3*e*V[0, 19]*t1[0, 1] + 0.5*b**3*f*V[0, 18]*t1[0, 1] + b**3*f*V[0, 21]*t2[0, 9] + 0.5*b**3*V[0, 4]*t1[0, 1] + 2*b**2*c**2*V[0, 9]*t2[0, 3] + b**2*c*d*V[0, 17]*t2[0, 3] + b**2*c*e*V[0, 16]*t2[0, 3] + 0.5*b**2*c*e*V[0, 21]*t1[0, 3] + b**2*c*e*V[0, 21]*t2[0, 11] + 2*b**2*c*f*V[0, 9]*t2[0, 9] + b**2*c*f*V[0, 15]*t2[0, 3] + b**2*c*V[0, 3]*t2[0, 3] + 0.25*b**2*c*V[0, 26] + 1.0*b**2*d**2*V[0, 10]*t1[0, 2] + 0.5*b**2*d*e*V[0, 20]*t1[0, 3] + 0.5*b**2*d*e*V[0, 20] + 0.25*b**2*d*e*V[0, 26]*t0[0, 8] + b**2*d*f*V[0, 17]*t2[0, 9] + 0.5*b**2*d*V[0, 18] + 1.0*b**2*e**2*V[0, 10]*t1[0, 5] + 0.5*b**2*e**2*V[0, 19]*t1[0, 3] + 0.5*b**2*e**2*V[0, 19] + b**2*e*f*V[0, 16]*t2[0, 9] + 0.5*b**2*e*f*V[0, 18]*t1[0, 3] + 0.5*b**2*e*f*V[0, 18] + b**2*e*f*V[0, 21]*t2[0, 13] + 0.5*b**2*e*V[0, 4]*t1[0, 3] + 1.0*b**2*f**2*V[0, 10]*t1[0, 6] + b**2*f**2*V[0, 15]*t2[0, 9] + b**2*f*V[0, 3]*t2[0, 9] - 0.5*b**2*f*V[0, 20] + 1.0*b**2*V[0, 10]*t1[0, 11] + 0.5*b**2*V[0, 19] + b*c**3*V[0, 21]*t2[0, 1] + 2*b*c**2*e*V[0, 9]*t2[0, 11] + b*c**2*f*V[0, 21]*t2[0, 6] + 0.25*b*c**2*V[0, 25] + 0.5*b*c*d**2*V[0, 21]*t1[0, 2] + b*c*d*e*V[0, 17]*t2[0, 11] + 0.5*b*c*d*e*V[0, 17] + 0.25*b*c*d*e*V[0, 25]*t0[0, 8] + 0.5*b*c*d*f*V[0, 20] + 0.5*b*c*d*V[0, 15] - 0.5*b*c*d*V[0, 19] + 0.25*b*c*d*V[0, 24] + b*c*e**2*V[0, 16]*t2[0, 11] + 0.5*b*c*e**2*V[0, 16] + 0.5*b*c*e**2*V[0, 21]*t1[0, 5] + b*c*e**2*V[0, 21]*t2[0, 4] + 2*b*c*e*f*V[0, 9]*t2[0, 13] + b*c*e*f*V[0, 15]*t2[0, 11] + 0.5*b*c*e*f*V[0, 15] + 0.5*b*c*e*f*V[0, 19] + b*c*e*V[0, 3]*t2[0, 11] + 0.5*b*c*e*V[0, 20] + 0.25*b*c*e*V[0, 23] + 0.5*b*c*f**2*V[0, 18] + 0.5*b*c*f**2*V[0, 21]*t1[0, 6] + b*c*f**2*V[0, 21]*t2[0, 10] - 0.5*b*c*f*V[0, 17] + 0.25*b*c*f*V[0, 22] + 0.25*b*c*V[0, 5] + 0.5*b*c*V[0, 16] + 0.5*b*c*V[0, 18] + 0.5*b*c*V[0, 21]*t1[0, 11] + b*c*V[0, 21]*t2[0, 14] + 0.5*b*d**3*V[0, 20]*t1[0, 2] + 0.25*b*d**3*V[0, 26]*t0[0, 0] + 1.0*b*d**2*e*V[0, 8] + 1.0*b*d**2*e*V[0, 10]*t1[0, 4] + 0.5*b*d**2*e*V[0, 19]*t1[0, 2] + 0.25*b*d**2*e*V[0, 24]*t0[0, 8] + 0.5*b*d**2*f*V[0, 18]*t1[0, 2] + b*d**2*f*V[0, 21]*t2[0, 7] + 0.5*b*d**2*V[0, 4]*t1[0, 2] + 0.5*b*d**2*V[0, 13] + 1.0*b*d*e**2*V[0, 14] + 0.5*b*d*e**2*V[0, 20]*t1[0, 5] + 0.25*b*d*e**2*V[0, 23]*t0[0, 8] + 1.0*b*d*e*f*V[0, 13] + b*d*e*f*V[0, 17]*t2[0, 13] + 0.25*b*d*e*f*V[0, 22]*t0[0, 8] + 0.5*b*d*e*V[0, 2] + 0.25*b*d*e*V[0, 5]*t0[0, 8] + 0.5*b*d*e*V[0, 12] + 0.5*b*d*f**2*V[0, 20]*t1[0, 6] + 1.0*b*d*f*V[0, 6] - 1.0*b*d*f*V[0, 8] + 0.5*b*d*V[0, 0] + 0.5*b*d*V[0, 14] + 0.5*b*d*V[0, 20]*t1[0, 11] + 0.25*b*d*V[0, 26]*t0[0, 7] + 1.0*b*e**3*V[0, 7] + 1.0*b*e**3*V[0, 10]*t1[0, 0] + 0.5*b*e**3*V[0, 19]*t1[0, 5] + 1.0*b*e**2*f*V[0, 12] + b*e**2*f*V[0, 16]*t2[0, 13] + 0.5*b*e**2*f*V[0, 18]*t1[0, 5] + b*e**2*f*V[0, 21]*t2[0, 8] + 0.5*b*e**2*V[0, 1] + 0.5*b*e**2*V[0, 4]*t1[0, 5] + 1.0*b*e*f**2*V[0, 6] + 1.0*b*e*f**2*V[0, 10]*t1[0, 7] + b*e*f**2*V[0, 15]*t2[0, 13] + 0.5*b*e*f**2*V[0, 19]*t1[0, 6] + 0.5*b*e*f*V[0, 0] + b*e*f*V[0, 3]*t2[0, 13] - 0.5*b*e*f*V[0, 14] + 1.0*b*e*V[0, 7] + 1.0*b*e*V[0, 10]*t1[0, 10] + 0.5*b*e*V[0, 19]*t1[0, 11] + 0.5*b*f**3*V[0, 18]*t1[0, 6] + b*f**3*V[0, 21]*t2[0, 0] + 0.5*b*f**2*V[0, 4]*t1[0, 6] - 0.5*b*f**2*V[0, 13] - 0.5*b*f*V[0, 2] + 0.5*b*f*V[0, 12] + 0.5*b*f*V[0, 18]*t1[0, 11] + b*f*V[0, 21]*t2[0, 15] + 0.5*b*V[0, 1] + 0.5*b*V[0, 4]*t1[0, 11] + 2*c**4*V[0, 9]*t2[0, 1] + c**3*d*V[0, 17]*t2[0, 1] + c**3*e*V[0, 16]*t2[0, 1] + 2*c**3*f*V[0, 9]*t2[0, 6] + c**3*f*V[0, 15]*t2[0, 1] + c**3*V[0, 3]*t2[0, 1] + c**2*d*f*V[0, 17]*t2[0, 6] + 0.5*c**2*d*f*V[0, 17] - 0.5*c**2*d*V[0, 16] + 2*c**2*e**2*V[0, 9]*t2[0, 4] + c**2*e*f*V[0, 16]*t2[0, 6] + 0.5*c**2*e*f*V[0, 16] + 0.5*c**2*e*V[0, 17] + 2*c**2*f**2*V[0, 9]*t2[0, 10] + c**2*f**2*V[0, 15]*t2[0, 6] + 0.5*c**2*f**2*V[0, 15] + c**2*f*V[0, 3]*t2[0, 6] + 2*c**2*V[0, 9]*t2[0, 14] + 0.5*c**2*V[0, 15] + 0.25*c*d**3*V[0, 25]*t0[0, 0] + 0.5*c*d**2*e*V[0, 21]*t1[0, 4] + 1.0*c*d**2*f*V[0, 8] + 2*c*d**2*f*V[0, 9]*t2[0, 7] - 0.5*c*d**2*V[0, 14] + c*d*e**2*V[0, 17]*t2[0, 4] + 1.0*c*d*e*f*V[0, 14] - 1.0*c*d*e*V[0, 7] + 1.0*c*d*e*V[0, 8] + 1.0*c*d*f**2*V[0, 13] + c*d*f**2*V[0, 17]*t2[0, 10] + 0.5*c*d*f*V[0, 2] - 0.5*c*d*f*V[0, 12] - 0.5*c*d*V[0, 1] + 0.5*c*d*V[0, 13] + c*d*V[0, 17]*t2[0, 14] + 0.25*c*d*V[0, 25]*t0[0, 7] + c*e**3*V[0, 16]*t2[0, 4] + 0.5*c*e**3*V[0, 21]*t1[0, 0] + 1.0*c*e**2*f*V[0, 7] + 2*c*e**2*f*V[0, 9]*t2[0, 8] + c*e**2*f*V[0, 15]*t2[0, 4] + c*e**2*V[0, 3]*t2[0, 4] + 0.5*c*e**2*V[0, 14] + 1.0*c*e*f**2*V[0, 12] + c*e*f**2*V[0, 16]*t2[0, 10] + 0.5*c*e*f**2*V[0, 21]*t1[0, 7] + 0.5*c*e*f*V[0, 1] + 0.5*c*e*f*V[0, 13] + 0.5*c*e*V[0, 2] + 0.5*c*e*V[0, 12] + c*e*V[0, 16]*t2[0, 14] + 0.5*c*e*V[0, 21]*t1[0, 10] + 1.0*c*f**3*V[0, 6] + 2*c*f**3*V[0, 9]*t2[0, 0] + c*f**3*V[0, 15]*t2[0, 10] + 0.5*c*f**2*V[0, 0] + c*f**2*V[0, 3]*t2[0, 10] + 1.0*c*f*V[0, 6] + 2*c*f*V[0, 9]*t2[0, 15] + c*f*V[0, 15]*t2[0, 14] + 0.5*c*V[0, 0] + c*V[0, 3]*t2[0, 14] + 0.25*d**4*V[0, 24]*t0[0, 0] + 0.5*d**3*e*V[0, 20]*t1[0, 4] + 0.25*d**3*e*V[0, 23]*t0[0, 0] + d**3*f*V[0, 17]*t2[0, 7] + 0.25*d**3*f*V[0, 22]*t0[0, 0] + 0.25*d**3*V[0, 5]*t0[0, 0] + 0.5*d**2*e**2*V[0, 19]*t1[0, 4] + d**2*e*f*V[0, 16]*t2[0, 7] + 0.5*d**2*e*f*V[0, 18]*t1[0, 4] + 0.5*d**2*e*V[0, 4]*t1[0, 4] + d**2*f**2*V[0, 15]*t2[0, 7] + d**2*f*V[0, 3]*t2[0, 7] + 0.25*d**2*V[0, 24]*t0[0, 7] + 0.5*d*e**3*V[0, 20]*t1[0, 0] + d*e**2*f*V[0, 17]*t2[0, 8] + 0.5*d*e*f**2*V[0, 20]*t1[0, 7] + 0.5*d*e*V[0, 20]*t1[0, 10] + 0.25*d*e*V[0, 23]*t0[0, 7] + d*f**3*V[0, 17]*t2[0, 0] + d*f*V[0, 17]*t2[0, 15] + 0.25*d*f*V[0, 22]*t0[0, 7] + 0.25*d*V[0, 5]*t0[0, 7] + 0.5*e**4*V[0, 19]*t1[0, 0] + e**3*f*V[0, 16]*t2[0, 8] + 0.5*e**3*f*V[0, 18]*t1[0, 0] + 0.5*e**3*V[0, 4]*t1[0, 0] + e**2*f**2*V[0, 15]*t2[0, 8] + 0.5*e**2*f**2*V[0, 19]*t1[0, 7] + e**2*f*V[0, 3]*t2[0, 8] + 0.5*e**2*V[0, 19]*t1[0, 10] + e*f**3*V[0, 16]*t2[0, 0] + 0.5*e*f**3*V[0, 18]*t1[0, 7] + 0.5*e*f**2*V[0, 4]*t1[0, 7] + e*f*V[0, 16]*t2[0, 15] + 0.5*e*f*V[0, 18]*t1[0, 10] + 0.5*e*V[0, 4]*t1[0, 10] + f**4*V[0, 15]*t2[0, 0] + f**3*V[0, 3]*t2[0, 0] + f**2*V[0, 15]*t2[0, 15] + f*V[0, 3]*t2[0, 15]
		if Lie > 0:
			LieTest = False
			# print(Lie)
	# print("pass 2")
	return valueTest, LieTest




def SVG(c0, c1, c2):
	env = AttControl()
	state_tra = []
	control_tra = []
	distance_tra = []
	state, done = env.reset(), False
	dt = env.deltaT
	reward = 0
	dt = env.deltaT
	while not done:
		if -reward >= 20:
			break
		assert len(state) == 6
		a, b, c, d, e, f = state[0], state[1], state[2], state[3], state[4], state[5]
		# u0 = c0.dot(np.array([1, f, e, d, c, b, a, f**2, e**2, d**2, c**2, b**2, a**2, f**3, e**3, d**3, c**3, b**3, a**3, e*f, d*f, d*e, c*f, c*e, c*d, b*f, b*e, b*d, b*c, a*f, a*e, a*d, a*c, a*b, e*f**2, e**2*f, d*f**2, d*e**2, d**2*f, d**2*e, c*f**2, c*e**2, c*d**2, c**2*f, c**2*e, c**2*d, b*f**2, b*e**2, b*d**2, b*c**2, b**2*f, b**2*e, b**2*d, b**2*c, a*f**2, a*e**2, a*d**2, a*c**2, a*b**2, a**2*f, a**2*e, a**2*d, a**2*c, a**2*b, d*e*f, c*e*f, c*d*f, c*d*e, b*e*f, b*d*f, b*d*e, b*c*f, b*c*e, b*c*d, a*e*f, a*d*f, a*d*e, a*c*f, a*c*e, a*c*d, a*b*f, a*b*e, a*b*d, a*b*c]))

		# u1 = c1.dot(np.array([1, f, e, d, c, b, a, f**2, e**2, d**2, c**2, b**2, a**2, f**3, e**3, d**3, c**3, b**3, a**3, e*f, d*f, d*e, c*f, c*e, c*d, b*f, b*e, b*d, b*c, a*f, a*e, a*d, a*c, a*b, e*f**2, e**2*f, d*f**2, d*e**2, d**2*f, d**2*e, c*f**2, c*e**2, c*d**2, c**2*f, c**2*e, c**2*d, b*f**2, b*e**2, b*d**2, b*c**2, b**2*f, b**2*e, b**2*d, b**2*c, a*f**2, a*e**2, a*d**2, a*c**2, a*b**2, a**2*f, a**2*e, a**2*d, a**2*c, a**2*b, d*e*f, c*e*f, c*d*f, c*d*e, b*e*f, b*d*f, b*d*e, b*c*f, b*c*e, b*c*d, a*e*f, a*d*f, a*d*e, a*c*f, a*c*e, a*c*d, a*b*f, a*b*e, a*b*d, a*b*c]))

		# u2 = c2.dot(np.array([1, f, e, d, c, b, a, f**2, e**2, d**2, c**2, b**2, a**2, f**3, e**3, d**3, c**3, b**3, a**3, e*f, d*f, d*e, c*f, c*e, c*d, b*f, b*e, b*d, b*c, a*f, a*e, a*d, a*c, a*b, e*f**2, e**2*f, d*f**2, d*e**2, d**2*f, d**2*e, c*f**2, c*e**2, c*d**2, c**2*f, c**2*e, c**2*d, b*f**2, b*e**2, b*d**2, b*c**2, b**2*f, b**2*e, b**2*d, b**2*c, a*f**2, a*e**2, a*d**2, a*c**2, a*b**2, a**2*f, a**2*e, a**2*d, a**2*c, a**2*b, d*e*f, c*e*f, c*d*f, c*d*e, b*e*f, b*d*f, b*d*e, b*c*f, b*c*e, b*c*d, a*e*f, a*d*f, a*d*e, a*c*f, a*c*e, a*c*d, a*b*f, a*b*e, a*b*d, a*b*c]))
		u0 = c0.dot(np.array([d**3, a**3, a*d**2, a*e**2, a*f**2, a**2*d, a, d, b*d*e]))

		u1 = c1.dot(np.array([e**3, b**3, b*d**2, b**2*e, d**2*e, b*e**2, b*f**2, e*f**2, a**2*b, a*d*e, e, b, a*b*d]))

		u2 = c2.dot(np.array([f**3, c**3, a**2*c, b**2*c, c*e**2, a**2*f, c**2*f, d**2*f, e**2*f, b**2*f, c*f**2, b*c*e, a*c*d, b*e*f, c, f]))

		# u0Base = Matrix([[d**3, a**3, a*d**2, a*e**2, a*f**2, a**2*d, a, d, b*d*e]])
		# u1Base = Matrix([[e**3, b**3, b*d**2, b**2*e, d**2*e, b*e**2, b*f**2, e*f**2, a**2*b, a*d*e, e, b, a*b*d]])
		# u2Base = Matrix([[f**3, c**3, a**2*c, b**2*c, c*e**2, a**2*f, c**2*f, d**2*f, e**2*f, b**2*f, c*f**2, b*c*e, a*c*d, b*e*f, c, f]])
		state_tra.append(state)
		control_tra.append(np.array([u0, u1, u2]))
		next_state, reward, done = env.step(u0, u1, u2)
		distance_tra.append(-reward)
		state = next_state

	vs_prime = np.array([0] * 6)
	vt0_prime = np.array([0] * 9)
	vt1_prime = np.array([0] * 13)
	vt2_prime = np.array([0] * 16)

	gamma = 0.99
	for i in range(len(state_tra)-1, -1, -1):
		a, b, c, d, e, f = state_tra[i][0], state_tra[i][1], state_tra[i][2], state_tra[i][3], state_tra[i][4], state_tra[i][5]
		u0 , u1, u2 = control_tra[i][0], control_tra[i][1], control_tra[i][2]
		assert distance_tra[i] >= 0

		rs = np.array([
			-a / distance_tra[i], 
			-b / distance_tra[i], 
			-c / distance_tra[i], 
			-d / distance_tra[i],
			-e / distance_tra[i],
			-f / distance_tra[i]])

		# pi0s = np.reshape(c0, (1, 9))
		# pi1s = np.reshape(c1, (1, 13))
		# pi2s = np.reshape(c2, (1, 16))
		c0 = np.reshape(c0, (1, 9))
		c1 = np.reshape(c1, (1, 13))
		c2 = np.reshape(c2, (1, 16))

		pis = np.array([
			[3*a**2*c0[0, 1] + 2*a*d*c0[0, 5] + d**2*c0[0, 2] + e**2*c0[0, 3] + f**2*c0[0, 4] + c0[0, 6] , d*e*c0[0, 8] , 0 , a**2*c0[0, 5] + 2*a*d*c0[0, 2] + b*e*c0[0, 8] + 3*d**2*c0[0, 0] + c0[0, 7] , 2*a*e*c0[0, 3] + b*d*c0[0, 8] , 2*a*f*c0[0, 4]], 
			[2*a*b*c1[0, 8] + b*d*c1[0, 12] + d*e*c1[0, 9] , a**2*c1[0, 8] + a*d*c1[0, 12] + 3*b**2*c1[0, 1] + 2*b*e*c1[0, 3] + d**2*c1[0, 2] + e**2*c1[0, 5] + f**2*c1[0, 6] + c1[0, 11] , 0 , a*b*c1[0, 12] + a*e*c1[0, 9] + 2*b*d*c1[0, 2] + 2*d*e*c1[0, 4] , a*d*c1[0, 9] + b**2*c1[0, 3] + 2*b*e*c1[0, 5] + d**2*c1[0, 4] + 3*e**2*c1[0, 0] + f**2*c1[0, 7] + c1[0, 10] , 2*b*f*c1[0, 6] + 2*e*f*c1[0, 7]], 
			[2*a*c*c2[0, 2] + 2*a*f*c2[0, 5] + c*d*c2[0, 12] , 2*b*c*c2[0, 3] + 2*b*f*c2[0, 9] + c*e*c2[0, 11] + e*f*c2[0, 13] , a**2*c2[0, 2] + a*d*c2[0, 12] + b**2*c2[0, 3] + b*e*c2[0, 11] + 3*c**2*c2[0, 1] + 2*c*f*c2[0, 6] + e**2*c2[0, 4] + f**2*c2[0, 10] + c2[0, 14] , a*c*c2[0, 12] + 2*d*f*c2[0, 7] , b*c*c2[0, 11] + b*f*c2[0, 13] + 2*c*e*c2[0, 4] + 2*e*f*c2[0, 8] , a**2*c2[0, 5] + b**2*c2[0, 9] + b*e*c2[0, 13] + c**2*c2[0, 6] + 2*c*f*c2[0, 10] + d**2*c2[0, 7] + e**2*c2[0, 8] + 3*f**2*c2[0, 0] + c2[0, 15]]])
		

		# pis = np.array([
		# 	[3*a**2*c0[0, 1] + 2*a*d*c0[0, 5] + d**2*c0[0, 2] + e**2*c0[0, 3] + f**2*c0[0, 4] + c0[0, 6] , d*e*c0[0, 8] , 0 , a**2*c0[0, 5] + 2*a*d*c0[0, 2] + b*e*c0[0, 8] + 3*d**2*c0[0, 0] + c0[0, 7] , 2*a*e*c0[0, 3] + b*d*c0[0, 8] , 2*a*f*c0[0, 4]], 
		# 	[2*a*b*c1[0, 8] + b*d*c1[0, 12] + d*e*c1[0, 9] , a**2*c1[0, 8] + a*d*c1[0, 12] + 3*b**2*c1[0, 1] + 2*b*e*c1[0, 3] + d**2*c1[0, 2] + e**2*c1[0, 5] + f**2*c1[0, 6] + c1[0, 11] , 0 , a*b*c1[0, 12] + a*e*c1[0, 9] + 2*b*d*c1[0, 2] + 2*d*e*c1[0, 4] , a*d*c1[0, 9] + b**2*c1[0, 3] + 2*b*e*c1[0, 5] + d**2*c1[0, 4] + 3*e**2*c1[0, 0] + f**2*c1[0, 7] + c1[0, 10] , 2*b*f*c1[0, 6] + 2*e*f*c1[0, 7]], 
		# 	[2*a*c*c2[0, 2] + 2*a*f*c2[0, 5] + c*d*c2[0, 12] , 2*b*c*c2[0, 3] + 2*b*f*c2[0, 9] + c*e*c2[0, 11] + e*f*c2[0, 13] , a**2*c2[0, 2] + a*d*c2[0, 12] + b**2*c2[0, 3] + b*e*c2[0, 11] + 3*c**2*c2[0, 1] + 2*c*f*c2[0, 6] + e**2*c2[0, 4] + f**2*c2[0, 10] + c2[0, 14] , a*c*c2[0, 12] + 2*d*f*c2[0, 7] , b*c*c2[0, 11] + b*f*c2[0, 13] + 2*c*e*c2[0, 4] + 2*e*f*c2[0, 8] , a**2*c2[0, 5] + b**2*c2[0, 9] + b*e*c2[0, 13] + c**2*c2[0, 6] + 2*c*f*c2[0, 10] + d**2*c2[0, 7] + e**2*c2[0, 8] + 3*f**2*c2[0, 0] + c2[0, 15]]])
		
		# pis = np.array([
		# 	[3*a**2*c0[0, 17] + 2*a*b*c0[0, 62] + 2*a*c*c0[0, 61] + 2*a*d*c0[0, 60] + 2*a*e*c0[0, 59] + 2*a*f*c0[0, 58] + 2*a*c0[0, 11] + b**2*c0[0, 57] + b*c*c0[0, 82] + b*d*c0[0, 81] + b*e*c0[0, 80] + b*f*c0[0, 79] + b*c0[0, 32] + c**2*c0[0, 56] + c*d*c0[0, 78] + c*e*c0[0, 77] + c*f*c0[0, 76] + c*c0[0, 31] + d**2*c0[0, 55] + d*e*c0[0, 75] + d*f*c0[0, 74] + d*c0[0, 30] + e**2*c0[0, 54] + e*f*c0[0, 73] + e*c0[0, 29] + f**2*c0[0, 53] + f*c0[0, 28] + c0[0, 5], a**2*c0[0, 62] + 2*a*b*c0[0, 57] + a*c*c0[0, 82] + a*d*c0[0, 81] + a*e*c0[0, 80] + a*f*c0[0, 79] + a*c0[0, 32] + 3*b**2*c0[0, 16] + 2*b*c*c0[0, 52] + 2*b*d*c0[0, 51] + 2*b*e*c0[0, 50] + 2*b*f*c0[0, 49] + 2*b*c0[0, 10] + c**2*c0[0, 48] + c*d*c0[0, 72] + c*e*c0[0, 71] + c*f*c0[0, 70] + c*c0[0, 27] + d**2*c0[0, 47] + d*e*c0[0, 69] + d*f*c0[0, 68] + d*c0[0, 26] + e**2*c0[0, 46] + e*f*c0[0, 67] + e*c0[0, 25] + f**2*c0[0, 45] + f*c0[0, 24] + c0[0, 4], a**2*c0[0, 61] + a*b*c0[0, 82] + 2*a*c*c0[0, 56] + a*d*c0[0, 78] + a*e*c0[0, 77] + a*f*c0[0, 76] + a*c0[0, 31] + b**2*c0[0, 52] + 2*b*c*c0[0, 48] + b*d*c0[0, 72] + b*e*c0[0, 71] + b*f*c0[0, 70] + b*c0[0, 27] + 3*c**2*c0[0, 15] + 2*c*d*c0[0, 44] + 2*c*e*c0[0, 43] + 2*c*f*c0[0, 42] + 2*c*c0[0, 9] + d**2*c0[0, 41] + d*e*c0[0, 66] + d*f*c0[0, 65] + d*c0[0, 23] + e**2*c0[0, 40] + e*f*c0[0, 64] + e*c0[0, 22] + f**2*c0[0, 39] + f*c0[0, 21] + c0[0, 3], a**2*c0[0, 60] + a*b*c0[0, 81] + a*c*c0[0, 78] + 2*a*d*c0[0, 55] + a*e*c0[0, 75] + a*f*c0[0, 74] + a*c0[0, 30] + b**2*c0[0, 51] + b*c*c0[0, 72] + 2*b*d*c0[0, 47] + b*e*c0[0, 69] + b*f*c0[0, 68] + b*c0[0, 26] + c**2*c0[0, 44] + 2*c*d*c0[0, 41] + c*e*c0[0, 66] + c*f*c0[0, 65] + c*c0[0, 23] + 3*d**2*c0[0, 14] + 2*d*e*c0[0, 38] + 2*d*f*c0[0, 37] + 2*d*c0[0, 8] + e**2*c0[0, 36] + e*f*c0[0, 63] + e*c0[0, 20] + f**2*c0[0, 35] + f*c0[0, 19] + c0[0, 2], a**2*c0[0, 59] + a*b*c0[0, 80] + a*c*c0[0, 77] + a*d*c0[0, 75] + 2*a*e*c0[0, 54] + a*f*c0[0, 73] + a*c0[0, 29] + b**2*c0[0, 50] + b*c*c0[0, 71] + b*d*c0[0, 69] + 2*b*e*c0[0, 46] + b*f*c0[0, 67] + b*c0[0, 25] + c**2*c0[0, 43] + c*d*c0[0, 66] + 2*c*e*c0[0, 40] + c*f*c0[0, 64] + c*c0[0, 22] + d**2*c0[0, 38] + 2*d*e*c0[0, 36] + d*f*c0[0, 63] + d*c0[0, 20] + 3*e**2*c0[0, 13] + 2*e*f*c0[0, 34] + 2*e*c0[0, 7] + f**2*c0[0, 33] + f*c0[0, 18] + c0[0, 1], a**2*c0[0, 58] + a*b*c0[0, 79] + a*c*c0[0, 76] + a*d*c0[0, 74] + a*e*c0[0, 73] + 2*a*f*c0[0, 53] + a*c0[0, 28] + b**2*c0[0, 49] + b*c*c0[0, 70] + b*d*c0[0, 68] + b*e*c0[0, 67] + 2*b*f*c0[0, 45] + b*c0[0, 24] + c**2*c0[0, 42] + c*d*c0[0, 65] + c*e*c0[0, 64] + 2*c*f*c0[0, 39] + c*c0[0, 21] + d**2*c0[0, 37] + d*e*c0[0, 63] + 2*d*f*c0[0, 35] + d*c0[0, 19] + e**2*c0[0, 34] + 2*e*f*c0[0, 33] + e*c0[0, 18] + 3*f**2*c0[0, 12] + 2*f*c0[0, 6] + c0[0, 0]],
		# 	[3*a**2*c1[0, 17] + 2*a*b*c1[0, 62] + 2*a*c*c1[0, 61] + 2*a*d*c1[0, 60] + 2*a*e*c1[0, 59] + 2*a*f*c1[0, 58] + 2*a*c1[0, 11] + b**2*c1[0, 57] + b*c*c1[0, 82] + b*d*c1[0, 81] + b*e*c1[0, 80] + b*f*c1[0, 79] + b*c1[0, 32] + c**2*c1[0, 56] + c*d*c1[0, 78] + c*e*c1[0, 77] + c*f*c1[0, 76] + c*c1[0, 31] + d**2*c1[0, 55] + d*e*c1[0, 75] + d*f*c1[0, 74] + d*c1[0, 30] + e**2*c1[0, 54] + e*f*c1[0, 73] + e*c1[0, 29] + f**2*c1[0, 53] + f*c1[0, 28] + c1[0, 5], a**2*c1[0, 62] + 2*a*b*c1[0, 57] + a*c*c1[0, 82] + a*d*c1[0, 81] + a*e*c1[0, 80] + a*f*c1[0, 79] + a*c1[0, 32] + 3*b**2*c1[0, 16] + 2*b*c*c1[0, 52] + 2*b*d*c1[0, 51] + 2*b*e*c1[0, 50] + 2*b*f*c1[0, 49] + 2*b*c1[0, 10] + c**2*c1[0, 48] + c*d*c1[0, 72] + c*e*c1[0, 71] + c*f*c1[0, 70] + c*c1[0, 27] + d**2*c1[0, 47] + d*e*c1[0, 69] + d*f*c1[0, 68] + d*c1[0, 26] + e**2*c1[0, 46] + e*f*c1[0, 67] + e*c1[0, 25] + f**2*c1[0, 45] + f*c1[0, 24] + c1[0, 4], a**2*c1[0, 61] + a*b*c1[0, 82] + 2*a*c*c1[0, 56] + a*d*c1[0, 78] + a*e*c1[0, 77] + a*f*c1[0, 76] + a*c1[0, 31] + b**2*c1[0, 52] + 2*b*c*c1[0, 48] + b*d*c1[0, 72] + b*e*c1[0, 71] + b*f*c1[0, 70] + b*c1[0, 27] + 3*c**2*c1[0, 15] + 2*c*d*c1[0, 44] + 2*c*e*c1[0, 43] + 2*c*f*c1[0, 42] + 2*c*c1[0, 9] + d**2*c1[0, 41] + d*e*c1[0, 66] + d*f*c1[0, 65] + d*c1[0, 23] + e**2*c1[0, 40] + e*f*c1[0, 64] + e*c1[0, 22] + f**2*c1[0, 39] + f*c1[0, 21] + c1[0, 3], a**2*c1[0, 60] + a*b*c1[0, 81] + a*c*c1[0, 78] + 2*a*d*c1[0, 55] + a*e*c1[0, 75] + a*f*c1[0, 74] + a*c1[0, 30] + b**2*c1[0, 51] + b*c*c1[0, 72] + 2*b*d*c1[0, 47] + b*e*c1[0, 69] + b*f*c1[0, 68] + b*c1[0, 26] + c**2*c1[0, 44] + 2*c*d*c1[0, 41] + c*e*c1[0, 66] + c*f*c1[0, 65] + c*c1[0, 23] + 3*d**2*c1[0, 14] + 2*d*e*c1[0, 38] + 2*d*f*c1[0, 37] + 2*d*c1[0, 8] + e**2*c1[0, 36] + e*f*c1[0, 63] + e*c1[0, 20] + f**2*c1[0, 35] + f*c1[0, 19] + c1[0, 2], a**2*c1[0, 59] + a*b*c1[0, 80] + a*c*c1[0, 77] + a*d*c1[0, 75] + 2*a*e*c1[0, 54] + a*f*c1[0, 73] + a*c1[0, 29] + b**2*c1[0, 50] + b*c*c1[0, 71] + b*d*c1[0, 69] + 2*b*e*c1[0, 46] + b*f*c1[0, 67] + b*c1[0, 25] + c**2*c1[0, 43] + c*d*c1[0, 66] + 2*c*e*c1[0, 40] + c*f*c1[0, 64] + c*c1[0, 22] + d**2*c1[0, 38] + 2*d*e*c1[0, 36] + d*f*c1[0, 63] + d*c1[0, 20] + 3*e**2*c1[0, 13] + 2*e*f*c1[0, 34] + 2*e*c1[0, 7] + f**2*c1[0, 33] + f*c1[0, 18] + c1[0, 1], a**2*c1[0, 58] + a*b*c1[0, 79] + a*c*c1[0, 76] + a*d*c1[0, 74] + a*e*c1[0, 73] + 2*a*f*c1[0, 53] + a*c1[0, 28] + b**2*c1[0, 49] + b*c*c1[0, 70] + b*d*c1[0, 68] + b*e*c1[0, 67] + 2*b*f*c1[0, 45] + b*c1[0, 24] + c**2*c1[0, 42] + c*d*c1[0, 65] + c*e*c1[0, 64] + 2*c*f*c1[0, 39] + c*c1[0, 21] + d**2*c1[0, 37] + d*e*c1[0, 63] + 2*d*f*c1[0, 35] + d*c1[0, 19] + e**2*c1[0, 34] + 2*e*f*c1[0, 33] + e*c1[0, 18] + 3*f**2*c1[0, 12] + 2*f*c1[0, 6] + c1[0, 0]],
		# 	[3*a**2*c2[0, 17] + 2*a*b*c2[0, 62] + 2*a*c*c2[0, 61] + 2*a*d*c2[0, 60] + 2*a*e*c2[0, 59] + 2*a*f*c2[0, 58] + 2*a*c2[0, 11] + b**2*c2[0, 57] + b*c*c2[0, 82] + b*d*c2[0, 81] + b*e*c2[0, 80] + b*f*c2[0, 79] + b*c2[0, 32] + c**2*c2[0, 56] + c*d*c2[0, 78] + c*e*c2[0, 77] + c*f*c2[0, 76] + c*c2[0, 31] + d**2*c2[0, 55] + d*e*c2[0, 75] + d*f*c2[0, 74] + d*c2[0, 30] + e**2*c2[0, 54] + e*f*c2[0, 73] + e*c2[0, 29] + f**2*c2[0, 53] + f*c2[0, 28] + c2[0, 5], a**2*c2[0, 62] + 2*a*b*c2[0, 57] + a*c*c2[0, 82] + a*d*c2[0, 81] + a*e*c2[0, 80] + a*f*c2[0, 79] + a*c2[0, 32] + 3*b**2*c2[0, 16] + 2*b*c*c2[0, 52] + 2*b*d*c2[0, 51] + 2*b*e*c2[0, 50] + 2*b*f*c2[0, 49] + 2*b*c2[0, 10] + c**2*c2[0, 48] + c*d*c2[0, 72] + c*e*c2[0, 71] + c*f*c2[0, 70] + c*c2[0, 27] + d**2*c2[0, 47] + d*e*c2[0, 69] + d*f*c2[0, 68] + d*c2[0, 26] + e**2*c2[0, 46] + e*f*c2[0, 67] + e*c2[0, 25] + f**2*c2[0, 45] + f*c2[0, 24] + c2[0, 4], a**2*c2[0, 61] + a*b*c2[0, 82] + 2*a*c*c2[0, 56] + a*d*c2[0, 78] + a*e*c2[0, 77] + a*f*c2[0, 76] + a*c2[0, 31] + b**2*c2[0, 52] + 2*b*c*c2[0, 48] + b*d*c2[0, 72] + b*e*c2[0, 71] + b*f*c2[0, 70] + b*c2[0, 27] + 3*c**2*c2[0, 15] + 2*c*d*c2[0, 44] + 2*c*e*c2[0, 43] + 2*c*f*c2[0, 42] + 2*c*c2[0, 9] + d**2*c2[0, 41] + d*e*c2[0, 66] + d*f*c2[0, 65] + d*c2[0, 23] + e**2*c2[0, 40] + e*f*c2[0, 64] + e*c2[0, 22] + f**2*c2[0, 39] + f*c2[0, 21] + c2[0, 3], a**2*c2[0, 60] + a*b*c2[0, 81] + a*c*c2[0, 78] + 2*a*d*c2[0, 55] + a*e*c2[0, 75] + a*f*c2[0, 74] + a*c2[0, 30] + b**2*c2[0, 51] + b*c*c2[0, 72] + 2*b*d*c2[0, 47] + b*e*c2[0, 69] + b*f*c2[0, 68] + b*c2[0, 26] + c**2*c2[0, 44] + 2*c*d*c2[0, 41] + c*e*c2[0, 66] + c*f*c2[0, 65] + c*c2[0, 23] + 3*d**2*c2[0, 14] + 2*d*e*c2[0, 38] + 2*d*f*c2[0, 37] + 2*d*c2[0, 8] + e**2*c2[0, 36] + e*f*c2[0, 63] + e*c2[0, 20] + f**2*c2[0, 35] + f*c2[0, 19] + c2[0, 2], a**2*c2[0, 59] + a*b*c2[0, 80] + a*c*c2[0, 77] + a*d*c2[0, 75] + 2*a*e*c2[0, 54] + a*f*c2[0, 73] + a*c2[0, 29] + b**2*c2[0, 50] + b*c*c2[0, 71] + b*d*c2[0, 69] + 2*b*e*c2[0, 46] + b*f*c2[0, 67] + b*c2[0, 25] + c**2*c2[0, 43] + c*d*c2[0, 66] + 2*c*e*c2[0, 40] + c*f*c2[0, 64] + c*c2[0, 22] + d**2*c2[0, 38] + 2*d*e*c2[0, 36] + d*f*c2[0, 63] + d*c2[0, 20] + 3*e**2*c2[0, 13] + 2*e*f*c2[0, 34] + 2*e*c2[0, 7] + f**2*c2[0, 33] + f*c2[0, 18] + c2[0, 1], a**2*c2[0, 58] + a*b*c2[0, 79] + a*c*c2[0, 76] + a*d*c2[0, 74] + a*e*c2[0, 73] + 2*a*f*c2[0, 53] + a*c2[0, 28] + b**2*c2[0, 49] + b*c*c2[0, 70] + b*d*c2[0, 68] + b*e*c2[0, 67] + 2*b*f*c2[0, 45] + b*c2[0, 24] + c**2*c2[0, 42] + c*d*c2[0, 65] + c*e*c2[0, 64] + 2*c*f*c2[0, 39] + c*c2[0, 21] + d**2*c2[0, 37] + d*e*c2[0, 63] + 2*d*f*c2[0, 35] + d*c2[0, 19] + e**2*c2[0, 34] + 2*e*f*c2[0, 33] + e*c2[0, 18] + 3*f**2*c2[0, 12] + 2*f*c2[0, 6] + c2[0, 0]]
		# ])

		fs = np.array([
			[1, 0.25*dt*c, 0.25*dt*b, 0, 0, 0],
			[-1.5*dt*c, 1, -1.5*dt*a, 0, 0, 0],
			[2*dt*b, 2*dt*a, 1, 0, 0, 0],
			[0.5*dt*(d**2+1), 0.5*dt*(d*e-f), 0.5*dt*(d*f+e), 1 + 0.5*dt*(b*e+c*f+2*a*d), 0.5*dt*(b*d+c), 0.5*dt*(-b+c*d)],
			[0.5*dt*(d*e+f), 0.5*dt*(e**2+1), 0.5*dt*(e*f-d), 0.5*dt*(a*e-c), 1+0.5*dt*(a*d+c*f+2*b*e), 0.5*dt*(a+c*e)],
			[0.5*dt*(d*f-e), 0.5*dt*(e*f+d), 0.5*dt*(f**2+1), 0.5*dt*(a*f+b), 0.5*dt*(-a+b*f), 1 + 0.5*dt*(a*d+b*e+2*c*f)]
			])

		fa = np.array([[0.25*dt, 0, 0], [0, 0.5*dt, 0], [0, 0, dt], [0, 0, 0], [0, 0, 0], [0, 0, 0]])
		fa0 = np.array([[0.25*dt], [0], [0], [0], [0], [0]])
		fa1 = np.array([[0], [0.5*dt], [0], [0], [0], [0]])
		fa2 = np.array([[0], [0], [dt], [0], [0], [0]])
		# print(rs.shape, vs_prime.shape, fs.shape, fa.shape, pis.shape)
		vs = rs + gamma * vs_prime.dot(fs + fa.dot(pis))
		# u0Base = Matrix([[d**3, a**3, a*d**2, a*e**2, a*f**2, a**2*d, a, d, b*d*e]])
		# u1Base = Matrix([[e**3, b**3, b*d**2, b**2*e, d**2*e, b*e**2, b*f**2, e*f**2, a**2*b, a*d*e, e, b, a*b*d]])
		# u2Base = Matrix([[f**3, c**3, a**2*c, b**2*c, c*e**2, a**2*f, c**2*f, d**2*f, e**2*f, b**2*f, c*f**2, b*c*e, a*c*d, b*e*f, c, f]])
		pitheta0 = np.array([[d**3, a**3, a*d**2, a*e**2, a*f**2, a**2*d, a, d, b*d*e]])
		pitheta1 = np.array([[e**3, b**3, b*d**2, b**2*e, d**2*e, b*e**2, b*f**2, e*f**2, a**2*b, a*d*e, e, b, a*b*d]])
		pitheta2 = np.array([[f**3, c**3, a**2*c, b**2*c, c*e**2, a**2*f, c**2*f, d**2*f, e**2*f, b**2*f, c*f**2, b*c*e, a*c*d, b*e*f, c, f]])

		# print(vs_prime.shape, fa.shape, pitheta0.shape, vt0_prime.shape)
		vt0 =  gamma * vs_prime.dot(fa0).dot(pitheta0) + gamma * vt0_prime
		vt1 =  gamma * vs_prime.dot(fa1).dot(pitheta1) + gamma * vt1_prime
		vt2 =  gamma * vs_prime.dot(fa2).dot(pitheta2) + gamma * vt2_prime
		vs_prime = vs
		vt0_prime = vt0
		vt1_prime = vt1
		vt2_prime = vt2

	return state, (vt0, vt1, vt2)


def plot(Lya, c0, c1, c2):
	
	env = AttControl()

	state, done = env.reset(), False
	Values = []
	X = [state]
	count = 0
	while not done:
		a, b, c, d, e, f = state[0], state[1], state[2], state[3], state[4], state[5]
		value = Lya.dot(np.array([a,b,c,d,e,f, a**2, a*b, b**2, a*c, b*c, c**2, a*d, b*d, c*d, d**2, a*e, b*e, c*e, d*e, e**2, a*f, b*f, c*f, d*f, e*f, f**2]))
		Values.append(value)
		u0 = c0.dot(np.array([f, e, d, c, b, a, f**2, e**2, d**2, c**2, b**2, a**2, e*f, d*f, d*e, c*f, c*e, c*d, b*f, b*e, b*d, b*c, a*f, a*e, a*d, a*c, a*b]))

		u1 = c1.dot(np.array([f, e, d, c, b, a, f**2, e**2, d**2, c**2, b**2, a**2, e*f, d*f, d*e, c*f, c*e, c*d, b*f, b*e, b*d, b*c, a*f, a*e, a*d, a*c, a*b]))

		u2 = c2.dot(np.array([f, e, d, c, b, a, f**2, e**2, d**2, c**2, b**2, a**2, e*f, d*f, d*e, c*f, c*e, c*d, b*f, b*e, b*d, b*c, a*f, a*e, a*d, a*c, a*b]))

		state, r, done = env.step(u0, u1, u2)
		print(state, u0, u1, u2)
		X.append(state)

	plt.plot(Values)
	plt.savefig('Lya_value.pdf', bbox_inches='tight')

	X = np.array(X)
	fig, axs = plt.subplots(2, 3)
	axs[0, 0].plot(X[:, 0])
	axs[0, 1].plot(X[:, 1])
	axs[0, 2].plot(X[:, 2])
	axs[1, 0].plot(X[:, 3])
	axs[1, 1].plot(X[:, 4])
	axs[1, 2].plot(X[:, 5])
	
	plt.show()
	plt.savefig('Att_Traj.pdf',  bbox_inches='tight')





if __name__ == '__main__':

	def baseline():
		c0 = np.array([0.0]*9)
		c1 = np.array([0.0]*13)
		c2 = np.array([0.0]*16)
		
		for _ in range(100):
			final_state, vt = SVG(c0, c1, c2)
			c0 += 1e-2*np.clip(vt[0], -1e2, 1e2)
			c1 += 1e-2*np.clip(vt[1], -1e2, 1e2)
			c2 += 1e-2*np.clip(vt[2], -1e2, 1e2)
			print(LA.norm(final_state))
			try:
				LyaLP(c0, c1, c2, SVG_only=True)
				print('SOS succeed!')
			except Exception as e:
				print(e)
		# print(c0, c1, c2)

	def Ours():
		c0 = np.array([0.0]*9)
		c1 = np.array([0.0]*13)
		c2 = np.array([0.0]*16)

		np.set_printoptions(precision=3)
		l = 1e-4
		for it in range(100):
			final_state, vt = SVG(c0, c1, c2)
			c0 += l*np.clip(vt[0], -1e2, 1e2)
			c1 += l*np.clip(vt[1], -1e2, 1e2)
			c2 += l*np.clip(vt[2], -1e2, 1e2)
			timer = Timer()
			print('iteration: ', it, 'norm is: ',  LA.norm(final_state))
			try:
				# timer.start()
				V, slack, sdpt0, sdpt1, sdpt2, valueTest, LieTest = LyaLP(c0, c1, c2, timer, SVG_only=False)
				# timer.stop()
				c0 -= l*1e5*it*slack*np.clip(sdpt0[0], -1e2, 1e2)
				c1 -= l*1e5*it*slack*np.clip(sdpt1[0], -1e2, 1e2)
				c2 -= l*1e5*it*slack*np.clip(sdpt2[0], -1e2, 1e2)
				print(LA.norm(slack), valueTest, LieTest)
				print('Lyapunov function: ', V)
				if it > 20 and LA.norm(slack) < 1e-2 and valueTest and LieTest:
					print('SOS succeed! Controller parameters for u0, u1, u2 are: ')
					print(c0, c1, c2)
					print('Lyapunov function: ', V)
					# plot(V, c0, c1, c2)
					break
			except Exception as e:
				print(e)
			
			


	# print('baseline starts here')
	# baseline()
	# print('')
	# print('Our approach starts here')
	Ours()
	# LyapunovConstraints()
	# print (cp.installed_solvers())

	

