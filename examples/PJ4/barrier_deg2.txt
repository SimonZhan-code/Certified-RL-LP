#-------------------The Initial Set Conditions-------------------
constraints += [0.5*lambda_1[0, 0] - 0.5*lambda_1[0, 1] + 2*lambda_1[0, 2] - lambda_1[0, 3] + 0.25*lambda_1[0, 4] + 0.25*lambda_1[0, 5] + 4*lambda_1[0, 6] + lambda_1[0, 7] - 0.25*lambda_1[0, 8] + 1.0*lambda_1[0, 9] - 1.0*lambda_1[0, 10] - 0.5*lambda_1[0, 11] + 0.5*lambda_1[0, 12] - 2*lambda_1[0, 13] <= B[0, 0]+ objc]
constraints += [0.5*lambda_1[0, 0] - 0.5*lambda_1[0, 1] + 2*lambda_1[0, 2] - lambda_1[0, 3] + 0.25*lambda_1[0, 4] + 0.25*lambda_1[0, 5] + 4*lambda_1[0, 6] + lambda_1[0, 7] - 0.25*lambda_1[0, 8] + 1.0*lambda_1[0, 9] - 1.0*lambda_1[0, 10] - 0.5*lambda_1[0, 11] + 0.5*lambda_1[0, 12] - 2*lambda_1[0, 13] >= B[0, 0]- objc]
constraints += [-lambda_1[0, 0] + lambda_1[0, 1] - lambda_1[0, 2] - 1.0*lambda_1[0, 4] - 1.0*lambda_1[0, 5] - 4*lambda_1[0, 6] + 1.0*lambda_1[0, 8] - 2.5*lambda_1[0, 9] + 2.5*lambda_1[0, 10] + lambda_1[0, 11] - lambda_1[0, 12] + lambda_1[0, 13] <= B[0, 1]+ objc]
constraints += [-lambda_1[0, 0] + lambda_1[0, 1] - lambda_1[0, 2] - 1.0*lambda_1[0, 4] - 1.0*lambda_1[0, 5] - 4*lambda_1[0, 6] + 1.0*lambda_1[0, 8] - 2.5*lambda_1[0, 9] + 2.5*lambda_1[0, 10] + lambda_1[0, 11] - lambda_1[0, 12] + lambda_1[0, 13] >= B[0, 1]- objc]
constraints += [lambda_1[0, 4] + lambda_1[0, 5] + lambda_1[0, 6] - lambda_1[0, 8] + lambda_1[0, 9] - lambda_1[0, 10] <= B[0, 3]+ objc]
constraints += [lambda_1[0, 4] + lambda_1[0, 5] + lambda_1[0, 6] - lambda_1[0, 8] + lambda_1[0, 9] - lambda_1[0, 10] >= B[0, 3]- objc]
constraints += [lambda_1[0, 3] - 2*lambda_1[0, 7] + 0.5*lambda_1[0, 11] - 0.5*lambda_1[0, 12] + 2*lambda_1[0, 13] <= B[0, 2]+ objc]
constraints += [lambda_1[0, 3] - 2*lambda_1[0, 7] + 0.5*lambda_1[0, 11] - 0.5*lambda_1[0, 12] + 2*lambda_1[0, 13] >= B[0, 2]- objc]
constraints += [-lambda_1[0, 11] + lambda_1[0, 12] - lambda_1[0, 13] <= B[0, 5]+ objc]
constraints += [-lambda_1[0, 11] + lambda_1[0, 12] - lambda_1[0, 13] >= B[0, 5]- objc]
constraints += [lambda_1[0, 7] <= B[0, 4]+ objc]
constraints += [lambda_1[0, 7] >= B[0, 4]- objc]

#------------------The Lie Derivative conditions------------------
constraints += [100*lambda_2[0, 0] + 100*lambda_2[0, 1] + 100*lambda_2[0, 2] + 100*lambda_2[0, 3] + 10000*lambda_2[0, 4] + 10000*lambda_2[0, 5] + 10000*lambda_2[0, 6] + 10000*lambda_2[0, 7] + 1000000*lambda_2[0, 8] + 1000000*lambda_2[0, 9] + 1000000*lambda_2[0, 10] + 1000000*lambda_2[0, 11] + 100000000*lambda_2[0, 12] + 100000000*lambda_2[0, 13] + 100000000*lambda_2[0, 14] + 100000000*lambda_2[0, 15] + 10000*lambda_2[0, 16] + 10000*lambda_2[0, 17] + 10000*lambda_2[0, 18] + 10000*lambda_2[0, 19] + 10000*lambda_2[0, 20] + 10000*lambda_2[0, 21] + 1000000*lambda_2[0, 22] + 1000000*lambda_2[0, 23] + 1000000*lambda_2[0, 24] + 1000000*lambda_2[0, 25] + 1000000*lambda_2[0, 26] + 1000000*lambda_2[0, 27] + 1000000*lambda_2[0, 28] + 1000000*lambda_2[0, 29] + 1000000*lambda_2[0, 30] + 1000000*lambda_2[0, 31] + 1000000*lambda_2[0, 32] + 1000000*lambda_2[0, 33] + 100000000*lambda_2[0, 34] + 100000000*lambda_2[0, 35] + 100000000*lambda_2[0, 36] + 100000000*lambda_2[0, 37] + 100000000*lambda_2[0, 38] + 100000000*lambda_2[0, 39] + 100000000*lambda_2[0, 40] + 100000000*lambda_2[0, 41] + 100000000*lambda_2[0, 42] + 100000000*lambda_2[0, 43] + 100000000*lambda_2[0, 44] + 100000000*lambda_2[0, 45] + 100000000*lambda_2[0, 46] + 100000000*lambda_2[0, 47] + 100000000*lambda_2[0, 48] + 100000000*lambda_2[0, 49] + 100000000*lambda_2[0, 50] + 100000000*lambda_2[0, 51] + 1000000*lambda_2[0, 52] + 1000000*lambda_2[0, 53] + 1000000*lambda_2[0, 54] + 1000000*lambda_2[0, 55] + 100000000*lambda_2[0, 56] + 100000000*lambda_2[0, 57] + 100000000*lambda_2[0, 58] + 100000000*lambda_2[0, 59] + 100000000*lambda_2[0, 60] + 100000000*lambda_2[0, 61] + 100000000*lambda_2[0, 62] + 100000000*lambda_2[0, 63] + 100000000*lambda_2[0, 64] + 100000000*lambda_2[0, 65] + 100000000*lambda_2[0, 66] + 100000000*lambda_2[0, 67] + 100000000*lambda_2[0, 68] <= -l*B[0, 0]+ objc]
constraints += [100*lambda_2[0, 0] + 100*lambda_2[0, 1] + 100*lambda_2[0, 2] + 100*lambda_2[0, 3] + 10000*lambda_2[0, 4] + 10000*lambda_2[0, 5] + 10000*lambda_2[0, 6] + 10000*lambda_2[0, 7] + 1000000*lambda_2[0, 8] + 1000000*lambda_2[0, 9] + 1000000*lambda_2[0, 10] + 1000000*lambda_2[0, 11] + 100000000*lambda_2[0, 12] + 100000000*lambda_2[0, 13] + 100000000*lambda_2[0, 14] + 100000000*lambda_2[0, 15] + 10000*lambda_2[0, 16] + 10000*lambda_2[0, 17] + 10000*lambda_2[0, 18] + 10000*lambda_2[0, 19] + 10000*lambda_2[0, 20] + 10000*lambda_2[0, 21] + 1000000*lambda_2[0, 22] + 1000000*lambda_2[0, 23] + 1000000*lambda_2[0, 24] + 1000000*lambda_2[0, 25] + 1000000*lambda_2[0, 26] + 1000000*lambda_2[0, 27] + 1000000*lambda_2[0, 28] + 1000000*lambda_2[0, 29] + 1000000*lambda_2[0, 30] + 1000000*lambda_2[0, 31] + 1000000*lambda_2[0, 32] + 1000000*lambda_2[0, 33] + 100000000*lambda_2[0, 34] + 100000000*lambda_2[0, 35] + 100000000*lambda_2[0, 36] + 100000000*lambda_2[0, 37] + 100000000*lambda_2[0, 38] + 100000000*lambda_2[0, 39] + 100000000*lambda_2[0, 40] + 100000000*lambda_2[0, 41] + 100000000*lambda_2[0, 42] + 100000000*lambda_2[0, 43] + 100000000*lambda_2[0, 44] + 100000000*lambda_2[0, 45] + 100000000*lambda_2[0, 46] + 100000000*lambda_2[0, 47] + 100000000*lambda_2[0, 48] + 100000000*lambda_2[0, 49] + 100000000*lambda_2[0, 50] + 100000000*lambda_2[0, 51] + 1000000*lambda_2[0, 52] + 1000000*lambda_2[0, 53] + 1000000*lambda_2[0, 54] + 1000000*lambda_2[0, 55] + 100000000*lambda_2[0, 56] + 100000000*lambda_2[0, 57] + 100000000*lambda_2[0, 58] + 100000000*lambda_2[0, 59] + 100000000*lambda_2[0, 60] + 100000000*lambda_2[0, 61] + 100000000*lambda_2[0, 62] + 100000000*lambda_2[0, 63] + 100000000*lambda_2[0, 64] + 100000000*lambda_2[0, 65] + 100000000*lambda_2[0, 66] + 100000000*lambda_2[0, 67] + 100000000*lambda_2[0, 68] >= -l*B[0, 0]- objc]
constraints += [-lambda_2[0, 0] + lambda_2[0, 2] - 200*lambda_2[0, 4] + 200*lambda_2[0, 6] - 30000*lambda_2[0, 8] + 30000*lambda_2[0, 10] - 4000000*lambda_2[0, 12] + 4000000*lambda_2[0, 14] - 100*lambda_2[0, 16] + 100*lambda_2[0, 18] - 100*lambda_2[0, 19] + 100*lambda_2[0, 21] - 20000*lambda_2[0, 22] - 10000*lambda_2[0, 23] - 10000*lambda_2[0, 24] + 10000*lambda_2[0, 25] + 10000*lambda_2[0, 26] + 20000*lambda_2[0, 27] - 20000*lambda_2[0, 28] + 20000*lambda_2[0, 30] - 10000*lambda_2[0, 31] + 10000*lambda_2[0, 33] - 3000000*lambda_2[0, 34] - 1000000*lambda_2[0, 35] - 2000000*lambda_2[0, 36] + 1000000*lambda_2[0, 37] + 2000000*lambda_2[0, 38] + 3000000*lambda_2[0, 39] - 3000000*lambda_2[0, 40] + 3000000*lambda_2[0, 42] - 1000000*lambda_2[0, 43] + 1000000*lambda_2[0, 45] - 2000000*lambda_2[0, 46] + 2000000*lambda_2[0, 48] - 2000000*lambda_2[0, 49] + 2000000*lambda_2[0, 51] - 10000*lambda_2[0, 53] + 10000*lambda_2[0, 55] - 1000000*lambda_2[0, 56] + 1000000*lambda_2[0, 58] - 2000000*lambda_2[0, 59] - 1000000*lambda_2[0, 60] - 1000000*lambda_2[0, 61] + 1000000*lambda_2[0, 62] + 1000000*lambda_2[0, 63] + 2000000*lambda_2[0, 64] - 1000000*lambda_2[0, 65] + 1000000*lambda_2[0, 67] <= f*B[0, 2] - l*B[0, 1] + B[0, 1]*t[0, 1]+ objc]
constraints += [-lambda_2[0, 0] + lambda_2[0, 2] - 200*lambda_2[0, 4] + 200*lambda_2[0, 6] - 30000*lambda_2[0, 8] + 30000*lambda_2[0, 10] - 4000000*lambda_2[0, 12] + 4000000*lambda_2[0, 14] - 100*lambda_2[0, 16] + 100*lambda_2[0, 18] - 100*lambda_2[0, 19] + 100*lambda_2[0, 21] - 20000*lambda_2[0, 22] - 10000*lambda_2[0, 23] - 10000*lambda_2[0, 24] + 10000*lambda_2[0, 25] + 10000*lambda_2[0, 26] + 20000*lambda_2[0, 27] - 20000*lambda_2[0, 28] + 20000*lambda_2[0, 30] - 10000*lambda_2[0, 31] + 10000*lambda_2[0, 33] - 3000000*lambda_2[0, 34] - 1000000*lambda_2[0, 35] - 2000000*lambda_2[0, 36] + 1000000*lambda_2[0, 37] + 2000000*lambda_2[0, 38] + 3000000*lambda_2[0, 39] - 3000000*lambda_2[0, 40] + 3000000*lambda_2[0, 42] - 1000000*lambda_2[0, 43] + 1000000*lambda_2[0, 45] - 2000000*lambda_2[0, 46] + 2000000*lambda_2[0, 48] - 2000000*lambda_2[0, 49] + 2000000*lambda_2[0, 51] - 10000*lambda_2[0, 53] + 10000*lambda_2[0, 55] - 1000000*lambda_2[0, 56] + 1000000*lambda_2[0, 58] - 2000000*lambda_2[0, 59] - 1000000*lambda_2[0, 60] - 1000000*lambda_2[0, 61] + 1000000*lambda_2[0, 62] + 1000000*lambda_2[0, 63] + 2000000*lambda_2[0, 64] - 1000000*lambda_2[0, 65] + 1000000*lambda_2[0, 67] >= f*B[0, 2] - l*B[0, 1] + B[0, 1]*t[0, 1]- objc]
constraints += [lambda_2[0, 4] + lambda_2[0, 6] + 300*lambda_2[0, 8] + 300*lambda_2[0, 10] + 60000*lambda_2[0, 12] + 60000*lambda_2[0, 14] - lambda_2[0, 17] + 100*lambda_2[0, 22] - 100*lambda_2[0, 24] - 100*lambda_2[0, 26] + 100*lambda_2[0, 27] + 100*lambda_2[0, 28] + 100*lambda_2[0, 30] + 30000*lambda_2[0, 34] + 30000*lambda_2[0, 39] + 30000*lambda_2[0, 40] + 30000*lambda_2[0, 42] + 10000*lambda_2[0, 46] - 20000*lambda_2[0, 47] + 10000*lambda_2[0, 48] + 10000*lambda_2[0, 49] + 10000*lambda_2[0, 51] - 100*lambda_2[0, 52] - 100*lambda_2[0, 54] - 10000*lambda_2[0, 56] - 10000*lambda_2[0, 57] - 10000*lambda_2[0, 58] + 10000*lambda_2[0, 59] - 10000*lambda_2[0, 61] - 10000*lambda_2[0, 63] + 10000*lambda_2[0, 64] - 10000*lambda_2[0, 66] - 10000*lambda_2[0, 68] <= f*B[0, 5] - l*B[0, 3] + 2*B[0, 3]*t[0, 1] - 0.5+ objc]
constraints += [lambda_2[0, 4] + lambda_2[0, 6] + 300*lambda_2[0, 8] + 300*lambda_2[0, 10] + 60000*lambda_2[0, 12] + 60000*lambda_2[0, 14] - lambda_2[0, 17] + 100*lambda_2[0, 22] - 100*lambda_2[0, 24] - 100*lambda_2[0, 26] + 100*lambda_2[0, 27] + 100*lambda_2[0, 28] + 100*lambda_2[0, 30] + 30000*lambda_2[0, 34] + 30000*lambda_2[0, 39] + 30000*lambda_2[0, 40] + 30000*lambda_2[0, 42] + 10000*lambda_2[0, 46] - 20000*lambda_2[0, 47] + 10000*lambda_2[0, 48] + 10000*lambda_2[0, 49] + 10000*lambda_2[0, 51] - 100*lambda_2[0, 52] - 100*lambda_2[0, 54] - 10000*lambda_2[0, 56] - 10000*lambda_2[0, 57] - 10000*lambda_2[0, 58] + 10000*lambda_2[0, 59] - 10000*lambda_2[0, 61] - 10000*lambda_2[0, 63] + 10000*lambda_2[0, 64] - 10000*lambda_2[0, 66] - 10000*lambda_2[0, 68] >= f*B[0, 5] - l*B[0, 3] + 2*B[0, 3]*t[0, 1] - 0.5- objc]
constraints += [-lambda_2[0, 8] + lambda_2[0, 10] - 400*lambda_2[0, 12] + 400*lambda_2[0, 14] + lambda_2[0, 24] - lambda_2[0, 26] - 100*lambda_2[0, 34] + 200*lambda_2[0, 36] - 200*lambda_2[0, 38] + 100*lambda_2[0, 39] - 100*lambda_2[0, 40] + 100*lambda_2[0, 42] + 100*lambda_2[0, 56] - 100*lambda_2[0, 58] + 100*lambda_2[0, 61] - 100*lambda_2[0, 63] == 0]
constraints += [lambda_2[0, 12] + lambda_2[0, 14] - lambda_2[0, 36] - lambda_2[0, 38] + lambda_2[0, 47] == 0]
constraints += [-lambda_2[0, 1] + lambda_2[0, 3] - 200*lambda_2[0, 5] + 200*lambda_2[0, 7] - 30000*lambda_2[0, 9] + 30000*lambda_2[0, 11] - 4000000*lambda_2[0, 13] + 4000000*lambda_2[0, 15] - 100*lambda_2[0, 16] - 100*lambda_2[0, 18] + 100*lambda_2[0, 19] + 100*lambda_2[0, 21] - 10000*lambda_2[0, 22] - 20000*lambda_2[0, 23] - 20000*lambda_2[0, 25] - 10000*lambda_2[0, 27] + 10000*lambda_2[0, 28] - 10000*lambda_2[0, 29] + 10000*lambda_2[0, 30] + 20000*lambda_2[0, 31] + 10000*lambda_2[0, 32] + 20000*lambda_2[0, 33] - 1000000*lambda_2[0, 34] - 3000000*lambda_2[0, 35] - 3000000*lambda_2[0, 37] - 1000000*lambda_2[0, 39] + 1000000*lambda_2[0, 40] - 2000000*lambda_2[0, 41] + 1000000*lambda_2[0, 42] + 3000000*lambda_2[0, 43] + 2000000*lambda_2[0, 44] + 3000000*lambda_2[0, 45] - 2000000*lambda_2[0, 46] - 2000000*lambda_2[0, 48] + 2000000*lambda_2[0, 49] + 2000000*lambda_2[0, 51] - 10000*lambda_2[0, 52] + 10000*lambda_2[0, 54] - 1000000*lambda_2[0, 56] - 2000000*lambda_2[0, 57] - 1000000*lambda_2[0, 58] - 1000000*lambda_2[0, 60] + 1000000*lambda_2[0, 61] - 1000000*lambda_2[0, 62] + 1000000*lambda_2[0, 63] + 1000000*lambda_2[0, 65] + 2000000*lambda_2[0, 66] + 1000000*lambda_2[0, 67] <= -l*B[0, 2] + B[0, 1]*t[0, 0]+ objc]
constraints += [-lambda_2[0, 1] + lambda_2[0, 3] - 200*lambda_2[0, 5] + 200*lambda_2[0, 7] - 30000*lambda_2[0, 9] + 30000*lambda_2[0, 11] - 4000000*lambda_2[0, 13] + 4000000*lambda_2[0, 15] - 100*lambda_2[0, 16] - 100*lambda_2[0, 18] + 100*lambda_2[0, 19] + 100*lambda_2[0, 21] - 10000*lambda_2[0, 22] - 20000*lambda_2[0, 23] - 20000*lambda_2[0, 25] - 10000*lambda_2[0, 27] + 10000*lambda_2[0, 28] - 10000*lambda_2[0, 29] + 10000*lambda_2[0, 30] + 20000*lambda_2[0, 31] + 10000*lambda_2[0, 32] + 20000*lambda_2[0, 33] - 1000000*lambda_2[0, 34] - 3000000*lambda_2[0, 35] - 3000000*lambda_2[0, 37] - 1000000*lambda_2[0, 39] + 1000000*lambda_2[0, 40] - 2000000*lambda_2[0, 41] + 1000000*lambda_2[0, 42] + 3000000*lambda_2[0, 43] + 2000000*lambda_2[0, 44] + 3000000*lambda_2[0, 45] - 2000000*lambda_2[0, 46] - 2000000*lambda_2[0, 48] + 2000000*lambda_2[0, 49] + 2000000*lambda_2[0, 51] - 10000*lambda_2[0, 52] + 10000*lambda_2[0, 54] - 1000000*lambda_2[0, 56] - 2000000*lambda_2[0, 57] - 1000000*lambda_2[0, 58] - 1000000*lambda_2[0, 60] + 1000000*lambda_2[0, 61] - 1000000*lambda_2[0, 62] + 1000000*lambda_2[0, 63] + 1000000*lambda_2[0, 65] + 2000000*lambda_2[0, 66] + 1000000*lambda_2[0, 67] >= -l*B[0, 2] + B[0, 1]*t[0, 0]- objc]
constraints += [lambda_2[0, 16] - lambda_2[0, 18] - lambda_2[0, 19] + lambda_2[0, 21] + 200*lambda_2[0, 22] + 200*lambda_2[0, 23] - 200*lambda_2[0, 25] - 200*lambda_2[0, 27] - 200*lambda_2[0, 28] + 200*lambda_2[0, 30] - 200*lambda_2[0, 31] + 200*lambda_2[0, 33] + 30000*lambda_2[0, 34] + 30000*lambda_2[0, 35] - 30000*lambda_2[0, 37] - 30000*lambda_2[0, 39] - 30000*lambda_2[0, 40] + 30000*lambda_2[0, 42] - 30000*lambda_2[0, 43] + 30000*lambda_2[0, 45] + 40000*lambda_2[0, 46] - 40000*lambda_2[0, 48] - 40000*lambda_2[0, 49] + 40000*lambda_2[0, 51] + 10000*lambda_2[0, 56] - 10000*lambda_2[0, 58] + 10000*lambda_2[0, 60] - 10000*lambda_2[0, 61] - 10000*lambda_2[0, 62] + 10000*lambda_2[0, 63] - 10000*lambda_2[0, 65] + 10000*lambda_2[0, 67] <= 2*f*B[0, 4] - l*B[0, 5] + 2*B[0, 3]*t[0, 0] + B[0, 5]*t[0, 1]+ objc]
constraints += [lambda_2[0, 16] - lambda_2[0, 18] - lambda_2[0, 19] + lambda_2[0, 21] + 200*lambda_2[0, 22] + 200*lambda_2[0, 23] - 200*lambda_2[0, 25] - 200*lambda_2[0, 27] - 200*lambda_2[0, 28] + 200*lambda_2[0, 30] - 200*lambda_2[0, 31] + 200*lambda_2[0, 33] + 30000*lambda_2[0, 34] + 30000*lambda_2[0, 35] - 30000*lambda_2[0, 37] - 30000*lambda_2[0, 39] - 30000*lambda_2[0, 40] + 30000*lambda_2[0, 42] - 30000*lambda_2[0, 43] + 30000*lambda_2[0, 45] + 40000*lambda_2[0, 46] - 40000*lambda_2[0, 48] - 40000*lambda_2[0, 49] + 40000*lambda_2[0, 51] + 10000*lambda_2[0, 56] - 10000*lambda_2[0, 58] + 10000*lambda_2[0, 60] - 10000*lambda_2[0, 61] - 10000*lambda_2[0, 62] + 10000*lambda_2[0, 63] - 10000*lambda_2[0, 65] + 10000*lambda_2[0, 67] >= 2*f*B[0, 4] - l*B[0, 5] + 2*B[0, 3]*t[0, 0] + B[0, 5]*t[0, 1]- objc]
constraints += [-lambda_2[0, 22] - lambda_2[0, 27] + lambda_2[0, 28] + lambda_2[0, 30] - 300*lambda_2[0, 34] - 300*lambda_2[0, 39] + 300*lambda_2[0, 40] + 300*lambda_2[0, 42] - 200*lambda_2[0, 46] - 200*lambda_2[0, 48] + 200*lambda_2[0, 49] + 200*lambda_2[0, 51] + lambda_2[0, 52] - lambda_2[0, 54] + 100*lambda_2[0, 56] + 200*lambda_2[0, 57] + 100*lambda_2[0, 58] - 100*lambda_2[0, 61] - 100*lambda_2[0, 63] - 200*lambda_2[0, 66] == 0]
constraints += [lambda_2[0, 34] - lambda_2[0, 39] - lambda_2[0, 40] + lambda_2[0, 42] - lambda_2[0, 56] + lambda_2[0, 58] + lambda_2[0, 61] - lambda_2[0, 63] == 0]
constraints += [lambda_2[0, 5] + lambda_2[0, 7] + 300*lambda_2[0, 9] + 300*lambda_2[0, 11] + 60000*lambda_2[0, 13] + 60000*lambda_2[0, 15] - lambda_2[0, 20] + 100*lambda_2[0, 23] + 100*lambda_2[0, 25] - 100*lambda_2[0, 29] + 100*lambda_2[0, 31] - 100*lambda_2[0, 32] + 100*lambda_2[0, 33] + 30000*lambda_2[0, 35] + 30000*lambda_2[0, 37] + 30000*lambda_2[0, 43] + 30000*lambda_2[0, 45] + 10000*lambda_2[0, 46] + 10000*lambda_2[0, 48] + 10000*lambda_2[0, 49] - 20000*lambda_2[0, 50] + 10000*lambda_2[0, 51] - 100*lambda_2[0, 53] - 100*lambda_2[0, 55] + 10000*lambda_2[0, 57] - 10000*lambda_2[0, 59] - 10000*lambda_2[0, 60] - 10000*lambda_2[0, 62] - 10000*lambda_2[0, 64] - 10000*lambda_2[0, 65] + 10000*lambda_2[0, 66] - 10000*lambda_2[0, 67] - 10000*lambda_2[0, 68] <= -l*B[0, 4] + B[0, 5]*t[0, 0] - 0.5+ objc]
constraints += [lambda_2[0, 5] + lambda_2[0, 7] + 300*lambda_2[0, 9] + 300*lambda_2[0, 11] + 60000*lambda_2[0, 13] + 60000*lambda_2[0, 15] - lambda_2[0, 20] + 100*lambda_2[0, 23] + 100*lambda_2[0, 25] - 100*lambda_2[0, 29] + 100*lambda_2[0, 31] - 100*lambda_2[0, 32] + 100*lambda_2[0, 33] + 30000*lambda_2[0, 35] + 30000*lambda_2[0, 37] + 30000*lambda_2[0, 43] + 30000*lambda_2[0, 45] + 10000*lambda_2[0, 46] + 10000*lambda_2[0, 48] + 10000*lambda_2[0, 49] - 20000*lambda_2[0, 50] + 10000*lambda_2[0, 51] - 100*lambda_2[0, 53] - 100*lambda_2[0, 55] + 10000*lambda_2[0, 57] - 10000*lambda_2[0, 59] - 10000*lambda_2[0, 60] - 10000*lambda_2[0, 62] - 10000*lambda_2[0, 64] - 10000*lambda_2[0, 65] + 10000*lambda_2[0, 66] - 10000*lambda_2[0, 67] - 10000*lambda_2[0, 68] >= -l*B[0, 4] + B[0, 5]*t[0, 0] - 0.5- objc]
constraints += [-lambda_2[0, 23] + lambda_2[0, 25] - lambda_2[0, 31] + lambda_2[0, 33] - 300*lambda_2[0, 35] + 300*lambda_2[0, 37] - 300*lambda_2[0, 43] + 300*lambda_2[0, 45] - 200*lambda_2[0, 46] + 200*lambda_2[0, 48] - 200*lambda_2[0, 49] + 200*lambda_2[0, 51] + lambda_2[0, 53] - lambda_2[0, 55] + 200*lambda_2[0, 59] + 100*lambda_2[0, 60] - 100*lambda_2[0, 62] - 200*lambda_2[0, 64] + 100*lambda_2[0, 65] - 100*lambda_2[0, 67] == 0]
constraints += [lambda_2[0, 46] + lambda_2[0, 48] + lambda_2[0, 49] + lambda_2[0, 51] - lambda_2[0, 57] - lambda_2[0, 59] - lambda_2[0, 64] - lambda_2[0, 66] + lambda_2[0, 68] == 0]
constraints += [-lambda_2[0, 9] + lambda_2[0, 11] - 400*lambda_2[0, 13] + 400*lambda_2[0, 15] + lambda_2[0, 29] - lambda_2[0, 32] - 100*lambda_2[0, 35] - 100*lambda_2[0, 37] + 200*lambda_2[0, 41] + 100*lambda_2[0, 43] - 200*lambda_2[0, 44] + 100*lambda_2[0, 45] + 100*lambda_2[0, 60] + 100*lambda_2[0, 62] - 100*lambda_2[0, 65] - 100*lambda_2[0, 67] <= g*B[0, 1]+ objc]
constraints += [-lambda_2[0, 9] + lambda_2[0, 11] - 400*lambda_2[0, 13] + 400*lambda_2[0, 15] + lambda_2[0, 29] - lambda_2[0, 32] - 100*lambda_2[0, 35] - 100*lambda_2[0, 37] + 200*lambda_2[0, 41] + 100*lambda_2[0, 43] - 200*lambda_2[0, 44] + 100*lambda_2[0, 45] + 100*lambda_2[0, 60] + 100*lambda_2[0, 62] - 100*lambda_2[0, 65] - 100*lambda_2[0, 67] >= g*B[0, 1]- objc]
constraints += [lambda_2[0, 35] - lambda_2[0, 37] - lambda_2[0, 43] + lambda_2[0, 45] - lambda_2[0, 60] + lambda_2[0, 62] + lambda_2[0, 65] - lambda_2[0, 67] <= 2*g*B[0, 3]+ objc]
constraints += [lambda_2[0, 35] - lambda_2[0, 37] - lambda_2[0, 43] + lambda_2[0, 45] - lambda_2[0, 60] + lambda_2[0, 62] + lambda_2[0, 65] - lambda_2[0, 67] >= 2*g*B[0, 3]- objc]
constraints += [lambda_2[0, 13] + lambda_2[0, 15] - lambda_2[0, 41] - lambda_2[0, 44] + lambda_2[0, 50] <= g*B[0, 5]+ objc]
constraints += [lambda_2[0, 13] + lambda_2[0, 15] - lambda_2[0, 41] - lambda_2[0, 44] + lambda_2[0, 50] >= g*B[0, 5]- objc]


#------------------The Unsafe conditions------------------
constraints += [-0.5*lambda_3[0, 0] - 0.3*lambda_3[0, 1] + 1.5*lambda_3[0, 2] + 1.3*lambda_3[0, 3] + 0.25*lambda_3[0, 4] + 0.09*lambda_3[0, 5] + 2.25*lambda_3[0, 6] + 1.69*lambda_3[0, 7] + 0.15*lambda_3[0, 8] - 0.75*lambda_3[0, 9] - 0.45*lambda_3[0, 10] - 0.65*lambda_3[0, 11] - 0.39*lambda_3[0, 12] + 1.95*lambda_3[0, 13] <= -B[0, 0]+ objc]
constraints += [-0.5*lambda_3[0, 0] - 0.3*lambda_3[0, 1] + 1.5*lambda_3[0, 2] + 1.3*lambda_3[0, 3] + 0.25*lambda_3[0, 4] + 0.09*lambda_3[0, 5] + 2.25*lambda_3[0, 6] + 1.69*lambda_3[0, 7] + 0.15*lambda_3[0, 8] - 0.75*lambda_3[0, 9] - 0.45*lambda_3[0, 10] - 0.65*lambda_3[0, 11] - 0.39*lambda_3[0, 12] + 1.95*lambda_3[0, 13] >= -B[0, 0]- objc]
constraints += [-lambda_3[0, 0] + lambda_3[0, 2] + 1.0*lambda_3[0, 4] + 3.0*lambda_3[0, 6] + 0.3*lambda_3[0, 8] - 2.0*lambda_3[0, 9] - 0.3*lambda_3[0, 10] - 1.3*lambda_3[0, 11] + 1.3*lambda_3[0, 13] <= -B[0, 1]+ objc]
constraints += [-lambda_3[0, 0] + lambda_3[0, 2] + 1.0*lambda_3[0, 4] + 3.0*lambda_3[0, 6] + 0.3*lambda_3[0, 8] - 2.0*lambda_3[0, 9] - 0.3*lambda_3[0, 10] - 1.3*lambda_3[0, 11] + 1.3*lambda_3[0, 13] >= -B[0, 1]- objc]
constraints += [lambda_3[0, 4] + 1.0*lambda_3[0, 6] - lambda_3[0, 9] <= -B[0, 3] - 0.01+ objc]
constraints += [lambda_3[0, 4] + 1.0*lambda_3[0, 6] - lambda_3[0, 9] >= -B[0, 3] - 0.01- objc]
constraints += [-lambda_3[0, 1] + lambda_3[0, 3] + 0.6*lambda_3[0, 5] + 2.6*lambda_3[0, 7] + 0.5*lambda_3[0, 8] - 1.5*lambda_3[0, 10] - 0.5*lambda_3[0, 11] - 1.6*lambda_3[0, 12] + 1.5*lambda_3[0, 13] <= -B[0, 2]+ objc]
constraints += [-lambda_3[0, 1] + lambda_3[0, 3] + 0.6*lambda_3[0, 5] + 2.6*lambda_3[0, 7] + 0.5*lambda_3[0, 8] - 1.5*lambda_3[0, 10] - 0.5*lambda_3[0, 11] - 1.6*lambda_3[0, 12] + 1.5*lambda_3[0, 13] >= -B[0, 2]- objc]
constraints += [lambda_3[0, 8] - lambda_3[0, 10] - lambda_3[0, 11] + lambda_3[0, 13] <= -B[0, 5]+ objc]
constraints += [lambda_3[0, 8] - lambda_3[0, 10] - lambda_3[0, 11] + lambda_3[0, 13] >= -B[0, 5]- objc]
constraints += [lambda_3[0, 5] + 1.0*lambda_3[0, 7] - lambda_3[0, 12] <= -B[0, 4] - 0.01+ objc]
constraints += [lambda_3[0, 5] + 1.0*lambda_3[0, 7] - lambda_3[0, 12] >= -B[0, 4] - 0.01- objc]

#------------------Monomial and Polynomial Terms------------------
polynomial terms:[1, x2, x1, x2**2, x1**2, x1*x2]
number of polynomial terms:6
the length of the lambda_1 is 14
the length of the lambda_2 is 69
the length of the lambda_3 is 14

#------------------Lie Derivative test------------------
2*f*x1*x2*B[0, 4] + f*x2**2*B[0, 5] + f*x2*B[0, 2] + g*x1**4*B[0, 5] + 2*g*x1**3*x2*B[0, 3] + g*x1**3*B[0, 1] - l*x1**2*B[0, 4] - l*x1*x2*B[0, 5] - l*x1*B[0, 2] - l*x2**2*B[0, 3] - l*x2*B[0, 1] - l*B[0, 0] + x1**2*B[0, 5]*t[0, 0] + 2*x1*x2*B[0, 3]*t[0, 0] + x1*x2*B[0, 5]*t[0, 1] + x1*B[0, 1]*t[0, 0] + 2*x2**2*B[0, 3]*t[0, 1] + x2*B[0, 1]*t[0, 1]
