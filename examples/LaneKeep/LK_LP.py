import cvxpy as cp
import numpy as np
import numpy.random as npr
import scipy.sparse as sp
import torch
from cvxpylayers.torch.cvxpylayer import CvxpyLayer
import matplotlib.pyplot as plt
from sympy import MatrixSymbol, Matrix
from sympy import *
from handelman_utils import *
from numpy import linalg as LA
import matplotlib.patches as mpatches
SVG_patch = mpatches.Patch(color='#ff7f0e', label='SVG w/ CMDP')
Ours_patch = mpatches.Patch(color='#2ca02c', label='Ours')

EPR = []

class LK:
	deltaT = 0.02
	max_iteration = 150
	A = np.array([[1,0.019,0.268,0.0006], [0,0.877,0,-0.186],[0,0.00017,1,0.0189], [0,0.0164,0,0.892]])
	B = np.array([0.0077,0.718, 0.0032,0.315]).T 

	def __init__(self, x0=None, x1=None, x2=None, x3=None):
		if x0 is None or x1 is None:
			x0 = np.random.uniform(low=0.3, high=0.5, size=1)[0]
			x1 = np.random.uniform(low=1.9, high=2.1, size=1)[0]
			x2 = np.random.uniform(low=0.4, high=0.6, size=1)[0]
			x3 = np.random.uniform(low=-0.1, high=0.1, size=1)[0]
			while (x0 - 0.4)**2 + (x1 - 2)**2 + (x2 - 0.5)**2 + x3**2 > 0.04:
				x0 = np.random.uniform(low=0.3, high=0.5, size=1)[0]
				x1 = np.random.uniform(low=1.9, high=2.1, size=1)[0]
				x2 = np.random.uniform(low=0.4, high=0.6, size=1)[0]
				x3 = np.random.uniform(low=-0.1, high=0.1, size=1)[0]	
			
			self.x0 = x0
			self.x1 = x1
			self.x2 = x2
			self.x3 = x3
		else:
			self.x0 = x0
			self.x1 = x1
			self.x2 = x2
			self.x3 = x3
		
		self.t = 0
		self.state = np.array([self.x0, self.x1, self.x2, self.x3])


	def reset(self, x0=None, x1=None, x2=None, x3=None):
		if x0 is None or x1 is None:
			x0 = np.random.uniform(low=0.3, high=0.5, size=1)[0]
			x1 = np.random.uniform(low=1.9, high=2.1, size=1)[0]
			x2 = np.random.uniform(low=0.4, high=0.6, size=1)[0]
			x3 = np.random.uniform(low=-0.1, high=0.1, size=1)[0]
			while (x0 - 0.4)**2 + (x1 - 2)**2 + (x2 - 0.5)**2 + x3**2 > 0.04:
				x0 = np.random.uniform(low=0.3, high=0.5, size=1)[0]
				x1 = np.random.uniform(low=1.9, high=2.1, size=1)[0]
				x2 = np.random.uniform(low=0.4, high=0.6, size=1)[0]
				x3 = np.random.uniform(low=-0.1, high=0.1, size=1)[0]				
			
			self.x0 = x0
			self.x1 = x1
			self.x2 = x2
			self.x3 = x3
		else:
			self.x0 = x0
			self.x1 = x1
			self.x2 = x2
			self.x3 = x3
		
		self.t = 0
		self.state = np.array([self.x0, self.x1, self.x2, self.x3])
		return self.state

	def step(self, action):
		u = action
		self.state = self.A.dot(self.state) + self.B*u
		reward = self.design_reward()
		self.t = self.t + 1
		done = self.t == self.max_iteration
		return self.state, reward, done

	@property
	def distance(self, goal=np.array([0, 0, 0, 0])):
		dis = (np.sqrt((self.state[0] - goal[0])**2 + (self.state[1] - goal[1])**2 +
		 (self.state[2] - goal[2])**2 + (self.state[3] - goal[3])**2)) 
		return dis

	@property
	def unsafedis(self, goal=np.array([2, 2, 0, 1])):
		dist = (np.sqrt((self.state[0] - goal[0])**2 + (self.state[1] - goal[1])**2 +
		 (self.state[2] - goal[2])**2 + (self.state[3] - goal[3])**2)) 
		return dist					

	def design_reward(self):
		r = 0
		r -= self.distance
		r += 0.2*self.unsafedis
		return r


def BarrierLP(control_param, l, k, g, SVGOnly=False):

	
	objc = cp.Variable(pos=True)
	
	B = cp.Variable((1, 23)) #Barrier parameters for SOS rings
	t = cp.Parameter((1, 4)) #controller parameters
	lambda_1 = cp.Variable((1, 209))
	lambda_2 = cp.Variable((1, 209)) #Q1
	lambda_3 = cp.Variable((1, 209)) #Q2
	objective = cp.Minimize(objc)
	constraints = []

	if SVGOnly:
		constraints += [objc == 0]
	constraints += [lambda_1 >= 0]
	constraints += [lambda_2 >= 0]
	constraints += [lambda_3 >= 0]

	#-------------------The Initial Set Conditions-------------------
	constraints += [0.1*lambda_1[0, 0] - 0.4*lambda_1[0, 1] - 1.9*lambda_1[0, 2] - 0.3*lambda_1[0, 3] + 0.01*lambda_1[0, 4] + 0.16*lambda_1[0, 5] + 3.61*lambda_1[0, 6] + 0.09*lambda_1[0, 7] + 0.001*lambda_1[0, 8] - 0.064*lambda_1[0, 9] - 6.859*lambda_1[0, 10] - 0.027*lambda_1[0, 11] + 0.0001*lambda_1[0, 12] + 0.0256*lambda_1[0, 13] + 13.0321*lambda_1[0, 14] + 0.0081*lambda_1[0, 15] + 1.0e-5*lambda_1[0, 16] - 0.01024*lambda_1[0, 17] - 24.76099*lambda_1[0, 18] - 0.00243*lambda_1[0, 19] + 1.0e-6*lambda_1[0, 20] + 0.004096*lambda_1[0, 21] + 47.045881*lambda_1[0, 22] + 0.000729*lambda_1[0, 23] - 0.04*lambda_1[0, 24] - 0.19*lambda_1[0, 25] + 0.76*lambda_1[0, 26] - 0.03*lambda_1[0, 27] + 0.12*lambda_1[0, 28] + 0.57*lambda_1[0, 29] - 0.004*lambda_1[0, 30] + 0.016*lambda_1[0, 31] - 0.019*lambda_1[0, 32] - 0.304*lambda_1[0, 33] + 0.361*lambda_1[0, 34] - 1.444*lambda_1[0, 35] - 0.003*lambda_1[0, 36] - 0.048*lambda_1[0, 37] - 1.083*lambda_1[0, 38] + 0.009*lambda_1[0, 39] - 0.036*lambda_1[0, 40] - 0.171*lambda_1[0, 41] - 0.0004*lambda_1[0, 42] - 0.0064*lambda_1[0, 43] - 0.0019*lambda_1[0, 44] + 0.1216*lambda_1[0, 45] - 0.6859*lambda_1[0, 46] + 2.7436*lambda_1[0, 47] - 0.0003*lambda_1[0, 48] + 0.0192*lambda_1[0, 49] + 2.0577*lambda_1[0, 50] - 0.0027*lambda_1[0, 51] + 0.0108*lambda_1[0, 52] + 0.0513*lambda_1[0, 53] - 4.0e-5*lambda_1[0, 54] + 0.00256*lambda_1[0, 55] - 0.00019*lambda_1[0, 56] - 0.04864*lambda_1[0, 57] + 1.30321*lambda_1[0, 58] - 5.21284*lambda_1[0, 59] - 3.0e-5*lambda_1[0, 60] - 0.00768*lambda_1[0, 61] - 3.90963*lambda_1[0, 62] + 0.00081*lambda_1[0, 63] - 0.00324*lambda_1[0, 64] - 0.01539*lambda_1[0, 65] - 4.0e-6*lambda_1[0, 66] - 0.001024*lambda_1[0, 67] - 1.9e-5*lambda_1[0, 68] + 0.019456*lambda_1[0, 69] - 2.476099*lambda_1[0, 70] + 9.904396*lambda_1[0, 71] - 3.0e-6*lambda_1[0, 72] + 0.003072*lambda_1[0, 73] + 7.428297*lambda_1[0, 74] - 0.000243*lambda_1[0, 75] + 0.000972*lambda_1[0, 76] + 0.004617*lambda_1[0, 77] + 0.0016*lambda_1[0, 78] + 0.0361*lambda_1[0, 79] + 0.5776*lambda_1[0, 80] + 0.0009*lambda_1[0, 81] + 0.0144*lambda_1[0, 82] + 0.3249*lambda_1[0, 83] + 0.00016*lambda_1[0, 84] - 0.00064*lambda_1[0, 85] + 0.00361*lambda_1[0, 86] - 0.23104*lambda_1[0, 87] - 0.06859*lambda_1[0, 88] - 1.09744*lambda_1[0, 89] + 9.0e-5*lambda_1[0, 90] - 0.00576*lambda_1[0, 91] - 0.61731*lambda_1[0, 92] - 0.00027*lambda_1[0, 93] - 0.00432*lambda_1[0, 94] - 0.09747*lambda_1[0, 95] + 1.6e-5*lambda_1[0, 96] + 0.000256*lambda_1[0, 97] + 0.000361*lambda_1[0, 98] + 0.092416*lambda_1[0, 99] + 0.130321*lambda_1[0, 100] + 2.085136*lambda_1[0, 101] + 9.0e-6*lambda_1[0, 102] + 0.002304*lambda_1[0, 103] + 1.172889*lambda_1[0, 104] + 8.1e-5*lambda_1[0, 105] + 0.001296*lambda_1[0, 106] + 0.029241*lambda_1[0, 107] - 6.4e-5*lambda_1[0, 108] - 0.006859*lambda_1[0, 109] + 0.438976*lambda_1[0, 110] - 2.7e-5*lambda_1[0, 111] + 0.001728*lambda_1[0, 112] + 0.185193*lambda_1[0, 113] + 0.076*lambda_1[0, 114] + 0.012*lambda_1[0, 115] + 0.057*lambda_1[0, 116] - 0.228*lambda_1[0, 117] + 0.0076*lambda_1[0, 118] - 0.0304*lambda_1[0, 119] - 0.1444*lambda_1[0, 120] + 0.0012*lambda_1[0, 121] - 0.0048*lambda_1[0, 122] + 0.0057*lambda_1[0, 123] + 0.0912*lambda_1[0, 124] - 0.1083*lambda_1[0, 125] + 0.4332*lambda_1[0, 126] - 0.0036*lambda_1[0, 127] - 0.0171*lambda_1[0, 128] + 0.0684*lambda_1[0, 129] + 0.00076*lambda_1[0, 130] + 0.01216*lambda_1[0, 131] + 0.27436*lambda_1[0, 132] + 0.00012*lambda_1[0, 133] + 0.00192*lambda_1[0, 134] + 0.00057*lambda_1[0, 135] - 0.03648*lambda_1[0, 136] + 0.20577*lambda_1[0, 137] - 0.82308*lambda_1[0, 138] + 0.00108*lambda_1[0, 139] + 0.00513*lambda_1[0, 140] - 0.02052*lambda_1[0, 141] + 7.6e-5*lambda_1[0, 142] - 0.004864*lambda_1[0, 143] - 0.521284*lambda_1[0, 144] + 1.2e-5*lambda_1[0, 145] - 0.000768*lambda_1[0, 146] + 5.7e-5*lambda_1[0, 147] + 0.014592*lambda_1[0, 148] - 0.390963*lambda_1[0, 149] + 1.563852*lambda_1[0, 150] - 0.000324*lambda_1[0, 151] - 0.001539*lambda_1[0, 152] + 0.006156*lambda_1[0, 153] - 0.00304*lambda_1[0, 154] - 0.01444*lambda_1[0, 155] + 0.05776*lambda_1[0, 156] - 0.00048*lambda_1[0, 157] - 0.01083*lambda_1[0, 158] - 0.17328*lambda_1[0, 159] - 0.00036*lambda_1[0, 160] + 0.00144*lambda_1[0, 161] - 0.00171*lambda_1[0, 162] - 0.02736*lambda_1[0, 163] + 0.03249*lambda_1[0, 164] - 0.12996*lambda_1[0, 165] - 0.000304*lambda_1[0, 166] + 0.001216*lambda_1[0, 167] - 0.001444*lambda_1[0, 168] - 0.023104*lambda_1[0, 169] + 0.027436*lambda_1[0, 170] - 0.109744*lambda_1[0, 171] - 4.8e-5*lambda_1[0, 172] + 0.000192*lambda_1[0, 173] - 0.001083*lambda_1[0, 174] + 0.069312*lambda_1[0, 175] + 0.020577*lambda_1[0, 176] + 0.329232*lambda_1[0, 177] - 3.6e-5*lambda_1[0, 178] - 0.000576*lambda_1[0, 179] - 0.000171*lambda_1[0, 180] + 0.010944*lambda_1[0, 181] - 0.061731*lambda_1[0, 182] + 0.246924*lambda_1[0, 183] + 0.000108*lambda_1[0, 184] - 0.000432*lambda_1[0, 185] + 0.000513*lambda_1[0, 186] + 0.008208*lambda_1[0, 187] - 0.009747*lambda_1[0, 188] + 0.038988*lambda_1[0, 189] + 0.005776*lambda_1[0, 190] + 0.000144*lambda_1[0, 191] + 0.003249*lambda_1[0, 192] + 0.051984*lambda_1[0, 193] - 0.0228*lambda_1[0, 194] - 0.00228*lambda_1[0, 195] + 0.00912*lambda_1[0, 196] + 0.04332*lambda_1[0, 197] + 0.00684*lambda_1[0, 198] - 0.000228*lambda_1[0, 199] - 0.003648*lambda_1[0, 200] - 0.082308*lambda_1[0, 201] - 0.002052*lambda_1[0, 202] + 0.000912*lambda_1[0, 203] + 0.004332*lambda_1[0, 204] - 0.017328*lambda_1[0, 205] + 0.000684*lambda_1[0, 206] - 0.002736*lambda_1[0, 207] - 0.012996*lambda_1[0, 208] <= B[0, 0]+ objc]
	constraints += [0.1*lambda_1[0, 0] - 0.4*lambda_1[0, 1] - 1.9*lambda_1[0, 2] - 0.3*lambda_1[0, 3] + 0.01*lambda_1[0, 4] + 0.16*lambda_1[0, 5] + 3.61*lambda_1[0, 6] + 0.09*lambda_1[0, 7] + 0.001*lambda_1[0, 8] - 0.064*lambda_1[0, 9] - 6.859*lambda_1[0, 10] - 0.027*lambda_1[0, 11] + 0.0001*lambda_1[0, 12] + 0.0256*lambda_1[0, 13] + 13.0321*lambda_1[0, 14] + 0.0081*lambda_1[0, 15] + 1.0e-5*lambda_1[0, 16] - 0.01024*lambda_1[0, 17] - 24.76099*lambda_1[0, 18] - 0.00243*lambda_1[0, 19] + 1.0e-6*lambda_1[0, 20] + 0.004096*lambda_1[0, 21] + 47.045881*lambda_1[0, 22] + 0.000729*lambda_1[0, 23] - 0.04*lambda_1[0, 24] - 0.19*lambda_1[0, 25] + 0.76*lambda_1[0, 26] - 0.03*lambda_1[0, 27] + 0.12*lambda_1[0, 28] + 0.57*lambda_1[0, 29] - 0.004*lambda_1[0, 30] + 0.016*lambda_1[0, 31] - 0.019*lambda_1[0, 32] - 0.304*lambda_1[0, 33] + 0.361*lambda_1[0, 34] - 1.444*lambda_1[0, 35] - 0.003*lambda_1[0, 36] - 0.048*lambda_1[0, 37] - 1.083*lambda_1[0, 38] + 0.009*lambda_1[0, 39] - 0.036*lambda_1[0, 40] - 0.171*lambda_1[0, 41] - 0.0004*lambda_1[0, 42] - 0.0064*lambda_1[0, 43] - 0.0019*lambda_1[0, 44] + 0.1216*lambda_1[0, 45] - 0.6859*lambda_1[0, 46] + 2.7436*lambda_1[0, 47] - 0.0003*lambda_1[0, 48] + 0.0192*lambda_1[0, 49] + 2.0577*lambda_1[0, 50] - 0.0027*lambda_1[0, 51] + 0.0108*lambda_1[0, 52] + 0.0513*lambda_1[0, 53] - 4.0e-5*lambda_1[0, 54] + 0.00256*lambda_1[0, 55] - 0.00019*lambda_1[0, 56] - 0.04864*lambda_1[0, 57] + 1.30321*lambda_1[0, 58] - 5.21284*lambda_1[0, 59] - 3.0e-5*lambda_1[0, 60] - 0.00768*lambda_1[0, 61] - 3.90963*lambda_1[0, 62] + 0.00081*lambda_1[0, 63] - 0.00324*lambda_1[0, 64] - 0.01539*lambda_1[0, 65] - 4.0e-6*lambda_1[0, 66] - 0.001024*lambda_1[0, 67] - 1.9e-5*lambda_1[0, 68] + 0.019456*lambda_1[0, 69] - 2.476099*lambda_1[0, 70] + 9.904396*lambda_1[0, 71] - 3.0e-6*lambda_1[0, 72] + 0.003072*lambda_1[0, 73] + 7.428297*lambda_1[0, 74] - 0.000243*lambda_1[0, 75] + 0.000972*lambda_1[0, 76] + 0.004617*lambda_1[0, 77] + 0.0016*lambda_1[0, 78] + 0.0361*lambda_1[0, 79] + 0.5776*lambda_1[0, 80] + 0.0009*lambda_1[0, 81] + 0.0144*lambda_1[0, 82] + 0.3249*lambda_1[0, 83] + 0.00016*lambda_1[0, 84] - 0.00064*lambda_1[0, 85] + 0.00361*lambda_1[0, 86] - 0.23104*lambda_1[0, 87] - 0.06859*lambda_1[0, 88] - 1.09744*lambda_1[0, 89] + 9.0e-5*lambda_1[0, 90] - 0.00576*lambda_1[0, 91] - 0.61731*lambda_1[0, 92] - 0.00027*lambda_1[0, 93] - 0.00432*lambda_1[0, 94] - 0.09747*lambda_1[0, 95] + 1.6e-5*lambda_1[0, 96] + 0.000256*lambda_1[0, 97] + 0.000361*lambda_1[0, 98] + 0.092416*lambda_1[0, 99] + 0.130321*lambda_1[0, 100] + 2.085136*lambda_1[0, 101] + 9.0e-6*lambda_1[0, 102] + 0.002304*lambda_1[0, 103] + 1.172889*lambda_1[0, 104] + 8.1e-5*lambda_1[0, 105] + 0.001296*lambda_1[0, 106] + 0.029241*lambda_1[0, 107] - 6.4e-5*lambda_1[0, 108] - 0.006859*lambda_1[0, 109] + 0.438976*lambda_1[0, 110] - 2.7e-5*lambda_1[0, 111] + 0.001728*lambda_1[0, 112] + 0.185193*lambda_1[0, 113] + 0.076*lambda_1[0, 114] + 0.012*lambda_1[0, 115] + 0.057*lambda_1[0, 116] - 0.228*lambda_1[0, 117] + 0.0076*lambda_1[0, 118] - 0.0304*lambda_1[0, 119] - 0.1444*lambda_1[0, 120] + 0.0012*lambda_1[0, 121] - 0.0048*lambda_1[0, 122] + 0.0057*lambda_1[0, 123] + 0.0912*lambda_1[0, 124] - 0.1083*lambda_1[0, 125] + 0.4332*lambda_1[0, 126] - 0.0036*lambda_1[0, 127] - 0.0171*lambda_1[0, 128] + 0.0684*lambda_1[0, 129] + 0.00076*lambda_1[0, 130] + 0.01216*lambda_1[0, 131] + 0.27436*lambda_1[0, 132] + 0.00012*lambda_1[0, 133] + 0.00192*lambda_1[0, 134] + 0.00057*lambda_1[0, 135] - 0.03648*lambda_1[0, 136] + 0.20577*lambda_1[0, 137] - 0.82308*lambda_1[0, 138] + 0.00108*lambda_1[0, 139] + 0.00513*lambda_1[0, 140] - 0.02052*lambda_1[0, 141] + 7.6e-5*lambda_1[0, 142] - 0.004864*lambda_1[0, 143] - 0.521284*lambda_1[0, 144] + 1.2e-5*lambda_1[0, 145] - 0.000768*lambda_1[0, 146] + 5.7e-5*lambda_1[0, 147] + 0.014592*lambda_1[0, 148] - 0.390963*lambda_1[0, 149] + 1.563852*lambda_1[0, 150] - 0.000324*lambda_1[0, 151] - 0.001539*lambda_1[0, 152] + 0.006156*lambda_1[0, 153] - 0.00304*lambda_1[0, 154] - 0.01444*lambda_1[0, 155] + 0.05776*lambda_1[0, 156] - 0.00048*lambda_1[0, 157] - 0.01083*lambda_1[0, 158] - 0.17328*lambda_1[0, 159] - 0.00036*lambda_1[0, 160] + 0.00144*lambda_1[0, 161] - 0.00171*lambda_1[0, 162] - 0.02736*lambda_1[0, 163] + 0.03249*lambda_1[0, 164] - 0.12996*lambda_1[0, 165] - 0.000304*lambda_1[0, 166] + 0.001216*lambda_1[0, 167] - 0.001444*lambda_1[0, 168] - 0.023104*lambda_1[0, 169] + 0.027436*lambda_1[0, 170] - 0.109744*lambda_1[0, 171] - 4.8e-5*lambda_1[0, 172] + 0.000192*lambda_1[0, 173] - 0.001083*lambda_1[0, 174] + 0.069312*lambda_1[0, 175] + 0.020577*lambda_1[0, 176] + 0.329232*lambda_1[0, 177] - 3.6e-5*lambda_1[0, 178] - 0.000576*lambda_1[0, 179] - 0.000171*lambda_1[0, 180] + 0.010944*lambda_1[0, 181] - 0.061731*lambda_1[0, 182] + 0.246924*lambda_1[0, 183] + 0.000108*lambda_1[0, 184] - 0.000432*lambda_1[0, 185] + 0.000513*lambda_1[0, 186] + 0.008208*lambda_1[0, 187] - 0.009747*lambda_1[0, 188] + 0.038988*lambda_1[0, 189] + 0.005776*lambda_1[0, 190] + 0.000144*lambda_1[0, 191] + 0.003249*lambda_1[0, 192] + 0.051984*lambda_1[0, 193] - 0.0228*lambda_1[0, 194] - 0.00228*lambda_1[0, 195] + 0.00912*lambda_1[0, 196] + 0.04332*lambda_1[0, 197] + 0.00684*lambda_1[0, 198] - 0.000228*lambda_1[0, 199] - 0.003648*lambda_1[0, 200] - 0.082308*lambda_1[0, 201] - 0.002052*lambda_1[0, 202] + 0.000912*lambda_1[0, 203] + 0.004332*lambda_1[0, 204] - 0.017328*lambda_1[0, 205] + 0.000684*lambda_1[0, 206] - 0.002736*lambda_1[0, 207] - 0.012996*lambda_1[0, 208] >= B[0, 0]- objc]
	constraints += [lambda_1[0, 0] + 0.2*lambda_1[0, 4] + 0.03*lambda_1[0, 8] + 0.004*lambda_1[0, 12] + 0.0005*lambda_1[0, 16] + 6.0e-5*lambda_1[0, 20] - 0.4*lambda_1[0, 24] - 1.9*lambda_1[0, 25] - 0.3*lambda_1[0, 27] - 0.08*lambda_1[0, 30] + 0.16*lambda_1[0, 31] - 0.38*lambda_1[0, 32] + 3.61*lambda_1[0, 34] - 0.06*lambda_1[0, 36] + 0.09*lambda_1[0, 39] - 0.012*lambda_1[0, 42] - 0.064*lambda_1[0, 43] - 0.057*lambda_1[0, 44] - 6.859*lambda_1[0, 46] - 0.009*lambda_1[0, 48] - 0.027*lambda_1[0, 51] - 0.0016*lambda_1[0, 54] + 0.0256*lambda_1[0, 55] - 0.0076*lambda_1[0, 56] + 13.0321*lambda_1[0, 58] - 0.0012*lambda_1[0, 60] + 0.0081*lambda_1[0, 63] - 0.0002*lambda_1[0, 66] - 0.01024*lambda_1[0, 67] - 0.00095*lambda_1[0, 68] - 24.76099*lambda_1[0, 70] - 0.00015*lambda_1[0, 72] - 0.00243*lambda_1[0, 75] + 0.032*lambda_1[0, 78] + 0.722*lambda_1[0, 79] + 0.018*lambda_1[0, 81] + 0.0048*lambda_1[0, 84] - 0.0128*lambda_1[0, 85] + 0.1083*lambda_1[0, 86] - 1.3718*lambda_1[0, 88] + 0.0027*lambda_1[0, 90] - 0.0054*lambda_1[0, 93] + 0.00064*lambda_1[0, 96] + 0.00512*lambda_1[0, 97] + 0.01444*lambda_1[0, 98] + 2.60642*lambda_1[0, 100] + 0.00036*lambda_1[0, 102] + 0.00162*lambda_1[0, 105] - 0.00192*lambda_1[0, 108] - 0.20577*lambda_1[0, 109] - 0.00081*lambda_1[0, 111] + 0.76*lambda_1[0, 114] + 0.12*lambda_1[0, 115] + 0.57*lambda_1[0, 116] + 0.152*lambda_1[0, 118] - 0.304*lambda_1[0, 119] - 1.444*lambda_1[0, 120] + 0.024*lambda_1[0, 121] - 0.048*lambda_1[0, 122] + 0.114*lambda_1[0, 123] - 1.083*lambda_1[0, 125] - 0.036*lambda_1[0, 127] - 0.171*lambda_1[0, 128] + 0.0228*lambda_1[0, 130] + 0.1216*lambda_1[0, 131] + 2.7436*lambda_1[0, 132] + 0.0036*lambda_1[0, 133] + 0.0192*lambda_1[0, 134] + 0.0171*lambda_1[0, 135] + 2.0577*lambda_1[0, 137] + 0.0108*lambda_1[0, 139] + 0.0513*lambda_1[0, 140] + 0.00304*lambda_1[0, 142] - 0.04864*lambda_1[0, 143] - 5.21284*lambda_1[0, 144] + 0.00048*lambda_1[0, 145] - 0.00768*lambda_1[0, 146] + 0.00228*lambda_1[0, 147] - 3.90963*lambda_1[0, 149] - 0.00324*lambda_1[0, 151] - 0.01539*lambda_1[0, 152] - 0.0608*lambda_1[0, 154] - 0.2888*lambda_1[0, 155] + 0.5776*lambda_1[0, 156] - 0.0096*lambda_1[0, 157] - 0.2166*lambda_1[0, 158] - 0.0072*lambda_1[0, 160] + 0.0144*lambda_1[0, 161] - 0.0342*lambda_1[0, 162] + 0.3249*lambda_1[0, 164] - 0.00912*lambda_1[0, 166] + 0.02432*lambda_1[0, 167] - 0.04332*lambda_1[0, 168] - 0.23104*lambda_1[0, 169] + 0.54872*lambda_1[0, 170] - 1.09744*lambda_1[0, 171] - 0.00144*lambda_1[0, 172] + 0.00384*lambda_1[0, 173] - 0.03249*lambda_1[0, 174] + 0.41154*lambda_1[0, 176] - 0.00108*lambda_1[0, 178] - 0.00576*lambda_1[0, 179] - 0.00513*lambda_1[0, 180] - 0.61731*lambda_1[0, 182] + 0.00216*lambda_1[0, 184] - 0.00432*lambda_1[0, 185] + 0.01026*lambda_1[0, 186] - 0.09747*lambda_1[0, 188] + 0.11552*lambda_1[0, 190] + 0.00288*lambda_1[0, 191] + 0.06498*lambda_1[0, 192] - 0.228*lambda_1[0, 194] - 0.0456*lambda_1[0, 195] + 0.0912*lambda_1[0, 196] + 0.4332*lambda_1[0, 197] + 0.0684*lambda_1[0, 198] - 0.00684*lambda_1[0, 199] - 0.03648*lambda_1[0, 200] - 0.82308*lambda_1[0, 201] - 0.02052*lambda_1[0, 202] + 0.01824*lambda_1[0, 203] + 0.08664*lambda_1[0, 204] - 0.17328*lambda_1[0, 205] + 0.01368*lambda_1[0, 206] - 0.02736*lambda_1[0, 207] - 0.12996*lambda_1[0, 208] <= B[0, 4]+ objc]
	constraints += [lambda_1[0, 0] + 0.2*lambda_1[0, 4] + 0.03*lambda_1[0, 8] + 0.004*lambda_1[0, 12] + 0.0005*lambda_1[0, 16] + 6.0e-5*lambda_1[0, 20] - 0.4*lambda_1[0, 24] - 1.9*lambda_1[0, 25] - 0.3*lambda_1[0, 27] - 0.08*lambda_1[0, 30] + 0.16*lambda_1[0, 31] - 0.38*lambda_1[0, 32] + 3.61*lambda_1[0, 34] - 0.06*lambda_1[0, 36] + 0.09*lambda_1[0, 39] - 0.012*lambda_1[0, 42] - 0.064*lambda_1[0, 43] - 0.057*lambda_1[0, 44] - 6.859*lambda_1[0, 46] - 0.009*lambda_1[0, 48] - 0.027*lambda_1[0, 51] - 0.0016*lambda_1[0, 54] + 0.0256*lambda_1[0, 55] - 0.0076*lambda_1[0, 56] + 13.0321*lambda_1[0, 58] - 0.0012*lambda_1[0, 60] + 0.0081*lambda_1[0, 63] - 0.0002*lambda_1[0, 66] - 0.01024*lambda_1[0, 67] - 0.00095*lambda_1[0, 68] - 24.76099*lambda_1[0, 70] - 0.00015*lambda_1[0, 72] - 0.00243*lambda_1[0, 75] + 0.032*lambda_1[0, 78] + 0.722*lambda_1[0, 79] + 0.018*lambda_1[0, 81] + 0.0048*lambda_1[0, 84] - 0.0128*lambda_1[0, 85] + 0.1083*lambda_1[0, 86] - 1.3718*lambda_1[0, 88] + 0.0027*lambda_1[0, 90] - 0.0054*lambda_1[0, 93] + 0.00064*lambda_1[0, 96] + 0.00512*lambda_1[0, 97] + 0.01444*lambda_1[0, 98] + 2.60642*lambda_1[0, 100] + 0.00036*lambda_1[0, 102] + 0.00162*lambda_1[0, 105] - 0.00192*lambda_1[0, 108] - 0.20577*lambda_1[0, 109] - 0.00081*lambda_1[0, 111] + 0.76*lambda_1[0, 114] + 0.12*lambda_1[0, 115] + 0.57*lambda_1[0, 116] + 0.152*lambda_1[0, 118] - 0.304*lambda_1[0, 119] - 1.444*lambda_1[0, 120] + 0.024*lambda_1[0, 121] - 0.048*lambda_1[0, 122] + 0.114*lambda_1[0, 123] - 1.083*lambda_1[0, 125] - 0.036*lambda_1[0, 127] - 0.171*lambda_1[0, 128] + 0.0228*lambda_1[0, 130] + 0.1216*lambda_1[0, 131] + 2.7436*lambda_1[0, 132] + 0.0036*lambda_1[0, 133] + 0.0192*lambda_1[0, 134] + 0.0171*lambda_1[0, 135] + 2.0577*lambda_1[0, 137] + 0.0108*lambda_1[0, 139] + 0.0513*lambda_1[0, 140] + 0.00304*lambda_1[0, 142] - 0.04864*lambda_1[0, 143] - 5.21284*lambda_1[0, 144] + 0.00048*lambda_1[0, 145] - 0.00768*lambda_1[0, 146] + 0.00228*lambda_1[0, 147] - 3.90963*lambda_1[0, 149] - 0.00324*lambda_1[0, 151] - 0.01539*lambda_1[0, 152] - 0.0608*lambda_1[0, 154] - 0.2888*lambda_1[0, 155] + 0.5776*lambda_1[0, 156] - 0.0096*lambda_1[0, 157] - 0.2166*lambda_1[0, 158] - 0.0072*lambda_1[0, 160] + 0.0144*lambda_1[0, 161] - 0.0342*lambda_1[0, 162] + 0.3249*lambda_1[0, 164] - 0.00912*lambda_1[0, 166] + 0.02432*lambda_1[0, 167] - 0.04332*lambda_1[0, 168] - 0.23104*lambda_1[0, 169] + 0.54872*lambda_1[0, 170] - 1.09744*lambda_1[0, 171] - 0.00144*lambda_1[0, 172] + 0.00384*lambda_1[0, 173] - 0.03249*lambda_1[0, 174] + 0.41154*lambda_1[0, 176] - 0.00108*lambda_1[0, 178] - 0.00576*lambda_1[0, 179] - 0.00513*lambda_1[0, 180] - 0.61731*lambda_1[0, 182] + 0.00216*lambda_1[0, 184] - 0.00432*lambda_1[0, 185] + 0.01026*lambda_1[0, 186] - 0.09747*lambda_1[0, 188] + 0.11552*lambda_1[0, 190] + 0.00288*lambda_1[0, 191] + 0.06498*lambda_1[0, 192] - 0.228*lambda_1[0, 194] - 0.0456*lambda_1[0, 195] + 0.0912*lambda_1[0, 196] + 0.4332*lambda_1[0, 197] + 0.0684*lambda_1[0, 198] - 0.00684*lambda_1[0, 199] - 0.03648*lambda_1[0, 200] - 0.82308*lambda_1[0, 201] - 0.02052*lambda_1[0, 202] + 0.01824*lambda_1[0, 203] + 0.08664*lambda_1[0, 204] - 0.17328*lambda_1[0, 205] + 0.01368*lambda_1[0, 206] - 0.02736*lambda_1[0, 207] - 0.12996*lambda_1[0, 208] >= B[0, 4]- objc]
	constraints += [lambda_1[0, 4] + 0.3*lambda_1[0, 8] + 0.06*lambda_1[0, 12] + 0.01*lambda_1[0, 16] + 0.0015*lambda_1[0, 20] - 0.4*lambda_1[0, 30] - 1.9*lambda_1[0, 32] - 0.3*lambda_1[0, 36] - 0.12*lambda_1[0, 42] - 0.57*lambda_1[0, 44] - 0.09*lambda_1[0, 48] - 0.024*lambda_1[0, 54] - 0.114*lambda_1[0, 56] - 0.018*lambda_1[0, 60] - 0.004*lambda_1[0, 66] - 0.019*lambda_1[0, 68] - 0.003*lambda_1[0, 72] + 0.16*lambda_1[0, 78] + 3.61*lambda_1[0, 79] + 0.09*lambda_1[0, 81] + 0.048*lambda_1[0, 84] - 0.064*lambda_1[0, 85] + 1.083*lambda_1[0, 86] - 6.859*lambda_1[0, 88] + 0.027*lambda_1[0, 90] - 0.027*lambda_1[0, 93] + 0.0096*lambda_1[0, 96] + 0.0256*lambda_1[0, 97] + 0.2166*lambda_1[0, 98] + 13.0321*lambda_1[0, 100] + 0.0054*lambda_1[0, 102] + 0.0081*lambda_1[0, 105] - 0.0192*lambda_1[0, 108] - 2.0577*lambda_1[0, 109] - 0.0081*lambda_1[0, 111] + 0.76*lambda_1[0, 118] + 0.12*lambda_1[0, 121] + 0.57*lambda_1[0, 123] + 0.228*lambda_1[0, 130] + 0.036*lambda_1[0, 133] + 0.171*lambda_1[0, 135] + 0.0456*lambda_1[0, 142] + 0.0072*lambda_1[0, 145] + 0.0342*lambda_1[0, 147] - 0.304*lambda_1[0, 154] - 1.444*lambda_1[0, 155] - 0.048*lambda_1[0, 157] - 1.083*lambda_1[0, 158] - 0.036*lambda_1[0, 160] - 0.171*lambda_1[0, 162] - 0.0912*lambda_1[0, 166] + 0.1216*lambda_1[0, 167] - 0.4332*lambda_1[0, 168] + 2.7436*lambda_1[0, 170] - 0.0144*lambda_1[0, 172] + 0.0192*lambda_1[0, 173] - 0.3249*lambda_1[0, 174] + 2.0577*lambda_1[0, 176] - 0.0108*lambda_1[0, 178] - 0.0513*lambda_1[0, 180] + 0.0108*lambda_1[0, 184] + 0.0513*lambda_1[0, 186] + 0.5776*lambda_1[0, 190] + 0.0144*lambda_1[0, 191] + 0.3249*lambda_1[0, 192] - 0.228*lambda_1[0, 195] - 0.0684*lambda_1[0, 199] + 0.0912*lambda_1[0, 203] + 0.4332*lambda_1[0, 204] + 0.0684*lambda_1[0, 206] <= B[0, 14]+ objc]
	constraints += [lambda_1[0, 4] + 0.3*lambda_1[0, 8] + 0.06*lambda_1[0, 12] + 0.01*lambda_1[0, 16] + 0.0015*lambda_1[0, 20] - 0.4*lambda_1[0, 30] - 1.9*lambda_1[0, 32] - 0.3*lambda_1[0, 36] - 0.12*lambda_1[0, 42] - 0.57*lambda_1[0, 44] - 0.09*lambda_1[0, 48] - 0.024*lambda_1[0, 54] - 0.114*lambda_1[0, 56] - 0.018*lambda_1[0, 60] - 0.004*lambda_1[0, 66] - 0.019*lambda_1[0, 68] - 0.003*lambda_1[0, 72] + 0.16*lambda_1[0, 78] + 3.61*lambda_1[0, 79] + 0.09*lambda_1[0, 81] + 0.048*lambda_1[0, 84] - 0.064*lambda_1[0, 85] + 1.083*lambda_1[0, 86] - 6.859*lambda_1[0, 88] + 0.027*lambda_1[0, 90] - 0.027*lambda_1[0, 93] + 0.0096*lambda_1[0, 96] + 0.0256*lambda_1[0, 97] + 0.2166*lambda_1[0, 98] + 13.0321*lambda_1[0, 100] + 0.0054*lambda_1[0, 102] + 0.0081*lambda_1[0, 105] - 0.0192*lambda_1[0, 108] - 2.0577*lambda_1[0, 109] - 0.0081*lambda_1[0, 111] + 0.76*lambda_1[0, 118] + 0.12*lambda_1[0, 121] + 0.57*lambda_1[0, 123] + 0.228*lambda_1[0, 130] + 0.036*lambda_1[0, 133] + 0.171*lambda_1[0, 135] + 0.0456*lambda_1[0, 142] + 0.0072*lambda_1[0, 145] + 0.0342*lambda_1[0, 147] - 0.304*lambda_1[0, 154] - 1.444*lambda_1[0, 155] - 0.048*lambda_1[0, 157] - 1.083*lambda_1[0, 158] - 0.036*lambda_1[0, 160] - 0.171*lambda_1[0, 162] - 0.0912*lambda_1[0, 166] + 0.1216*lambda_1[0, 167] - 0.4332*lambda_1[0, 168] + 2.7436*lambda_1[0, 170] - 0.0144*lambda_1[0, 172] + 0.0192*lambda_1[0, 173] - 0.3249*lambda_1[0, 174] + 2.0577*lambda_1[0, 176] - 0.0108*lambda_1[0, 178] - 0.0513*lambda_1[0, 180] + 0.0108*lambda_1[0, 184] + 0.0513*lambda_1[0, 186] + 0.5776*lambda_1[0, 190] + 0.0144*lambda_1[0, 191] + 0.3249*lambda_1[0, 192] - 0.228*lambda_1[0, 195] - 0.0684*lambda_1[0, 199] + 0.0912*lambda_1[0, 203] + 0.4332*lambda_1[0, 204] + 0.0684*lambda_1[0, 206] >= B[0, 14]- objc]
	constraints += [lambda_1[0, 8] + 0.4*lambda_1[0, 12] + 0.1*lambda_1[0, 16] + 0.02*lambda_1[0, 20] - 0.4*lambda_1[0, 42] - 1.9*lambda_1[0, 44] - 0.3*lambda_1[0, 48] - 0.16*lambda_1[0, 54] - 0.76*lambda_1[0, 56] - 0.12*lambda_1[0, 60] - 0.04*lambda_1[0, 66] - 0.19*lambda_1[0, 68] - 0.03*lambda_1[0, 72] + 0.16*lambda_1[0, 84] + 3.61*lambda_1[0, 86] + 0.09*lambda_1[0, 90] + 0.064*lambda_1[0, 96] + 1.444*lambda_1[0, 98] + 0.036*lambda_1[0, 102] - 0.064*lambda_1[0, 108] - 6.859*lambda_1[0, 109] - 0.027*lambda_1[0, 111] + 0.76*lambda_1[0, 130] + 0.12*lambda_1[0, 133] + 0.57*lambda_1[0, 135] + 0.304*lambda_1[0, 142] + 0.048*lambda_1[0, 145] + 0.228*lambda_1[0, 147] - 0.304*lambda_1[0, 166] - 1.444*lambda_1[0, 168] - 0.048*lambda_1[0, 172] - 1.083*lambda_1[0, 174] - 0.036*lambda_1[0, 178] - 0.171*lambda_1[0, 180] - 0.228*lambda_1[0, 199] == 0]
	constraints += [lambda_1[0, 12] + 0.5*lambda_1[0, 16] + 0.15*lambda_1[0, 20] - 0.4*lambda_1[0, 54] - 1.9*lambda_1[0, 56] - 0.3*lambda_1[0, 60] - 0.2*lambda_1[0, 66] - 0.95*lambda_1[0, 68] - 0.15*lambda_1[0, 72] + 0.16*lambda_1[0, 96] + 3.61*lambda_1[0, 98] + 0.09*lambda_1[0, 102] + 0.76*lambda_1[0, 142] + 0.12*lambda_1[0, 145] + 0.57*lambda_1[0, 147] <= B[0, 18]+ objc]
	constraints += [lambda_1[0, 12] + 0.5*lambda_1[0, 16] + 0.15*lambda_1[0, 20] - 0.4*lambda_1[0, 54] - 1.9*lambda_1[0, 56] - 0.3*lambda_1[0, 60] - 0.2*lambda_1[0, 66] - 0.95*lambda_1[0, 68] - 0.15*lambda_1[0, 72] + 0.16*lambda_1[0, 96] + 3.61*lambda_1[0, 98] + 0.09*lambda_1[0, 102] + 0.76*lambda_1[0, 142] + 0.12*lambda_1[0, 145] + 0.57*lambda_1[0, 147] >= B[0, 18]- objc]
	constraints += [lambda_1[0, 16] + 0.6*lambda_1[0, 20] - 0.4*lambda_1[0, 66] - 1.9*lambda_1[0, 68] - 0.3*lambda_1[0, 72] == 0]
	constraints += [lambda_1[0, 20] <= B[0, 22]+ objc]
	constraints += [lambda_1[0, 20] >= B[0, 22]- objc]
	constraints += [lambda_1[0, 1] - 0.8*lambda_1[0, 5] + 0.48*lambda_1[0, 9] - 0.256*lambda_1[0, 13] + 0.128*lambda_1[0, 17] - 0.06144*lambda_1[0, 21] + 0.1*lambda_1[0, 24] - 1.9*lambda_1[0, 26] - 0.3*lambda_1[0, 28] + 0.01*lambda_1[0, 30] - 0.08*lambda_1[0, 31] + 1.52*lambda_1[0, 33] + 3.61*lambda_1[0, 35] + 0.24*lambda_1[0, 37] + 0.09*lambda_1[0, 40] + 0.001*lambda_1[0, 42] + 0.048*lambda_1[0, 43] - 0.912*lambda_1[0, 45] - 6.859*lambda_1[0, 47] - 0.144*lambda_1[0, 49] - 0.027*lambda_1[0, 52] + 0.0001*lambda_1[0, 54] - 0.0256*lambda_1[0, 55] + 0.4864*lambda_1[0, 57] + 13.0321*lambda_1[0, 59] + 0.0768*lambda_1[0, 61] + 0.0081*lambda_1[0, 64] + 1.0e-5*lambda_1[0, 66] + 0.0128*lambda_1[0, 67] - 0.2432*lambda_1[0, 69] - 24.76099*lambda_1[0, 71] - 0.0384*lambda_1[0, 73] - 0.00243*lambda_1[0, 76] - 0.008*lambda_1[0, 78] - 2.888*lambda_1[0, 80] - 0.072*lambda_1[0, 82] - 0.0008*lambda_1[0, 84] + 0.0048*lambda_1[0, 85] + 1.7328*lambda_1[0, 87] + 5.4872*lambda_1[0, 89] + 0.0432*lambda_1[0, 91] + 0.0216*lambda_1[0, 94] - 8.0e-5*lambda_1[0, 96] - 0.00256*lambda_1[0, 97] - 0.92416*lambda_1[0, 99] - 10.42568*lambda_1[0, 101] - 0.02304*lambda_1[0, 103] - 0.00648*lambda_1[0, 106] + 0.00048*lambda_1[0, 108] - 3.29232*lambda_1[0, 110] - 0.01296*lambda_1[0, 112] - 0.19*lambda_1[0, 114] - 0.03*lambda_1[0, 115] + 0.57*lambda_1[0, 117] - 0.019*lambda_1[0, 118] + 0.152*lambda_1[0, 119] + 0.361*lambda_1[0, 120] - 0.003*lambda_1[0, 121] + 0.024*lambda_1[0, 122] - 0.456*lambda_1[0, 124] - 1.083*lambda_1[0, 126] + 0.009*lambda_1[0, 127] - 0.171*lambda_1[0, 129] - 0.0019*lambda_1[0, 130] - 0.0912*lambda_1[0, 131] - 0.6859*lambda_1[0, 132] - 0.0003*lambda_1[0, 133] - 0.0144*lambda_1[0, 134] + 0.2736*lambda_1[0, 136] + 2.0577*lambda_1[0, 138] - 0.0027*lambda_1[0, 139] + 0.0513*lambda_1[0, 141] - 0.00019*lambda_1[0, 142] + 0.04864*lambda_1[0, 143] + 1.30321*lambda_1[0, 144] - 3.0e-5*lambda_1[0, 145] + 0.00768*lambda_1[0, 146] - 0.14592*lambda_1[0, 148] - 3.90963*lambda_1[0, 150] + 0.00081*lambda_1[0, 151] - 0.01539*lambda_1[0, 153] + 0.0152*lambda_1[0, 154] + 0.0361*lambda_1[0, 155] - 0.2888*lambda_1[0, 156] + 0.0024*lambda_1[0, 157] + 0.8664*lambda_1[0, 159] + 0.0009*lambda_1[0, 160] - 0.0072*lambda_1[0, 161] + 0.1368*lambda_1[0, 163] + 0.3249*lambda_1[0, 165] + 0.00152*lambda_1[0, 166] - 0.00912*lambda_1[0, 167] + 0.00361*lambda_1[0, 168] + 0.17328*lambda_1[0, 169] - 0.06859*lambda_1[0, 170] + 0.54872*lambda_1[0, 171] + 0.00024*lambda_1[0, 172] - 0.00144*lambda_1[0, 173] - 0.51984*lambda_1[0, 175] - 1.64616*lambda_1[0, 177] + 9.0e-5*lambda_1[0, 178] + 0.00432*lambda_1[0, 179] - 0.08208*lambda_1[0, 181] - 0.61731*lambda_1[0, 183] - 0.00027*lambda_1[0, 184] + 0.00216*lambda_1[0, 185] - 0.04104*lambda_1[0, 187] - 0.09747*lambda_1[0, 189] - 0.02888*lambda_1[0, 190] - 0.00072*lambda_1[0, 191] - 0.25992*lambda_1[0, 193] + 0.057*lambda_1[0, 194] + 0.0057*lambda_1[0, 195] - 0.0456*lambda_1[0, 196] - 0.1083*lambda_1[0, 197] - 0.0171*lambda_1[0, 198] + 0.00057*lambda_1[0, 199] + 0.02736*lambda_1[0, 200] + 0.20577*lambda_1[0, 201] + 0.00513*lambda_1[0, 202] - 0.00456*lambda_1[0, 203] - 0.01083*lambda_1[0, 204] + 0.08664*lambda_1[0, 205] - 0.00171*lambda_1[0, 206] + 0.01368*lambda_1[0, 207] + 0.03249*lambda_1[0, 208] <= B[0, 3]+ objc]
	constraints += [lambda_1[0, 1] - 0.8*lambda_1[0, 5] + 0.48*lambda_1[0, 9] - 0.256*lambda_1[0, 13] + 0.128*lambda_1[0, 17] - 0.06144*lambda_1[0, 21] + 0.1*lambda_1[0, 24] - 1.9*lambda_1[0, 26] - 0.3*lambda_1[0, 28] + 0.01*lambda_1[0, 30] - 0.08*lambda_1[0, 31] + 1.52*lambda_1[0, 33] + 3.61*lambda_1[0, 35] + 0.24*lambda_1[0, 37] + 0.09*lambda_1[0, 40] + 0.001*lambda_1[0, 42] + 0.048*lambda_1[0, 43] - 0.912*lambda_1[0, 45] - 6.859*lambda_1[0, 47] - 0.144*lambda_1[0, 49] - 0.027*lambda_1[0, 52] + 0.0001*lambda_1[0, 54] - 0.0256*lambda_1[0, 55] + 0.4864*lambda_1[0, 57] + 13.0321*lambda_1[0, 59] + 0.0768*lambda_1[0, 61] + 0.0081*lambda_1[0, 64] + 1.0e-5*lambda_1[0, 66] + 0.0128*lambda_1[0, 67] - 0.2432*lambda_1[0, 69] - 24.76099*lambda_1[0, 71] - 0.0384*lambda_1[0, 73] - 0.00243*lambda_1[0, 76] - 0.008*lambda_1[0, 78] - 2.888*lambda_1[0, 80] - 0.072*lambda_1[0, 82] - 0.0008*lambda_1[0, 84] + 0.0048*lambda_1[0, 85] + 1.7328*lambda_1[0, 87] + 5.4872*lambda_1[0, 89] + 0.0432*lambda_1[0, 91] + 0.0216*lambda_1[0, 94] - 8.0e-5*lambda_1[0, 96] - 0.00256*lambda_1[0, 97] - 0.92416*lambda_1[0, 99] - 10.42568*lambda_1[0, 101] - 0.02304*lambda_1[0, 103] - 0.00648*lambda_1[0, 106] + 0.00048*lambda_1[0, 108] - 3.29232*lambda_1[0, 110] - 0.01296*lambda_1[0, 112] - 0.19*lambda_1[0, 114] - 0.03*lambda_1[0, 115] + 0.57*lambda_1[0, 117] - 0.019*lambda_1[0, 118] + 0.152*lambda_1[0, 119] + 0.361*lambda_1[0, 120] - 0.003*lambda_1[0, 121] + 0.024*lambda_1[0, 122] - 0.456*lambda_1[0, 124] - 1.083*lambda_1[0, 126] + 0.009*lambda_1[0, 127] - 0.171*lambda_1[0, 129] - 0.0019*lambda_1[0, 130] - 0.0912*lambda_1[0, 131] - 0.6859*lambda_1[0, 132] - 0.0003*lambda_1[0, 133] - 0.0144*lambda_1[0, 134] + 0.2736*lambda_1[0, 136] + 2.0577*lambda_1[0, 138] - 0.0027*lambda_1[0, 139] + 0.0513*lambda_1[0, 141] - 0.00019*lambda_1[0, 142] + 0.04864*lambda_1[0, 143] + 1.30321*lambda_1[0, 144] - 3.0e-5*lambda_1[0, 145] + 0.00768*lambda_1[0, 146] - 0.14592*lambda_1[0, 148] - 3.90963*lambda_1[0, 150] + 0.00081*lambda_1[0, 151] - 0.01539*lambda_1[0, 153] + 0.0152*lambda_1[0, 154] + 0.0361*lambda_1[0, 155] - 0.2888*lambda_1[0, 156] + 0.0024*lambda_1[0, 157] + 0.8664*lambda_1[0, 159] + 0.0009*lambda_1[0, 160] - 0.0072*lambda_1[0, 161] + 0.1368*lambda_1[0, 163] + 0.3249*lambda_1[0, 165] + 0.00152*lambda_1[0, 166] - 0.00912*lambda_1[0, 167] + 0.00361*lambda_1[0, 168] + 0.17328*lambda_1[0, 169] - 0.06859*lambda_1[0, 170] + 0.54872*lambda_1[0, 171] + 0.00024*lambda_1[0, 172] - 0.00144*lambda_1[0, 173] - 0.51984*lambda_1[0, 175] - 1.64616*lambda_1[0, 177] + 9.0e-5*lambda_1[0, 178] + 0.00432*lambda_1[0, 179] - 0.08208*lambda_1[0, 181] - 0.61731*lambda_1[0, 183] - 0.00027*lambda_1[0, 184] + 0.00216*lambda_1[0, 185] - 0.04104*lambda_1[0, 187] - 0.09747*lambda_1[0, 189] - 0.02888*lambda_1[0, 190] - 0.00072*lambda_1[0, 191] - 0.25992*lambda_1[0, 193] + 0.057*lambda_1[0, 194] + 0.0057*lambda_1[0, 195] - 0.0456*lambda_1[0, 196] - 0.1083*lambda_1[0, 197] - 0.0171*lambda_1[0, 198] + 0.00057*lambda_1[0, 199] + 0.02736*lambda_1[0, 200] + 0.20577*lambda_1[0, 201] + 0.00513*lambda_1[0, 202] - 0.00456*lambda_1[0, 203] - 0.01083*lambda_1[0, 204] + 0.08664*lambda_1[0, 205] - 0.00171*lambda_1[0, 206] + 0.01368*lambda_1[0, 207] + 0.03249*lambda_1[0, 208] >= B[0, 3]- objc]
	constraints += [lambda_1[0, 24] + 0.2*lambda_1[0, 30] - 0.8*lambda_1[0, 31] + 0.03*lambda_1[0, 42] + 0.48*lambda_1[0, 43] + 0.004*lambda_1[0, 54] - 0.256*lambda_1[0, 55] + 0.0005*lambda_1[0, 66] + 0.128*lambda_1[0, 67] - 0.16*lambda_1[0, 78] - 0.024*lambda_1[0, 84] + 0.096*lambda_1[0, 85] - 0.0032*lambda_1[0, 96] - 0.0512*lambda_1[0, 97] + 0.0144*lambda_1[0, 108] - 1.9*lambda_1[0, 114] - 0.3*lambda_1[0, 115] - 0.38*lambda_1[0, 118] + 1.52*lambda_1[0, 119] + 3.61*lambda_1[0, 120] - 0.06*lambda_1[0, 121] + 0.24*lambda_1[0, 122] + 0.09*lambda_1[0, 127] - 0.057*lambda_1[0, 130] - 0.912*lambda_1[0, 131] - 6.859*lambda_1[0, 132] - 0.009*lambda_1[0, 133] - 0.144*lambda_1[0, 134] - 0.027*lambda_1[0, 139] - 0.0076*lambda_1[0, 142] + 0.4864*lambda_1[0, 143] + 13.0321*lambda_1[0, 144] - 0.0012*lambda_1[0, 145] + 0.0768*lambda_1[0, 146] + 0.0081*lambda_1[0, 151] + 0.304*lambda_1[0, 154] + 0.722*lambda_1[0, 155] - 2.888*lambda_1[0, 156] + 0.048*lambda_1[0, 157] + 0.018*lambda_1[0, 160] - 0.072*lambda_1[0, 161] + 0.0456*lambda_1[0, 166] - 0.1824*lambda_1[0, 167] + 0.1083*lambda_1[0, 168] + 1.7328*lambda_1[0, 169] - 1.3718*lambda_1[0, 170] + 5.4872*lambda_1[0, 171] + 0.0072*lambda_1[0, 172] - 0.0288*lambda_1[0, 173] + 0.0027*lambda_1[0, 178] + 0.0432*lambda_1[0, 179] - 0.0054*lambda_1[0, 184] + 0.0216*lambda_1[0, 185] - 0.5776*lambda_1[0, 190] - 0.0144*lambda_1[0, 191] + 0.57*lambda_1[0, 194] + 0.114*lambda_1[0, 195] - 0.456*lambda_1[0, 196] - 1.083*lambda_1[0, 197] - 0.171*lambda_1[0, 198] + 0.0171*lambda_1[0, 199] + 0.2736*lambda_1[0, 200] + 2.0577*lambda_1[0, 201] + 0.0513*lambda_1[0, 202] - 0.0912*lambda_1[0, 203] - 0.2166*lambda_1[0, 204] + 0.8664*lambda_1[0, 205] - 0.0342*lambda_1[0, 206] + 0.1368*lambda_1[0, 207] + 0.3249*lambda_1[0, 208] <= B[0, 10]+ objc]
	constraints += [lambda_1[0, 24] + 0.2*lambda_1[0, 30] - 0.8*lambda_1[0, 31] + 0.03*lambda_1[0, 42] + 0.48*lambda_1[0, 43] + 0.004*lambda_1[0, 54] - 0.256*lambda_1[0, 55] + 0.0005*lambda_1[0, 66] + 0.128*lambda_1[0, 67] - 0.16*lambda_1[0, 78] - 0.024*lambda_1[0, 84] + 0.096*lambda_1[0, 85] - 0.0032*lambda_1[0, 96] - 0.0512*lambda_1[0, 97] + 0.0144*lambda_1[0, 108] - 1.9*lambda_1[0, 114] - 0.3*lambda_1[0, 115] - 0.38*lambda_1[0, 118] + 1.52*lambda_1[0, 119] + 3.61*lambda_1[0, 120] - 0.06*lambda_1[0, 121] + 0.24*lambda_1[0, 122] + 0.09*lambda_1[0, 127] - 0.057*lambda_1[0, 130] - 0.912*lambda_1[0, 131] - 6.859*lambda_1[0, 132] - 0.009*lambda_1[0, 133] - 0.144*lambda_1[0, 134] - 0.027*lambda_1[0, 139] - 0.0076*lambda_1[0, 142] + 0.4864*lambda_1[0, 143] + 13.0321*lambda_1[0, 144] - 0.0012*lambda_1[0, 145] + 0.0768*lambda_1[0, 146] + 0.0081*lambda_1[0, 151] + 0.304*lambda_1[0, 154] + 0.722*lambda_1[0, 155] - 2.888*lambda_1[0, 156] + 0.048*lambda_1[0, 157] + 0.018*lambda_1[0, 160] - 0.072*lambda_1[0, 161] + 0.0456*lambda_1[0, 166] - 0.1824*lambda_1[0, 167] + 0.1083*lambda_1[0, 168] + 1.7328*lambda_1[0, 169] - 1.3718*lambda_1[0, 170] + 5.4872*lambda_1[0, 171] + 0.0072*lambda_1[0, 172] - 0.0288*lambda_1[0, 173] + 0.0027*lambda_1[0, 178] + 0.0432*lambda_1[0, 179] - 0.0054*lambda_1[0, 184] + 0.0216*lambda_1[0, 185] - 0.5776*lambda_1[0, 190] - 0.0144*lambda_1[0, 191] + 0.57*lambda_1[0, 194] + 0.114*lambda_1[0, 195] - 0.456*lambda_1[0, 196] - 1.083*lambda_1[0, 197] - 0.171*lambda_1[0, 198] + 0.0171*lambda_1[0, 199] + 0.2736*lambda_1[0, 200] + 2.0577*lambda_1[0, 201] + 0.0513*lambda_1[0, 202] - 0.0912*lambda_1[0, 203] - 0.2166*lambda_1[0, 204] + 0.8664*lambda_1[0, 205] - 0.0342*lambda_1[0, 206] + 0.1368*lambda_1[0, 207] + 0.3249*lambda_1[0, 208] >= B[0, 10]- objc]
	constraints += [lambda_1[0, 30] + 0.3*lambda_1[0, 42] + 0.06*lambda_1[0, 54] + 0.01*lambda_1[0, 66] - 0.8*lambda_1[0, 78] - 0.24*lambda_1[0, 84] + 0.48*lambda_1[0, 85] - 0.048*lambda_1[0, 96] - 0.256*lambda_1[0, 97] + 0.144*lambda_1[0, 108] - 1.9*lambda_1[0, 118] - 0.3*lambda_1[0, 121] - 0.57*lambda_1[0, 130] - 0.09*lambda_1[0, 133] - 0.114*lambda_1[0, 142] - 0.018*lambda_1[0, 145] + 1.52*lambda_1[0, 154] + 3.61*lambda_1[0, 155] + 0.24*lambda_1[0, 157] + 0.09*lambda_1[0, 160] + 0.456*lambda_1[0, 166] - 0.912*lambda_1[0, 167] + 1.083*lambda_1[0, 168] - 6.859*lambda_1[0, 170] + 0.072*lambda_1[0, 172] - 0.144*lambda_1[0, 173] + 0.027*lambda_1[0, 178] - 0.027*lambda_1[0, 184] - 2.888*lambda_1[0, 190] - 0.072*lambda_1[0, 191] + 0.57*lambda_1[0, 195] + 0.171*lambda_1[0, 199] - 0.456*lambda_1[0, 203] - 1.083*lambda_1[0, 204] - 0.171*lambda_1[0, 206] == 0]
	constraints += [lambda_1[0, 42] + 0.4*lambda_1[0, 54] + 0.1*lambda_1[0, 66] - 0.8*lambda_1[0, 84] - 0.32*lambda_1[0, 96] + 0.48*lambda_1[0, 108] - 1.9*lambda_1[0, 130] - 0.3*lambda_1[0, 133] - 0.76*lambda_1[0, 142] - 0.12*lambda_1[0, 145] + 1.52*lambda_1[0, 166] + 3.61*lambda_1[0, 168] + 0.24*lambda_1[0, 172] + 0.09*lambda_1[0, 178] + 0.57*lambda_1[0, 199] == 0]
	constraints += [lambda_1[0, 54] + 0.5*lambda_1[0, 66] - 0.8*lambda_1[0, 96] - 1.9*lambda_1[0, 142] - 0.3*lambda_1[0, 145] == 0]
	constraints += [lambda_1[0, 66] == 0]
	constraints += [lambda_1[0, 5] - 1.2*lambda_1[0, 9] + 0.96*lambda_1[0, 13] - 0.64*lambda_1[0, 17] + 0.384*lambda_1[0, 21] + 0.1*lambda_1[0, 31] - 1.9*lambda_1[0, 33] - 0.3*lambda_1[0, 37] - 0.12*lambda_1[0, 43] + 2.28*lambda_1[0, 45] + 0.36*lambda_1[0, 49] + 0.096*lambda_1[0, 55] - 1.824*lambda_1[0, 57] - 0.288*lambda_1[0, 61] - 0.064*lambda_1[0, 67] + 1.216*lambda_1[0, 69] + 0.192*lambda_1[0, 73] + 0.01*lambda_1[0, 78] + 3.61*lambda_1[0, 80] + 0.09*lambda_1[0, 82] + 0.001*lambda_1[0, 84] - 0.012*lambda_1[0, 85] - 4.332*lambda_1[0, 87] - 6.859*lambda_1[0, 89] - 0.108*lambda_1[0, 91] - 0.027*lambda_1[0, 94] + 0.0001*lambda_1[0, 96] + 0.0096*lambda_1[0, 97] + 3.4656*lambda_1[0, 99] + 13.0321*lambda_1[0, 101] + 0.0864*lambda_1[0, 103] + 0.0081*lambda_1[0, 106] - 0.0012*lambda_1[0, 108] + 8.2308*lambda_1[0, 110] + 0.0324*lambda_1[0, 112] - 0.19*lambda_1[0, 119] - 0.03*lambda_1[0, 122] + 0.57*lambda_1[0, 124] + 0.228*lambda_1[0, 131] + 0.036*lambda_1[0, 134] - 0.684*lambda_1[0, 136] - 0.1824*lambda_1[0, 143] - 0.0288*lambda_1[0, 146] + 0.5472*lambda_1[0, 148] - 0.019*lambda_1[0, 154] + 0.361*lambda_1[0, 156] - 0.003*lambda_1[0, 157] - 1.083*lambda_1[0, 159] + 0.009*lambda_1[0, 161] - 0.171*lambda_1[0, 163] - 0.0019*lambda_1[0, 166] + 0.0228*lambda_1[0, 167] - 0.4332*lambda_1[0, 169] - 0.6859*lambda_1[0, 171] - 0.0003*lambda_1[0, 172] + 0.0036*lambda_1[0, 173] + 1.2996*lambda_1[0, 175] + 2.0577*lambda_1[0, 177] - 0.0108*lambda_1[0, 179] + 0.2052*lambda_1[0, 181] - 0.0027*lambda_1[0, 185] + 0.0513*lambda_1[0, 187] + 0.0361*lambda_1[0, 190] + 0.0009*lambda_1[0, 191] + 0.3249*lambda_1[0, 193] + 0.057*lambda_1[0, 196] - 0.0684*lambda_1[0, 200] + 0.0057*lambda_1[0, 203] - 0.1083*lambda_1[0, 205] - 0.0171*lambda_1[0, 207] <= B[0, 13]+ objc]
	constraints += [lambda_1[0, 5] - 1.2*lambda_1[0, 9] + 0.96*lambda_1[0, 13] - 0.64*lambda_1[0, 17] + 0.384*lambda_1[0, 21] + 0.1*lambda_1[0, 31] - 1.9*lambda_1[0, 33] - 0.3*lambda_1[0, 37] - 0.12*lambda_1[0, 43] + 2.28*lambda_1[0, 45] + 0.36*lambda_1[0, 49] + 0.096*lambda_1[0, 55] - 1.824*lambda_1[0, 57] - 0.288*lambda_1[0, 61] - 0.064*lambda_1[0, 67] + 1.216*lambda_1[0, 69] + 0.192*lambda_1[0, 73] + 0.01*lambda_1[0, 78] + 3.61*lambda_1[0, 80] + 0.09*lambda_1[0, 82] + 0.001*lambda_1[0, 84] - 0.012*lambda_1[0, 85] - 4.332*lambda_1[0, 87] - 6.859*lambda_1[0, 89] - 0.108*lambda_1[0, 91] - 0.027*lambda_1[0, 94] + 0.0001*lambda_1[0, 96] + 0.0096*lambda_1[0, 97] + 3.4656*lambda_1[0, 99] + 13.0321*lambda_1[0, 101] + 0.0864*lambda_1[0, 103] + 0.0081*lambda_1[0, 106] - 0.0012*lambda_1[0, 108] + 8.2308*lambda_1[0, 110] + 0.0324*lambda_1[0, 112] - 0.19*lambda_1[0, 119] - 0.03*lambda_1[0, 122] + 0.57*lambda_1[0, 124] + 0.228*lambda_1[0, 131] + 0.036*lambda_1[0, 134] - 0.684*lambda_1[0, 136] - 0.1824*lambda_1[0, 143] - 0.0288*lambda_1[0, 146] + 0.5472*lambda_1[0, 148] - 0.019*lambda_1[0, 154] + 0.361*lambda_1[0, 156] - 0.003*lambda_1[0, 157] - 1.083*lambda_1[0, 159] + 0.009*lambda_1[0, 161] - 0.171*lambda_1[0, 163] - 0.0019*lambda_1[0, 166] + 0.0228*lambda_1[0, 167] - 0.4332*lambda_1[0, 169] - 0.6859*lambda_1[0, 171] - 0.0003*lambda_1[0, 172] + 0.0036*lambda_1[0, 173] + 1.2996*lambda_1[0, 175] + 2.0577*lambda_1[0, 177] - 0.0108*lambda_1[0, 179] + 0.2052*lambda_1[0, 181] - 0.0027*lambda_1[0, 185] + 0.0513*lambda_1[0, 187] + 0.0361*lambda_1[0, 190] + 0.0009*lambda_1[0, 191] + 0.3249*lambda_1[0, 193] + 0.057*lambda_1[0, 196] - 0.0684*lambda_1[0, 200] + 0.0057*lambda_1[0, 203] - 0.1083*lambda_1[0, 205] - 0.0171*lambda_1[0, 207] >= B[0, 13]- objc]
	constraints += [lambda_1[0, 31] - 1.2*lambda_1[0, 43] + 0.96*lambda_1[0, 55] - 0.64*lambda_1[0, 67] + 0.2*lambda_1[0, 78] + 0.03*lambda_1[0, 84] - 0.24*lambda_1[0, 85] + 0.004*lambda_1[0, 96] + 0.192*lambda_1[0, 97] - 0.036*lambda_1[0, 108] - 1.9*lambda_1[0, 119] - 0.3*lambda_1[0, 122] + 2.28*lambda_1[0, 131] + 0.36*lambda_1[0, 134] - 1.824*lambda_1[0, 143] - 0.288*lambda_1[0, 146] - 0.38*lambda_1[0, 154] + 3.61*lambda_1[0, 156] - 0.06*lambda_1[0, 157] + 0.09*lambda_1[0, 161] - 0.057*lambda_1[0, 166] + 0.456*lambda_1[0, 167] - 4.332*lambda_1[0, 169] - 6.859*lambda_1[0, 171] - 0.009*lambda_1[0, 172] + 0.072*lambda_1[0, 173] - 0.108*lambda_1[0, 179] - 0.027*lambda_1[0, 185] + 0.722*lambda_1[0, 190] + 0.018*lambda_1[0, 191] + 0.57*lambda_1[0, 196] - 0.684*lambda_1[0, 200] + 0.114*lambda_1[0, 203] - 1.083*lambda_1[0, 205] - 0.171*lambda_1[0, 207] == 0]
	constraints += [lambda_1[0, 78] + 0.3*lambda_1[0, 84] - 1.2*lambda_1[0, 85] + 0.06*lambda_1[0, 96] + 0.96*lambda_1[0, 97] - 0.36*lambda_1[0, 108] - 1.9*lambda_1[0, 154] - 0.3*lambda_1[0, 157] - 0.57*lambda_1[0, 166] + 2.28*lambda_1[0, 167] - 0.09*lambda_1[0, 172] + 0.36*lambda_1[0, 173] + 3.61*lambda_1[0, 190] + 0.09*lambda_1[0, 191] + 0.57*lambda_1[0, 203] == 0]
	constraints += [lambda_1[0, 84] + 0.4*lambda_1[0, 96] - 1.2*lambda_1[0, 108] - 1.9*lambda_1[0, 166] - 0.3*lambda_1[0, 172] == 0]
	constraints += [lambda_1[0, 96] == 0]
	constraints += [lambda_1[0, 9] - 1.6*lambda_1[0, 13] + 1.6*lambda_1[0, 17] - 1.28*lambda_1[0, 21] + 0.1*lambda_1[0, 43] - 1.9*lambda_1[0, 45] - 0.3*lambda_1[0, 49] - 0.16*lambda_1[0, 55] + 3.04*lambda_1[0, 57] + 0.48*lambda_1[0, 61] + 0.16*lambda_1[0, 67] - 3.04*lambda_1[0, 69] - 0.48*lambda_1[0, 73] + 0.01*lambda_1[0, 85] + 3.61*lambda_1[0, 87] + 0.09*lambda_1[0, 91] - 0.016*lambda_1[0, 97] - 5.776*lambda_1[0, 99] - 0.144*lambda_1[0, 103] + 0.001*lambda_1[0, 108] - 6.859*lambda_1[0, 110] - 0.027*lambda_1[0, 112] - 0.19*lambda_1[0, 131] - 0.03*lambda_1[0, 134] + 0.57*lambda_1[0, 136] + 0.304*lambda_1[0, 143] + 0.048*lambda_1[0, 146] - 0.912*lambda_1[0, 148] - 0.019*lambda_1[0, 167] + 0.361*lambda_1[0, 169] - 0.003*lambda_1[0, 173] - 1.083*lambda_1[0, 175] + 0.009*lambda_1[0, 179] - 0.171*lambda_1[0, 181] + 0.057*lambda_1[0, 200] == 0]
	constraints += [lambda_1[0, 43] - 1.6*lambda_1[0, 55] + 1.6*lambda_1[0, 67] + 0.2*lambda_1[0, 85] - 0.32*lambda_1[0, 97] + 0.03*lambda_1[0, 108] - 1.9*lambda_1[0, 131] - 0.3*lambda_1[0, 134] + 3.04*lambda_1[0, 143] + 0.48*lambda_1[0, 146] - 0.38*lambda_1[0, 167] + 3.61*lambda_1[0, 169] - 0.06*lambda_1[0, 173] + 0.09*lambda_1[0, 179] + 0.57*lambda_1[0, 200] == 0]
	constraints += [lambda_1[0, 85] - 1.6*lambda_1[0, 97] + 0.3*lambda_1[0, 108] - 1.9*lambda_1[0, 167] - 0.3*lambda_1[0, 173] == 0]
	constraints += [lambda_1[0, 108] == 0]
	constraints += [lambda_1[0, 13] - 2.0*lambda_1[0, 17] + 2.4*lambda_1[0, 21] + 0.1*lambda_1[0, 55] - 1.9*lambda_1[0, 57] - 0.3*lambda_1[0, 61] - 0.2*lambda_1[0, 67] + 3.8*lambda_1[0, 69] + 0.6*lambda_1[0, 73] + 0.01*lambda_1[0, 97] + 3.61*lambda_1[0, 99] + 0.09*lambda_1[0, 103] - 0.19*lambda_1[0, 143] - 0.03*lambda_1[0, 146] + 0.57*lambda_1[0, 148] <= B[0, 17]+ objc]
	constraints += [lambda_1[0, 13] - 2.0*lambda_1[0, 17] + 2.4*lambda_1[0, 21] + 0.1*lambda_1[0, 55] - 1.9*lambda_1[0, 57] - 0.3*lambda_1[0, 61] - 0.2*lambda_1[0, 67] + 3.8*lambda_1[0, 69] + 0.6*lambda_1[0, 73] + 0.01*lambda_1[0, 97] + 3.61*lambda_1[0, 99] + 0.09*lambda_1[0, 103] - 0.19*lambda_1[0, 143] - 0.03*lambda_1[0, 146] + 0.57*lambda_1[0, 148] >= B[0, 17]- objc]
	constraints += [lambda_1[0, 55] - 2.0*lambda_1[0, 67] + 0.2*lambda_1[0, 97] - 1.9*lambda_1[0, 143] - 0.3*lambda_1[0, 146] == 0]
	constraints += [lambda_1[0, 97] == 0]
	constraints += [lambda_1[0, 17] - 2.4*lambda_1[0, 21] + 0.1*lambda_1[0, 67] - 1.9*lambda_1[0, 69] - 0.3*lambda_1[0, 73] == 0]
	constraints += [lambda_1[0, 67] == 0]
	constraints += [lambda_1[0, 21] <= B[0, 21]+ objc]
	constraints += [lambda_1[0, 21] >= B[0, 21]- objc]
	constraints += [lambda_1[0, 2] - 3.8*lambda_1[0, 6] + 10.83*lambda_1[0, 10] - 27.436*lambda_1[0, 14] + 65.1605*lambda_1[0, 18] - 148.56594*lambda_1[0, 22] + 0.1*lambda_1[0, 25] - 0.4*lambda_1[0, 26] - 0.3*lambda_1[0, 29] + 0.01*lambda_1[0, 32] + 0.16*lambda_1[0, 33] - 0.38*lambda_1[0, 34] + 1.52*lambda_1[0, 35] + 1.14*lambda_1[0, 38] + 0.09*lambda_1[0, 41] + 0.001*lambda_1[0, 44] - 0.064*lambda_1[0, 45] + 1.083*lambda_1[0, 46] - 4.332*lambda_1[0, 47] - 3.249*lambda_1[0, 50] - 0.027*lambda_1[0, 53] + 0.0001*lambda_1[0, 56] + 0.0256*lambda_1[0, 57] - 2.7436*lambda_1[0, 58] + 10.9744*lambda_1[0, 59] + 8.2308*lambda_1[0, 62] + 0.0081*lambda_1[0, 65] + 1.0e-5*lambda_1[0, 68] - 0.01024*lambda_1[0, 69] + 6.51605*lambda_1[0, 70] - 26.0642*lambda_1[0, 71] - 19.54815*lambda_1[0, 74] - 0.00243*lambda_1[0, 77] - 0.038*lambda_1[0, 79] - 0.608*lambda_1[0, 80] - 0.342*lambda_1[0, 83] - 0.0038*lambda_1[0, 86] + 0.2432*lambda_1[0, 87] + 0.1083*lambda_1[0, 88] + 1.7328*lambda_1[0, 89] + 0.9747*lambda_1[0, 92] + 0.1026*lambda_1[0, 95] - 0.00038*lambda_1[0, 98] - 0.09728*lambda_1[0, 99] - 0.27436*lambda_1[0, 100] - 4.38976*lambda_1[0, 101] - 2.46924*lambda_1[0, 104] - 0.03078*lambda_1[0, 107] + 0.01083*lambda_1[0, 109] - 0.69312*lambda_1[0, 110] - 0.29241*lambda_1[0, 113] - 0.04*lambda_1[0, 114] - 0.03*lambda_1[0, 116] + 0.12*lambda_1[0, 117] - 0.004*lambda_1[0, 118] + 0.016*lambda_1[0, 119] + 0.152*lambda_1[0, 120] - 0.003*lambda_1[0, 123] - 0.048*lambda_1[0, 124] + 0.114*lambda_1[0, 125] - 0.456*lambda_1[0, 126] + 0.009*lambda_1[0, 128] - 0.036*lambda_1[0, 129] - 0.0004*lambda_1[0, 130] - 0.0064*lambda_1[0, 131] - 0.4332*lambda_1[0, 132] - 0.0003*lambda_1[0, 135] + 0.0192*lambda_1[0, 136] - 0.3249*lambda_1[0, 137] + 1.2996*lambda_1[0, 138] - 0.0027*lambda_1[0, 140] + 0.0108*lambda_1[0, 141] - 4.0e-5*lambda_1[0, 142] + 0.00256*lambda_1[0, 143] + 1.09744*lambda_1[0, 144] - 3.0e-5*lambda_1[0, 147] - 0.00768*lambda_1[0, 148] + 0.82308*lambda_1[0, 149] - 3.29232*lambda_1[0, 150] + 0.00081*lambda_1[0, 152] - 0.00324*lambda_1[0, 153] + 0.0016*lambda_1[0, 154] + 0.0152*lambda_1[0, 155] - 0.0608*lambda_1[0, 156] + 0.0114*lambda_1[0, 158] + 0.1824*lambda_1[0, 159] + 0.0009*lambda_1[0, 162] + 0.0144*lambda_1[0, 163] - 0.0342*lambda_1[0, 164] + 0.1368*lambda_1[0, 165] + 0.00016*lambda_1[0, 166] - 0.00064*lambda_1[0, 167] + 0.00152*lambda_1[0, 168] + 0.02432*lambda_1[0, 169] - 0.04332*lambda_1[0, 170] + 0.17328*lambda_1[0, 171] + 0.00114*lambda_1[0, 174] - 0.07296*lambda_1[0, 175] - 0.03249*lambda_1[0, 176] - 0.51984*lambda_1[0, 177] + 9.0e-5*lambda_1[0, 180] - 0.00576*lambda_1[0, 181] + 0.09747*lambda_1[0, 182] - 0.38988*lambda_1[0, 183] - 0.00027*lambda_1[0, 186] - 0.00432*lambda_1[0, 187] + 0.01026*lambda_1[0, 188] - 0.04104*lambda_1[0, 189] - 0.00608*lambda_1[0, 190] - 0.00342*lambda_1[0, 192] - 0.05472*lambda_1[0, 193] + 0.012*lambda_1[0, 194] + 0.0012*lambda_1[0, 195] - 0.0048*lambda_1[0, 196] - 0.0456*lambda_1[0, 197] - 0.0036*lambda_1[0, 198] + 0.00012*lambda_1[0, 199] + 0.00192*lambda_1[0, 200] + 0.12996*lambda_1[0, 201] + 0.00108*lambda_1[0, 202] - 0.00048*lambda_1[0, 203] - 0.00456*lambda_1[0, 204] + 0.01824*lambda_1[0, 205] - 0.00036*lambda_1[0, 206] + 0.00144*lambda_1[0, 207] + 0.01368*lambda_1[0, 208] <= B[0, 2]+ objc]
	constraints += [lambda_1[0, 2] - 3.8*lambda_1[0, 6] + 10.83*lambda_1[0, 10] - 27.436*lambda_1[0, 14] + 65.1605*lambda_1[0, 18] - 148.56594*lambda_1[0, 22] + 0.1*lambda_1[0, 25] - 0.4*lambda_1[0, 26] - 0.3*lambda_1[0, 29] + 0.01*lambda_1[0, 32] + 0.16*lambda_1[0, 33] - 0.38*lambda_1[0, 34] + 1.52*lambda_1[0, 35] + 1.14*lambda_1[0, 38] + 0.09*lambda_1[0, 41] + 0.001*lambda_1[0, 44] - 0.064*lambda_1[0, 45] + 1.083*lambda_1[0, 46] - 4.332*lambda_1[0, 47] - 3.249*lambda_1[0, 50] - 0.027*lambda_1[0, 53] + 0.0001*lambda_1[0, 56] + 0.0256*lambda_1[0, 57] - 2.7436*lambda_1[0, 58] + 10.9744*lambda_1[0, 59] + 8.2308*lambda_1[0, 62] + 0.0081*lambda_1[0, 65] + 1.0e-5*lambda_1[0, 68] - 0.01024*lambda_1[0, 69] + 6.51605*lambda_1[0, 70] - 26.0642*lambda_1[0, 71] - 19.54815*lambda_1[0, 74] - 0.00243*lambda_1[0, 77] - 0.038*lambda_1[0, 79] - 0.608*lambda_1[0, 80] - 0.342*lambda_1[0, 83] - 0.0038*lambda_1[0, 86] + 0.2432*lambda_1[0, 87] + 0.1083*lambda_1[0, 88] + 1.7328*lambda_1[0, 89] + 0.9747*lambda_1[0, 92] + 0.1026*lambda_1[0, 95] - 0.00038*lambda_1[0, 98] - 0.09728*lambda_1[0, 99] - 0.27436*lambda_1[0, 100] - 4.38976*lambda_1[0, 101] - 2.46924*lambda_1[0, 104] - 0.03078*lambda_1[0, 107] + 0.01083*lambda_1[0, 109] - 0.69312*lambda_1[0, 110] - 0.29241*lambda_1[0, 113] - 0.04*lambda_1[0, 114] - 0.03*lambda_1[0, 116] + 0.12*lambda_1[0, 117] - 0.004*lambda_1[0, 118] + 0.016*lambda_1[0, 119] + 0.152*lambda_1[0, 120] - 0.003*lambda_1[0, 123] - 0.048*lambda_1[0, 124] + 0.114*lambda_1[0, 125] - 0.456*lambda_1[0, 126] + 0.009*lambda_1[0, 128] - 0.036*lambda_1[0, 129] - 0.0004*lambda_1[0, 130] - 0.0064*lambda_1[0, 131] - 0.4332*lambda_1[0, 132] - 0.0003*lambda_1[0, 135] + 0.0192*lambda_1[0, 136] - 0.3249*lambda_1[0, 137] + 1.2996*lambda_1[0, 138] - 0.0027*lambda_1[0, 140] + 0.0108*lambda_1[0, 141] - 4.0e-5*lambda_1[0, 142] + 0.00256*lambda_1[0, 143] + 1.09744*lambda_1[0, 144] - 3.0e-5*lambda_1[0, 147] - 0.00768*lambda_1[0, 148] + 0.82308*lambda_1[0, 149] - 3.29232*lambda_1[0, 150] + 0.00081*lambda_1[0, 152] - 0.00324*lambda_1[0, 153] + 0.0016*lambda_1[0, 154] + 0.0152*lambda_1[0, 155] - 0.0608*lambda_1[0, 156] + 0.0114*lambda_1[0, 158] + 0.1824*lambda_1[0, 159] + 0.0009*lambda_1[0, 162] + 0.0144*lambda_1[0, 163] - 0.0342*lambda_1[0, 164] + 0.1368*lambda_1[0, 165] + 0.00016*lambda_1[0, 166] - 0.00064*lambda_1[0, 167] + 0.00152*lambda_1[0, 168] + 0.02432*lambda_1[0, 169] - 0.04332*lambda_1[0, 170] + 0.17328*lambda_1[0, 171] + 0.00114*lambda_1[0, 174] - 0.07296*lambda_1[0, 175] - 0.03249*lambda_1[0, 176] - 0.51984*lambda_1[0, 177] + 9.0e-5*lambda_1[0, 180] - 0.00576*lambda_1[0, 181] + 0.09747*lambda_1[0, 182] - 0.38988*lambda_1[0, 183] - 0.00027*lambda_1[0, 186] - 0.00432*lambda_1[0, 187] + 0.01026*lambda_1[0, 188] - 0.04104*lambda_1[0, 189] - 0.00608*lambda_1[0, 190] - 0.00342*lambda_1[0, 192] - 0.05472*lambda_1[0, 193] + 0.012*lambda_1[0, 194] + 0.0012*lambda_1[0, 195] - 0.0048*lambda_1[0, 196] - 0.0456*lambda_1[0, 197] - 0.0036*lambda_1[0, 198] + 0.00012*lambda_1[0, 199] + 0.00192*lambda_1[0, 200] + 0.12996*lambda_1[0, 201] + 0.00108*lambda_1[0, 202] - 0.00048*lambda_1[0, 203] - 0.00456*lambda_1[0, 204] + 0.01824*lambda_1[0, 205] - 0.00036*lambda_1[0, 206] + 0.00144*lambda_1[0, 207] + 0.01368*lambda_1[0, 208] >= B[0, 2]- objc]
	constraints += [lambda_1[0, 25] + 0.2*lambda_1[0, 32] - 3.8*lambda_1[0, 34] + 0.03*lambda_1[0, 44] + 10.83*lambda_1[0, 46] + 0.004*lambda_1[0, 56] - 27.436*lambda_1[0, 58] + 0.0005*lambda_1[0, 68] + 65.1605*lambda_1[0, 70] - 0.76*lambda_1[0, 79] - 0.114*lambda_1[0, 86] + 2.166*lambda_1[0, 88] - 0.0152*lambda_1[0, 98] - 5.4872*lambda_1[0, 100] + 0.3249*lambda_1[0, 109] - 0.4*lambda_1[0, 114] - 0.3*lambda_1[0, 116] - 0.08*lambda_1[0, 118] + 0.16*lambda_1[0, 119] + 1.52*lambda_1[0, 120] - 0.06*lambda_1[0, 123] + 1.14*lambda_1[0, 125] + 0.09*lambda_1[0, 128] - 0.012*lambda_1[0, 130] - 0.064*lambda_1[0, 131] - 4.332*lambda_1[0, 132] - 0.009*lambda_1[0, 135] - 3.249*lambda_1[0, 137] - 0.027*lambda_1[0, 140] - 0.0016*lambda_1[0, 142] + 0.0256*lambda_1[0, 143] + 10.9744*lambda_1[0, 144] - 0.0012*lambda_1[0, 147] + 8.2308*lambda_1[0, 149] + 0.0081*lambda_1[0, 152] + 0.032*lambda_1[0, 154] + 0.304*lambda_1[0, 155] - 0.608*lambda_1[0, 156] + 0.228*lambda_1[0, 158] + 0.018*lambda_1[0, 162] - 0.342*lambda_1[0, 164] + 0.0048*lambda_1[0, 166] - 0.0128*lambda_1[0, 167] + 0.0456*lambda_1[0, 168] + 0.2432*lambda_1[0, 169] - 0.8664*lambda_1[0, 170] + 1.7328*lambda_1[0, 171] + 0.0342*lambda_1[0, 174] - 0.6498*lambda_1[0, 176] + 0.0027*lambda_1[0, 180] + 0.9747*lambda_1[0, 182] - 0.0054*lambda_1[0, 186] + 0.1026*lambda_1[0, 188] - 0.1216*lambda_1[0, 190] - 0.0684*lambda_1[0, 192] + 0.12*lambda_1[0, 194] + 0.024*lambda_1[0, 195] - 0.048*lambda_1[0, 196] - 0.456*lambda_1[0, 197] - 0.036*lambda_1[0, 198] + 0.0036*lambda_1[0, 199] + 0.0192*lambda_1[0, 200] + 1.2996*lambda_1[0, 201] + 0.0108*lambda_1[0, 202] - 0.0096*lambda_1[0, 203] - 0.0912*lambda_1[0, 204] + 0.1824*lambda_1[0, 205] - 0.0072*lambda_1[0, 206] + 0.0144*lambda_1[0, 207] + 0.1368*lambda_1[0, 208] <= B[0, 9]+ objc]
	constraints += [lambda_1[0, 25] + 0.2*lambda_1[0, 32] - 3.8*lambda_1[0, 34] + 0.03*lambda_1[0, 44] + 10.83*lambda_1[0, 46] + 0.004*lambda_1[0, 56] - 27.436*lambda_1[0, 58] + 0.0005*lambda_1[0, 68] + 65.1605*lambda_1[0, 70] - 0.76*lambda_1[0, 79] - 0.114*lambda_1[0, 86] + 2.166*lambda_1[0, 88] - 0.0152*lambda_1[0, 98] - 5.4872*lambda_1[0, 100] + 0.3249*lambda_1[0, 109] - 0.4*lambda_1[0, 114] - 0.3*lambda_1[0, 116] - 0.08*lambda_1[0, 118] + 0.16*lambda_1[0, 119] + 1.52*lambda_1[0, 120] - 0.06*lambda_1[0, 123] + 1.14*lambda_1[0, 125] + 0.09*lambda_1[0, 128] - 0.012*lambda_1[0, 130] - 0.064*lambda_1[0, 131] - 4.332*lambda_1[0, 132] - 0.009*lambda_1[0, 135] - 3.249*lambda_1[0, 137] - 0.027*lambda_1[0, 140] - 0.0016*lambda_1[0, 142] + 0.0256*lambda_1[0, 143] + 10.9744*lambda_1[0, 144] - 0.0012*lambda_1[0, 147] + 8.2308*lambda_1[0, 149] + 0.0081*lambda_1[0, 152] + 0.032*lambda_1[0, 154] + 0.304*lambda_1[0, 155] - 0.608*lambda_1[0, 156] + 0.228*lambda_1[0, 158] + 0.018*lambda_1[0, 162] - 0.342*lambda_1[0, 164] + 0.0048*lambda_1[0, 166] - 0.0128*lambda_1[0, 167] + 0.0456*lambda_1[0, 168] + 0.2432*lambda_1[0, 169] - 0.8664*lambda_1[0, 170] + 1.7328*lambda_1[0, 171] + 0.0342*lambda_1[0, 174] - 0.6498*lambda_1[0, 176] + 0.0027*lambda_1[0, 180] + 0.9747*lambda_1[0, 182] - 0.0054*lambda_1[0, 186] + 0.1026*lambda_1[0, 188] - 0.1216*lambda_1[0, 190] - 0.0684*lambda_1[0, 192] + 0.12*lambda_1[0, 194] + 0.024*lambda_1[0, 195] - 0.048*lambda_1[0, 196] - 0.456*lambda_1[0, 197] - 0.036*lambda_1[0, 198] + 0.0036*lambda_1[0, 199] + 0.0192*lambda_1[0, 200] + 1.2996*lambda_1[0, 201] + 0.0108*lambda_1[0, 202] - 0.0096*lambda_1[0, 203] - 0.0912*lambda_1[0, 204] + 0.1824*lambda_1[0, 205] - 0.0072*lambda_1[0, 206] + 0.0144*lambda_1[0, 207] + 0.1368*lambda_1[0, 208] >= B[0, 9]- objc]
	constraints += [lambda_1[0, 32] + 0.3*lambda_1[0, 44] + 0.06*lambda_1[0, 56] + 0.01*lambda_1[0, 68] - 3.8*lambda_1[0, 79] - 1.14*lambda_1[0, 86] + 10.83*lambda_1[0, 88] - 0.228*lambda_1[0, 98] - 27.436*lambda_1[0, 100] + 3.249*lambda_1[0, 109] - 0.4*lambda_1[0, 118] - 0.3*lambda_1[0, 123] - 0.12*lambda_1[0, 130] - 0.09*lambda_1[0, 135] - 0.024*lambda_1[0, 142] - 0.018*lambda_1[0, 147] + 0.16*lambda_1[0, 154] + 1.52*lambda_1[0, 155] + 1.14*lambda_1[0, 158] + 0.09*lambda_1[0, 162] + 0.048*lambda_1[0, 166] - 0.064*lambda_1[0, 167] + 0.456*lambda_1[0, 168] - 4.332*lambda_1[0, 170] + 0.342*lambda_1[0, 174] - 3.249*lambda_1[0, 176] + 0.027*lambda_1[0, 180] - 0.027*lambda_1[0, 186] - 0.608*lambda_1[0, 190] - 0.342*lambda_1[0, 192] + 0.12*lambda_1[0, 195] + 0.036*lambda_1[0, 199] - 0.048*lambda_1[0, 203] - 0.456*lambda_1[0, 204] - 0.036*lambda_1[0, 206] == 0]
	constraints += [lambda_1[0, 44] + 0.4*lambda_1[0, 56] + 0.1*lambda_1[0, 68] - 3.8*lambda_1[0, 86] - 1.52*lambda_1[0, 98] + 10.83*lambda_1[0, 109] - 0.4*lambda_1[0, 130] - 0.3*lambda_1[0, 135] - 0.16*lambda_1[0, 142] - 0.12*lambda_1[0, 147] + 0.16*lambda_1[0, 166] + 1.52*lambda_1[0, 168] + 1.14*lambda_1[0, 174] + 0.09*lambda_1[0, 180] + 0.12*lambda_1[0, 199] == 0]
	constraints += [lambda_1[0, 56] + 0.5*lambda_1[0, 68] - 3.8*lambda_1[0, 98] - 0.4*lambda_1[0, 142] - 0.3*lambda_1[0, 147] == 0]
	constraints += [lambda_1[0, 68] == 0]
	constraints += [lambda_1[0, 26] - 0.8*lambda_1[0, 33] - 3.8*lambda_1[0, 35] + 0.48*lambda_1[0, 45] + 10.83*lambda_1[0, 47] - 0.256*lambda_1[0, 57] - 27.436*lambda_1[0, 59] + 0.128*lambda_1[0, 69] + 65.1605*lambda_1[0, 71] + 3.04*lambda_1[0, 80] - 1.824*lambda_1[0, 87] - 8.664*lambda_1[0, 89] + 0.9728*lambda_1[0, 99] + 21.9488*lambda_1[0, 101] + 5.1984*lambda_1[0, 110] + 0.1*lambda_1[0, 114] - 0.3*lambda_1[0, 117] + 0.01*lambda_1[0, 118] - 0.08*lambda_1[0, 119] - 0.38*lambda_1[0, 120] + 0.24*lambda_1[0, 124] + 1.14*lambda_1[0, 126] + 0.09*lambda_1[0, 129] + 0.001*lambda_1[0, 130] + 0.048*lambda_1[0, 131] + 1.083*lambda_1[0, 132] - 0.144*lambda_1[0, 136] - 3.249*lambda_1[0, 138] - 0.027*lambda_1[0, 141] + 0.0001*lambda_1[0, 142] - 0.0256*lambda_1[0, 143] - 2.7436*lambda_1[0, 144] + 0.0768*lambda_1[0, 148] + 8.2308*lambda_1[0, 150] + 0.0081*lambda_1[0, 153] - 0.008*lambda_1[0, 154] - 0.038*lambda_1[0, 155] + 0.304*lambda_1[0, 156] - 0.912*lambda_1[0, 159] - 0.072*lambda_1[0, 163] - 0.342*lambda_1[0, 165] - 0.0008*lambda_1[0, 166] + 0.0048*lambda_1[0, 167] - 0.0038*lambda_1[0, 168] - 0.1824*lambda_1[0, 169] + 0.1083*lambda_1[0, 170] - 0.8664*lambda_1[0, 171] + 0.5472*lambda_1[0, 175] + 2.5992*lambda_1[0, 177] + 0.0432*lambda_1[0, 181] + 0.9747*lambda_1[0, 183] + 0.0216*lambda_1[0, 187] + 0.1026*lambda_1[0, 189] + 0.0304*lambda_1[0, 190] + 0.2736*lambda_1[0, 193] - 0.03*lambda_1[0, 194] - 0.003*lambda_1[0, 195] + 0.024*lambda_1[0, 196] + 0.114*lambda_1[0, 197] + 0.009*lambda_1[0, 198] - 0.0003*lambda_1[0, 199] - 0.0144*lambda_1[0, 200] - 0.3249*lambda_1[0, 201] - 0.0027*lambda_1[0, 202] + 0.0024*lambda_1[0, 203] + 0.0114*lambda_1[0, 204] - 0.0912*lambda_1[0, 205] + 0.0009*lambda_1[0, 206] - 0.0072*lambda_1[0, 207] - 0.0342*lambda_1[0, 208] <= B[0, 8]+ objc]
	constraints += [lambda_1[0, 26] - 0.8*lambda_1[0, 33] - 3.8*lambda_1[0, 35] + 0.48*lambda_1[0, 45] + 10.83*lambda_1[0, 47] - 0.256*lambda_1[0, 57] - 27.436*lambda_1[0, 59] + 0.128*lambda_1[0, 69] + 65.1605*lambda_1[0, 71] + 3.04*lambda_1[0, 80] - 1.824*lambda_1[0, 87] - 8.664*lambda_1[0, 89] + 0.9728*lambda_1[0, 99] + 21.9488*lambda_1[0, 101] + 5.1984*lambda_1[0, 110] + 0.1*lambda_1[0, 114] - 0.3*lambda_1[0, 117] + 0.01*lambda_1[0, 118] - 0.08*lambda_1[0, 119] - 0.38*lambda_1[0, 120] + 0.24*lambda_1[0, 124] + 1.14*lambda_1[0, 126] + 0.09*lambda_1[0, 129] + 0.001*lambda_1[0, 130] + 0.048*lambda_1[0, 131] + 1.083*lambda_1[0, 132] - 0.144*lambda_1[0, 136] - 3.249*lambda_1[0, 138] - 0.027*lambda_1[0, 141] + 0.0001*lambda_1[0, 142] - 0.0256*lambda_1[0, 143] - 2.7436*lambda_1[0, 144] + 0.0768*lambda_1[0, 148] + 8.2308*lambda_1[0, 150] + 0.0081*lambda_1[0, 153] - 0.008*lambda_1[0, 154] - 0.038*lambda_1[0, 155] + 0.304*lambda_1[0, 156] - 0.912*lambda_1[0, 159] - 0.072*lambda_1[0, 163] - 0.342*lambda_1[0, 165] - 0.0008*lambda_1[0, 166] + 0.0048*lambda_1[0, 167] - 0.0038*lambda_1[0, 168] - 0.1824*lambda_1[0, 169] + 0.1083*lambda_1[0, 170] - 0.8664*lambda_1[0, 171] + 0.5472*lambda_1[0, 175] + 2.5992*lambda_1[0, 177] + 0.0432*lambda_1[0, 181] + 0.9747*lambda_1[0, 183] + 0.0216*lambda_1[0, 187] + 0.1026*lambda_1[0, 189] + 0.0304*lambda_1[0, 190] + 0.2736*lambda_1[0, 193] - 0.03*lambda_1[0, 194] - 0.003*lambda_1[0, 195] + 0.024*lambda_1[0, 196] + 0.114*lambda_1[0, 197] + 0.009*lambda_1[0, 198] - 0.0003*lambda_1[0, 199] - 0.0144*lambda_1[0, 200] - 0.3249*lambda_1[0, 201] - 0.0027*lambda_1[0, 202] + 0.0024*lambda_1[0, 203] + 0.0114*lambda_1[0, 204] - 0.0912*lambda_1[0, 205] + 0.0009*lambda_1[0, 206] - 0.0072*lambda_1[0, 207] - 0.0342*lambda_1[0, 208] >= B[0, 8]- objc]
	constraints += [lambda_1[0, 114] + 0.2*lambda_1[0, 118] - 0.8*lambda_1[0, 119] - 3.8*lambda_1[0, 120] + 0.03*lambda_1[0, 130] + 0.48*lambda_1[0, 131] + 10.83*lambda_1[0, 132] + 0.004*lambda_1[0, 142] - 0.256*lambda_1[0, 143] - 27.436*lambda_1[0, 144] - 0.16*lambda_1[0, 154] - 0.76*lambda_1[0, 155] + 3.04*lambda_1[0, 156] - 0.024*lambda_1[0, 166] + 0.096*lambda_1[0, 167] - 0.114*lambda_1[0, 168] - 1.824*lambda_1[0, 169] + 2.166*lambda_1[0, 170] - 8.664*lambda_1[0, 171] + 0.608*lambda_1[0, 190] - 0.3*lambda_1[0, 194] - 0.06*lambda_1[0, 195] + 0.24*lambda_1[0, 196] + 1.14*lambda_1[0, 197] + 0.09*lambda_1[0, 198] - 0.009*lambda_1[0, 199] - 0.144*lambda_1[0, 200] - 3.249*lambda_1[0, 201] - 0.027*lambda_1[0, 202] + 0.048*lambda_1[0, 203] + 0.228*lambda_1[0, 204] - 0.912*lambda_1[0, 205] + 0.018*lambda_1[0, 206] - 0.072*lambda_1[0, 207] - 0.342*lambda_1[0, 208] == 0]
	constraints += [lambda_1[0, 118] + 0.3*lambda_1[0, 130] + 0.06*lambda_1[0, 142] - 0.8*lambda_1[0, 154] - 3.8*lambda_1[0, 155] - 0.24*lambda_1[0, 166] + 0.48*lambda_1[0, 167] - 1.14*lambda_1[0, 168] + 10.83*lambda_1[0, 170] + 3.04*lambda_1[0, 190] - 0.3*lambda_1[0, 195] - 0.09*lambda_1[0, 199] + 0.24*lambda_1[0, 203] + 1.14*lambda_1[0, 204] + 0.09*lambda_1[0, 206] == 0]
	constraints += [lambda_1[0, 130] + 0.4*lambda_1[0, 142] - 0.8*lambda_1[0, 166] - 3.8*lambda_1[0, 168] - 0.3*lambda_1[0, 199] == 0]
	constraints += [lambda_1[0, 142] == 0]
	constraints += [lambda_1[0, 33] - 1.2*lambda_1[0, 45] + 0.96*lambda_1[0, 57] - 0.64*lambda_1[0, 69] - 3.8*lambda_1[0, 80] + 4.56*lambda_1[0, 87] + 10.83*lambda_1[0, 89] - 3.648*lambda_1[0, 99] - 27.436*lambda_1[0, 101] - 12.996*lambda_1[0, 110] + 0.1*lambda_1[0, 119] - 0.3*lambda_1[0, 124] - 0.12*lambda_1[0, 131] + 0.36*lambda_1[0, 136] + 0.096*lambda_1[0, 143] - 0.288*lambda_1[0, 148] + 0.01*lambda_1[0, 154] - 0.38*lambda_1[0, 156] + 1.14*lambda_1[0, 159] + 0.09*lambda_1[0, 163] + 0.001*lambda_1[0, 166] - 0.012*lambda_1[0, 167] + 0.456*lambda_1[0, 169] + 1.083*lambda_1[0, 171] - 1.368*lambda_1[0, 175] - 3.249*lambda_1[0, 177] - 0.108*lambda_1[0, 181] - 0.027*lambda_1[0, 187] - 0.038*lambda_1[0, 190] - 0.342*lambda_1[0, 193] - 0.03*lambda_1[0, 196] + 0.036*lambda_1[0, 200] - 0.003*lambda_1[0, 203] + 0.114*lambda_1[0, 205] + 0.009*lambda_1[0, 207] == 0]
	constraints += [lambda_1[0, 119] - 1.2*lambda_1[0, 131] + 0.96*lambda_1[0, 143] + 0.2*lambda_1[0, 154] - 3.8*lambda_1[0, 156] + 0.03*lambda_1[0, 166] - 0.24*lambda_1[0, 167] + 4.56*lambda_1[0, 169] + 10.83*lambda_1[0, 171] - 0.76*lambda_1[0, 190] - 0.3*lambda_1[0, 196] + 0.36*lambda_1[0, 200] - 0.06*lambda_1[0, 203] + 1.14*lambda_1[0, 205] + 0.09*lambda_1[0, 207] == 0]
	constraints += [lambda_1[0, 154] + 0.3*lambda_1[0, 166] - 1.2*lambda_1[0, 167] - 3.8*lambda_1[0, 190] - 0.3*lambda_1[0, 203] == 0]
	constraints += [lambda_1[0, 166] == 0]
	constraints += [lambda_1[0, 45] - 1.6*lambda_1[0, 57] + 1.6*lambda_1[0, 69] - 3.8*lambda_1[0, 87] + 6.08*lambda_1[0, 99] + 10.83*lambda_1[0, 110] + 0.1*lambda_1[0, 131] - 0.3*lambda_1[0, 136] - 0.16*lambda_1[0, 143] + 0.48*lambda_1[0, 148] + 0.01*lambda_1[0, 167] - 0.38*lambda_1[0, 169] + 1.14*lambda_1[0, 175] + 0.09*lambda_1[0, 181] - 0.03*lambda_1[0, 200] == 0]
	constraints += [lambda_1[0, 131] - 1.6*lambda_1[0, 143] + 0.2*lambda_1[0, 167] - 3.8*lambda_1[0, 169] - 0.3*lambda_1[0, 200] == 0]
	constraints += [lambda_1[0, 167] == 0]
	constraints += [lambda_1[0, 57] - 2.0*lambda_1[0, 69] - 3.8*lambda_1[0, 99] + 0.1*lambda_1[0, 143] - 0.3*lambda_1[0, 148] == 0]
	constraints += [lambda_1[0, 143] == 0]
	constraints += [lambda_1[0, 69] == 0]
	constraints += [1.0*lambda_1[0, 6] - 5.7*lambda_1[0, 10] + 21.66*lambda_1[0, 14] - 68.59*lambda_1[0, 18] + 195.4815*lambda_1[0, 22] + 0.1*lambda_1[0, 34] - 0.4*lambda_1[0, 35] - 0.3*lambda_1[0, 38] - 0.57*lambda_1[0, 46] + 2.28*lambda_1[0, 47] + 1.71*lambda_1[0, 50] + 2.166*lambda_1[0, 58] - 8.664*lambda_1[0, 59] - 6.498*lambda_1[0, 62] - 6.859*lambda_1[0, 70] + 27.436*lambda_1[0, 71] + 20.577*lambda_1[0, 74] + 0.01*lambda_1[0, 79] + 0.16*lambda_1[0, 80] + 0.09*lambda_1[0, 83] + 0.001*lambda_1[0, 86] - 0.064*lambda_1[0, 87] - 0.057*lambda_1[0, 88] - 0.912*lambda_1[0, 89] - 0.513*lambda_1[0, 92] - 0.027*lambda_1[0, 95] + 0.0001*lambda_1[0, 98] + 0.0256*lambda_1[0, 99] + 0.2166*lambda_1[0, 100] + 3.4656*lambda_1[0, 101] + 1.9494*lambda_1[0, 104] + 0.0081*lambda_1[0, 107] - 0.0057*lambda_1[0, 109] + 0.3648*lambda_1[0, 110] + 0.1539*lambda_1[0, 113] - 0.04*lambda_1[0, 120] - 0.03*lambda_1[0, 125] + 0.12*lambda_1[0, 126] + 0.228*lambda_1[0, 132] + 0.171*lambda_1[0, 137] - 0.684*lambda_1[0, 138] - 0.8664*lambda_1[0, 144] - 0.6498*lambda_1[0, 149] + 2.5992*lambda_1[0, 150] - 0.004*lambda_1[0, 155] + 0.016*lambda_1[0, 156] - 0.003*lambda_1[0, 158] - 0.048*lambda_1[0, 159] + 0.009*lambda_1[0, 164] - 0.036*lambda_1[0, 165] - 0.0004*lambda_1[0, 168] - 0.0064*lambda_1[0, 169] + 0.0228*lambda_1[0, 170] - 0.0912*lambda_1[0, 171] - 0.0003*lambda_1[0, 174] + 0.0192*lambda_1[0, 175] + 0.0171*lambda_1[0, 176] + 0.2736*lambda_1[0, 177] - 0.0513*lambda_1[0, 182] + 0.2052*lambda_1[0, 183] - 0.0027*lambda_1[0, 188] + 0.0108*lambda_1[0, 189] + 0.0016*lambda_1[0, 190] + 0.0009*lambda_1[0, 192] + 0.0144*lambda_1[0, 193] + 0.012*lambda_1[0, 197] - 0.0684*lambda_1[0, 201] + 0.0012*lambda_1[0, 204] - 0.0048*lambda_1[0, 205] - 0.0036*lambda_1[0, 208] <= B[0, 12]+ objc]
	constraints += [1.0*lambda_1[0, 6] - 5.7*lambda_1[0, 10] + 21.66*lambda_1[0, 14] - 68.59*lambda_1[0, 18] + 195.4815*lambda_1[0, 22] + 0.1*lambda_1[0, 34] - 0.4*lambda_1[0, 35] - 0.3*lambda_1[0, 38] - 0.57*lambda_1[0, 46] + 2.28*lambda_1[0, 47] + 1.71*lambda_1[0, 50] + 2.166*lambda_1[0, 58] - 8.664*lambda_1[0, 59] - 6.498*lambda_1[0, 62] - 6.859*lambda_1[0, 70] + 27.436*lambda_1[0, 71] + 20.577*lambda_1[0, 74] + 0.01*lambda_1[0, 79] + 0.16*lambda_1[0, 80] + 0.09*lambda_1[0, 83] + 0.001*lambda_1[0, 86] - 0.064*lambda_1[0, 87] - 0.057*lambda_1[0, 88] - 0.912*lambda_1[0, 89] - 0.513*lambda_1[0, 92] - 0.027*lambda_1[0, 95] + 0.0001*lambda_1[0, 98] + 0.0256*lambda_1[0, 99] + 0.2166*lambda_1[0, 100] + 3.4656*lambda_1[0, 101] + 1.9494*lambda_1[0, 104] + 0.0081*lambda_1[0, 107] - 0.0057*lambda_1[0, 109] + 0.3648*lambda_1[0, 110] + 0.1539*lambda_1[0, 113] - 0.04*lambda_1[0, 120] - 0.03*lambda_1[0, 125] + 0.12*lambda_1[0, 126] + 0.228*lambda_1[0, 132] + 0.171*lambda_1[0, 137] - 0.684*lambda_1[0, 138] - 0.8664*lambda_1[0, 144] - 0.6498*lambda_1[0, 149] + 2.5992*lambda_1[0, 150] - 0.004*lambda_1[0, 155] + 0.016*lambda_1[0, 156] - 0.003*lambda_1[0, 158] - 0.048*lambda_1[0, 159] + 0.009*lambda_1[0, 164] - 0.036*lambda_1[0, 165] - 0.0004*lambda_1[0, 168] - 0.0064*lambda_1[0, 169] + 0.0228*lambda_1[0, 170] - 0.0912*lambda_1[0, 171] - 0.0003*lambda_1[0, 174] + 0.0192*lambda_1[0, 175] + 0.0171*lambda_1[0, 176] + 0.2736*lambda_1[0, 177] - 0.0513*lambda_1[0, 182] + 0.2052*lambda_1[0, 183] - 0.0027*lambda_1[0, 188] + 0.0108*lambda_1[0, 189] + 0.0016*lambda_1[0, 190] + 0.0009*lambda_1[0, 192] + 0.0144*lambda_1[0, 193] + 0.012*lambda_1[0, 197] - 0.0684*lambda_1[0, 201] + 0.0012*lambda_1[0, 204] - 0.0048*lambda_1[0, 205] - 0.0036*lambda_1[0, 208] >= B[0, 12]- objc]
	constraints += [1.0*lambda_1[0, 34] - 5.7*lambda_1[0, 46] + 21.66*lambda_1[0, 58] - 68.59*lambda_1[0, 70] + 0.2*lambda_1[0, 79] + 0.03*lambda_1[0, 86] - 1.14*lambda_1[0, 88] + 0.004*lambda_1[0, 98] + 4.332*lambda_1[0, 100] - 0.171*lambda_1[0, 109] - 0.4*lambda_1[0, 120] - 0.3*lambda_1[0, 125] + 2.28*lambda_1[0, 132] + 1.71*lambda_1[0, 137] - 8.664*lambda_1[0, 144] - 6.498*lambda_1[0, 149] - 0.08*lambda_1[0, 155] + 0.16*lambda_1[0, 156] - 0.06*lambda_1[0, 158] + 0.09*lambda_1[0, 164] - 0.012*lambda_1[0, 168] - 0.064*lambda_1[0, 169] + 0.456*lambda_1[0, 170] - 0.912*lambda_1[0, 171] - 0.009*lambda_1[0, 174] + 0.342*lambda_1[0, 176] - 0.513*lambda_1[0, 182] - 0.027*lambda_1[0, 188] + 0.032*lambda_1[0, 190] + 0.018*lambda_1[0, 192] + 0.12*lambda_1[0, 197] - 0.684*lambda_1[0, 201] + 0.024*lambda_1[0, 204] - 0.048*lambda_1[0, 205] - 0.036*lambda_1[0, 208] == 0]
	constraints += [1.0*lambda_1[0, 79] + 0.3*lambda_1[0, 86] - 5.7*lambda_1[0, 88] + 0.06*lambda_1[0, 98] + 21.66*lambda_1[0, 100] - 1.71*lambda_1[0, 109] - 0.4*lambda_1[0, 155] - 0.3*lambda_1[0, 158] - 0.12*lambda_1[0, 168] + 2.28*lambda_1[0, 170] - 0.09*lambda_1[0, 174] + 1.71*lambda_1[0, 176] + 0.16*lambda_1[0, 190] + 0.09*lambda_1[0, 192] + 0.12*lambda_1[0, 204] == 0]
	constraints += [1.0*lambda_1[0, 86] + 0.4*lambda_1[0, 98] - 5.7*lambda_1[0, 109] - 0.4*lambda_1[0, 168] - 0.3*lambda_1[0, 174] == 0]
	constraints += [1.0*lambda_1[0, 98] == 0]
	constraints += [1.0*lambda_1[0, 35] - 5.7*lambda_1[0, 47] + 21.66*lambda_1[0, 59] - 68.59*lambda_1[0, 71] - 0.8*lambda_1[0, 80] + 0.48*lambda_1[0, 87] + 4.56*lambda_1[0, 89] - 0.256*lambda_1[0, 99] - 17.328*lambda_1[0, 101] - 2.736*lambda_1[0, 110] + 0.1*lambda_1[0, 120] - 0.3*lambda_1[0, 126] - 0.57*lambda_1[0, 132] + 1.71*lambda_1[0, 138] + 2.166*lambda_1[0, 144] - 6.498*lambda_1[0, 150] + 0.01*lambda_1[0, 155] - 0.08*lambda_1[0, 156] + 0.24*lambda_1[0, 159] + 0.09*lambda_1[0, 165] + 0.001*lambda_1[0, 168] + 0.048*lambda_1[0, 169] - 0.057*lambda_1[0, 170] + 0.456*lambda_1[0, 171] - 0.144*lambda_1[0, 175] - 1.368*lambda_1[0, 177] - 0.513*lambda_1[0, 183] - 0.027*lambda_1[0, 189] - 0.008*lambda_1[0, 190] - 0.072*lambda_1[0, 193] - 0.03*lambda_1[0, 197] + 0.171*lambda_1[0, 201] - 0.003*lambda_1[0, 204] + 0.024*lambda_1[0, 205] + 0.009*lambda_1[0, 208] == 0]
	constraints += [1.0*lambda_1[0, 120] - 5.7*lambda_1[0, 132] + 21.66*lambda_1[0, 144] + 0.2*lambda_1[0, 155] - 0.8*lambda_1[0, 156] + 0.03*lambda_1[0, 168] + 0.48*lambda_1[0, 169] - 1.14*lambda_1[0, 170] + 4.56*lambda_1[0, 171] - 0.16*lambda_1[0, 190] - 0.3*lambda_1[0, 197] + 1.71*lambda_1[0, 201] - 0.06*lambda_1[0, 204] + 0.24*lambda_1[0, 205] + 0.09*lambda_1[0, 208] == 0]
	constraints += [1.0*lambda_1[0, 155] + 0.3*lambda_1[0, 168] - 5.7*lambda_1[0, 170] - 0.8*lambda_1[0, 190] - 0.3*lambda_1[0, 204] == 0]
	constraints += [1.0*lambda_1[0, 168] == 0]
	constraints += [1.0*lambda_1[0, 80] - 1.2*lambda_1[0, 87] - 5.7*lambda_1[0, 89] + 0.96*lambda_1[0, 99] + 21.66*lambda_1[0, 101] + 6.84*lambda_1[0, 110] + 0.1*lambda_1[0, 156] - 0.3*lambda_1[0, 159] - 0.12*lambda_1[0, 169] - 0.57*lambda_1[0, 171] + 0.36*lambda_1[0, 175] + 1.71*lambda_1[0, 177] + 0.01*lambda_1[0, 190] + 0.09*lambda_1[0, 193] - 0.03*lambda_1[0, 205] == 0]
	constraints += [1.0*lambda_1[0, 156] - 1.2*lambda_1[0, 169] - 5.7*lambda_1[0, 171] + 0.2*lambda_1[0, 190] - 0.3*lambda_1[0, 205] == 0]
	constraints += [1.0*lambda_1[0, 190] == 0]
	constraints += [1.0*lambda_1[0, 87] - 1.6*lambda_1[0, 99] - 5.7*lambda_1[0, 110] + 0.1*lambda_1[0, 169] - 0.3*lambda_1[0, 175] == 0]
	constraints += [1.0*lambda_1[0, 169] == 0]
	constraints += [1.0*lambda_1[0, 99] == 0]
	constraints += [1.0*lambda_1[0, 10] - 7.6*lambda_1[0, 14] + 36.1*lambda_1[0, 18] - 137.18*lambda_1[0, 22] + 0.1*lambda_1[0, 46] - 0.4*lambda_1[0, 47] - 0.3*lambda_1[0, 50] - 0.76*lambda_1[0, 58] + 3.04*lambda_1[0, 59] + 2.28*lambda_1[0, 62] + 3.61*lambda_1[0, 70] - 14.44*lambda_1[0, 71] - 10.83*lambda_1[0, 74] + 0.01*lambda_1[0, 88] + 0.16*lambda_1[0, 89] + 0.09*lambda_1[0, 92] - 0.076*lambda_1[0, 100] - 1.216*lambda_1[0, 101] - 0.684*lambda_1[0, 104] + 0.001*lambda_1[0, 109] - 0.064*lambda_1[0, 110] - 0.027*lambda_1[0, 113] - 0.04*lambda_1[0, 132] - 0.03*lambda_1[0, 137] + 0.12*lambda_1[0, 138] + 0.304*lambda_1[0, 144] + 0.228*lambda_1[0, 149] - 0.912*lambda_1[0, 150] - 0.004*lambda_1[0, 170] + 0.016*lambda_1[0, 171] - 0.003*lambda_1[0, 176] - 0.048*lambda_1[0, 177] + 0.009*lambda_1[0, 182] - 0.036*lambda_1[0, 183] + 0.012*lambda_1[0, 201] == 0]
	constraints += [1.0*lambda_1[0, 46] - 7.6*lambda_1[0, 58] + 36.1*lambda_1[0, 70] + 0.2*lambda_1[0, 88] - 1.52*lambda_1[0, 100] + 0.03*lambda_1[0, 109] - 0.4*lambda_1[0, 132] - 0.3*lambda_1[0, 137] + 3.04*lambda_1[0, 144] + 2.28*lambda_1[0, 149] - 0.08*lambda_1[0, 170] + 0.16*lambda_1[0, 171] - 0.06*lambda_1[0, 176] + 0.09*lambda_1[0, 182] + 0.12*lambda_1[0, 201] == 0]
	constraints += [1.0*lambda_1[0, 88] - 7.6*lambda_1[0, 100] + 0.3*lambda_1[0, 109] - 0.4*lambda_1[0, 170] - 0.3*lambda_1[0, 176] == 0]
	constraints += [1.0*lambda_1[0, 109] == 0]
	constraints += [1.0*lambda_1[0, 47] - 7.6*lambda_1[0, 59] + 36.1*lambda_1[0, 71] - 0.8*lambda_1[0, 89] + 6.08*lambda_1[0, 101] + 0.48*lambda_1[0, 110] + 0.1*lambda_1[0, 132] - 0.3*lambda_1[0, 138] - 0.76*lambda_1[0, 144] + 2.28*lambda_1[0, 150] + 0.01*lambda_1[0, 170] - 0.08*lambda_1[0, 171] + 0.24*lambda_1[0, 177] + 0.09*lambda_1[0, 183] - 0.03*lambda_1[0, 201] == 0]
	constraints += [1.0*lambda_1[0, 132] - 7.6*lambda_1[0, 144] + 0.2*lambda_1[0, 170] - 0.8*lambda_1[0, 171] - 0.3*lambda_1[0, 201] == 0]
	constraints += [1.0*lambda_1[0, 170] == 0]
	constraints += [1.0*lambda_1[0, 89] - 7.6*lambda_1[0, 101] - 1.2*lambda_1[0, 110] + 0.1*lambda_1[0, 171] - 0.3*lambda_1[0, 177] == 0]
	constraints += [1.0*lambda_1[0, 171] == 0]
	constraints += [1.0*lambda_1[0, 110] == 0]
	constraints += [1.0*lambda_1[0, 14] - 9.49999999999999*lambda_1[0, 18] + 54.15*lambda_1[0, 22] + 0.1*lambda_1[0, 58] - 0.4*lambda_1[0, 59] - 0.3*lambda_1[0, 62] - 0.95*lambda_1[0, 70] + 3.8*lambda_1[0, 71] + 2.85*lambda_1[0, 74] + 0.01*lambda_1[0, 100] + 0.16*lambda_1[0, 101] + 0.09*lambda_1[0, 104] - 0.04*lambda_1[0, 144] - 0.03*lambda_1[0, 149] + 0.12*lambda_1[0, 150] <= B[0, 16]+ objc]
	constraints += [1.0*lambda_1[0, 14] - 9.49999999999999*lambda_1[0, 18] + 54.15*lambda_1[0, 22] + 0.1*lambda_1[0, 58] - 0.4*lambda_1[0, 59] - 0.3*lambda_1[0, 62] - 0.95*lambda_1[0, 70] + 3.8*lambda_1[0, 71] + 2.85*lambda_1[0, 74] + 0.01*lambda_1[0, 100] + 0.16*lambda_1[0, 101] + 0.09*lambda_1[0, 104] - 0.04*lambda_1[0, 144] - 0.03*lambda_1[0, 149] + 0.12*lambda_1[0, 150] >= B[0, 16]- objc]
	constraints += [1.0*lambda_1[0, 58] - 9.49999999999999*lambda_1[0, 70] + 0.2*lambda_1[0, 100] - 0.4*lambda_1[0, 144] - 0.3*lambda_1[0, 149] == 0]
	constraints += [1.0*lambda_1[0, 100] == 0]
	constraints += [1.0*lambda_1[0, 59] - 9.49999999999999*lambda_1[0, 71] - 0.8*lambda_1[0, 101] + 0.1*lambda_1[0, 144] - 0.3*lambda_1[0, 150] == 0]
	constraints += [1.0*lambda_1[0, 144] == 0]
	constraints += [1.0*lambda_1[0, 101] == 0]
	constraints += [0.999999999999999*lambda_1[0, 18] - 11.4*lambda_1[0, 22] + 0.1*lambda_1[0, 70] - 0.4*lambda_1[0, 71] - 0.3*lambda_1[0, 74] == 0]
	constraints += [0.999999999999999*lambda_1[0, 70] == 0]
	constraints += [0.999999999999999*lambda_1[0, 71] == 0]
	constraints += [0.999999999999999*lambda_1[0, 22] <= B[0, 20]+ objc]
	constraints += [0.999999999999999*lambda_1[0, 22] >= B[0, 20]- objc]
	constraints += [lambda_1[0, 3] - 0.6*lambda_1[0, 7] + 0.27*lambda_1[0, 11] - 0.108*lambda_1[0, 15] + 0.0405*lambda_1[0, 19] - 0.01458*lambda_1[0, 23] + 0.1*lambda_1[0, 27] - 0.4*lambda_1[0, 28] - 1.9*lambda_1[0, 29] + 0.01*lambda_1[0, 36] + 0.16*lambda_1[0, 37] + 3.61*lambda_1[0, 38] - 0.06*lambda_1[0, 39] + 0.24*lambda_1[0, 40] + 1.14*lambda_1[0, 41] + 0.001*lambda_1[0, 48] - 0.064*lambda_1[0, 49] - 6.859*lambda_1[0, 50] + 0.027*lambda_1[0, 51] - 0.108*lambda_1[0, 52] - 0.513*lambda_1[0, 53] + 0.0001*lambda_1[0, 60] + 0.0256*lambda_1[0, 61] + 13.0321*lambda_1[0, 62] - 0.0108*lambda_1[0, 63] + 0.0432*lambda_1[0, 64] + 0.2052*lambda_1[0, 65] + 1.0e-5*lambda_1[0, 72] - 0.01024*lambda_1[0, 73] - 24.76099*lambda_1[0, 74] + 0.00405*lambda_1[0, 75] - 0.0162*lambda_1[0, 76] - 0.07695*lambda_1[0, 77] - 0.006*lambda_1[0, 81] - 0.096*lambda_1[0, 82] - 2.166*lambda_1[0, 83] - 0.0006*lambda_1[0, 90] + 0.0384*lambda_1[0, 91] + 4.1154*lambda_1[0, 92] + 0.0027*lambda_1[0, 93] + 0.0432*lambda_1[0, 94] + 0.9747*lambda_1[0, 95] - 6.0e-5*lambda_1[0, 102] - 0.01536*lambda_1[0, 103] - 7.81926*lambda_1[0, 104] - 0.00108*lambda_1[0, 105] - 0.01728*lambda_1[0, 106] - 0.38988*lambda_1[0, 107] + 0.00027*lambda_1[0, 111] - 0.01728*lambda_1[0, 112] - 1.85193*lambda_1[0, 113] - 0.04*lambda_1[0, 115] - 0.19*lambda_1[0, 116] + 0.76*lambda_1[0, 117] - 0.004*lambda_1[0, 121] + 0.016*lambda_1[0, 122] - 0.019*lambda_1[0, 123] - 0.304*lambda_1[0, 124] + 0.361*lambda_1[0, 125] - 1.444*lambda_1[0, 126] + 0.024*lambda_1[0, 127] + 0.114*lambda_1[0, 128] - 0.456*lambda_1[0, 129] - 0.0004*lambda_1[0, 133] - 0.0064*lambda_1[0, 134] - 0.0019*lambda_1[0, 135] + 0.1216*lambda_1[0, 136] - 0.6859*lambda_1[0, 137] + 2.7436*lambda_1[0, 138] - 0.0108*lambda_1[0, 139] - 0.0513*lambda_1[0, 140] + 0.2052*lambda_1[0, 141] - 4.0e-5*lambda_1[0, 145] + 0.00256*lambda_1[0, 146] - 0.00019*lambda_1[0, 147] - 0.04864*lambda_1[0, 148] + 1.30321*lambda_1[0, 149] - 5.21284*lambda_1[0, 150] + 0.00432*lambda_1[0, 151] + 0.02052*lambda_1[0, 152] - 0.08208*lambda_1[0, 153] + 0.0016*lambda_1[0, 157] + 0.0361*lambda_1[0, 158] + 0.5776*lambda_1[0, 159] + 0.0024*lambda_1[0, 160] - 0.0096*lambda_1[0, 161] + 0.0114*lambda_1[0, 162] + 0.1824*lambda_1[0, 163] - 0.2166*lambda_1[0, 164] + 0.8664*lambda_1[0, 165] + 0.00016*lambda_1[0, 172] - 0.00064*lambda_1[0, 173] + 0.00361*lambda_1[0, 174] - 0.23104*lambda_1[0, 175] - 0.06859*lambda_1[0, 176] - 1.09744*lambda_1[0, 177] + 0.00024*lambda_1[0, 178] + 0.00384*lambda_1[0, 179] + 0.00114*lambda_1[0, 180] - 0.07296*lambda_1[0, 181] + 0.41154*lambda_1[0, 182] - 1.64616*lambda_1[0, 183] - 0.00108*lambda_1[0, 184] + 0.00432*lambda_1[0, 185] - 0.00513*lambda_1[0, 186] - 0.08208*lambda_1[0, 187] + 0.09747*lambda_1[0, 188] - 0.38988*lambda_1[0, 189] - 0.00096*lambda_1[0, 191] - 0.02166*lambda_1[0, 192] - 0.34656*lambda_1[0, 193] + 0.076*lambda_1[0, 194] + 0.0076*lambda_1[0, 195] - 0.0304*lambda_1[0, 196] - 0.1444*lambda_1[0, 197] - 0.0456*lambda_1[0, 198] + 0.00076*lambda_1[0, 199] + 0.01216*lambda_1[0, 200] + 0.27436*lambda_1[0, 201] + 0.02052*lambda_1[0, 202] - 0.00304*lambda_1[0, 203] - 0.01444*lambda_1[0, 204] + 0.05776*lambda_1[0, 205] - 0.00456*lambda_1[0, 206] + 0.01824*lambda_1[0, 207] + 0.08664*lambda_1[0, 208] <= B[0, 1]+ objc]
	constraints += [lambda_1[0, 3] - 0.6*lambda_1[0, 7] + 0.27*lambda_1[0, 11] - 0.108*lambda_1[0, 15] + 0.0405*lambda_1[0, 19] - 0.01458*lambda_1[0, 23] + 0.1*lambda_1[0, 27] - 0.4*lambda_1[0, 28] - 1.9*lambda_1[0, 29] + 0.01*lambda_1[0, 36] + 0.16*lambda_1[0, 37] + 3.61*lambda_1[0, 38] - 0.06*lambda_1[0, 39] + 0.24*lambda_1[0, 40] + 1.14*lambda_1[0, 41] + 0.001*lambda_1[0, 48] - 0.064*lambda_1[0, 49] - 6.859*lambda_1[0, 50] + 0.027*lambda_1[0, 51] - 0.108*lambda_1[0, 52] - 0.513*lambda_1[0, 53] + 0.0001*lambda_1[0, 60] + 0.0256*lambda_1[0, 61] + 13.0321*lambda_1[0, 62] - 0.0108*lambda_1[0, 63] + 0.0432*lambda_1[0, 64] + 0.2052*lambda_1[0, 65] + 1.0e-5*lambda_1[0, 72] - 0.01024*lambda_1[0, 73] - 24.76099*lambda_1[0, 74] + 0.00405*lambda_1[0, 75] - 0.0162*lambda_1[0, 76] - 0.07695*lambda_1[0, 77] - 0.006*lambda_1[0, 81] - 0.096*lambda_1[0, 82] - 2.166*lambda_1[0, 83] - 0.0006*lambda_1[0, 90] + 0.0384*lambda_1[0, 91] + 4.1154*lambda_1[0, 92] + 0.0027*lambda_1[0, 93] + 0.0432*lambda_1[0, 94] + 0.9747*lambda_1[0, 95] - 6.0e-5*lambda_1[0, 102] - 0.01536*lambda_1[0, 103] - 7.81926*lambda_1[0, 104] - 0.00108*lambda_1[0, 105] - 0.01728*lambda_1[0, 106] - 0.38988*lambda_1[0, 107] + 0.00027*lambda_1[0, 111] - 0.01728*lambda_1[0, 112] - 1.85193*lambda_1[0, 113] - 0.04*lambda_1[0, 115] - 0.19*lambda_1[0, 116] + 0.76*lambda_1[0, 117] - 0.004*lambda_1[0, 121] + 0.016*lambda_1[0, 122] - 0.019*lambda_1[0, 123] - 0.304*lambda_1[0, 124] + 0.361*lambda_1[0, 125] - 1.444*lambda_1[0, 126] + 0.024*lambda_1[0, 127] + 0.114*lambda_1[0, 128] - 0.456*lambda_1[0, 129] - 0.0004*lambda_1[0, 133] - 0.0064*lambda_1[0, 134] - 0.0019*lambda_1[0, 135] + 0.1216*lambda_1[0, 136] - 0.6859*lambda_1[0, 137] + 2.7436*lambda_1[0, 138] - 0.0108*lambda_1[0, 139] - 0.0513*lambda_1[0, 140] + 0.2052*lambda_1[0, 141] - 4.0e-5*lambda_1[0, 145] + 0.00256*lambda_1[0, 146] - 0.00019*lambda_1[0, 147] - 0.04864*lambda_1[0, 148] + 1.30321*lambda_1[0, 149] - 5.21284*lambda_1[0, 150] + 0.00432*lambda_1[0, 151] + 0.02052*lambda_1[0, 152] - 0.08208*lambda_1[0, 153] + 0.0016*lambda_1[0, 157] + 0.0361*lambda_1[0, 158] + 0.5776*lambda_1[0, 159] + 0.0024*lambda_1[0, 160] - 0.0096*lambda_1[0, 161] + 0.0114*lambda_1[0, 162] + 0.1824*lambda_1[0, 163] - 0.2166*lambda_1[0, 164] + 0.8664*lambda_1[0, 165] + 0.00016*lambda_1[0, 172] - 0.00064*lambda_1[0, 173] + 0.00361*lambda_1[0, 174] - 0.23104*lambda_1[0, 175] - 0.06859*lambda_1[0, 176] - 1.09744*lambda_1[0, 177] + 0.00024*lambda_1[0, 178] + 0.00384*lambda_1[0, 179] + 0.00114*lambda_1[0, 180] - 0.07296*lambda_1[0, 181] + 0.41154*lambda_1[0, 182] - 1.64616*lambda_1[0, 183] - 0.00108*lambda_1[0, 184] + 0.00432*lambda_1[0, 185] - 0.00513*lambda_1[0, 186] - 0.08208*lambda_1[0, 187] + 0.09747*lambda_1[0, 188] - 0.38988*lambda_1[0, 189] - 0.00096*lambda_1[0, 191] - 0.02166*lambda_1[0, 192] - 0.34656*lambda_1[0, 193] + 0.076*lambda_1[0, 194] + 0.0076*lambda_1[0, 195] - 0.0304*lambda_1[0, 196] - 0.1444*lambda_1[0, 197] - 0.0456*lambda_1[0, 198] + 0.00076*lambda_1[0, 199] + 0.01216*lambda_1[0, 200] + 0.27436*lambda_1[0, 201] + 0.02052*lambda_1[0, 202] - 0.00304*lambda_1[0, 203] - 0.01444*lambda_1[0, 204] + 0.05776*lambda_1[0, 205] - 0.00456*lambda_1[0, 206] + 0.01824*lambda_1[0, 207] + 0.08664*lambda_1[0, 208] >= B[0, 1]- objc]
	constraints += [lambda_1[0, 27] + 0.2*lambda_1[0, 36] - 0.6*lambda_1[0, 39] + 0.03*lambda_1[0, 48] + 0.27*lambda_1[0, 51] + 0.004*lambda_1[0, 60] - 0.108*lambda_1[0, 63] + 0.0005*lambda_1[0, 72] + 0.0405*lambda_1[0, 75] - 0.12*lambda_1[0, 81] - 0.018*lambda_1[0, 90] + 0.054*lambda_1[0, 93] - 0.0024*lambda_1[0, 102] - 0.0216*lambda_1[0, 105] + 0.0081*lambda_1[0, 111] - 0.4*lambda_1[0, 115] - 1.9*lambda_1[0, 116] - 0.08*lambda_1[0, 121] + 0.16*lambda_1[0, 122] - 0.38*lambda_1[0, 123] + 3.61*lambda_1[0, 125] + 0.24*lambda_1[0, 127] + 1.14*lambda_1[0, 128] - 0.012*lambda_1[0, 133] - 0.064*lambda_1[0, 134] - 0.057*lambda_1[0, 135] - 6.859*lambda_1[0, 137] - 0.108*lambda_1[0, 139] - 0.513*lambda_1[0, 140] - 0.0016*lambda_1[0, 145] + 0.0256*lambda_1[0, 146] - 0.0076*lambda_1[0, 147] + 13.0321*lambda_1[0, 149] + 0.0432*lambda_1[0, 151] + 0.2052*lambda_1[0, 152] + 0.032*lambda_1[0, 157] + 0.722*lambda_1[0, 158] + 0.048*lambda_1[0, 160] - 0.096*lambda_1[0, 161] + 0.228*lambda_1[0, 162] - 2.166*lambda_1[0, 164] + 0.0048*lambda_1[0, 172] - 0.0128*lambda_1[0, 173] + 0.1083*lambda_1[0, 174] - 1.3718*lambda_1[0, 176] + 0.0072*lambda_1[0, 178] + 0.0384*lambda_1[0, 179] + 0.0342*lambda_1[0, 180] + 4.1154*lambda_1[0, 182] - 0.0216*lambda_1[0, 184] + 0.0432*lambda_1[0, 185] - 0.1026*lambda_1[0, 186] + 0.9747*lambda_1[0, 188] - 0.0192*lambda_1[0, 191] - 0.4332*lambda_1[0, 192] + 0.76*lambda_1[0, 194] + 0.152*lambda_1[0, 195] - 0.304*lambda_1[0, 196] - 1.444*lambda_1[0, 197] - 0.456*lambda_1[0, 198] + 0.0228*lambda_1[0, 199] + 0.1216*lambda_1[0, 200] + 2.7436*lambda_1[0, 201] + 0.2052*lambda_1[0, 202] - 0.0608*lambda_1[0, 203] - 0.2888*lambda_1[0, 204] + 0.5776*lambda_1[0, 205] - 0.0912*lambda_1[0, 206] + 0.1824*lambda_1[0, 207] + 0.8664*lambda_1[0, 208] <= B[0, 7]+ objc]
	constraints += [lambda_1[0, 27] + 0.2*lambda_1[0, 36] - 0.6*lambda_1[0, 39] + 0.03*lambda_1[0, 48] + 0.27*lambda_1[0, 51] + 0.004*lambda_1[0, 60] - 0.108*lambda_1[0, 63] + 0.0005*lambda_1[0, 72] + 0.0405*lambda_1[0, 75] - 0.12*lambda_1[0, 81] - 0.018*lambda_1[0, 90] + 0.054*lambda_1[0, 93] - 0.0024*lambda_1[0, 102] - 0.0216*lambda_1[0, 105] + 0.0081*lambda_1[0, 111] - 0.4*lambda_1[0, 115] - 1.9*lambda_1[0, 116] - 0.08*lambda_1[0, 121] + 0.16*lambda_1[0, 122] - 0.38*lambda_1[0, 123] + 3.61*lambda_1[0, 125] + 0.24*lambda_1[0, 127] + 1.14*lambda_1[0, 128] - 0.012*lambda_1[0, 133] - 0.064*lambda_1[0, 134] - 0.057*lambda_1[0, 135] - 6.859*lambda_1[0, 137] - 0.108*lambda_1[0, 139] - 0.513*lambda_1[0, 140] - 0.0016*lambda_1[0, 145] + 0.0256*lambda_1[0, 146] - 0.0076*lambda_1[0, 147] + 13.0321*lambda_1[0, 149] + 0.0432*lambda_1[0, 151] + 0.2052*lambda_1[0, 152] + 0.032*lambda_1[0, 157] + 0.722*lambda_1[0, 158] + 0.048*lambda_1[0, 160] - 0.096*lambda_1[0, 161] + 0.228*lambda_1[0, 162] - 2.166*lambda_1[0, 164] + 0.0048*lambda_1[0, 172] - 0.0128*lambda_1[0, 173] + 0.1083*lambda_1[0, 174] - 1.3718*lambda_1[0, 176] + 0.0072*lambda_1[0, 178] + 0.0384*lambda_1[0, 179] + 0.0342*lambda_1[0, 180] + 4.1154*lambda_1[0, 182] - 0.0216*lambda_1[0, 184] + 0.0432*lambda_1[0, 185] - 0.1026*lambda_1[0, 186] + 0.9747*lambda_1[0, 188] - 0.0192*lambda_1[0, 191] - 0.4332*lambda_1[0, 192] + 0.76*lambda_1[0, 194] + 0.152*lambda_1[0, 195] - 0.304*lambda_1[0, 196] - 1.444*lambda_1[0, 197] - 0.456*lambda_1[0, 198] + 0.0228*lambda_1[0, 199] + 0.1216*lambda_1[0, 200] + 2.7436*lambda_1[0, 201] + 0.2052*lambda_1[0, 202] - 0.0608*lambda_1[0, 203] - 0.2888*lambda_1[0, 204] + 0.5776*lambda_1[0, 205] - 0.0912*lambda_1[0, 206] + 0.1824*lambda_1[0, 207] + 0.8664*lambda_1[0, 208] >= B[0, 7]- objc]
	constraints += [lambda_1[0, 36] + 0.3*lambda_1[0, 48] + 0.06*lambda_1[0, 60] + 0.01*lambda_1[0, 72] - 0.6*lambda_1[0, 81] - 0.18*lambda_1[0, 90] + 0.27*lambda_1[0, 93] - 0.036*lambda_1[0, 102] - 0.108*lambda_1[0, 105] + 0.081*lambda_1[0, 111] - 0.4*lambda_1[0, 121] - 1.9*lambda_1[0, 123] - 0.12*lambda_1[0, 133] - 0.57*lambda_1[0, 135] - 0.024*lambda_1[0, 145] - 0.114*lambda_1[0, 147] + 0.16*lambda_1[0, 157] + 3.61*lambda_1[0, 158] + 0.24*lambda_1[0, 160] + 1.14*lambda_1[0, 162] + 0.048*lambda_1[0, 172] - 0.064*lambda_1[0, 173] + 1.083*lambda_1[0, 174] - 6.859*lambda_1[0, 176] + 0.072*lambda_1[0, 178] + 0.342*lambda_1[0, 180] - 0.108*lambda_1[0, 184] - 0.513*lambda_1[0, 186] - 0.096*lambda_1[0, 191] - 2.166*lambda_1[0, 192] + 0.76*lambda_1[0, 195] + 0.228*lambda_1[0, 199] - 0.304*lambda_1[0, 203] - 1.444*lambda_1[0, 204] - 0.456*lambda_1[0, 206] == 0]
	constraints += [lambda_1[0, 48] + 0.4*lambda_1[0, 60] + 0.1*lambda_1[0, 72] - 0.6*lambda_1[0, 90] - 0.24*lambda_1[0, 102] + 0.27*lambda_1[0, 111] - 0.4*lambda_1[0, 133] - 1.9*lambda_1[0, 135] - 0.16*lambda_1[0, 145] - 0.76*lambda_1[0, 147] + 0.16*lambda_1[0, 172] + 3.61*lambda_1[0, 174] + 0.24*lambda_1[0, 178] + 1.14*lambda_1[0, 180] + 0.76*lambda_1[0, 199] == 0]
	constraints += [lambda_1[0, 60] + 0.5*lambda_1[0, 72] - 0.6*lambda_1[0, 102] - 0.4*lambda_1[0, 145] - 1.9*lambda_1[0, 147] == 0]
	constraints += [lambda_1[0, 72] == 0]
	constraints += [lambda_1[0, 28] - 0.8*lambda_1[0, 37] - 0.6*lambda_1[0, 40] + 0.48*lambda_1[0, 49] + 0.27*lambda_1[0, 52] - 0.256*lambda_1[0, 61] - 0.108*lambda_1[0, 64] + 0.128*lambda_1[0, 73] + 0.0405*lambda_1[0, 76] + 0.48*lambda_1[0, 82] - 0.288*lambda_1[0, 91] - 0.216*lambda_1[0, 94] + 0.1536*lambda_1[0, 103] + 0.0864*lambda_1[0, 106] + 0.1296*lambda_1[0, 112] + 0.1*lambda_1[0, 115] - 1.9*lambda_1[0, 117] + 0.01*lambda_1[0, 121] - 0.08*lambda_1[0, 122] + 1.52*lambda_1[0, 124] + 3.61*lambda_1[0, 126] - 0.06*lambda_1[0, 127] + 1.14*lambda_1[0, 129] + 0.001*lambda_1[0, 133] + 0.048*lambda_1[0, 134] - 0.912*lambda_1[0, 136] - 6.859*lambda_1[0, 138] + 0.027*lambda_1[0, 139] - 0.513*lambda_1[0, 141] + 0.0001*lambda_1[0, 145] - 0.0256*lambda_1[0, 146] + 0.4864*lambda_1[0, 148] + 13.0321*lambda_1[0, 150] - 0.0108*lambda_1[0, 151] + 0.2052*lambda_1[0, 153] - 0.008*lambda_1[0, 157] - 2.888*lambda_1[0, 159] - 0.006*lambda_1[0, 160] + 0.048*lambda_1[0, 161] - 0.912*lambda_1[0, 163] - 2.166*lambda_1[0, 165] - 0.0008*lambda_1[0, 172] + 0.0048*lambda_1[0, 173] + 1.7328*lambda_1[0, 175] + 5.4872*lambda_1[0, 177] - 0.0006*lambda_1[0, 178] - 0.0288*lambda_1[0, 179] + 0.5472*lambda_1[0, 181] + 4.1154*lambda_1[0, 183] + 0.0027*lambda_1[0, 184] - 0.0216*lambda_1[0, 185] + 0.4104*lambda_1[0, 187] + 0.9747*lambda_1[0, 189] + 0.0048*lambda_1[0, 191] + 1.7328*lambda_1[0, 193] - 0.19*lambda_1[0, 194] - 0.019*lambda_1[0, 195] + 0.152*lambda_1[0, 196] + 0.361*lambda_1[0, 197] + 0.114*lambda_1[0, 198] - 0.0019*lambda_1[0, 199] - 0.0912*lambda_1[0, 200] - 0.6859*lambda_1[0, 201] - 0.0513*lambda_1[0, 202] + 0.0152*lambda_1[0, 203] + 0.0361*lambda_1[0, 204] - 0.2888*lambda_1[0, 205] + 0.0114*lambda_1[0, 206] - 0.0912*lambda_1[0, 207] - 0.2166*lambda_1[0, 208] <= B[0, 6]+ objc]
	constraints += [lambda_1[0, 28] - 0.8*lambda_1[0, 37] - 0.6*lambda_1[0, 40] + 0.48*lambda_1[0, 49] + 0.27*lambda_1[0, 52] - 0.256*lambda_1[0, 61] - 0.108*lambda_1[0, 64] + 0.128*lambda_1[0, 73] + 0.0405*lambda_1[0, 76] + 0.48*lambda_1[0, 82] - 0.288*lambda_1[0, 91] - 0.216*lambda_1[0, 94] + 0.1536*lambda_1[0, 103] + 0.0864*lambda_1[0, 106] + 0.1296*lambda_1[0, 112] + 0.1*lambda_1[0, 115] - 1.9*lambda_1[0, 117] + 0.01*lambda_1[0, 121] - 0.08*lambda_1[0, 122] + 1.52*lambda_1[0, 124] + 3.61*lambda_1[0, 126] - 0.06*lambda_1[0, 127] + 1.14*lambda_1[0, 129] + 0.001*lambda_1[0, 133] + 0.048*lambda_1[0, 134] - 0.912*lambda_1[0, 136] - 6.859*lambda_1[0, 138] + 0.027*lambda_1[0, 139] - 0.513*lambda_1[0, 141] + 0.0001*lambda_1[0, 145] - 0.0256*lambda_1[0, 146] + 0.4864*lambda_1[0, 148] + 13.0321*lambda_1[0, 150] - 0.0108*lambda_1[0, 151] + 0.2052*lambda_1[0, 153] - 0.008*lambda_1[0, 157] - 2.888*lambda_1[0, 159] - 0.006*lambda_1[0, 160] + 0.048*lambda_1[0, 161] - 0.912*lambda_1[0, 163] - 2.166*lambda_1[0, 165] - 0.0008*lambda_1[0, 172] + 0.0048*lambda_1[0, 173] + 1.7328*lambda_1[0, 175] + 5.4872*lambda_1[0, 177] - 0.0006*lambda_1[0, 178] - 0.0288*lambda_1[0, 179] + 0.5472*lambda_1[0, 181] + 4.1154*lambda_1[0, 183] + 0.0027*lambda_1[0, 184] - 0.0216*lambda_1[0, 185] + 0.4104*lambda_1[0, 187] + 0.9747*lambda_1[0, 189] + 0.0048*lambda_1[0, 191] + 1.7328*lambda_1[0, 193] - 0.19*lambda_1[0, 194] - 0.019*lambda_1[0, 195] + 0.152*lambda_1[0, 196] + 0.361*lambda_1[0, 197] + 0.114*lambda_1[0, 198] - 0.0019*lambda_1[0, 199] - 0.0912*lambda_1[0, 200] - 0.6859*lambda_1[0, 201] - 0.0513*lambda_1[0, 202] + 0.0152*lambda_1[0, 203] + 0.0361*lambda_1[0, 204] - 0.2888*lambda_1[0, 205] + 0.0114*lambda_1[0, 206] - 0.0912*lambda_1[0, 207] - 0.2166*lambda_1[0, 208] >= B[0, 6]- objc]
	constraints += [lambda_1[0, 115] + 0.2*lambda_1[0, 121] - 0.8*lambda_1[0, 122] - 0.6*lambda_1[0, 127] + 0.03*lambda_1[0, 133] + 0.48*lambda_1[0, 134] + 0.27*lambda_1[0, 139] + 0.004*lambda_1[0, 145] - 0.256*lambda_1[0, 146] - 0.108*lambda_1[0, 151] - 0.16*lambda_1[0, 157] - 0.12*lambda_1[0, 160] + 0.48*lambda_1[0, 161] - 0.024*lambda_1[0, 172] + 0.096*lambda_1[0, 173] - 0.018*lambda_1[0, 178] - 0.288*lambda_1[0, 179] + 0.054*lambda_1[0, 184] - 0.216*lambda_1[0, 185] + 0.096*lambda_1[0, 191] - 1.9*lambda_1[0, 194] - 0.38*lambda_1[0, 195] + 1.52*lambda_1[0, 196] + 3.61*lambda_1[0, 197] + 1.14*lambda_1[0, 198] - 0.057*lambda_1[0, 199] - 0.912*lambda_1[0, 200] - 6.859*lambda_1[0, 201] - 0.513*lambda_1[0, 202] + 0.304*lambda_1[0, 203] + 0.722*lambda_1[0, 204] - 2.888*lambda_1[0, 205] + 0.228*lambda_1[0, 206] - 0.912*lambda_1[0, 207] - 2.166*lambda_1[0, 208] == 0]
	constraints += [lambda_1[0, 121] + 0.3*lambda_1[0, 133] + 0.06*lambda_1[0, 145] - 0.8*lambda_1[0, 157] - 0.6*lambda_1[0, 160] - 0.24*lambda_1[0, 172] + 0.48*lambda_1[0, 173] - 0.18*lambda_1[0, 178] + 0.27*lambda_1[0, 184] + 0.48*lambda_1[0, 191] - 1.9*lambda_1[0, 195] - 0.57*lambda_1[0, 199] + 1.52*lambda_1[0, 203] + 3.61*lambda_1[0, 204] + 1.14*lambda_1[0, 206] == 0]
	constraints += [lambda_1[0, 133] + 0.4*lambda_1[0, 145] - 0.8*lambda_1[0, 172] - 0.6*lambda_1[0, 178] - 1.9*lambda_1[0, 199] == 0]
	constraints += [lambda_1[0, 145] == 0]
	constraints += [lambda_1[0, 37] - 1.2*lambda_1[0, 49] + 0.96*lambda_1[0, 61] - 0.64*lambda_1[0, 73] - 0.6*lambda_1[0, 82] + 0.72*lambda_1[0, 91] + 0.27*lambda_1[0, 94] - 0.576*lambda_1[0, 103] - 0.108*lambda_1[0, 106] - 0.324*lambda_1[0, 112] + 0.1*lambda_1[0, 122] - 1.9*lambda_1[0, 124] - 0.12*lambda_1[0, 134] + 2.28*lambda_1[0, 136] + 0.096*lambda_1[0, 146] - 1.824*lambda_1[0, 148] + 0.01*lambda_1[0, 157] + 3.61*lambda_1[0, 159] - 0.06*lambda_1[0, 161] + 1.14*lambda_1[0, 163] + 0.001*lambda_1[0, 172] - 0.012*lambda_1[0, 173] - 4.332*lambda_1[0, 175] - 6.859*lambda_1[0, 177] + 0.072*lambda_1[0, 179] - 1.368*lambda_1[0, 181] + 0.027*lambda_1[0, 185] - 0.513*lambda_1[0, 187] - 0.006*lambda_1[0, 191] - 2.166*lambda_1[0, 193] - 0.19*lambda_1[0, 196] + 0.228*lambda_1[0, 200] - 0.019*lambda_1[0, 203] + 0.361*lambda_1[0, 205] + 0.114*lambda_1[0, 207] == 0]
	constraints += [lambda_1[0, 122] - 1.2*lambda_1[0, 134] + 0.96*lambda_1[0, 146] + 0.2*lambda_1[0, 157] - 0.6*lambda_1[0, 161] + 0.03*lambda_1[0, 172] - 0.24*lambda_1[0, 173] + 0.72*lambda_1[0, 179] + 0.27*lambda_1[0, 185] - 0.12*lambda_1[0, 191] - 1.9*lambda_1[0, 196] + 2.28*lambda_1[0, 200] - 0.38*lambda_1[0, 203] + 3.61*lambda_1[0, 205] + 1.14*lambda_1[0, 207] == 0]
	constraints += [lambda_1[0, 157] + 0.3*lambda_1[0, 172] - 1.2*lambda_1[0, 173] - 0.6*lambda_1[0, 191] - 1.9*lambda_1[0, 203] == 0]
	constraints += [lambda_1[0, 172] == 0]
	constraints += [lambda_1[0, 49] - 1.6*lambda_1[0, 61] + 1.6*lambda_1[0, 73] - 0.6*lambda_1[0, 91] + 0.96*lambda_1[0, 103] + 0.27*lambda_1[0, 112] + 0.1*lambda_1[0, 134] - 1.9*lambda_1[0, 136] - 0.16*lambda_1[0, 146] + 3.04*lambda_1[0, 148] + 0.01*lambda_1[0, 173] + 3.61*lambda_1[0, 175] - 0.06*lambda_1[0, 179] + 1.14*lambda_1[0, 181] - 0.19*lambda_1[0, 200] == 0]
	constraints += [lambda_1[0, 134] - 1.6*lambda_1[0, 146] + 0.2*lambda_1[0, 173] - 0.6*lambda_1[0, 179] - 1.9*lambda_1[0, 200] == 0]
	constraints += [lambda_1[0, 173] == 0]
	constraints += [lambda_1[0, 61] - 2.0*lambda_1[0, 73] - 0.6*lambda_1[0, 103] + 0.1*lambda_1[0, 146] - 1.9*lambda_1[0, 148] == 0]
	constraints += [lambda_1[0, 146] == 0]
	constraints += [lambda_1[0, 73] == 0]
	constraints += [lambda_1[0, 29] - 3.8*lambda_1[0, 38] - 0.6*lambda_1[0, 41] + 10.83*lambda_1[0, 50] + 0.27*lambda_1[0, 53] - 27.436*lambda_1[0, 62] - 0.108*lambda_1[0, 65] + 65.1605*lambda_1[0, 74] + 0.0405*lambda_1[0, 77] + 2.28*lambda_1[0, 83] - 6.498*lambda_1[0, 92] - 1.026*lambda_1[0, 95] + 16.4616*lambda_1[0, 104] + 0.4104*lambda_1[0, 107] + 2.9241*lambda_1[0, 113] + 0.1*lambda_1[0, 116] - 0.4*lambda_1[0, 117] + 0.01*lambda_1[0, 123] + 0.16*lambda_1[0, 124] - 0.38*lambda_1[0, 125] + 1.52*lambda_1[0, 126] - 0.06*lambda_1[0, 128] + 0.24*lambda_1[0, 129] + 0.001*lambda_1[0, 135] - 0.064*lambda_1[0, 136] + 1.083*lambda_1[0, 137] - 4.332*lambda_1[0, 138] + 0.027*lambda_1[0, 140] - 0.108*lambda_1[0, 141] + 0.0001*lambda_1[0, 147] + 0.0256*lambda_1[0, 148] - 2.7436*lambda_1[0, 149] + 10.9744*lambda_1[0, 150] - 0.0108*lambda_1[0, 152] + 0.0432*lambda_1[0, 153] - 0.038*lambda_1[0, 158] - 0.608*lambda_1[0, 159] - 0.006*lambda_1[0, 162] - 0.096*lambda_1[0, 163] + 0.228*lambda_1[0, 164] - 0.912*lambda_1[0, 165] - 0.0038*lambda_1[0, 174] + 0.2432*lambda_1[0, 175] + 0.1083*lambda_1[0, 176] + 1.7328*lambda_1[0, 177] - 0.0006*lambda_1[0, 180] + 0.0384*lambda_1[0, 181] - 0.6498*lambda_1[0, 182] + 2.5992*lambda_1[0, 183] + 0.0027*lambda_1[0, 186] + 0.0432*lambda_1[0, 187] - 0.1026*lambda_1[0, 188] + 0.4104*lambda_1[0, 189] + 0.0228*lambda_1[0, 192] + 0.3648*lambda_1[0, 193] - 0.04*lambda_1[0, 194] - 0.004*lambda_1[0, 195] + 0.016*lambda_1[0, 196] + 0.152*lambda_1[0, 197] + 0.024*lambda_1[0, 198] - 0.0004*lambda_1[0, 199] - 0.0064*lambda_1[0, 200] - 0.4332*lambda_1[0, 201] - 0.0108*lambda_1[0, 202] + 0.0016*lambda_1[0, 203] + 0.0152*lambda_1[0, 204] - 0.0608*lambda_1[0, 205] + 0.0024*lambda_1[0, 206] - 0.0096*lambda_1[0, 207] - 0.0912*lambda_1[0, 208] <= B[0, 5]+ objc]
	constraints += [lambda_1[0, 29] - 3.8*lambda_1[0, 38] - 0.6*lambda_1[0, 41] + 10.83*lambda_1[0, 50] + 0.27*lambda_1[0, 53] - 27.436*lambda_1[0, 62] - 0.108*lambda_1[0, 65] + 65.1605*lambda_1[0, 74] + 0.0405*lambda_1[0, 77] + 2.28*lambda_1[0, 83] - 6.498*lambda_1[0, 92] - 1.026*lambda_1[0, 95] + 16.4616*lambda_1[0, 104] + 0.4104*lambda_1[0, 107] + 2.9241*lambda_1[0, 113] + 0.1*lambda_1[0, 116] - 0.4*lambda_1[0, 117] + 0.01*lambda_1[0, 123] + 0.16*lambda_1[0, 124] - 0.38*lambda_1[0, 125] + 1.52*lambda_1[0, 126] - 0.06*lambda_1[0, 128] + 0.24*lambda_1[0, 129] + 0.001*lambda_1[0, 135] - 0.064*lambda_1[0, 136] + 1.083*lambda_1[0, 137] - 4.332*lambda_1[0, 138] + 0.027*lambda_1[0, 140] - 0.108*lambda_1[0, 141] + 0.0001*lambda_1[0, 147] + 0.0256*lambda_1[0, 148] - 2.7436*lambda_1[0, 149] + 10.9744*lambda_1[0, 150] - 0.0108*lambda_1[0, 152] + 0.0432*lambda_1[0, 153] - 0.038*lambda_1[0, 158] - 0.608*lambda_1[0, 159] - 0.006*lambda_1[0, 162] - 0.096*lambda_1[0, 163] + 0.228*lambda_1[0, 164] - 0.912*lambda_1[0, 165] - 0.0038*lambda_1[0, 174] + 0.2432*lambda_1[0, 175] + 0.1083*lambda_1[0, 176] + 1.7328*lambda_1[0, 177] - 0.0006*lambda_1[0, 180] + 0.0384*lambda_1[0, 181] - 0.6498*lambda_1[0, 182] + 2.5992*lambda_1[0, 183] + 0.0027*lambda_1[0, 186] + 0.0432*lambda_1[0, 187] - 0.1026*lambda_1[0, 188] + 0.4104*lambda_1[0, 189] + 0.0228*lambda_1[0, 192] + 0.3648*lambda_1[0, 193] - 0.04*lambda_1[0, 194] - 0.004*lambda_1[0, 195] + 0.016*lambda_1[0, 196] + 0.152*lambda_1[0, 197] + 0.024*lambda_1[0, 198] - 0.0004*lambda_1[0, 199] - 0.0064*lambda_1[0, 200] - 0.4332*lambda_1[0, 201] - 0.0108*lambda_1[0, 202] + 0.0016*lambda_1[0, 203] + 0.0152*lambda_1[0, 204] - 0.0608*lambda_1[0, 205] + 0.0024*lambda_1[0, 206] - 0.0096*lambda_1[0, 207] - 0.0912*lambda_1[0, 208] >= B[0, 5]- objc]
	constraints += [lambda_1[0, 116] + 0.2*lambda_1[0, 123] - 3.8*lambda_1[0, 125] - 0.6*lambda_1[0, 128] + 0.03*lambda_1[0, 135] + 10.83*lambda_1[0, 137] + 0.27*lambda_1[0, 140] + 0.004*lambda_1[0, 147] - 27.436*lambda_1[0, 149] - 0.108*lambda_1[0, 152] - 0.76*lambda_1[0, 158] - 0.12*lambda_1[0, 162] + 2.28*lambda_1[0, 164] - 0.114*lambda_1[0, 174] + 2.166*lambda_1[0, 176] - 0.018*lambda_1[0, 180] - 6.498*lambda_1[0, 182] + 0.054*lambda_1[0, 186] - 1.026*lambda_1[0, 188] + 0.456*lambda_1[0, 192] - 0.4*lambda_1[0, 194] - 0.08*lambda_1[0, 195] + 0.16*lambda_1[0, 196] + 1.52*lambda_1[0, 197] + 0.24*lambda_1[0, 198] - 0.012*lambda_1[0, 199] - 0.064*lambda_1[0, 200] - 4.332*lambda_1[0, 201] - 0.108*lambda_1[0, 202] + 0.032*lambda_1[0, 203] + 0.304*lambda_1[0, 204] - 0.608*lambda_1[0, 205] + 0.048*lambda_1[0, 206] - 0.096*lambda_1[0, 207] - 0.912*lambda_1[0, 208] == 0]
	constraints += [lambda_1[0, 123] + 0.3*lambda_1[0, 135] + 0.06*lambda_1[0, 147] - 3.8*lambda_1[0, 158] - 0.6*lambda_1[0, 162] - 1.14*lambda_1[0, 174] + 10.83*lambda_1[0, 176] - 0.18*lambda_1[0, 180] + 0.27*lambda_1[0, 186] + 2.28*lambda_1[0, 192] - 0.4*lambda_1[0, 195] - 0.12*lambda_1[0, 199] + 0.16*lambda_1[0, 203] + 1.52*lambda_1[0, 204] + 0.24*lambda_1[0, 206] == 0]
	constraints += [lambda_1[0, 135] + 0.4*lambda_1[0, 147] - 3.8*lambda_1[0, 174] - 0.6*lambda_1[0, 180] - 0.4*lambda_1[0, 199] == 0]
	constraints += [lambda_1[0, 147] == 0]
	constraints += [lambda_1[0, 117] - 0.8*lambda_1[0, 124] - 3.8*lambda_1[0, 126] - 0.6*lambda_1[0, 129] + 0.48*lambda_1[0, 136] + 10.83*lambda_1[0, 138] + 0.27*lambda_1[0, 141] - 0.256*lambda_1[0, 148] - 27.436*lambda_1[0, 150] - 0.108*lambda_1[0, 153] + 3.04*lambda_1[0, 159] + 0.48*lambda_1[0, 163] + 2.28*lambda_1[0, 165] - 1.824*lambda_1[0, 175] - 8.664*lambda_1[0, 177] - 0.288*lambda_1[0, 181] - 6.498*lambda_1[0, 183] - 0.216*lambda_1[0, 187] - 1.026*lambda_1[0, 189] - 1.824*lambda_1[0, 193] + 0.1*lambda_1[0, 194] + 0.01*lambda_1[0, 195] - 0.08*lambda_1[0, 196] - 0.38*lambda_1[0, 197] - 0.06*lambda_1[0, 198] + 0.001*lambda_1[0, 199] + 0.048*lambda_1[0, 200] + 1.083*lambda_1[0, 201] + 0.027*lambda_1[0, 202] - 0.008*lambda_1[0, 203] - 0.038*lambda_1[0, 204] + 0.304*lambda_1[0, 205] - 0.006*lambda_1[0, 206] + 0.048*lambda_1[0, 207] + 0.228*lambda_1[0, 208] == 0]
	constraints += [lambda_1[0, 194] + 0.2*lambda_1[0, 195] - 0.8*lambda_1[0, 196] - 3.8*lambda_1[0, 197] - 0.6*lambda_1[0, 198] + 0.03*lambda_1[0, 199] + 0.48*lambda_1[0, 200] + 10.83*lambda_1[0, 201] + 0.27*lambda_1[0, 202] - 0.16*lambda_1[0, 203] - 0.76*lambda_1[0, 204] + 3.04*lambda_1[0, 205] - 0.12*lambda_1[0, 206] + 0.48*lambda_1[0, 207] + 2.28*lambda_1[0, 208] == 0]
	constraints += [lambda_1[0, 195] + 0.3*lambda_1[0, 199] - 0.8*lambda_1[0, 203] - 3.8*lambda_1[0, 204] - 0.6*lambda_1[0, 206] == 0]
	constraints += [lambda_1[0, 199] == 0]
	constraints += [lambda_1[0, 124] - 1.2*lambda_1[0, 136] + 0.96*lambda_1[0, 148] - 3.8*lambda_1[0, 159] - 0.6*lambda_1[0, 163] + 4.56*lambda_1[0, 175] + 10.83*lambda_1[0, 177] + 0.72*lambda_1[0, 181] + 0.27*lambda_1[0, 187] + 2.28*lambda_1[0, 193] + 0.1*lambda_1[0, 196] - 0.12*lambda_1[0, 200] + 0.01*lambda_1[0, 203] - 0.38*lambda_1[0, 205] - 0.06*lambda_1[0, 207] == 0]
	constraints += [lambda_1[0, 196] - 1.2*lambda_1[0, 200] + 0.2*lambda_1[0, 203] - 3.8*lambda_1[0, 205] - 0.6*lambda_1[0, 207] == 0]
	constraints += [lambda_1[0, 203] == 0]
	constraints += [lambda_1[0, 136] - 1.6*lambda_1[0, 148] - 3.8*lambda_1[0, 175] - 0.6*lambda_1[0, 181] + 0.1*lambda_1[0, 200] == 0]
	constraints += [lambda_1[0, 200] == 0]
	constraints += [lambda_1[0, 148] == 0]
	constraints += [1.0*lambda_1[0, 38] - 5.7*lambda_1[0, 50] + 21.66*lambda_1[0, 62] - 68.59*lambda_1[0, 74] - 0.6*lambda_1[0, 83] + 3.42*lambda_1[0, 92] + 0.27*lambda_1[0, 95] - 12.996*lambda_1[0, 104] - 0.108*lambda_1[0, 107] - 1.539*lambda_1[0, 113] + 0.1*lambda_1[0, 125] - 0.4*lambda_1[0, 126] - 0.57*lambda_1[0, 137] + 2.28*lambda_1[0, 138] + 2.166*lambda_1[0, 149] - 8.664*lambda_1[0, 150] + 0.01*lambda_1[0, 158] + 0.16*lambda_1[0, 159] - 0.06*lambda_1[0, 164] + 0.24*lambda_1[0, 165] + 0.001*lambda_1[0, 174] - 0.064*lambda_1[0, 175] - 0.057*lambda_1[0, 176] - 0.912*lambda_1[0, 177] + 0.342*lambda_1[0, 182] - 1.368*lambda_1[0, 183] + 0.027*lambda_1[0, 188] - 0.108*lambda_1[0, 189] - 0.006*lambda_1[0, 192] - 0.096*lambda_1[0, 193] - 0.04*lambda_1[0, 197] + 0.228*lambda_1[0, 201] - 0.004*lambda_1[0, 204] + 0.016*lambda_1[0, 205] + 0.024*lambda_1[0, 208] == 0]
	constraints += [1.0*lambda_1[0, 125] - 5.7*lambda_1[0, 137] + 21.66*lambda_1[0, 149] + 0.2*lambda_1[0, 158] - 0.6*lambda_1[0, 164] + 0.03*lambda_1[0, 174] - 1.14*lambda_1[0, 176] + 3.42*lambda_1[0, 182] + 0.27*lambda_1[0, 188] - 0.12*lambda_1[0, 192] - 0.4*lambda_1[0, 197] + 2.28*lambda_1[0, 201] - 0.08*lambda_1[0, 204] + 0.16*lambda_1[0, 205] + 0.24*lambda_1[0, 208] == 0]
	constraints += [1.0*lambda_1[0, 158] + 0.3*lambda_1[0, 174] - 5.7*lambda_1[0, 176] - 0.6*lambda_1[0, 192] - 0.4*lambda_1[0, 204] == 0]
	constraints += [1.0*lambda_1[0, 174] == 0]
	constraints += [1.0*lambda_1[0, 126] - 5.7*lambda_1[0, 138] + 21.66*lambda_1[0, 150] - 0.8*lambda_1[0, 159] - 0.6*lambda_1[0, 165] + 0.48*lambda_1[0, 175] + 4.56*lambda_1[0, 177] + 3.42*lambda_1[0, 183] + 0.27*lambda_1[0, 189] + 0.48*lambda_1[0, 193] + 0.1*lambda_1[0, 197] - 0.57*lambda_1[0, 201] + 0.01*lambda_1[0, 204] - 0.08*lambda_1[0, 205] - 0.06*lambda_1[0, 208] == 0]
	constraints += [1.0*lambda_1[0, 197] - 5.7*lambda_1[0, 201] + 0.2*lambda_1[0, 204] - 0.8*lambda_1[0, 205] - 0.6*lambda_1[0, 208] == 0]
	constraints += [1.0*lambda_1[0, 204] == 0]
	constraints += [1.0*lambda_1[0, 159] - 1.2*lambda_1[0, 175] - 5.7*lambda_1[0, 177] - 0.6*lambda_1[0, 193] + 0.1*lambda_1[0, 205] == 0]
	constraints += [1.0*lambda_1[0, 205] == 0]
	constraints += [1.0*lambda_1[0, 175] == 0]
	constraints += [1.0*lambda_1[0, 50] - 7.6*lambda_1[0, 62] + 36.1*lambda_1[0, 74] - 0.6*lambda_1[0, 92] + 4.56*lambda_1[0, 104] + 0.27*lambda_1[0, 113] + 0.1*lambda_1[0, 137] - 0.4*lambda_1[0, 138] - 0.76*lambda_1[0, 149] + 3.04*lambda_1[0, 150] + 0.01*lambda_1[0, 176] + 0.16*lambda_1[0, 177] - 0.06*lambda_1[0, 182] + 0.24*lambda_1[0, 183] - 0.04*lambda_1[0, 201] == 0]
	constraints += [1.0*lambda_1[0, 137] - 7.6*lambda_1[0, 149] + 0.2*lambda_1[0, 176] - 0.6*lambda_1[0, 182] - 0.4*lambda_1[0, 201] == 0]
	constraints += [1.0*lambda_1[0, 176] == 0]
	constraints += [1.0*lambda_1[0, 138] - 7.6*lambda_1[0, 150] - 0.8*lambda_1[0, 177] - 0.6*lambda_1[0, 183] + 0.1*lambda_1[0, 201] == 0]
	constraints += [1.0*lambda_1[0, 201] == 0]
	constraints += [1.0*lambda_1[0, 177] == 0]
	constraints += [1.0*lambda_1[0, 62] - 9.49999999999999*lambda_1[0, 74] - 0.6*lambda_1[0, 104] + 0.1*lambda_1[0, 149] - 0.4*lambda_1[0, 150] == 0]
	constraints += [1.0*lambda_1[0, 149] == 0]
	constraints += [1.0*lambda_1[0, 150] == 0]
	constraints += [0.999999999999999*lambda_1[0, 74] == 0]
	constraints += [lambda_1[0, 7] - 0.9*lambda_1[0, 11] + 0.54*lambda_1[0, 15] - 0.27*lambda_1[0, 19] + 0.1215*lambda_1[0, 23] + 0.1*lambda_1[0, 39] - 0.4*lambda_1[0, 40] - 1.9*lambda_1[0, 41] - 0.09*lambda_1[0, 51] + 0.36*lambda_1[0, 52] + 1.71*lambda_1[0, 53] + 0.054*lambda_1[0, 63] - 0.216*lambda_1[0, 64] - 1.026*lambda_1[0, 65] - 0.027*lambda_1[0, 75] + 0.108*lambda_1[0, 76] + 0.513*lambda_1[0, 77] + 0.01*lambda_1[0, 81] + 0.16*lambda_1[0, 82] + 3.61*lambda_1[0, 83] + 0.001*lambda_1[0, 90] - 0.064*lambda_1[0, 91] - 6.859*lambda_1[0, 92] - 0.009*lambda_1[0, 93] - 0.144*lambda_1[0, 94] - 3.249*lambda_1[0, 95] + 0.0001*lambda_1[0, 102] + 0.0256*lambda_1[0, 103] + 13.0321*lambda_1[0, 104] + 0.0054*lambda_1[0, 105] + 0.0864*lambda_1[0, 106] + 1.9494*lambda_1[0, 107] - 0.0009*lambda_1[0, 111] + 0.0576*lambda_1[0, 112] + 6.1731*lambda_1[0, 113] - 0.04*lambda_1[0, 127] - 0.19*lambda_1[0, 128] + 0.76*lambda_1[0, 129] + 0.036*lambda_1[0, 139] + 0.171*lambda_1[0, 140] - 0.684*lambda_1[0, 141] - 0.0216*lambda_1[0, 151] - 0.1026*lambda_1[0, 152] + 0.4104*lambda_1[0, 153] - 0.004*lambda_1[0, 160] + 0.016*lambda_1[0, 161] - 0.019*lambda_1[0, 162] - 0.304*lambda_1[0, 163] + 0.361*lambda_1[0, 164] - 1.444*lambda_1[0, 165] - 0.0004*lambda_1[0, 178] - 0.0064*lambda_1[0, 179] - 0.0019*lambda_1[0, 180] + 0.1216*lambda_1[0, 181] - 0.6859*lambda_1[0, 182] + 2.7436*lambda_1[0, 183] + 0.0036*lambda_1[0, 184] - 0.0144*lambda_1[0, 185] + 0.0171*lambda_1[0, 186] + 0.2736*lambda_1[0, 187] - 0.3249*lambda_1[0, 188] + 1.2996*lambda_1[0, 189] + 0.0016*lambda_1[0, 191] + 0.0361*lambda_1[0, 192] + 0.5776*lambda_1[0, 193] + 0.076*lambda_1[0, 198] - 0.0684*lambda_1[0, 202] + 0.0076*lambda_1[0, 206] - 0.0304*lambda_1[0, 207] - 0.1444*lambda_1[0, 208] <= B[0, 11]+ objc]
	constraints += [lambda_1[0, 7] - 0.9*lambda_1[0, 11] + 0.54*lambda_1[0, 15] - 0.27*lambda_1[0, 19] + 0.1215*lambda_1[0, 23] + 0.1*lambda_1[0, 39] - 0.4*lambda_1[0, 40] - 1.9*lambda_1[0, 41] - 0.09*lambda_1[0, 51] + 0.36*lambda_1[0, 52] + 1.71*lambda_1[0, 53] + 0.054*lambda_1[0, 63] - 0.216*lambda_1[0, 64] - 1.026*lambda_1[0, 65] - 0.027*lambda_1[0, 75] + 0.108*lambda_1[0, 76] + 0.513*lambda_1[0, 77] + 0.01*lambda_1[0, 81] + 0.16*lambda_1[0, 82] + 3.61*lambda_1[0, 83] + 0.001*lambda_1[0, 90] - 0.064*lambda_1[0, 91] - 6.859*lambda_1[0, 92] - 0.009*lambda_1[0, 93] - 0.144*lambda_1[0, 94] - 3.249*lambda_1[0, 95] + 0.0001*lambda_1[0, 102] + 0.0256*lambda_1[0, 103] + 13.0321*lambda_1[0, 104] + 0.0054*lambda_1[0, 105] + 0.0864*lambda_1[0, 106] + 1.9494*lambda_1[0, 107] - 0.0009*lambda_1[0, 111] + 0.0576*lambda_1[0, 112] + 6.1731*lambda_1[0, 113] - 0.04*lambda_1[0, 127] - 0.19*lambda_1[0, 128] + 0.76*lambda_1[0, 129] + 0.036*lambda_1[0, 139] + 0.171*lambda_1[0, 140] - 0.684*lambda_1[0, 141] - 0.0216*lambda_1[0, 151] - 0.1026*lambda_1[0, 152] + 0.4104*lambda_1[0, 153] - 0.004*lambda_1[0, 160] + 0.016*lambda_1[0, 161] - 0.019*lambda_1[0, 162] - 0.304*lambda_1[0, 163] + 0.361*lambda_1[0, 164] - 1.444*lambda_1[0, 165] - 0.0004*lambda_1[0, 178] - 0.0064*lambda_1[0, 179] - 0.0019*lambda_1[0, 180] + 0.1216*lambda_1[0, 181] - 0.6859*lambda_1[0, 182] + 2.7436*lambda_1[0, 183] + 0.0036*lambda_1[0, 184] - 0.0144*lambda_1[0, 185] + 0.0171*lambda_1[0, 186] + 0.2736*lambda_1[0, 187] - 0.3249*lambda_1[0, 188] + 1.2996*lambda_1[0, 189] + 0.0016*lambda_1[0, 191] + 0.0361*lambda_1[0, 192] + 0.5776*lambda_1[0, 193] + 0.076*lambda_1[0, 198] - 0.0684*lambda_1[0, 202] + 0.0076*lambda_1[0, 206] - 0.0304*lambda_1[0, 207] - 0.1444*lambda_1[0, 208] >= B[0, 11]- objc]
	constraints += [lambda_1[0, 39] - 0.9*lambda_1[0, 51] + 0.54*lambda_1[0, 63] - 0.27*lambda_1[0, 75] + 0.2*lambda_1[0, 81] + 0.03*lambda_1[0, 90] - 0.18*lambda_1[0, 93] + 0.004*lambda_1[0, 102] + 0.108*lambda_1[0, 105] - 0.027*lambda_1[0, 111] - 0.4*lambda_1[0, 127] - 1.9*lambda_1[0, 128] + 0.36*lambda_1[0, 139] + 1.71*lambda_1[0, 140] - 0.216*lambda_1[0, 151] - 1.026*lambda_1[0, 152] - 0.08*lambda_1[0, 160] + 0.16*lambda_1[0, 161] - 0.38*lambda_1[0, 162] + 3.61*lambda_1[0, 164] - 0.012*lambda_1[0, 178] - 0.064*lambda_1[0, 179] - 0.057*lambda_1[0, 180] - 6.859*lambda_1[0, 182] + 0.072*lambda_1[0, 184] - 0.144*lambda_1[0, 185] + 0.342*lambda_1[0, 186] - 3.249*lambda_1[0, 188] + 0.032*lambda_1[0, 191] + 0.722*lambda_1[0, 192] + 0.76*lambda_1[0, 198] - 0.684*lambda_1[0, 202] + 0.152*lambda_1[0, 206] - 0.304*lambda_1[0, 207] - 1.444*lambda_1[0, 208] == 0]
	constraints += [lambda_1[0, 81] + 0.3*lambda_1[0, 90] - 0.9*lambda_1[0, 93] + 0.06*lambda_1[0, 102] + 0.54*lambda_1[0, 105] - 0.27*lambda_1[0, 111] - 0.4*lambda_1[0, 160] - 1.9*lambda_1[0, 162] - 0.12*lambda_1[0, 178] - 0.57*lambda_1[0, 180] + 0.36*lambda_1[0, 184] + 1.71*lambda_1[0, 186] + 0.16*lambda_1[0, 191] + 3.61*lambda_1[0, 192] + 0.76*lambda_1[0, 206] == 0]
	constraints += [lambda_1[0, 90] + 0.4*lambda_1[0, 102] - 0.9*lambda_1[0, 111] - 0.4*lambda_1[0, 178] - 1.9*lambda_1[0, 180] == 0]
	constraints += [lambda_1[0, 102] == 0]
	constraints += [lambda_1[0, 40] - 0.9*lambda_1[0, 52] + 0.54*lambda_1[0, 64] - 0.27*lambda_1[0, 76] - 0.8*lambda_1[0, 82] + 0.48*lambda_1[0, 91] + 0.72*lambda_1[0, 94] - 0.256*lambda_1[0, 103] - 0.432*lambda_1[0, 106] - 0.432*lambda_1[0, 112] + 0.1*lambda_1[0, 127] - 1.9*lambda_1[0, 129] - 0.09*lambda_1[0, 139] + 1.71*lambda_1[0, 141] + 0.054*lambda_1[0, 151] - 1.026*lambda_1[0, 153] + 0.01*lambda_1[0, 160] - 0.08*lambda_1[0, 161] + 1.52*lambda_1[0, 163] + 3.61*lambda_1[0, 165] + 0.001*lambda_1[0, 178] + 0.048*lambda_1[0, 179] - 0.912*lambda_1[0, 181] - 6.859*lambda_1[0, 183] - 0.009*lambda_1[0, 184] + 0.072*lambda_1[0, 185] - 1.368*lambda_1[0, 187] - 3.249*lambda_1[0, 189] - 0.008*lambda_1[0, 191] - 2.888*lambda_1[0, 193] - 0.19*lambda_1[0, 198] + 0.171*lambda_1[0, 202] - 0.019*lambda_1[0, 206] + 0.152*lambda_1[0, 207] + 0.361*lambda_1[0, 208] == 0]
	constraints += [lambda_1[0, 127] - 0.9*lambda_1[0, 139] + 0.54*lambda_1[0, 151] + 0.2*lambda_1[0, 160] - 0.8*lambda_1[0, 161] + 0.03*lambda_1[0, 178] + 0.48*lambda_1[0, 179] - 0.18*lambda_1[0, 184] + 0.72*lambda_1[0, 185] - 0.16*lambda_1[0, 191] - 1.9*lambda_1[0, 198] + 1.71*lambda_1[0, 202] - 0.38*lambda_1[0, 206] + 1.52*lambda_1[0, 207] + 3.61*lambda_1[0, 208] == 0]
	constraints += [lambda_1[0, 160] + 0.3*lambda_1[0, 178] - 0.9*lambda_1[0, 184] - 0.8*lambda_1[0, 191] - 1.9*lambda_1[0, 206] == 0]
	constraints += [lambda_1[0, 178] == 0]
	constraints += [lambda_1[0, 82] - 1.2*lambda_1[0, 91] - 0.9*lambda_1[0, 94] + 0.96*lambda_1[0, 103] + 0.54*lambda_1[0, 106] + 1.08*lambda_1[0, 112] + 0.1*lambda_1[0, 161] - 1.9*lambda_1[0, 163] - 0.12*lambda_1[0, 179] + 2.28*lambda_1[0, 181] - 0.09*lambda_1[0, 185] + 1.71*lambda_1[0, 187] + 0.01*lambda_1[0, 191] + 3.61*lambda_1[0, 193] - 0.19*lambda_1[0, 207] == 0]
	constraints += [lambda_1[0, 161] - 1.2*lambda_1[0, 179] - 0.9*lambda_1[0, 185] + 0.2*lambda_1[0, 191] - 1.9*lambda_1[0, 207] == 0]
	constraints += [lambda_1[0, 191] == 0]
	constraints += [lambda_1[0, 91] - 1.6*lambda_1[0, 103] - 0.9*lambda_1[0, 112] + 0.1*lambda_1[0, 179] - 1.9*lambda_1[0, 181] == 0]
	constraints += [lambda_1[0, 179] == 0]
	constraints += [lambda_1[0, 103] == 0]
	constraints += [lambda_1[0, 41] - 0.9*lambda_1[0, 53] + 0.54*lambda_1[0, 65] - 0.27*lambda_1[0, 77] - 3.8*lambda_1[0, 83] + 10.83*lambda_1[0, 92] + 3.42*lambda_1[0, 95] - 27.436*lambda_1[0, 104] - 2.052*lambda_1[0, 107] - 9.747*lambda_1[0, 113] + 0.1*lambda_1[0, 128] - 0.4*lambda_1[0, 129] - 0.09*lambda_1[0, 140] + 0.36*lambda_1[0, 141] + 0.054*lambda_1[0, 152] - 0.216*lambda_1[0, 153] + 0.01*lambda_1[0, 162] + 0.16*lambda_1[0, 163] - 0.38*lambda_1[0, 164] + 1.52*lambda_1[0, 165] + 0.001*lambda_1[0, 180] - 0.064*lambda_1[0, 181] + 1.083*lambda_1[0, 182] - 4.332*lambda_1[0, 183] - 0.009*lambda_1[0, 186] - 0.144*lambda_1[0, 187] + 0.342*lambda_1[0, 188] - 1.368*lambda_1[0, 189] - 0.038*lambda_1[0, 192] - 0.608*lambda_1[0, 193] - 0.04*lambda_1[0, 198] + 0.036*lambda_1[0, 202] - 0.004*lambda_1[0, 206] + 0.016*lambda_1[0, 207] + 0.152*lambda_1[0, 208] == 0]
	constraints += [lambda_1[0, 128] - 0.9*lambda_1[0, 140] + 0.54*lambda_1[0, 152] + 0.2*lambda_1[0, 162] - 3.8*lambda_1[0, 164] + 0.03*lambda_1[0, 180] + 10.83*lambda_1[0, 182] - 0.18*lambda_1[0, 186] + 3.42*lambda_1[0, 188] - 0.76*lambda_1[0, 192] - 0.4*lambda_1[0, 198] + 0.36*lambda_1[0, 202] - 0.08*lambda_1[0, 206] + 0.16*lambda_1[0, 207] + 1.52*lambda_1[0, 208] == 0]
	constraints += [lambda_1[0, 162] + 0.3*lambda_1[0, 180] - 0.9*lambda_1[0, 186] - 3.8*lambda_1[0, 192] - 0.4*lambda_1[0, 206] == 0]
	constraints += [lambda_1[0, 180] == 0]
	constraints += [lambda_1[0, 129] - 0.9*lambda_1[0, 141] + 0.54*lambda_1[0, 153] - 0.8*lambda_1[0, 163] - 3.8*lambda_1[0, 165] + 0.48*lambda_1[0, 181] + 10.83*lambda_1[0, 183] + 0.72*lambda_1[0, 187] + 3.42*lambda_1[0, 189] + 3.04*lambda_1[0, 193] + 0.1*lambda_1[0, 198] - 0.09*lambda_1[0, 202] + 0.01*lambda_1[0, 206] - 0.08*lambda_1[0, 207] - 0.38*lambda_1[0, 208] == 0]
	constraints += [lambda_1[0, 198] - 0.9*lambda_1[0, 202] + 0.2*lambda_1[0, 206] - 0.8*lambda_1[0, 207] - 3.8*lambda_1[0, 208] == 0]
	constraints += [lambda_1[0, 206] == 0]
	constraints += [lambda_1[0, 163] - 1.2*lambda_1[0, 181] - 0.9*lambda_1[0, 187] - 3.8*lambda_1[0, 193] + 0.1*lambda_1[0, 207] == 0]
	constraints += [lambda_1[0, 207] == 0]
	constraints += [lambda_1[0, 181] == 0]
	constraints += [1.0*lambda_1[0, 83] - 5.7*lambda_1[0, 92] - 0.9*lambda_1[0, 95] + 21.66*lambda_1[0, 104] + 0.54*lambda_1[0, 107] + 5.13*lambda_1[0, 113] + 0.1*lambda_1[0, 164] - 0.4*lambda_1[0, 165] - 0.57*lambda_1[0, 182] + 2.28*lambda_1[0, 183] - 0.09*lambda_1[0, 188] + 0.36*lambda_1[0, 189] + 0.01*lambda_1[0, 192] + 0.16*lambda_1[0, 193] - 0.04*lambda_1[0, 208] == 0]
	constraints += [1.0*lambda_1[0, 164] - 5.7*lambda_1[0, 182] - 0.9*lambda_1[0, 188] + 0.2*lambda_1[0, 192] - 0.4*lambda_1[0, 208] == 0]
	constraints += [1.0*lambda_1[0, 192] == 0]
	constraints += [1.0*lambda_1[0, 165] - 5.7*lambda_1[0, 183] - 0.9*lambda_1[0, 189] - 0.8*lambda_1[0, 193] + 0.1*lambda_1[0, 208] == 0]
	constraints += [1.0*lambda_1[0, 208] == 0]
	constraints += [1.0*lambda_1[0, 193] == 0]
	constraints += [1.0*lambda_1[0, 92] - 7.6*lambda_1[0, 104] - 0.9*lambda_1[0, 113] + 0.1*lambda_1[0, 182] - 0.4*lambda_1[0, 183] == 0]
	constraints += [1.0*lambda_1[0, 182] == 0]
	constraints += [1.0*lambda_1[0, 183] == 0]
	constraints += [1.0*lambda_1[0, 104] == 0]
	constraints += [lambda_1[0, 11] - 1.2*lambda_1[0, 15] + 0.9*lambda_1[0, 19] - 0.54*lambda_1[0, 23] + 0.1*lambda_1[0, 51] - 0.4*lambda_1[0, 52] - 1.9*lambda_1[0, 53] - 0.12*lambda_1[0, 63] + 0.48*lambda_1[0, 64] + 2.28*lambda_1[0, 65] + 0.09*lambda_1[0, 75] - 0.36*lambda_1[0, 76] - 1.71*lambda_1[0, 77] + 0.01*lambda_1[0, 93] + 0.16*lambda_1[0, 94] + 3.61*lambda_1[0, 95] - 0.012*lambda_1[0, 105] - 0.192*lambda_1[0, 106] - 4.332*lambda_1[0, 107] + 0.001*lambda_1[0, 111] - 0.064*lambda_1[0, 112] - 6.859*lambda_1[0, 113] - 0.04*lambda_1[0, 139] - 0.19*lambda_1[0, 140] + 0.76*lambda_1[0, 141] + 0.048*lambda_1[0, 151] + 0.228*lambda_1[0, 152] - 0.912*lambda_1[0, 153] - 0.004*lambda_1[0, 184] + 0.016*lambda_1[0, 185] - 0.019*lambda_1[0, 186] - 0.304*lambda_1[0, 187] + 0.361*lambda_1[0, 188] - 1.444*lambda_1[0, 189] + 0.076*lambda_1[0, 202] == 0]
	constraints += [lambda_1[0, 51] - 1.2*lambda_1[0, 63] + 0.9*lambda_1[0, 75] + 0.2*lambda_1[0, 93] - 0.24*lambda_1[0, 105] + 0.03*lambda_1[0, 111] - 0.4*lambda_1[0, 139] - 1.9*lambda_1[0, 140] + 0.48*lambda_1[0, 151] + 2.28*lambda_1[0, 152] - 0.08*lambda_1[0, 184] + 0.16*lambda_1[0, 185] - 0.38*lambda_1[0, 186] + 3.61*lambda_1[0, 188] + 0.76*lambda_1[0, 202] == 0]
	constraints += [lambda_1[0, 93] - 1.2*lambda_1[0, 105] + 0.3*lambda_1[0, 111] - 0.4*lambda_1[0, 184] - 1.9*lambda_1[0, 186] == 0]
	constraints += [lambda_1[0, 111] == 0]
	constraints += [lambda_1[0, 52] - 1.2*lambda_1[0, 64] + 0.9*lambda_1[0, 76] - 0.8*lambda_1[0, 94] + 0.96*lambda_1[0, 106] + 0.48*lambda_1[0, 112] + 0.1*lambda_1[0, 139] - 1.9*lambda_1[0, 141] - 0.12*lambda_1[0, 151] + 2.28*lambda_1[0, 153] + 0.01*lambda_1[0, 184] - 0.08*lambda_1[0, 185] + 1.52*lambda_1[0, 187] + 3.61*lambda_1[0, 189] - 0.19*lambda_1[0, 202] == 0]
	constraints += [lambda_1[0, 139] - 1.2*lambda_1[0, 151] + 0.2*lambda_1[0, 184] - 0.8*lambda_1[0, 185] - 1.9*lambda_1[0, 202] == 0]
	constraints += [lambda_1[0, 184] == 0]
	constraints += [lambda_1[0, 94] - 1.2*lambda_1[0, 106] - 1.2*lambda_1[0, 112] + 0.1*lambda_1[0, 185] - 1.9*lambda_1[0, 187] == 0]
	constraints += [lambda_1[0, 185] == 0]
	constraints += [lambda_1[0, 112] == 0]
	constraints += [lambda_1[0, 53] - 1.2*lambda_1[0, 65] + 0.9*lambda_1[0, 77] - 3.8*lambda_1[0, 95] + 4.56*lambda_1[0, 107] + 10.83*lambda_1[0, 113] + 0.1*lambda_1[0, 140] - 0.4*lambda_1[0, 141] - 0.12*lambda_1[0, 152] + 0.48*lambda_1[0, 153] + 0.01*lambda_1[0, 186] + 0.16*lambda_1[0, 187] - 0.38*lambda_1[0, 188] + 1.52*lambda_1[0, 189] - 0.04*lambda_1[0, 202] == 0]
	constraints += [lambda_1[0, 140] - 1.2*lambda_1[0, 152] + 0.2*lambda_1[0, 186] - 3.8*lambda_1[0, 188] - 0.4*lambda_1[0, 202] == 0]
	constraints += [lambda_1[0, 186] == 0]
	constraints += [lambda_1[0, 141] - 1.2*lambda_1[0, 153] - 0.8*lambda_1[0, 187] - 3.8*lambda_1[0, 189] + 0.1*lambda_1[0, 202] == 0]
	constraints += [lambda_1[0, 202] == 0]
	constraints += [lambda_1[0, 187] == 0]
	constraints += [1.0*lambda_1[0, 95] - 1.2*lambda_1[0, 107] - 5.7*lambda_1[0, 113] + 0.1*lambda_1[0, 188] - 0.4*lambda_1[0, 189] == 0]
	constraints += [1.0*lambda_1[0, 188] == 0]
	constraints += [1.0*lambda_1[0, 189] == 0]
	constraints += [1.0*lambda_1[0, 113] == 0]
	constraints += [lambda_1[0, 15] - 1.5*lambda_1[0, 19] + 1.35*lambda_1[0, 23] + 0.1*lambda_1[0, 63] - 0.4*lambda_1[0, 64] - 1.9*lambda_1[0, 65] - 0.15*lambda_1[0, 75] + 0.6*lambda_1[0, 76] + 2.85*lambda_1[0, 77] + 0.01*lambda_1[0, 105] + 0.16*lambda_1[0, 106] + 3.61*lambda_1[0, 107] - 0.04*lambda_1[0, 151] - 0.19*lambda_1[0, 152] + 0.76*lambda_1[0, 153] <= B[0, 15]+ objc]
	constraints += [lambda_1[0, 15] - 1.5*lambda_1[0, 19] + 1.35*lambda_1[0, 23] + 0.1*lambda_1[0, 63] - 0.4*lambda_1[0, 64] - 1.9*lambda_1[0, 65] - 0.15*lambda_1[0, 75] + 0.6*lambda_1[0, 76] + 2.85*lambda_1[0, 77] + 0.01*lambda_1[0, 105] + 0.16*lambda_1[0, 106] + 3.61*lambda_1[0, 107] - 0.04*lambda_1[0, 151] - 0.19*lambda_1[0, 152] + 0.76*lambda_1[0, 153] >= B[0, 15]- objc]
	constraints += [lambda_1[0, 63] - 1.5*lambda_1[0, 75] + 0.2*lambda_1[0, 105] - 0.4*lambda_1[0, 151] - 1.9*lambda_1[0, 152] == 0]
	constraints += [lambda_1[0, 105] == 0]
	constraints += [lambda_1[0, 64] - 1.5*lambda_1[0, 76] - 0.8*lambda_1[0, 106] + 0.1*lambda_1[0, 151] - 1.9*lambda_1[0, 153] == 0]
	constraints += [lambda_1[0, 151] == 0]
	constraints += [lambda_1[0, 106] == 0]
	constraints += [lambda_1[0, 65] - 1.5*lambda_1[0, 77] - 3.8*lambda_1[0, 107] + 0.1*lambda_1[0, 152] - 0.4*lambda_1[0, 153] == 0]
	constraints += [lambda_1[0, 152] == 0]
	constraints += [lambda_1[0, 153] == 0]
	constraints += [1.0*lambda_1[0, 107] == 0]
	constraints += [lambda_1[0, 19] - 1.8*lambda_1[0, 23] + 0.1*lambda_1[0, 75] - 0.4*lambda_1[0, 76] - 1.9*lambda_1[0, 77] == 0]
	constraints += [lambda_1[0, 75] == 0]
	constraints += [lambda_1[0, 76] == 0]
	constraints += [lambda_1[0, 77] == 0]
	constraints += [lambda_1[0, 23] <= B[0, 19]+ objc]
	constraints += [lambda_1[0, 23] >= B[0, 19]- objc]

	#------------------The Lie Derivative conditions------------------
	constraints += [3*lambda_2[0, 0] + 3*lambda_2[0, 1] + 3*lambda_2[0, 2] + 3*lambda_2[0, 3] + 9*lambda_2[0, 4] + 9*lambda_2[0, 5] + 9*lambda_2[0, 6] + 9*lambda_2[0, 7] + 27*lambda_2[0, 8] + 27*lambda_2[0, 9] + 27*lambda_2[0, 10] + 27*lambda_2[0, 11] + 81*lambda_2[0, 12] + 81*lambda_2[0, 13] + 81*lambda_2[0, 14] + 81*lambda_2[0, 15] + 243*lambda_2[0, 16] + 243*lambda_2[0, 17] + 243*lambda_2[0, 18] + 243*lambda_2[0, 19] + 729*lambda_2[0, 20] + 729*lambda_2[0, 21] + 729*lambda_2[0, 22] + 729*lambda_2[0, 23] + 9*lambda_2[0, 24] + 9*lambda_2[0, 25] + 9*lambda_2[0, 26] + 9*lambda_2[0, 27] + 9*lambda_2[0, 28] + 9*lambda_2[0, 29] + 27*lambda_2[0, 30] + 27*lambda_2[0, 31] + 27*lambda_2[0, 32] + 27*lambda_2[0, 33] + 27*lambda_2[0, 34] + 27*lambda_2[0, 35] + 27*lambda_2[0, 36] + 27*lambda_2[0, 37] + 27*lambda_2[0, 38] + 27*lambda_2[0, 39] + 27*lambda_2[0, 40] + 27*lambda_2[0, 41] + 81*lambda_2[0, 42] + 81*lambda_2[0, 43] + 81*lambda_2[0, 44] + 81*lambda_2[0, 45] + 81*lambda_2[0, 46] + 81*lambda_2[0, 47] + 81*lambda_2[0, 48] + 81*lambda_2[0, 49] + 81*lambda_2[0, 50] + 81*lambda_2[0, 51] + 81*lambda_2[0, 52] + 81*lambda_2[0, 53] + 243*lambda_2[0, 54] + 243*lambda_2[0, 55] + 243*lambda_2[0, 56] + 243*lambda_2[0, 57] + 243*lambda_2[0, 58] + 243*lambda_2[0, 59] + 243*lambda_2[0, 60] + 243*lambda_2[0, 61] + 243*lambda_2[0, 62] + 243*lambda_2[0, 63] + 243*lambda_2[0, 64] + 243*lambda_2[0, 65] + 729*lambda_2[0, 66] + 729*lambda_2[0, 67] + 729*lambda_2[0, 68] + 729*lambda_2[0, 69] + 729*lambda_2[0, 70] + 729*lambda_2[0, 71] + 729*lambda_2[0, 72] + 729*lambda_2[0, 73] + 729*lambda_2[0, 74] + 729*lambda_2[0, 75] + 729*lambda_2[0, 76] + 729*lambda_2[0, 77] + 81*lambda_2[0, 78] + 81*lambda_2[0, 79] + 81*lambda_2[0, 80] + 81*lambda_2[0, 81] + 81*lambda_2[0, 82] + 81*lambda_2[0, 83] + 243*lambda_2[0, 84] + 243*lambda_2[0, 85] + 243*lambda_2[0, 86] + 243*lambda_2[0, 87] + 243*lambda_2[0, 88] + 243*lambda_2[0, 89] + 243*lambda_2[0, 90] + 243*lambda_2[0, 91] + 243*lambda_2[0, 92] + 243*lambda_2[0, 93] + 243*lambda_2[0, 94] + 243*lambda_2[0, 95] + 729*lambda_2[0, 96] + 729*lambda_2[0, 97] + 729*lambda_2[0, 98] + 729*lambda_2[0, 99] + 729*lambda_2[0, 100] + 729*lambda_2[0, 101] + 729*lambda_2[0, 102] + 729*lambda_2[0, 103] + 729*lambda_2[0, 104] + 729*lambda_2[0, 105] + 729*lambda_2[0, 106] + 729*lambda_2[0, 107] + 729*lambda_2[0, 108] + 729*lambda_2[0, 109] + 729*lambda_2[0, 110] + 729*lambda_2[0, 111] + 729*lambda_2[0, 112] + 729*lambda_2[0, 113] + 27*lambda_2[0, 114] + 27*lambda_2[0, 115] + 27*lambda_2[0, 116] + 27*lambda_2[0, 117] + 81*lambda_2[0, 118] + 81*lambda_2[0, 119] + 81*lambda_2[0, 120] + 81*lambda_2[0, 121] + 81*lambda_2[0, 122] + 81*lambda_2[0, 123] + 81*lambda_2[0, 124] + 81*lambda_2[0, 125] + 81*lambda_2[0, 126] + 81*lambda_2[0, 127] + 81*lambda_2[0, 128] + 81*lambda_2[0, 129] + 243*lambda_2[0, 130] + 243*lambda_2[0, 131] + 243*lambda_2[0, 132] + 243*lambda_2[0, 133] + 243*lambda_2[0, 134] + 243*lambda_2[0, 135] + 243*lambda_2[0, 136] + 243*lambda_2[0, 137] + 243*lambda_2[0, 138] + 243*lambda_2[0, 139] + 243*lambda_2[0, 140] + 243*lambda_2[0, 141] + 729*lambda_2[0, 142] + 729*lambda_2[0, 143] + 729*lambda_2[0, 144] + 729*lambda_2[0, 145] + 729*lambda_2[0, 146] + 729*lambda_2[0, 147] + 729*lambda_2[0, 148] + 729*lambda_2[0, 149] + 729*lambda_2[0, 150] + 729*lambda_2[0, 151] + 729*lambda_2[0, 152] + 729*lambda_2[0, 153] + 243*lambda_2[0, 154] + 243*lambda_2[0, 155] + 243*lambda_2[0, 156] + 243*lambda_2[0, 157] + 243*lambda_2[0, 158] + 243*lambda_2[0, 159] + 243*lambda_2[0, 160] + 243*lambda_2[0, 161] + 243*lambda_2[0, 162] + 243*lambda_2[0, 163] + 243*lambda_2[0, 164] + 243*lambda_2[0, 165] + 729*lambda_2[0, 166] + 729*lambda_2[0, 167] + 729*lambda_2[0, 168] + 729*lambda_2[0, 169] + 729*lambda_2[0, 170] + 729*lambda_2[0, 171] + 729*lambda_2[0, 172] + 729*lambda_2[0, 173] + 729*lambda_2[0, 174] + 729*lambda_2[0, 175] + 729*lambda_2[0, 176] + 729*lambda_2[0, 177] + 729*lambda_2[0, 178] + 729*lambda_2[0, 179] + 729*lambda_2[0, 180] + 729*lambda_2[0, 181] + 729*lambda_2[0, 182] + 729*lambda_2[0, 183] + 729*lambda_2[0, 184] + 729*lambda_2[0, 185] + 729*lambda_2[0, 186] + 729*lambda_2[0, 187] + 729*lambda_2[0, 188] + 729*lambda_2[0, 189] + 729*lambda_2[0, 190] + 729*lambda_2[0, 191] + 729*lambda_2[0, 192] + 729*lambda_2[0, 193] + 81*lambda_2[0, 194] + 243*lambda_2[0, 195] + 243*lambda_2[0, 196] + 243*lambda_2[0, 197] + 243*lambda_2[0, 198] + 729*lambda_2[0, 199] + 729*lambda_2[0, 200] + 729*lambda_2[0, 201] + 729*lambda_2[0, 202] + 729*lambda_2[0, 203] + 729*lambda_2[0, 204] + 729*lambda_2[0, 205] + 729*lambda_2[0, 206] + 729*lambda_2[0, 207] + 729*lambda_2[0, 208] <= -l*B[0, 0]+ objc]
	constraints += [3*lambda_2[0, 0] + 3*lambda_2[0, 1] + 3*lambda_2[0, 2] + 3*lambda_2[0, 3] + 9*lambda_2[0, 4] + 9*lambda_2[0, 5] + 9*lambda_2[0, 6] + 9*lambda_2[0, 7] + 27*lambda_2[0, 8] + 27*lambda_2[0, 9] + 27*lambda_2[0, 10] + 27*lambda_2[0, 11] + 81*lambda_2[0, 12] + 81*lambda_2[0, 13] + 81*lambda_2[0, 14] + 81*lambda_2[0, 15] + 243*lambda_2[0, 16] + 243*lambda_2[0, 17] + 243*lambda_2[0, 18] + 243*lambda_2[0, 19] + 729*lambda_2[0, 20] + 729*lambda_2[0, 21] + 729*lambda_2[0, 22] + 729*lambda_2[0, 23] + 9*lambda_2[0, 24] + 9*lambda_2[0, 25] + 9*lambda_2[0, 26] + 9*lambda_2[0, 27] + 9*lambda_2[0, 28] + 9*lambda_2[0, 29] + 27*lambda_2[0, 30] + 27*lambda_2[0, 31] + 27*lambda_2[0, 32] + 27*lambda_2[0, 33] + 27*lambda_2[0, 34] + 27*lambda_2[0, 35] + 27*lambda_2[0, 36] + 27*lambda_2[0, 37] + 27*lambda_2[0, 38] + 27*lambda_2[0, 39] + 27*lambda_2[0, 40] + 27*lambda_2[0, 41] + 81*lambda_2[0, 42] + 81*lambda_2[0, 43] + 81*lambda_2[0, 44] + 81*lambda_2[0, 45] + 81*lambda_2[0, 46] + 81*lambda_2[0, 47] + 81*lambda_2[0, 48] + 81*lambda_2[0, 49] + 81*lambda_2[0, 50] + 81*lambda_2[0, 51] + 81*lambda_2[0, 52] + 81*lambda_2[0, 53] + 243*lambda_2[0, 54] + 243*lambda_2[0, 55] + 243*lambda_2[0, 56] + 243*lambda_2[0, 57] + 243*lambda_2[0, 58] + 243*lambda_2[0, 59] + 243*lambda_2[0, 60] + 243*lambda_2[0, 61] + 243*lambda_2[0, 62] + 243*lambda_2[0, 63] + 243*lambda_2[0, 64] + 243*lambda_2[0, 65] + 729*lambda_2[0, 66] + 729*lambda_2[0, 67] + 729*lambda_2[0, 68] + 729*lambda_2[0, 69] + 729*lambda_2[0, 70] + 729*lambda_2[0, 71] + 729*lambda_2[0, 72] + 729*lambda_2[0, 73] + 729*lambda_2[0, 74] + 729*lambda_2[0, 75] + 729*lambda_2[0, 76] + 729*lambda_2[0, 77] + 81*lambda_2[0, 78] + 81*lambda_2[0, 79] + 81*lambda_2[0, 80] + 81*lambda_2[0, 81] + 81*lambda_2[0, 82] + 81*lambda_2[0, 83] + 243*lambda_2[0, 84] + 243*lambda_2[0, 85] + 243*lambda_2[0, 86] + 243*lambda_2[0, 87] + 243*lambda_2[0, 88] + 243*lambda_2[0, 89] + 243*lambda_2[0, 90] + 243*lambda_2[0, 91] + 243*lambda_2[0, 92] + 243*lambda_2[0, 93] + 243*lambda_2[0, 94] + 243*lambda_2[0, 95] + 729*lambda_2[0, 96] + 729*lambda_2[0, 97] + 729*lambda_2[0, 98] + 729*lambda_2[0, 99] + 729*lambda_2[0, 100] + 729*lambda_2[0, 101] + 729*lambda_2[0, 102] + 729*lambda_2[0, 103] + 729*lambda_2[0, 104] + 729*lambda_2[0, 105] + 729*lambda_2[0, 106] + 729*lambda_2[0, 107] + 729*lambda_2[0, 108] + 729*lambda_2[0, 109] + 729*lambda_2[0, 110] + 729*lambda_2[0, 111] + 729*lambda_2[0, 112] + 729*lambda_2[0, 113] + 27*lambda_2[0, 114] + 27*lambda_2[0, 115] + 27*lambda_2[0, 116] + 27*lambda_2[0, 117] + 81*lambda_2[0, 118] + 81*lambda_2[0, 119] + 81*lambda_2[0, 120] + 81*lambda_2[0, 121] + 81*lambda_2[0, 122] + 81*lambda_2[0, 123] + 81*lambda_2[0, 124] + 81*lambda_2[0, 125] + 81*lambda_2[0, 126] + 81*lambda_2[0, 127] + 81*lambda_2[0, 128] + 81*lambda_2[0, 129] + 243*lambda_2[0, 130] + 243*lambda_2[0, 131] + 243*lambda_2[0, 132] + 243*lambda_2[0, 133] + 243*lambda_2[0, 134] + 243*lambda_2[0, 135] + 243*lambda_2[0, 136] + 243*lambda_2[0, 137] + 243*lambda_2[0, 138] + 243*lambda_2[0, 139] + 243*lambda_2[0, 140] + 243*lambda_2[0, 141] + 729*lambda_2[0, 142] + 729*lambda_2[0, 143] + 729*lambda_2[0, 144] + 729*lambda_2[0, 145] + 729*lambda_2[0, 146] + 729*lambda_2[0, 147] + 729*lambda_2[0, 148] + 729*lambda_2[0, 149] + 729*lambda_2[0, 150] + 729*lambda_2[0, 151] + 729*lambda_2[0, 152] + 729*lambda_2[0, 153] + 243*lambda_2[0, 154] + 243*lambda_2[0, 155] + 243*lambda_2[0, 156] + 243*lambda_2[0, 157] + 243*lambda_2[0, 158] + 243*lambda_2[0, 159] + 243*lambda_2[0, 160] + 243*lambda_2[0, 161] + 243*lambda_2[0, 162] + 243*lambda_2[0, 163] + 243*lambda_2[0, 164] + 243*lambda_2[0, 165] + 729*lambda_2[0, 166] + 729*lambda_2[0, 167] + 729*lambda_2[0, 168] + 729*lambda_2[0, 169] + 729*lambda_2[0, 170] + 729*lambda_2[0, 171] + 729*lambda_2[0, 172] + 729*lambda_2[0, 173] + 729*lambda_2[0, 174] + 729*lambda_2[0, 175] + 729*lambda_2[0, 176] + 729*lambda_2[0, 177] + 729*lambda_2[0, 178] + 729*lambda_2[0, 179] + 729*lambda_2[0, 180] + 729*lambda_2[0, 181] + 729*lambda_2[0, 182] + 729*lambda_2[0, 183] + 729*lambda_2[0, 184] + 729*lambda_2[0, 185] + 729*lambda_2[0, 186] + 729*lambda_2[0, 187] + 729*lambda_2[0, 188] + 729*lambda_2[0, 189] + 729*lambda_2[0, 190] + 729*lambda_2[0, 191] + 729*lambda_2[0, 192] + 729*lambda_2[0, 193] + 81*lambda_2[0, 194] + 243*lambda_2[0, 195] + 243*lambda_2[0, 196] + 243*lambda_2[0, 197] + 243*lambda_2[0, 198] + 729*lambda_2[0, 199] + 729*lambda_2[0, 200] + 729*lambda_2[0, 201] + 729*lambda_2[0, 202] + 729*lambda_2[0, 203] + 729*lambda_2[0, 204] + 729*lambda_2[0, 205] + 729*lambda_2[0, 206] + 729*lambda_2[0, 207] + 729*lambda_2[0, 208] >= -l*B[0, 0]- objc]
	constraints += [lambda_2[0, 0] + 6*lambda_2[0, 4] + 27*lambda_2[0, 8] + 108*lambda_2[0, 12] + 405*lambda_2[0, 16] + 1458*lambda_2[0, 20] + 3*lambda_2[0, 24] + 3*lambda_2[0, 25] + 3*lambda_2[0, 27] + 18*lambda_2[0, 30] + 9*lambda_2[0, 31] + 18*lambda_2[0, 32] + 9*lambda_2[0, 34] + 18*lambda_2[0, 36] + 9*lambda_2[0, 39] + 81*lambda_2[0, 42] + 27*lambda_2[0, 43] + 81*lambda_2[0, 44] + 27*lambda_2[0, 46] + 81*lambda_2[0, 48] + 27*lambda_2[0, 51] + 324*lambda_2[0, 54] + 81*lambda_2[0, 55] + 324*lambda_2[0, 56] + 81*lambda_2[0, 58] + 324*lambda_2[0, 60] + 81*lambda_2[0, 63] + 1215*lambda_2[0, 66] + 243*lambda_2[0, 67] + 1215*lambda_2[0, 68] + 243*lambda_2[0, 70] + 1215*lambda_2[0, 72] + 243*lambda_2[0, 75] + 54*lambda_2[0, 78] + 54*lambda_2[0, 79] + 54*lambda_2[0, 81] + 243*lambda_2[0, 84] + 162*lambda_2[0, 85] + 243*lambda_2[0, 86] + 162*lambda_2[0, 88] + 243*lambda_2[0, 90] + 162*lambda_2[0, 93] + 972*lambda_2[0, 96] + 486*lambda_2[0, 97] + 972*lambda_2[0, 98] + 486*lambda_2[0, 100] + 972*lambda_2[0, 102] + 486*lambda_2[0, 105] + 729*lambda_2[0, 108] + 729*lambda_2[0, 109] + 729*lambda_2[0, 111] + 9*lambda_2[0, 114] + 9*lambda_2[0, 115] + 9*lambda_2[0, 116] + 54*lambda_2[0, 118] + 27*lambda_2[0, 119] + 27*lambda_2[0, 120] + 54*lambda_2[0, 121] + 27*lambda_2[0, 122] + 54*lambda_2[0, 123] + 27*lambda_2[0, 125] + 27*lambda_2[0, 127] + 27*lambda_2[0, 128] + 243*lambda_2[0, 130] + 81*lambda_2[0, 131] + 81*lambda_2[0, 132] + 243*lambda_2[0, 133] + 81*lambda_2[0, 134] + 243*lambda_2[0, 135] + 81*lambda_2[0, 137] + 81*lambda_2[0, 139] + 81*lambda_2[0, 140] + 972*lambda_2[0, 142] + 243*lambda_2[0, 143] + 243*lambda_2[0, 144] + 972*lambda_2[0, 145] + 243*lambda_2[0, 146] + 972*lambda_2[0, 147] + 243*lambda_2[0, 149] + 243*lambda_2[0, 151] + 243*lambda_2[0, 152] + 162*lambda_2[0, 154] + 162*lambda_2[0, 155] + 81*lambda_2[0, 156] + 162*lambda_2[0, 157] + 162*lambda_2[0, 158] + 162*lambda_2[0, 160] + 81*lambda_2[0, 161] + 162*lambda_2[0, 162] + 81*lambda_2[0, 164] + 729*lambda_2[0, 166] + 486*lambda_2[0, 167] + 729*lambda_2[0, 168] + 243*lambda_2[0, 169] + 486*lambda_2[0, 170] + 243*lambda_2[0, 171] + 729*lambda_2[0, 172] + 486*lambda_2[0, 173] + 729*lambda_2[0, 174] + 486*lambda_2[0, 176] + 729*lambda_2[0, 178] + 243*lambda_2[0, 179] + 729*lambda_2[0, 180] + 243*lambda_2[0, 182] + 486*lambda_2[0, 184] + 243*lambda_2[0, 185] + 486*lambda_2[0, 186] + 243*lambda_2[0, 188] + 486*lambda_2[0, 190] + 486*lambda_2[0, 191] + 486*lambda_2[0, 192] + 27*lambda_2[0, 194] + 162*lambda_2[0, 195] + 81*lambda_2[0, 196] + 81*lambda_2[0, 197] + 81*lambda_2[0, 198] + 729*lambda_2[0, 199] + 243*lambda_2[0, 200] + 243*lambda_2[0, 201] + 243*lambda_2[0, 202] + 486*lambda_2[0, 203] + 486*lambda_2[0, 204] + 243*lambda_2[0, 205] + 486*lambda_2[0, 206] + 243*lambda_2[0, 207] + 243*lambda_2[0, 208] <= g*B[0, 4] + k*B[0, 2] - l*B[0, 4] + 40*B[0, 2]*t[0, 3] + B[0, 3] + 16.3*B[0, 4]*t[0, 3]+ objc]
	constraints += [lambda_2[0, 0] + 6*lambda_2[0, 4] + 27*lambda_2[0, 8] + 108*lambda_2[0, 12] + 405*lambda_2[0, 16] + 1458*lambda_2[0, 20] + 3*lambda_2[0, 24] + 3*lambda_2[0, 25] + 3*lambda_2[0, 27] + 18*lambda_2[0, 30] + 9*lambda_2[0, 31] + 18*lambda_2[0, 32] + 9*lambda_2[0, 34] + 18*lambda_2[0, 36] + 9*lambda_2[0, 39] + 81*lambda_2[0, 42] + 27*lambda_2[0, 43] + 81*lambda_2[0, 44] + 27*lambda_2[0, 46] + 81*lambda_2[0, 48] + 27*lambda_2[0, 51] + 324*lambda_2[0, 54] + 81*lambda_2[0, 55] + 324*lambda_2[0, 56] + 81*lambda_2[0, 58] + 324*lambda_2[0, 60] + 81*lambda_2[0, 63] + 1215*lambda_2[0, 66] + 243*lambda_2[0, 67] + 1215*lambda_2[0, 68] + 243*lambda_2[0, 70] + 1215*lambda_2[0, 72] + 243*lambda_2[0, 75] + 54*lambda_2[0, 78] + 54*lambda_2[0, 79] + 54*lambda_2[0, 81] + 243*lambda_2[0, 84] + 162*lambda_2[0, 85] + 243*lambda_2[0, 86] + 162*lambda_2[0, 88] + 243*lambda_2[0, 90] + 162*lambda_2[0, 93] + 972*lambda_2[0, 96] + 486*lambda_2[0, 97] + 972*lambda_2[0, 98] + 486*lambda_2[0, 100] + 972*lambda_2[0, 102] + 486*lambda_2[0, 105] + 729*lambda_2[0, 108] + 729*lambda_2[0, 109] + 729*lambda_2[0, 111] + 9*lambda_2[0, 114] + 9*lambda_2[0, 115] + 9*lambda_2[0, 116] + 54*lambda_2[0, 118] + 27*lambda_2[0, 119] + 27*lambda_2[0, 120] + 54*lambda_2[0, 121] + 27*lambda_2[0, 122] + 54*lambda_2[0, 123] + 27*lambda_2[0, 125] + 27*lambda_2[0, 127] + 27*lambda_2[0, 128] + 243*lambda_2[0, 130] + 81*lambda_2[0, 131] + 81*lambda_2[0, 132] + 243*lambda_2[0, 133] + 81*lambda_2[0, 134] + 243*lambda_2[0, 135] + 81*lambda_2[0, 137] + 81*lambda_2[0, 139] + 81*lambda_2[0, 140] + 972*lambda_2[0, 142] + 243*lambda_2[0, 143] + 243*lambda_2[0, 144] + 972*lambda_2[0, 145] + 243*lambda_2[0, 146] + 972*lambda_2[0, 147] + 243*lambda_2[0, 149] + 243*lambda_2[0, 151] + 243*lambda_2[0, 152] + 162*lambda_2[0, 154] + 162*lambda_2[0, 155] + 81*lambda_2[0, 156] + 162*lambda_2[0, 157] + 162*lambda_2[0, 158] + 162*lambda_2[0, 160] + 81*lambda_2[0, 161] + 162*lambda_2[0, 162] + 81*lambda_2[0, 164] + 729*lambda_2[0, 166] + 486*lambda_2[0, 167] + 729*lambda_2[0, 168] + 243*lambda_2[0, 169] + 486*lambda_2[0, 170] + 243*lambda_2[0, 171] + 729*lambda_2[0, 172] + 486*lambda_2[0, 173] + 729*lambda_2[0, 174] + 486*lambda_2[0, 176] + 729*lambda_2[0, 178] + 243*lambda_2[0, 179] + 729*lambda_2[0, 180] + 243*lambda_2[0, 182] + 486*lambda_2[0, 184] + 243*lambda_2[0, 185] + 486*lambda_2[0, 186] + 243*lambda_2[0, 188] + 486*lambda_2[0, 190] + 486*lambda_2[0, 191] + 486*lambda_2[0, 192] + 27*lambda_2[0, 194] + 162*lambda_2[0, 195] + 81*lambda_2[0, 196] + 81*lambda_2[0, 197] + 81*lambda_2[0, 198] + 729*lambda_2[0, 199] + 243*lambda_2[0, 200] + 243*lambda_2[0, 201] + 243*lambda_2[0, 202] + 486*lambda_2[0, 203] + 486*lambda_2[0, 204] + 243*lambda_2[0, 205] + 486*lambda_2[0, 206] + 243*lambda_2[0, 207] + 243*lambda_2[0, 208] >= g*B[0, 4] + k*B[0, 2] - l*B[0, 4] + 40*B[0, 2]*t[0, 3] + B[0, 3] + 16.3*B[0, 4]*t[0, 3]- objc]
	constraints += [lambda_2[0, 4] + 9*lambda_2[0, 8] + 54*lambda_2[0, 12] + 270*lambda_2[0, 16] + 1215*lambda_2[0, 20] + 3*lambda_2[0, 30] + 3*lambda_2[0, 32] + 3*lambda_2[0, 36] + 27*lambda_2[0, 42] + 27*lambda_2[0, 44] + 27*lambda_2[0, 48] + 162*lambda_2[0, 54] + 162*lambda_2[0, 56] + 162*lambda_2[0, 60] + 810*lambda_2[0, 66] + 810*lambda_2[0, 68] + 810*lambda_2[0, 72] + 9*lambda_2[0, 78] + 9*lambda_2[0, 79] + 9*lambda_2[0, 81] + 81*lambda_2[0, 84] + 27*lambda_2[0, 85] + 81*lambda_2[0, 86] + 27*lambda_2[0, 88] + 81*lambda_2[0, 90] + 27*lambda_2[0, 93] + 486*lambda_2[0, 96] + 81*lambda_2[0, 97] + 486*lambda_2[0, 98] + 81*lambda_2[0, 100] + 486*lambda_2[0, 102] + 81*lambda_2[0, 105] + 243*lambda_2[0, 108] + 243*lambda_2[0, 109] + 243*lambda_2[0, 111] + 9*lambda_2[0, 118] + 9*lambda_2[0, 121] + 9*lambda_2[0, 123] + 81*lambda_2[0, 130] + 81*lambda_2[0, 133] + 81*lambda_2[0, 135] + 486*lambda_2[0, 142] + 486*lambda_2[0, 145] + 486*lambda_2[0, 147] + 27*lambda_2[0, 154] + 27*lambda_2[0, 155] + 27*lambda_2[0, 157] + 27*lambda_2[0, 158] + 27*lambda_2[0, 160] + 27*lambda_2[0, 162] + 243*lambda_2[0, 166] + 81*lambda_2[0, 167] + 243*lambda_2[0, 168] + 81*lambda_2[0, 170] + 243*lambda_2[0, 172] + 81*lambda_2[0, 173] + 243*lambda_2[0, 174] + 81*lambda_2[0, 176] + 243*lambda_2[0, 178] + 243*lambda_2[0, 180] + 81*lambda_2[0, 184] + 81*lambda_2[0, 186] + 81*lambda_2[0, 190] + 81*lambda_2[0, 191] + 81*lambda_2[0, 192] + 27*lambda_2[0, 195] + 243*lambda_2[0, 199] + 81*lambda_2[0, 203] + 81*lambda_2[0, 204] + 81*lambda_2[0, 206] <= 2*g*B[0, 14] + k*B[0, 9] - l*B[0, 14] + 40*B[0, 9]*t[0, 3] + B[0, 10] + 32.6*B[0, 14]*t[0, 3] - 0.01+ objc]
	constraints += [lambda_2[0, 4] + 9*lambda_2[0, 8] + 54*lambda_2[0, 12] + 270*lambda_2[0, 16] + 1215*lambda_2[0, 20] + 3*lambda_2[0, 30] + 3*lambda_2[0, 32] + 3*lambda_2[0, 36] + 27*lambda_2[0, 42] + 27*lambda_2[0, 44] + 27*lambda_2[0, 48] + 162*lambda_2[0, 54] + 162*lambda_2[0, 56] + 162*lambda_2[0, 60] + 810*lambda_2[0, 66] + 810*lambda_2[0, 68] + 810*lambda_2[0, 72] + 9*lambda_2[0, 78] + 9*lambda_2[0, 79] + 9*lambda_2[0, 81] + 81*lambda_2[0, 84] + 27*lambda_2[0, 85] + 81*lambda_2[0, 86] + 27*lambda_2[0, 88] + 81*lambda_2[0, 90] + 27*lambda_2[0, 93] + 486*lambda_2[0, 96] + 81*lambda_2[0, 97] + 486*lambda_2[0, 98] + 81*lambda_2[0, 100] + 486*lambda_2[0, 102] + 81*lambda_2[0, 105] + 243*lambda_2[0, 108] + 243*lambda_2[0, 109] + 243*lambda_2[0, 111] + 9*lambda_2[0, 118] + 9*lambda_2[0, 121] + 9*lambda_2[0, 123] + 81*lambda_2[0, 130] + 81*lambda_2[0, 133] + 81*lambda_2[0, 135] + 486*lambda_2[0, 142] + 486*lambda_2[0, 145] + 486*lambda_2[0, 147] + 27*lambda_2[0, 154] + 27*lambda_2[0, 155] + 27*lambda_2[0, 157] + 27*lambda_2[0, 158] + 27*lambda_2[0, 160] + 27*lambda_2[0, 162] + 243*lambda_2[0, 166] + 81*lambda_2[0, 167] + 243*lambda_2[0, 168] + 81*lambda_2[0, 170] + 243*lambda_2[0, 172] + 81*lambda_2[0, 173] + 243*lambda_2[0, 174] + 81*lambda_2[0, 176] + 243*lambda_2[0, 178] + 243*lambda_2[0, 180] + 81*lambda_2[0, 184] + 81*lambda_2[0, 186] + 81*lambda_2[0, 190] + 81*lambda_2[0, 191] + 81*lambda_2[0, 192] + 27*lambda_2[0, 195] + 243*lambda_2[0, 199] + 81*lambda_2[0, 203] + 81*lambda_2[0, 204] + 81*lambda_2[0, 206] >= 2*g*B[0, 14] + k*B[0, 9] - l*B[0, 14] + 40*B[0, 9]*t[0, 3] + B[0, 10] + 32.6*B[0, 14]*t[0, 3] - 0.01- objc]
	constraints += [lambda_2[0, 8] + 12*lambda_2[0, 12] + 90*lambda_2[0, 16] + 540*lambda_2[0, 20] + 3*lambda_2[0, 42] + 3*lambda_2[0, 44] + 3*lambda_2[0, 48] + 36*lambda_2[0, 54] + 36*lambda_2[0, 56] + 36*lambda_2[0, 60] + 270*lambda_2[0, 66] + 270*lambda_2[0, 68] + 270*lambda_2[0, 72] + 9*lambda_2[0, 84] + 9*lambda_2[0, 86] + 9*lambda_2[0, 90] + 108*lambda_2[0, 96] + 108*lambda_2[0, 98] + 108*lambda_2[0, 102] + 27*lambda_2[0, 108] + 27*lambda_2[0, 109] + 27*lambda_2[0, 111] + 9*lambda_2[0, 130] + 9*lambda_2[0, 133] + 9*lambda_2[0, 135] + 108*lambda_2[0, 142] + 108*lambda_2[0, 145] + 108*lambda_2[0, 147] + 27*lambda_2[0, 166] + 27*lambda_2[0, 168] + 27*lambda_2[0, 172] + 27*lambda_2[0, 174] + 27*lambda_2[0, 178] + 27*lambda_2[0, 180] + 27*lambda_2[0, 199] == 0]
	constraints += [lambda_2[0, 12] + 15*lambda_2[0, 16] + 135*lambda_2[0, 20] + 3*lambda_2[0, 54] + 3*lambda_2[0, 56] + 3*lambda_2[0, 60] + 45*lambda_2[0, 66] + 45*lambda_2[0, 68] + 45*lambda_2[0, 72] + 9*lambda_2[0, 96] + 9*lambda_2[0, 98] + 9*lambda_2[0, 102] + 9*lambda_2[0, 142] + 9*lambda_2[0, 145] + 9*lambda_2[0, 147] <= 4*g*B[0, 18] - l*B[0, 18] + 65.2*B[0, 18]*t[0, 3]+ objc]
	constraints += [lambda_2[0, 12] + 15*lambda_2[0, 16] + 135*lambda_2[0, 20] + 3*lambda_2[0, 54] + 3*lambda_2[0, 56] + 3*lambda_2[0, 60] + 45*lambda_2[0, 66] + 45*lambda_2[0, 68] + 45*lambda_2[0, 72] + 9*lambda_2[0, 96] + 9*lambda_2[0, 98] + 9*lambda_2[0, 102] + 9*lambda_2[0, 142] + 9*lambda_2[0, 145] + 9*lambda_2[0, 147] >= 4*g*B[0, 18] - l*B[0, 18] + 65.2*B[0, 18]*t[0, 3]- objc]
	constraints += [lambda_2[0, 16] + 18*lambda_2[0, 20] + 3*lambda_2[0, 66] + 3*lambda_2[0, 68] + 3*lambda_2[0, 72] == 0]
	constraints += [lambda_2[0, 20] <= 6*g*B[0, 22] - l*B[0, 22] + 97.8*B[0, 22]*t[0, 3]+ objc]
	constraints += [lambda_2[0, 20] >= 6*g*B[0, 22] - l*B[0, 22] + 97.8*B[0, 22]*t[0, 3]- objc]
	constraints += [lambda_2[0, 1] + 6*lambda_2[0, 5] + 27*lambda_2[0, 9] + 108*lambda_2[0, 13] + 405*lambda_2[0, 17] + 1458*lambda_2[0, 21] + 3*lambda_2[0, 24] + 3*lambda_2[0, 26] + 3*lambda_2[0, 28] + 9*lambda_2[0, 30] + 18*lambda_2[0, 31] + 18*lambda_2[0, 33] + 9*lambda_2[0, 35] + 18*lambda_2[0, 37] + 9*lambda_2[0, 40] + 27*lambda_2[0, 42] + 81*lambda_2[0, 43] + 81*lambda_2[0, 45] + 27*lambda_2[0, 47] + 81*lambda_2[0, 49] + 27*lambda_2[0, 52] + 81*lambda_2[0, 54] + 324*lambda_2[0, 55] + 324*lambda_2[0, 57] + 81*lambda_2[0, 59] + 324*lambda_2[0, 61] + 81*lambda_2[0, 64] + 243*lambda_2[0, 66] + 1215*lambda_2[0, 67] + 1215*lambda_2[0, 69] + 243*lambda_2[0, 71] + 1215*lambda_2[0, 73] + 243*lambda_2[0, 76] + 54*lambda_2[0, 78] + 54*lambda_2[0, 80] + 54*lambda_2[0, 82] + 162*lambda_2[0, 84] + 243*lambda_2[0, 85] + 243*lambda_2[0, 87] + 162*lambda_2[0, 89] + 243*lambda_2[0, 91] + 162*lambda_2[0, 94] + 486*lambda_2[0, 96] + 972*lambda_2[0, 97] + 972*lambda_2[0, 99] + 486*lambda_2[0, 101] + 972*lambda_2[0, 103] + 486*lambda_2[0, 106] + 729*lambda_2[0, 108] + 729*lambda_2[0, 110] + 729*lambda_2[0, 112] + 9*lambda_2[0, 114] + 9*lambda_2[0, 115] + 9*lambda_2[0, 117] + 27*lambda_2[0, 118] + 54*lambda_2[0, 119] + 27*lambda_2[0, 120] + 27*lambda_2[0, 121] + 54*lambda_2[0, 122] + 54*lambda_2[0, 124] + 27*lambda_2[0, 126] + 27*lambda_2[0, 127] + 27*lambda_2[0, 129] + 81*lambda_2[0, 130] + 243*lambda_2[0, 131] + 81*lambda_2[0, 132] + 81*lambda_2[0, 133] + 243*lambda_2[0, 134] + 243*lambda_2[0, 136] + 81*lambda_2[0, 138] + 81*lambda_2[0, 139] + 81*lambda_2[0, 141] + 243*lambda_2[0, 142] + 972*lambda_2[0, 143] + 243*lambda_2[0, 144] + 243*lambda_2[0, 145] + 972*lambda_2[0, 146] + 972*lambda_2[0, 148] + 243*lambda_2[0, 150] + 243*lambda_2[0, 151] + 243*lambda_2[0, 153] + 162*lambda_2[0, 154] + 81*lambda_2[0, 155] + 162*lambda_2[0, 156] + 162*lambda_2[0, 157] + 162*lambda_2[0, 159] + 81*lambda_2[0, 160] + 162*lambda_2[0, 161] + 162*lambda_2[0, 163] + 81*lambda_2[0, 165] + 486*lambda_2[0, 166] + 729*lambda_2[0, 167] + 243*lambda_2[0, 168] + 729*lambda_2[0, 169] + 243*lambda_2[0, 170] + 486*lambda_2[0, 171] + 486*lambda_2[0, 172] + 729*lambda_2[0, 173] + 729*lambda_2[0, 175] + 486*lambda_2[0, 177] + 243*lambda_2[0, 178] + 729*lambda_2[0, 179] + 729*lambda_2[0, 181] + 243*lambda_2[0, 183] + 243*lambda_2[0, 184] + 486*lambda_2[0, 185] + 486*lambda_2[0, 187] + 243*lambda_2[0, 189] + 486*lambda_2[0, 190] + 486*lambda_2[0, 191] + 486*lambda_2[0, 193] + 27*lambda_2[0, 194] + 81*lambda_2[0, 195] + 162*lambda_2[0, 196] + 81*lambda_2[0, 197] + 81*lambda_2[0, 198] + 243*lambda_2[0, 199] + 729*lambda_2[0, 200] + 243*lambda_2[0, 201] + 243*lambda_2[0, 202] + 486*lambda_2[0, 203] + 243*lambda_2[0, 204] + 486*lambda_2[0, 205] + 243*lambda_2[0, 206] + 486*lambda_2[0, 207] + 243*lambda_2[0, 208] <= -l*B[0, 3] + 13.4*B[0, 1] + 40*B[0, 2]*t[0, 2] + 16.3*B[0, 4]*t[0, 2]+ objc]
	constraints += [lambda_2[0, 1] + 6*lambda_2[0, 5] + 27*lambda_2[0, 9] + 108*lambda_2[0, 13] + 405*lambda_2[0, 17] + 1458*lambda_2[0, 21] + 3*lambda_2[0, 24] + 3*lambda_2[0, 26] + 3*lambda_2[0, 28] + 9*lambda_2[0, 30] + 18*lambda_2[0, 31] + 18*lambda_2[0, 33] + 9*lambda_2[0, 35] + 18*lambda_2[0, 37] + 9*lambda_2[0, 40] + 27*lambda_2[0, 42] + 81*lambda_2[0, 43] + 81*lambda_2[0, 45] + 27*lambda_2[0, 47] + 81*lambda_2[0, 49] + 27*lambda_2[0, 52] + 81*lambda_2[0, 54] + 324*lambda_2[0, 55] + 324*lambda_2[0, 57] + 81*lambda_2[0, 59] + 324*lambda_2[0, 61] + 81*lambda_2[0, 64] + 243*lambda_2[0, 66] + 1215*lambda_2[0, 67] + 1215*lambda_2[0, 69] + 243*lambda_2[0, 71] + 1215*lambda_2[0, 73] + 243*lambda_2[0, 76] + 54*lambda_2[0, 78] + 54*lambda_2[0, 80] + 54*lambda_2[0, 82] + 162*lambda_2[0, 84] + 243*lambda_2[0, 85] + 243*lambda_2[0, 87] + 162*lambda_2[0, 89] + 243*lambda_2[0, 91] + 162*lambda_2[0, 94] + 486*lambda_2[0, 96] + 972*lambda_2[0, 97] + 972*lambda_2[0, 99] + 486*lambda_2[0, 101] + 972*lambda_2[0, 103] + 486*lambda_2[0, 106] + 729*lambda_2[0, 108] + 729*lambda_2[0, 110] + 729*lambda_2[0, 112] + 9*lambda_2[0, 114] + 9*lambda_2[0, 115] + 9*lambda_2[0, 117] + 27*lambda_2[0, 118] + 54*lambda_2[0, 119] + 27*lambda_2[0, 120] + 27*lambda_2[0, 121] + 54*lambda_2[0, 122] + 54*lambda_2[0, 124] + 27*lambda_2[0, 126] + 27*lambda_2[0, 127] + 27*lambda_2[0, 129] + 81*lambda_2[0, 130] + 243*lambda_2[0, 131] + 81*lambda_2[0, 132] + 81*lambda_2[0, 133] + 243*lambda_2[0, 134] + 243*lambda_2[0, 136] + 81*lambda_2[0, 138] + 81*lambda_2[0, 139] + 81*lambda_2[0, 141] + 243*lambda_2[0, 142] + 972*lambda_2[0, 143] + 243*lambda_2[0, 144] + 243*lambda_2[0, 145] + 972*lambda_2[0, 146] + 972*lambda_2[0, 148] + 243*lambda_2[0, 150] + 243*lambda_2[0, 151] + 243*lambda_2[0, 153] + 162*lambda_2[0, 154] + 81*lambda_2[0, 155] + 162*lambda_2[0, 156] + 162*lambda_2[0, 157] + 162*lambda_2[0, 159] + 81*lambda_2[0, 160] + 162*lambda_2[0, 161] + 162*lambda_2[0, 163] + 81*lambda_2[0, 165] + 486*lambda_2[0, 166] + 729*lambda_2[0, 167] + 243*lambda_2[0, 168] + 729*lambda_2[0, 169] + 243*lambda_2[0, 170] + 486*lambda_2[0, 171] + 486*lambda_2[0, 172] + 729*lambda_2[0, 173] + 729*lambda_2[0, 175] + 486*lambda_2[0, 177] + 243*lambda_2[0, 178] + 729*lambda_2[0, 179] + 729*lambda_2[0, 181] + 243*lambda_2[0, 183] + 243*lambda_2[0, 184] + 486*lambda_2[0, 185] + 486*lambda_2[0, 187] + 243*lambda_2[0, 189] + 486*lambda_2[0, 190] + 486*lambda_2[0, 191] + 486*lambda_2[0, 193] + 27*lambda_2[0, 194] + 81*lambda_2[0, 195] + 162*lambda_2[0, 196] + 81*lambda_2[0, 197] + 81*lambda_2[0, 198] + 243*lambda_2[0, 199] + 729*lambda_2[0, 200] + 243*lambda_2[0, 201] + 243*lambda_2[0, 202] + 486*lambda_2[0, 203] + 243*lambda_2[0, 204] + 486*lambda_2[0, 205] + 243*lambda_2[0, 206] + 486*lambda_2[0, 207] + 243*lambda_2[0, 208] >= -l*B[0, 3] + 13.4*B[0, 1] + 40*B[0, 2]*t[0, 2] + 16.3*B[0, 4]*t[0, 2]- objc]
	constraints += [lambda_2[0, 24] + 6*lambda_2[0, 30] + 6*lambda_2[0, 31] + 27*lambda_2[0, 42] + 27*lambda_2[0, 43] + 108*lambda_2[0, 54] + 108*lambda_2[0, 55] + 405*lambda_2[0, 66] + 405*lambda_2[0, 67] + 36*lambda_2[0, 78] + 162*lambda_2[0, 84] + 162*lambda_2[0, 85] + 648*lambda_2[0, 96] + 648*lambda_2[0, 97] + 729*lambda_2[0, 108] + 3*lambda_2[0, 114] + 3*lambda_2[0, 115] + 18*lambda_2[0, 118] + 18*lambda_2[0, 119] + 9*lambda_2[0, 120] + 18*lambda_2[0, 121] + 18*lambda_2[0, 122] + 9*lambda_2[0, 127] + 81*lambda_2[0, 130] + 81*lambda_2[0, 131] + 27*lambda_2[0, 132] + 81*lambda_2[0, 133] + 81*lambda_2[0, 134] + 27*lambda_2[0, 139] + 324*lambda_2[0, 142] + 324*lambda_2[0, 143] + 81*lambda_2[0, 144] + 324*lambda_2[0, 145] + 324*lambda_2[0, 146] + 81*lambda_2[0, 151] + 108*lambda_2[0, 154] + 54*lambda_2[0, 155] + 54*lambda_2[0, 156] + 108*lambda_2[0, 157] + 54*lambda_2[0, 160] + 54*lambda_2[0, 161] + 486*lambda_2[0, 166] + 486*lambda_2[0, 167] + 243*lambda_2[0, 168] + 243*lambda_2[0, 169] + 162*lambda_2[0, 170] + 162*lambda_2[0, 171] + 486*lambda_2[0, 172] + 486*lambda_2[0, 173] + 243*lambda_2[0, 178] + 243*lambda_2[0, 179] + 162*lambda_2[0, 184] + 162*lambda_2[0, 185] + 324*lambda_2[0, 190] + 324*lambda_2[0, 191] + 9*lambda_2[0, 194] + 54*lambda_2[0, 195] + 54*lambda_2[0, 196] + 27*lambda_2[0, 197] + 27*lambda_2[0, 198] + 243*lambda_2[0, 199] + 243*lambda_2[0, 200] + 81*lambda_2[0, 201] + 81*lambda_2[0, 202] + 324*lambda_2[0, 203] + 162*lambda_2[0, 204] + 162*lambda_2[0, 205] + 162*lambda_2[0, 206] + 162*lambda_2[0, 207] + 81*lambda_2[0, 208] <= g*B[0, 10] + k*B[0, 8] - l*B[0, 10] + 13.4*B[0, 7] + 40*B[0, 8]*t[0, 3] + 40*B[0, 9]*t[0, 2] + 16.3*B[0, 10]*t[0, 3] + 2*B[0, 13] + 32.6*B[0, 14]*t[0, 2]+ objc]
	constraints += [lambda_2[0, 24] + 6*lambda_2[0, 30] + 6*lambda_2[0, 31] + 27*lambda_2[0, 42] + 27*lambda_2[0, 43] + 108*lambda_2[0, 54] + 108*lambda_2[0, 55] + 405*lambda_2[0, 66] + 405*lambda_2[0, 67] + 36*lambda_2[0, 78] + 162*lambda_2[0, 84] + 162*lambda_2[0, 85] + 648*lambda_2[0, 96] + 648*lambda_2[0, 97] + 729*lambda_2[0, 108] + 3*lambda_2[0, 114] + 3*lambda_2[0, 115] + 18*lambda_2[0, 118] + 18*lambda_2[0, 119] + 9*lambda_2[0, 120] + 18*lambda_2[0, 121] + 18*lambda_2[0, 122] + 9*lambda_2[0, 127] + 81*lambda_2[0, 130] + 81*lambda_2[0, 131] + 27*lambda_2[0, 132] + 81*lambda_2[0, 133] + 81*lambda_2[0, 134] + 27*lambda_2[0, 139] + 324*lambda_2[0, 142] + 324*lambda_2[0, 143] + 81*lambda_2[0, 144] + 324*lambda_2[0, 145] + 324*lambda_2[0, 146] + 81*lambda_2[0, 151] + 108*lambda_2[0, 154] + 54*lambda_2[0, 155] + 54*lambda_2[0, 156] + 108*lambda_2[0, 157] + 54*lambda_2[0, 160] + 54*lambda_2[0, 161] + 486*lambda_2[0, 166] + 486*lambda_2[0, 167] + 243*lambda_2[0, 168] + 243*lambda_2[0, 169] + 162*lambda_2[0, 170] + 162*lambda_2[0, 171] + 486*lambda_2[0, 172] + 486*lambda_2[0, 173] + 243*lambda_2[0, 178] + 243*lambda_2[0, 179] + 162*lambda_2[0, 184] + 162*lambda_2[0, 185] + 324*lambda_2[0, 190] + 324*lambda_2[0, 191] + 9*lambda_2[0, 194] + 54*lambda_2[0, 195] + 54*lambda_2[0, 196] + 27*lambda_2[0, 197] + 27*lambda_2[0, 198] + 243*lambda_2[0, 199] + 243*lambda_2[0, 200] + 81*lambda_2[0, 201] + 81*lambda_2[0, 202] + 324*lambda_2[0, 203] + 162*lambda_2[0, 204] + 162*lambda_2[0, 205] + 162*lambda_2[0, 206] + 162*lambda_2[0, 207] + 81*lambda_2[0, 208] >= g*B[0, 10] + k*B[0, 8] - l*B[0, 10] + 13.4*B[0, 7] + 40*B[0, 8]*t[0, 3] + 40*B[0, 9]*t[0, 2] + 16.3*B[0, 10]*t[0, 3] + 2*B[0, 13] + 32.6*B[0, 14]*t[0, 2]- objc]
	constraints += [lambda_2[0, 30] + 9*lambda_2[0, 42] + 54*lambda_2[0, 54] + 270*lambda_2[0, 66] + 6*lambda_2[0, 78] + 54*lambda_2[0, 84] + 27*lambda_2[0, 85] + 324*lambda_2[0, 96] + 108*lambda_2[0, 97] + 243*lambda_2[0, 108] + 3*lambda_2[0, 118] + 3*lambda_2[0, 121] + 27*lambda_2[0, 130] + 27*lambda_2[0, 133] + 162*lambda_2[0, 142] + 162*lambda_2[0, 145] + 18*lambda_2[0, 154] + 9*lambda_2[0, 155] + 18*lambda_2[0, 157] + 9*lambda_2[0, 160] + 162*lambda_2[0, 166] + 81*lambda_2[0, 167] + 81*lambda_2[0, 168] + 27*lambda_2[0, 170] + 162*lambda_2[0, 172] + 81*lambda_2[0, 173] + 81*lambda_2[0, 178] + 27*lambda_2[0, 184] + 54*lambda_2[0, 190] + 54*lambda_2[0, 191] + 9*lambda_2[0, 195] + 81*lambda_2[0, 199] + 54*lambda_2[0, 203] + 27*lambda_2[0, 204] + 27*lambda_2[0, 206] == 0]
	constraints += [lambda_2[0, 42] + 12*lambda_2[0, 54] + 90*lambda_2[0, 66] + 6*lambda_2[0, 84] + 72*lambda_2[0, 96] + 27*lambda_2[0, 108] + 3*lambda_2[0, 130] + 3*lambda_2[0, 133] + 36*lambda_2[0, 142] + 36*lambda_2[0, 145] + 18*lambda_2[0, 166] + 9*lambda_2[0, 168] + 18*lambda_2[0, 172] + 9*lambda_2[0, 178] + 9*lambda_2[0, 199] <= 65.2*B[0, 18]*t[0, 2]+ objc]
	constraints += [lambda_2[0, 42] + 12*lambda_2[0, 54] + 90*lambda_2[0, 66] + 6*lambda_2[0, 84] + 72*lambda_2[0, 96] + 27*lambda_2[0, 108] + 3*lambda_2[0, 130] + 3*lambda_2[0, 133] + 36*lambda_2[0, 142] + 36*lambda_2[0, 145] + 18*lambda_2[0, 166] + 9*lambda_2[0, 168] + 18*lambda_2[0, 172] + 9*lambda_2[0, 178] + 9*lambda_2[0, 199] >= 65.2*B[0, 18]*t[0, 2]- objc]
	constraints += [lambda_2[0, 54] + 15*lambda_2[0, 66] + 6*lambda_2[0, 96] + 3*lambda_2[0, 142] + 3*lambda_2[0, 145] == 0]
	constraints += [lambda_2[0, 66] <= 97.8*B[0, 22]*t[0, 2]+ objc]
	constraints += [lambda_2[0, 66] >= 97.8*B[0, 22]*t[0, 2]- objc]
	constraints += [lambda_2[0, 5] + 9*lambda_2[0, 9] + 54*lambda_2[0, 13] + 270*lambda_2[0, 17] + 1215*lambda_2[0, 21] + 3*lambda_2[0, 31] + 3*lambda_2[0, 33] + 3*lambda_2[0, 37] + 27*lambda_2[0, 43] + 27*lambda_2[0, 45] + 27*lambda_2[0, 49] + 162*lambda_2[0, 55] + 162*lambda_2[0, 57] + 162*lambda_2[0, 61] + 810*lambda_2[0, 67] + 810*lambda_2[0, 69] + 810*lambda_2[0, 73] + 9*lambda_2[0, 78] + 9*lambda_2[0, 80] + 9*lambda_2[0, 82] + 27*lambda_2[0, 84] + 81*lambda_2[0, 85] + 81*lambda_2[0, 87] + 27*lambda_2[0, 89] + 81*lambda_2[0, 91] + 27*lambda_2[0, 94] + 81*lambda_2[0, 96] + 486*lambda_2[0, 97] + 486*lambda_2[0, 99] + 81*lambda_2[0, 101] + 486*lambda_2[0, 103] + 81*lambda_2[0, 106] + 243*lambda_2[0, 108] + 243*lambda_2[0, 110] + 243*lambda_2[0, 112] + 9*lambda_2[0, 119] + 9*lambda_2[0, 122] + 9*lambda_2[0, 124] + 81*lambda_2[0, 131] + 81*lambda_2[0, 134] + 81*lambda_2[0, 136] + 486*lambda_2[0, 143] + 486*lambda_2[0, 146] + 486*lambda_2[0, 148] + 27*lambda_2[0, 154] + 27*lambda_2[0, 156] + 27*lambda_2[0, 157] + 27*lambda_2[0, 159] + 27*lambda_2[0, 161] + 27*lambda_2[0, 163] + 81*lambda_2[0, 166] + 243*lambda_2[0, 167] + 243*lambda_2[0, 169] + 81*lambda_2[0, 171] + 81*lambda_2[0, 172] + 243*lambda_2[0, 173] + 243*lambda_2[0, 175] + 81*lambda_2[0, 177] + 243*lambda_2[0, 179] + 243*lambda_2[0, 181] + 81*lambda_2[0, 185] + 81*lambda_2[0, 187] + 81*lambda_2[0, 190] + 81*lambda_2[0, 191] + 81*lambda_2[0, 193] + 27*lambda_2[0, 196] + 243*lambda_2[0, 200] + 81*lambda_2[0, 203] + 81*lambda_2[0, 205] + 81*lambda_2[0, 207] <= -l*B[0, 13] + 13.4*B[0, 6] + 40*B[0, 8]*t[0, 2] + 16.3*B[0, 10]*t[0, 2] - 0.01+ objc]
	constraints += [lambda_2[0, 5] + 9*lambda_2[0, 9] + 54*lambda_2[0, 13] + 270*lambda_2[0, 17] + 1215*lambda_2[0, 21] + 3*lambda_2[0, 31] + 3*lambda_2[0, 33] + 3*lambda_2[0, 37] + 27*lambda_2[0, 43] + 27*lambda_2[0, 45] + 27*lambda_2[0, 49] + 162*lambda_2[0, 55] + 162*lambda_2[0, 57] + 162*lambda_2[0, 61] + 810*lambda_2[0, 67] + 810*lambda_2[0, 69] + 810*lambda_2[0, 73] + 9*lambda_2[0, 78] + 9*lambda_2[0, 80] + 9*lambda_2[0, 82] + 27*lambda_2[0, 84] + 81*lambda_2[0, 85] + 81*lambda_2[0, 87] + 27*lambda_2[0, 89] + 81*lambda_2[0, 91] + 27*lambda_2[0, 94] + 81*lambda_2[0, 96] + 486*lambda_2[0, 97] + 486*lambda_2[0, 99] + 81*lambda_2[0, 101] + 486*lambda_2[0, 103] + 81*lambda_2[0, 106] + 243*lambda_2[0, 108] + 243*lambda_2[0, 110] + 243*lambda_2[0, 112] + 9*lambda_2[0, 119] + 9*lambda_2[0, 122] + 9*lambda_2[0, 124] + 81*lambda_2[0, 131] + 81*lambda_2[0, 134] + 81*lambda_2[0, 136] + 486*lambda_2[0, 143] + 486*lambda_2[0, 146] + 486*lambda_2[0, 148] + 27*lambda_2[0, 154] + 27*lambda_2[0, 156] + 27*lambda_2[0, 157] + 27*lambda_2[0, 159] + 27*lambda_2[0, 161] + 27*lambda_2[0, 163] + 81*lambda_2[0, 166] + 243*lambda_2[0, 167] + 243*lambda_2[0, 169] + 81*lambda_2[0, 171] + 81*lambda_2[0, 172] + 243*lambda_2[0, 173] + 243*lambda_2[0, 175] + 81*lambda_2[0, 177] + 243*lambda_2[0, 179] + 243*lambda_2[0, 181] + 81*lambda_2[0, 185] + 81*lambda_2[0, 187] + 81*lambda_2[0, 190] + 81*lambda_2[0, 191] + 81*lambda_2[0, 193] + 27*lambda_2[0, 196] + 243*lambda_2[0, 200] + 81*lambda_2[0, 203] + 81*lambda_2[0, 205] + 81*lambda_2[0, 207] >= -l*B[0, 13] + 13.4*B[0, 6] + 40*B[0, 8]*t[0, 2] + 16.3*B[0, 10]*t[0, 2] - 0.01- objc]
	constraints += [lambda_2[0, 31] + 9*lambda_2[0, 43] + 54*lambda_2[0, 55] + 270*lambda_2[0, 67] + 6*lambda_2[0, 78] + 27*lambda_2[0, 84] + 54*lambda_2[0, 85] + 108*lambda_2[0, 96] + 324*lambda_2[0, 97] + 243*lambda_2[0, 108] + 3*lambda_2[0, 119] + 3*lambda_2[0, 122] + 27*lambda_2[0, 131] + 27*lambda_2[0, 134] + 162*lambda_2[0, 143] + 162*lambda_2[0, 146] + 18*lambda_2[0, 154] + 9*lambda_2[0, 156] + 18*lambda_2[0, 157] + 9*lambda_2[0, 161] + 81*lambda_2[0, 166] + 162*lambda_2[0, 167] + 81*lambda_2[0, 169] + 27*lambda_2[0, 171] + 81*lambda_2[0, 172] + 162*lambda_2[0, 173] + 81*lambda_2[0, 179] + 27*lambda_2[0, 185] + 54*lambda_2[0, 190] + 54*lambda_2[0, 191] + 9*lambda_2[0, 196] + 81*lambda_2[0, 200] + 54*lambda_2[0, 203] + 27*lambda_2[0, 205] + 27*lambda_2[0, 207] == 0]
	constraints += [lambda_2[0, 78] + 9*lambda_2[0, 84] + 9*lambda_2[0, 85] + 54*lambda_2[0, 96] + 54*lambda_2[0, 97] + 81*lambda_2[0, 108] + 3*lambda_2[0, 154] + 3*lambda_2[0, 157] + 27*lambda_2[0, 166] + 27*lambda_2[0, 167] + 27*lambda_2[0, 172] + 27*lambda_2[0, 173] + 9*lambda_2[0, 190] + 9*lambda_2[0, 191] + 9*lambda_2[0, 203] == 0]
	constraints += [lambda_2[0, 84] + 12*lambda_2[0, 96] + 9*lambda_2[0, 108] + 3*lambda_2[0, 166] + 3*lambda_2[0, 172] == 0]
	constraints += [lambda_2[0, 96] == 0]
	constraints += [lambda_2[0, 9] + 12*lambda_2[0, 13] + 90*lambda_2[0, 17] + 540*lambda_2[0, 21] + 3*lambda_2[0, 43] + 3*lambda_2[0, 45] + 3*lambda_2[0, 49] + 36*lambda_2[0, 55] + 36*lambda_2[0, 57] + 36*lambda_2[0, 61] + 270*lambda_2[0, 67] + 270*lambda_2[0, 69] + 270*lambda_2[0, 73] + 9*lambda_2[0, 85] + 9*lambda_2[0, 87] + 9*lambda_2[0, 91] + 108*lambda_2[0, 97] + 108*lambda_2[0, 99] + 108*lambda_2[0, 103] + 27*lambda_2[0, 108] + 27*lambda_2[0, 110] + 27*lambda_2[0, 112] + 9*lambda_2[0, 131] + 9*lambda_2[0, 134] + 9*lambda_2[0, 136] + 108*lambda_2[0, 143] + 108*lambda_2[0, 146] + 108*lambda_2[0, 148] + 27*lambda_2[0, 167] + 27*lambda_2[0, 169] + 27*lambda_2[0, 173] + 27*lambda_2[0, 175] + 27*lambda_2[0, 179] + 27*lambda_2[0, 181] + 27*lambda_2[0, 200] == 0]
	constraints += [lambda_2[0, 43] + 12*lambda_2[0, 55] + 90*lambda_2[0, 67] + 6*lambda_2[0, 85] + 72*lambda_2[0, 97] + 27*lambda_2[0, 108] + 3*lambda_2[0, 131] + 3*lambda_2[0, 134] + 36*lambda_2[0, 143] + 36*lambda_2[0, 146] + 18*lambda_2[0, 167] + 9*lambda_2[0, 169] + 18*lambda_2[0, 173] + 9*lambda_2[0, 179] + 9*lambda_2[0, 200] <= 4*B[0, 17]+ objc]
	constraints += [lambda_2[0, 43] + 12*lambda_2[0, 55] + 90*lambda_2[0, 67] + 6*lambda_2[0, 85] + 72*lambda_2[0, 97] + 27*lambda_2[0, 108] + 3*lambda_2[0, 131] + 3*lambda_2[0, 134] + 36*lambda_2[0, 143] + 36*lambda_2[0, 146] + 18*lambda_2[0, 167] + 9*lambda_2[0, 169] + 18*lambda_2[0, 173] + 9*lambda_2[0, 179] + 9*lambda_2[0, 200] >= 4*B[0, 17]- objc]
	constraints += [lambda_2[0, 85] + 12*lambda_2[0, 97] + 9*lambda_2[0, 108] + 3*lambda_2[0, 167] + 3*lambda_2[0, 173] == 0]
	constraints += [lambda_2[0, 108] == 0]
	constraints += [lambda_2[0, 13] + 15*lambda_2[0, 17] + 135*lambda_2[0, 21] + 3*lambda_2[0, 55] + 3*lambda_2[0, 57] + 3*lambda_2[0, 61] + 45*lambda_2[0, 67] + 45*lambda_2[0, 69] + 45*lambda_2[0, 73] + 9*lambda_2[0, 97] + 9*lambda_2[0, 99] + 9*lambda_2[0, 103] + 9*lambda_2[0, 143] + 9*lambda_2[0, 146] + 9*lambda_2[0, 148] <= -l*B[0, 17]+ objc]
	constraints += [lambda_2[0, 13] + 15*lambda_2[0, 17] + 135*lambda_2[0, 21] + 3*lambda_2[0, 55] + 3*lambda_2[0, 57] + 3*lambda_2[0, 61] + 45*lambda_2[0, 67] + 45*lambda_2[0, 69] + 45*lambda_2[0, 73] + 9*lambda_2[0, 97] + 9*lambda_2[0, 99] + 9*lambda_2[0, 103] + 9*lambda_2[0, 143] + 9*lambda_2[0, 146] + 9*lambda_2[0, 148] >= -l*B[0, 17]- objc]
	constraints += [lambda_2[0, 55] + 15*lambda_2[0, 67] + 6*lambda_2[0, 97] + 3*lambda_2[0, 143] + 3*lambda_2[0, 146] == 0]
	constraints += [lambda_2[0, 97] == 0]
	constraints += [lambda_2[0, 17] + 18*lambda_2[0, 21] + 3*lambda_2[0, 67] + 3*lambda_2[0, 69] + 3*lambda_2[0, 73] == 0]
	constraints += [lambda_2[0, 67] <= 6*B[0, 21]+ objc]
	constraints += [lambda_2[0, 67] >= 6*B[0, 21]- objc]
	constraints += [lambda_2[0, 21] <= -l*B[0, 21]+ objc]
	constraints += [lambda_2[0, 21] >= -l*B[0, 21]- objc]
	constraints += [lambda_2[0, 2] + 6*lambda_2[0, 6] + 27*lambda_2[0, 10] + 108*lambda_2[0, 14] + 405*lambda_2[0, 18] + 1458*lambda_2[0, 22] + 3*lambda_2[0, 25] + 3*lambda_2[0, 26] + 3*lambda_2[0, 29] + 9*lambda_2[0, 32] + 9*lambda_2[0, 33] + 18*lambda_2[0, 34] + 18*lambda_2[0, 35] + 18*lambda_2[0, 38] + 9*lambda_2[0, 41] + 27*lambda_2[0, 44] + 27*lambda_2[0, 45] + 81*lambda_2[0, 46] + 81*lambda_2[0, 47] + 81*lambda_2[0, 50] + 27*lambda_2[0, 53] + 81*lambda_2[0, 56] + 81*lambda_2[0, 57] + 324*lambda_2[0, 58] + 324*lambda_2[0, 59] + 324*lambda_2[0, 62] + 81*lambda_2[0, 65] + 243*lambda_2[0, 68] + 243*lambda_2[0, 69] + 1215*lambda_2[0, 70] + 1215*lambda_2[0, 71] + 1215*lambda_2[0, 74] + 243*lambda_2[0, 77] + 54*lambda_2[0, 79] + 54*lambda_2[0, 80] + 54*lambda_2[0, 83] + 162*lambda_2[0, 86] + 162*lambda_2[0, 87] + 243*lambda_2[0, 88] + 243*lambda_2[0, 89] + 243*lambda_2[0, 92] + 162*lambda_2[0, 95] + 486*lambda_2[0, 98] + 486*lambda_2[0, 99] + 972*lambda_2[0, 100] + 972*lambda_2[0, 101] + 972*lambda_2[0, 104] + 486*lambda_2[0, 107] + 729*lambda_2[0, 109] + 729*lambda_2[0, 110] + 729*lambda_2[0, 113] + 9*lambda_2[0, 114] + 9*lambda_2[0, 116] + 9*lambda_2[0, 117] + 27*lambda_2[0, 118] + 27*lambda_2[0, 119] + 54*lambda_2[0, 120] + 27*lambda_2[0, 123] + 27*lambda_2[0, 124] + 54*lambda_2[0, 125] + 54*lambda_2[0, 126] + 27*lambda_2[0, 128] + 27*lambda_2[0, 129] + 81*lambda_2[0, 130] + 81*lambda_2[0, 131] + 243*lambda_2[0, 132] + 81*lambda_2[0, 135] + 81*lambda_2[0, 136] + 243*lambda_2[0, 137] + 243*lambda_2[0, 138] + 81*lambda_2[0, 140] + 81*lambda_2[0, 141] + 243*lambda_2[0, 142] + 243*lambda_2[0, 143] + 972*lambda_2[0, 144] + 243*lambda_2[0, 147] + 243*lambda_2[0, 148] + 972*lambda_2[0, 149] + 972*lambda_2[0, 150] + 243*lambda_2[0, 152] + 243*lambda_2[0, 153] + 81*lambda_2[0, 154] + 162*lambda_2[0, 155] + 162*lambda_2[0, 156] + 162*lambda_2[0, 158] + 162*lambda_2[0, 159] + 81*lambda_2[0, 162] + 81*lambda_2[0, 163] + 162*lambda_2[0, 164] + 162*lambda_2[0, 165] + 243*lambda_2[0, 166] + 243*lambda_2[0, 167] + 486*lambda_2[0, 168] + 486*lambda_2[0, 169] + 729*lambda_2[0, 170] + 729*lambda_2[0, 171] + 486*lambda_2[0, 174] + 486*lambda_2[0, 175] + 729*lambda_2[0, 176] + 729*lambda_2[0, 177] + 243*lambda_2[0, 180] + 243*lambda_2[0, 181] + 729*lambda_2[0, 182] + 729*lambda_2[0, 183] + 243*lambda_2[0, 186] + 243*lambda_2[0, 187] + 486*lambda_2[0, 188] + 486*lambda_2[0, 189] + 486*lambda_2[0, 190] + 486*lambda_2[0, 192] + 486*lambda_2[0, 193] + 27*lambda_2[0, 194] + 81*lambda_2[0, 195] + 81*lambda_2[0, 196] + 162*lambda_2[0, 197] + 81*lambda_2[0, 198] + 243*lambda_2[0, 199] + 243*lambda_2[0, 200] + 729*lambda_2[0, 201] + 243*lambda_2[0, 202] + 243*lambda_2[0, 203] + 486*lambda_2[0, 204] + 486*lambda_2[0, 205] + 243*lambda_2[0, 206] + 243*lambda_2[0, 207] + 486*lambda_2[0, 208] <= -l*B[0, 2] + B[0, 1] + 40*B[0, 2]*t[0, 1] - 6.5*B[0, 2] + 16.3*B[0, 4]*t[0, 1] + 0.925*B[0, 4]+ objc]
	constraints += [lambda_2[0, 2] + 6*lambda_2[0, 6] + 27*lambda_2[0, 10] + 108*lambda_2[0, 14] + 405*lambda_2[0, 18] + 1458*lambda_2[0, 22] + 3*lambda_2[0, 25] + 3*lambda_2[0, 26] + 3*lambda_2[0, 29] + 9*lambda_2[0, 32] + 9*lambda_2[0, 33] + 18*lambda_2[0, 34] + 18*lambda_2[0, 35] + 18*lambda_2[0, 38] + 9*lambda_2[0, 41] + 27*lambda_2[0, 44] + 27*lambda_2[0, 45] + 81*lambda_2[0, 46] + 81*lambda_2[0, 47] + 81*lambda_2[0, 50] + 27*lambda_2[0, 53] + 81*lambda_2[0, 56] + 81*lambda_2[0, 57] + 324*lambda_2[0, 58] + 324*lambda_2[0, 59] + 324*lambda_2[0, 62] + 81*lambda_2[0, 65] + 243*lambda_2[0, 68] + 243*lambda_2[0, 69] + 1215*lambda_2[0, 70] + 1215*lambda_2[0, 71] + 1215*lambda_2[0, 74] + 243*lambda_2[0, 77] + 54*lambda_2[0, 79] + 54*lambda_2[0, 80] + 54*lambda_2[0, 83] + 162*lambda_2[0, 86] + 162*lambda_2[0, 87] + 243*lambda_2[0, 88] + 243*lambda_2[0, 89] + 243*lambda_2[0, 92] + 162*lambda_2[0, 95] + 486*lambda_2[0, 98] + 486*lambda_2[0, 99] + 972*lambda_2[0, 100] + 972*lambda_2[0, 101] + 972*lambda_2[0, 104] + 486*lambda_2[0, 107] + 729*lambda_2[0, 109] + 729*lambda_2[0, 110] + 729*lambda_2[0, 113] + 9*lambda_2[0, 114] + 9*lambda_2[0, 116] + 9*lambda_2[0, 117] + 27*lambda_2[0, 118] + 27*lambda_2[0, 119] + 54*lambda_2[0, 120] + 27*lambda_2[0, 123] + 27*lambda_2[0, 124] + 54*lambda_2[0, 125] + 54*lambda_2[0, 126] + 27*lambda_2[0, 128] + 27*lambda_2[0, 129] + 81*lambda_2[0, 130] + 81*lambda_2[0, 131] + 243*lambda_2[0, 132] + 81*lambda_2[0, 135] + 81*lambda_2[0, 136] + 243*lambda_2[0, 137] + 243*lambda_2[0, 138] + 81*lambda_2[0, 140] + 81*lambda_2[0, 141] + 243*lambda_2[0, 142] + 243*lambda_2[0, 143] + 972*lambda_2[0, 144] + 243*lambda_2[0, 147] + 243*lambda_2[0, 148] + 972*lambda_2[0, 149] + 972*lambda_2[0, 150] + 243*lambda_2[0, 152] + 243*lambda_2[0, 153] + 81*lambda_2[0, 154] + 162*lambda_2[0, 155] + 162*lambda_2[0, 156] + 162*lambda_2[0, 158] + 162*lambda_2[0, 159] + 81*lambda_2[0, 162] + 81*lambda_2[0, 163] + 162*lambda_2[0, 164] + 162*lambda_2[0, 165] + 243*lambda_2[0, 166] + 243*lambda_2[0, 167] + 486*lambda_2[0, 168] + 486*lambda_2[0, 169] + 729*lambda_2[0, 170] + 729*lambda_2[0, 171] + 486*lambda_2[0, 174] + 486*lambda_2[0, 175] + 729*lambda_2[0, 176] + 729*lambda_2[0, 177] + 243*lambda_2[0, 180] + 243*lambda_2[0, 181] + 729*lambda_2[0, 182] + 729*lambda_2[0, 183] + 243*lambda_2[0, 186] + 243*lambda_2[0, 187] + 486*lambda_2[0, 188] + 486*lambda_2[0, 189] + 486*lambda_2[0, 190] + 486*lambda_2[0, 192] + 486*lambda_2[0, 193] + 27*lambda_2[0, 194] + 81*lambda_2[0, 195] + 81*lambda_2[0, 196] + 162*lambda_2[0, 197] + 81*lambda_2[0, 198] + 243*lambda_2[0, 199] + 243*lambda_2[0, 200] + 729*lambda_2[0, 201] + 243*lambda_2[0, 202] + 243*lambda_2[0, 203] + 486*lambda_2[0, 204] + 486*lambda_2[0, 205] + 243*lambda_2[0, 206] + 243*lambda_2[0, 207] + 486*lambda_2[0, 208] >= -l*B[0, 2] + B[0, 1] + 40*B[0, 2]*t[0, 1] - 6.5*B[0, 2] + 16.3*B[0, 4]*t[0, 1] + 0.925*B[0, 4]- objc]
	constraints += [lambda_2[0, 25] + 6*lambda_2[0, 32] + 6*lambda_2[0, 34] + 27*lambda_2[0, 44] + 27*lambda_2[0, 46] + 108*lambda_2[0, 56] + 108*lambda_2[0, 58] + 405*lambda_2[0, 68] + 405*lambda_2[0, 70] + 36*lambda_2[0, 79] + 162*lambda_2[0, 86] + 162*lambda_2[0, 88] + 648*lambda_2[0, 98] + 648*lambda_2[0, 100] + 729*lambda_2[0, 109] + 3*lambda_2[0, 114] + 3*lambda_2[0, 116] + 18*lambda_2[0, 118] + 9*lambda_2[0, 119] + 18*lambda_2[0, 120] + 18*lambda_2[0, 123] + 18*lambda_2[0, 125] + 9*lambda_2[0, 128] + 81*lambda_2[0, 130] + 27*lambda_2[0, 131] + 81*lambda_2[0, 132] + 81*lambda_2[0, 135] + 81*lambda_2[0, 137] + 27*lambda_2[0, 140] + 324*lambda_2[0, 142] + 81*lambda_2[0, 143] + 324*lambda_2[0, 144] + 324*lambda_2[0, 147] + 324*lambda_2[0, 149] + 81*lambda_2[0, 152] + 54*lambda_2[0, 154] + 108*lambda_2[0, 155] + 54*lambda_2[0, 156] + 108*lambda_2[0, 158] + 54*lambda_2[0, 162] + 54*lambda_2[0, 164] + 243*lambda_2[0, 166] + 162*lambda_2[0, 167] + 486*lambda_2[0, 168] + 162*lambda_2[0, 169] + 486*lambda_2[0, 170] + 243*lambda_2[0, 171] + 486*lambda_2[0, 174] + 486*lambda_2[0, 176] + 243*lambda_2[0, 180] + 243*lambda_2[0, 182] + 162*lambda_2[0, 186] + 162*lambda_2[0, 188] + 324*lambda_2[0, 190] + 324*lambda_2[0, 192] + 9*lambda_2[0, 194] + 54*lambda_2[0, 195] + 27*lambda_2[0, 196] + 54*lambda_2[0, 197] + 27*lambda_2[0, 198] + 243*lambda_2[0, 199] + 81*lambda_2[0, 200] + 243*lambda_2[0, 201] + 81*lambda_2[0, 202] + 162*lambda_2[0, 203] + 324*lambda_2[0, 204] + 162*lambda_2[0, 205] + 162*lambda_2[0, 206] + 81*lambda_2[0, 207] + 162*lambda_2[0, 208] <= g*B[0, 9] + 2*k*B[0, 12] - l*B[0, 9] + B[0, 7] + B[0, 8] + 40*B[0, 9]*t[0, 1] + 16.3*B[0, 9]*t[0, 3] - 6.5*B[0, 9] + 80*B[0, 12]*t[0, 3] + 32.6*B[0, 14]*t[0, 1] + 1.85*B[0, 14]+ objc]
	constraints += [lambda_2[0, 25] + 6*lambda_2[0, 32] + 6*lambda_2[0, 34] + 27*lambda_2[0, 44] + 27*lambda_2[0, 46] + 108*lambda_2[0, 56] + 108*lambda_2[0, 58] + 405*lambda_2[0, 68] + 405*lambda_2[0, 70] + 36*lambda_2[0, 79] + 162*lambda_2[0, 86] + 162*lambda_2[0, 88] + 648*lambda_2[0, 98] + 648*lambda_2[0, 100] + 729*lambda_2[0, 109] + 3*lambda_2[0, 114] + 3*lambda_2[0, 116] + 18*lambda_2[0, 118] + 9*lambda_2[0, 119] + 18*lambda_2[0, 120] + 18*lambda_2[0, 123] + 18*lambda_2[0, 125] + 9*lambda_2[0, 128] + 81*lambda_2[0, 130] + 27*lambda_2[0, 131] + 81*lambda_2[0, 132] + 81*lambda_2[0, 135] + 81*lambda_2[0, 137] + 27*lambda_2[0, 140] + 324*lambda_2[0, 142] + 81*lambda_2[0, 143] + 324*lambda_2[0, 144] + 324*lambda_2[0, 147] + 324*lambda_2[0, 149] + 81*lambda_2[0, 152] + 54*lambda_2[0, 154] + 108*lambda_2[0, 155] + 54*lambda_2[0, 156] + 108*lambda_2[0, 158] + 54*lambda_2[0, 162] + 54*lambda_2[0, 164] + 243*lambda_2[0, 166] + 162*lambda_2[0, 167] + 486*lambda_2[0, 168] + 162*lambda_2[0, 169] + 486*lambda_2[0, 170] + 243*lambda_2[0, 171] + 486*lambda_2[0, 174] + 486*lambda_2[0, 176] + 243*lambda_2[0, 180] + 243*lambda_2[0, 182] + 162*lambda_2[0, 186] + 162*lambda_2[0, 188] + 324*lambda_2[0, 190] + 324*lambda_2[0, 192] + 9*lambda_2[0, 194] + 54*lambda_2[0, 195] + 27*lambda_2[0, 196] + 54*lambda_2[0, 197] + 27*lambda_2[0, 198] + 243*lambda_2[0, 199] + 81*lambda_2[0, 200] + 243*lambda_2[0, 201] + 81*lambda_2[0, 202] + 162*lambda_2[0, 203] + 324*lambda_2[0, 204] + 162*lambda_2[0, 205] + 162*lambda_2[0, 206] + 81*lambda_2[0, 207] + 162*lambda_2[0, 208] >= g*B[0, 9] + 2*k*B[0, 12] - l*B[0, 9] + B[0, 7] + B[0, 8] + 40*B[0, 9]*t[0, 1] + 16.3*B[0, 9]*t[0, 3] - 6.5*B[0, 9] + 80*B[0, 12]*t[0, 3] + 32.6*B[0, 14]*t[0, 1] + 1.85*B[0, 14]- objc]
	constraints += [lambda_2[0, 32] + 9*lambda_2[0, 44] + 54*lambda_2[0, 56] + 270*lambda_2[0, 68] + 6*lambda_2[0, 79] + 54*lambda_2[0, 86] + 27*lambda_2[0, 88] + 324*lambda_2[0, 98] + 108*lambda_2[0, 100] + 243*lambda_2[0, 109] + 3*lambda_2[0, 118] + 3*lambda_2[0, 123] + 27*lambda_2[0, 130] + 27*lambda_2[0, 135] + 162*lambda_2[0, 142] + 162*lambda_2[0, 147] + 9*lambda_2[0, 154] + 18*lambda_2[0, 155] + 18*lambda_2[0, 158] + 9*lambda_2[0, 162] + 81*lambda_2[0, 166] + 27*lambda_2[0, 167] + 162*lambda_2[0, 168] + 81*lambda_2[0, 170] + 162*lambda_2[0, 174] + 81*lambda_2[0, 176] + 81*lambda_2[0, 180] + 27*lambda_2[0, 186] + 54*lambda_2[0, 190] + 54*lambda_2[0, 192] + 9*lambda_2[0, 195] + 81*lambda_2[0, 199] + 27*lambda_2[0, 203] + 54*lambda_2[0, 204] + 27*lambda_2[0, 206] == 0]
	constraints += [lambda_2[0, 44] + 12*lambda_2[0, 56] + 90*lambda_2[0, 68] + 6*lambda_2[0, 86] + 72*lambda_2[0, 98] + 27*lambda_2[0, 109] + 3*lambda_2[0, 130] + 3*lambda_2[0, 135] + 36*lambda_2[0, 142] + 36*lambda_2[0, 147] + 9*lambda_2[0, 166] + 18*lambda_2[0, 168] + 18*lambda_2[0, 174] + 9*lambda_2[0, 180] + 9*lambda_2[0, 199] <= 65.2*B[0, 18]*t[0, 1] + 3.7*B[0, 18]+ objc]
	constraints += [lambda_2[0, 44] + 12*lambda_2[0, 56] + 90*lambda_2[0, 68] + 6*lambda_2[0, 86] + 72*lambda_2[0, 98] + 27*lambda_2[0, 109] + 3*lambda_2[0, 130] + 3*lambda_2[0, 135] + 36*lambda_2[0, 142] + 36*lambda_2[0, 147] + 9*lambda_2[0, 166] + 18*lambda_2[0, 168] + 18*lambda_2[0, 174] + 9*lambda_2[0, 180] + 9*lambda_2[0, 199] >= 65.2*B[0, 18]*t[0, 1] + 3.7*B[0, 18]- objc]
	constraints += [lambda_2[0, 56] + 15*lambda_2[0, 68] + 6*lambda_2[0, 98] + 3*lambda_2[0, 142] + 3*lambda_2[0, 147] == 0]
	constraints += [lambda_2[0, 68] <= 97.8*B[0, 22]*t[0, 1] + 5.55*B[0, 22]+ objc]
	constraints += [lambda_2[0, 68] >= 97.8*B[0, 22]*t[0, 1] + 5.55*B[0, 22]- objc]
	constraints += [lambda_2[0, 26] + 6*lambda_2[0, 33] + 6*lambda_2[0, 35] + 27*lambda_2[0, 45] + 27*lambda_2[0, 47] + 108*lambda_2[0, 57] + 108*lambda_2[0, 59] + 405*lambda_2[0, 69] + 405*lambda_2[0, 71] + 36*lambda_2[0, 80] + 162*lambda_2[0, 87] + 162*lambda_2[0, 89] + 648*lambda_2[0, 99] + 648*lambda_2[0, 101] + 729*lambda_2[0, 110] + 3*lambda_2[0, 114] + 3*lambda_2[0, 117] + 9*lambda_2[0, 118] + 18*lambda_2[0, 119] + 18*lambda_2[0, 120] + 18*lambda_2[0, 124] + 18*lambda_2[0, 126] + 9*lambda_2[0, 129] + 27*lambda_2[0, 130] + 81*lambda_2[0, 131] + 81*lambda_2[0, 132] + 81*lambda_2[0, 136] + 81*lambda_2[0, 138] + 27*lambda_2[0, 141] + 81*lambda_2[0, 142] + 324*lambda_2[0, 143] + 324*lambda_2[0, 144] + 324*lambda_2[0, 148] + 324*lambda_2[0, 150] + 81*lambda_2[0, 153] + 54*lambda_2[0, 154] + 54*lambda_2[0, 155] + 108*lambda_2[0, 156] + 108*lambda_2[0, 159] + 54*lambda_2[0, 163] + 54*lambda_2[0, 165] + 162*lambda_2[0, 166] + 243*lambda_2[0, 167] + 162*lambda_2[0, 168] + 486*lambda_2[0, 169] + 243*lambda_2[0, 170] + 486*lambda_2[0, 171] + 486*lambda_2[0, 175] + 486*lambda_2[0, 177] + 243*lambda_2[0, 181] + 243*lambda_2[0, 183] + 162*lambda_2[0, 187] + 162*lambda_2[0, 189] + 324*lambda_2[0, 190] + 324*lambda_2[0, 193] + 9*lambda_2[0, 194] + 27*lambda_2[0, 195] + 54*lambda_2[0, 196] + 54*lambda_2[0, 197] + 27*lambda_2[0, 198] + 81*lambda_2[0, 199] + 243*lambda_2[0, 200] + 243*lambda_2[0, 201] + 81*lambda_2[0, 202] + 162*lambda_2[0, 203] + 162*lambda_2[0, 204] + 324*lambda_2[0, 205] + 81*lambda_2[0, 206] + 162*lambda_2[0, 207] + 162*lambda_2[0, 208] <= -l*B[0, 8] + 13.4*B[0, 5] + B[0, 6] + 40*B[0, 8]*t[0, 1] - 6.5*B[0, 8] + 16.3*B[0, 9]*t[0, 2] + 16.3*B[0, 10]*t[0, 1] + 0.925*B[0, 10] + 80*B[0, 12]*t[0, 2]+ objc]
	constraints += [lambda_2[0, 26] + 6*lambda_2[0, 33] + 6*lambda_2[0, 35] + 27*lambda_2[0, 45] + 27*lambda_2[0, 47] + 108*lambda_2[0, 57] + 108*lambda_2[0, 59] + 405*lambda_2[0, 69] + 405*lambda_2[0, 71] + 36*lambda_2[0, 80] + 162*lambda_2[0, 87] + 162*lambda_2[0, 89] + 648*lambda_2[0, 99] + 648*lambda_2[0, 101] + 729*lambda_2[0, 110] + 3*lambda_2[0, 114] + 3*lambda_2[0, 117] + 9*lambda_2[0, 118] + 18*lambda_2[0, 119] + 18*lambda_2[0, 120] + 18*lambda_2[0, 124] + 18*lambda_2[0, 126] + 9*lambda_2[0, 129] + 27*lambda_2[0, 130] + 81*lambda_2[0, 131] + 81*lambda_2[0, 132] + 81*lambda_2[0, 136] + 81*lambda_2[0, 138] + 27*lambda_2[0, 141] + 81*lambda_2[0, 142] + 324*lambda_2[0, 143] + 324*lambda_2[0, 144] + 324*lambda_2[0, 148] + 324*lambda_2[0, 150] + 81*lambda_2[0, 153] + 54*lambda_2[0, 154] + 54*lambda_2[0, 155] + 108*lambda_2[0, 156] + 108*lambda_2[0, 159] + 54*lambda_2[0, 163] + 54*lambda_2[0, 165] + 162*lambda_2[0, 166] + 243*lambda_2[0, 167] + 162*lambda_2[0, 168] + 486*lambda_2[0, 169] + 243*lambda_2[0, 170] + 486*lambda_2[0, 171] + 486*lambda_2[0, 175] + 486*lambda_2[0, 177] + 243*lambda_2[0, 181] + 243*lambda_2[0, 183] + 162*lambda_2[0, 187] + 162*lambda_2[0, 189] + 324*lambda_2[0, 190] + 324*lambda_2[0, 193] + 9*lambda_2[0, 194] + 27*lambda_2[0, 195] + 54*lambda_2[0, 196] + 54*lambda_2[0, 197] + 27*lambda_2[0, 198] + 81*lambda_2[0, 199] + 243*lambda_2[0, 200] + 243*lambda_2[0, 201] + 81*lambda_2[0, 202] + 162*lambda_2[0, 203] + 162*lambda_2[0, 204] + 324*lambda_2[0, 205] + 81*lambda_2[0, 206] + 162*lambda_2[0, 207] + 162*lambda_2[0, 208] >= -l*B[0, 8] + 13.4*B[0, 5] + B[0, 6] + 40*B[0, 8]*t[0, 1] - 6.5*B[0, 8] + 16.3*B[0, 9]*t[0, 2] + 16.3*B[0, 10]*t[0, 1] + 0.925*B[0, 10] + 80*B[0, 12]*t[0, 2]- objc]
	constraints += [lambda_2[0, 114] + 6*lambda_2[0, 118] + 6*lambda_2[0, 119] + 6*lambda_2[0, 120] + 27*lambda_2[0, 130] + 27*lambda_2[0, 131] + 27*lambda_2[0, 132] + 108*lambda_2[0, 142] + 108*lambda_2[0, 143] + 108*lambda_2[0, 144] + 36*lambda_2[0, 154] + 36*lambda_2[0, 155] + 36*lambda_2[0, 156] + 162*lambda_2[0, 166] + 162*lambda_2[0, 167] + 162*lambda_2[0, 168] + 162*lambda_2[0, 169] + 162*lambda_2[0, 170] + 162*lambda_2[0, 171] + 216*lambda_2[0, 190] + 3*lambda_2[0, 194] + 18*lambda_2[0, 195] + 18*lambda_2[0, 196] + 18*lambda_2[0, 197] + 9*lambda_2[0, 198] + 81*lambda_2[0, 199] + 81*lambda_2[0, 200] + 81*lambda_2[0, 201] + 27*lambda_2[0, 202] + 108*lambda_2[0, 203] + 108*lambda_2[0, 204] + 108*lambda_2[0, 205] + 54*lambda_2[0, 206] + 54*lambda_2[0, 207] + 54*lambda_2[0, 208] == 0]
	constraints += [lambda_2[0, 118] + 9*lambda_2[0, 130] + 54*lambda_2[0, 142] + 6*lambda_2[0, 154] + 6*lambda_2[0, 155] + 54*lambda_2[0, 166] + 27*lambda_2[0, 167] + 54*lambda_2[0, 168] + 27*lambda_2[0, 170] + 36*lambda_2[0, 190] + 3*lambda_2[0, 195] + 27*lambda_2[0, 199] + 18*lambda_2[0, 203] + 18*lambda_2[0, 204] + 9*lambda_2[0, 206] == 0]
	constraints += [lambda_2[0, 130] + 12*lambda_2[0, 142] + 6*lambda_2[0, 166] + 6*lambda_2[0, 168] + 3*lambda_2[0, 199] == 0]
	constraints += [lambda_2[0, 142] == 0]
	constraints += [lambda_2[0, 33] + 9*lambda_2[0, 45] + 54*lambda_2[0, 57] + 270*lambda_2[0, 69] + 6*lambda_2[0, 80] + 54*lambda_2[0, 87] + 27*lambda_2[0, 89] + 324*lambda_2[0, 99] + 108*lambda_2[0, 101] + 243*lambda_2[0, 110] + 3*lambda_2[0, 119] + 3*lambda_2[0, 124] + 27*lambda_2[0, 131] + 27*lambda_2[0, 136] + 162*lambda_2[0, 143] + 162*lambda_2[0, 148] + 9*lambda_2[0, 154] + 18*lambda_2[0, 156] + 18*lambda_2[0, 159] + 9*lambda_2[0, 163] + 27*lambda_2[0, 166] + 81*lambda_2[0, 167] + 162*lambda_2[0, 169] + 81*lambda_2[0, 171] + 162*lambda_2[0, 175] + 81*lambda_2[0, 177] + 81*lambda_2[0, 181] + 27*lambda_2[0, 187] + 54*lambda_2[0, 190] + 54*lambda_2[0, 193] + 9*lambda_2[0, 196] + 81*lambda_2[0, 200] + 27*lambda_2[0, 203] + 54*lambda_2[0, 205] + 27*lambda_2[0, 207] == 0]
	constraints += [lambda_2[0, 119] + 9*lambda_2[0, 131] + 54*lambda_2[0, 143] + 6*lambda_2[0, 154] + 6*lambda_2[0, 156] + 27*lambda_2[0, 166] + 54*lambda_2[0, 167] + 54*lambda_2[0, 169] + 27*lambda_2[0, 171] + 36*lambda_2[0, 190] + 3*lambda_2[0, 196] + 27*lambda_2[0, 200] + 18*lambda_2[0, 203] + 18*lambda_2[0, 205] + 9*lambda_2[0, 207] == 0]
	constraints += [lambda_2[0, 154] + 9*lambda_2[0, 166] + 9*lambda_2[0, 167] + 6*lambda_2[0, 190] + 3*lambda_2[0, 203] == 0]
	constraints += [lambda_2[0, 166] == 0]
	constraints += [lambda_2[0, 45] + 12*lambda_2[0, 57] + 90*lambda_2[0, 69] + 6*lambda_2[0, 87] + 72*lambda_2[0, 99] + 27*lambda_2[0, 110] + 3*lambda_2[0, 131] + 3*lambda_2[0, 136] + 36*lambda_2[0, 143] + 36*lambda_2[0, 148] + 9*lambda_2[0, 167] + 18*lambda_2[0, 169] + 18*lambda_2[0, 175] + 9*lambda_2[0, 181] + 9*lambda_2[0, 200] == 0]
	constraints += [lambda_2[0, 131] + 12*lambda_2[0, 143] + 6*lambda_2[0, 167] + 6*lambda_2[0, 169] + 3*lambda_2[0, 200] == 0]
	constraints += [lambda_2[0, 167] == 0]
	constraints += [lambda_2[0, 57] + 15*lambda_2[0, 69] + 6*lambda_2[0, 99] + 3*lambda_2[0, 143] + 3*lambda_2[0, 148] == 0]
	constraints += [lambda_2[0, 143] == 0]
	constraints += [lambda_2[0, 69] == 0]
	constraints += [lambda_2[0, 6] + 9*lambda_2[0, 10] + 54*lambda_2[0, 14] + 270*lambda_2[0, 18] + 1215*lambda_2[0, 22] + 3*lambda_2[0, 34] + 3*lambda_2[0, 35] + 3*lambda_2[0, 38] + 27*lambda_2[0, 46] + 27*lambda_2[0, 47] + 27*lambda_2[0, 50] + 162*lambda_2[0, 58] + 162*lambda_2[0, 59] + 162*lambda_2[0, 62] + 810*lambda_2[0, 70] + 810*lambda_2[0, 71] + 810*lambda_2[0, 74] + 9*lambda_2[0, 79] + 9*lambda_2[0, 80] + 9*lambda_2[0, 83] + 27*lambda_2[0, 86] + 27*lambda_2[0, 87] + 81*lambda_2[0, 88] + 81*lambda_2[0, 89] + 81*lambda_2[0, 92] + 27*lambda_2[0, 95] + 81*lambda_2[0, 98] + 81*lambda_2[0, 99] + 486*lambda_2[0, 100] + 486*lambda_2[0, 101] + 486*lambda_2[0, 104] + 81*lambda_2[0, 107] + 243*lambda_2[0, 109] + 243*lambda_2[0, 110] + 243*lambda_2[0, 113] + 9*lambda_2[0, 120] + 9*lambda_2[0, 125] + 9*lambda_2[0, 126] + 81*lambda_2[0, 132] + 81*lambda_2[0, 137] + 81*lambda_2[0, 138] + 486*lambda_2[0, 144] + 486*lambda_2[0, 149] + 486*lambda_2[0, 150] + 27*lambda_2[0, 155] + 27*lambda_2[0, 156] + 27*lambda_2[0, 158] + 27*lambda_2[0, 159] + 27*lambda_2[0, 164] + 27*lambda_2[0, 165] + 81*lambda_2[0, 168] + 81*lambda_2[0, 169] + 243*lambda_2[0, 170] + 243*lambda_2[0, 171] + 81*lambda_2[0, 174] + 81*lambda_2[0, 175] + 243*lambda_2[0, 176] + 243*lambda_2[0, 177] + 243*lambda_2[0, 182] + 243*lambda_2[0, 183] + 81*lambda_2[0, 188] + 81*lambda_2[0, 189] + 81*lambda_2[0, 190] + 81*lambda_2[0, 192] + 81*lambda_2[0, 193] + 27*lambda_2[0, 197] + 243*lambda_2[0, 201] + 81*lambda_2[0, 204] + 81*lambda_2[0, 205] + 81*lambda_2[0, 208] <= -l*B[0, 12] + B[0, 5] + 16.3*B[0, 9]*t[0, 1] + 0.925*B[0, 9] + 80*B[0, 12]*t[0, 1] - 13.0*B[0, 12] - 0.01+ objc]
	constraints += [lambda_2[0, 6] + 9*lambda_2[0, 10] + 54*lambda_2[0, 14] + 270*lambda_2[0, 18] + 1215*lambda_2[0, 22] + 3*lambda_2[0, 34] + 3*lambda_2[0, 35] + 3*lambda_2[0, 38] + 27*lambda_2[0, 46] + 27*lambda_2[0, 47] + 27*lambda_2[0, 50] + 162*lambda_2[0, 58] + 162*lambda_2[0, 59] + 162*lambda_2[0, 62] + 810*lambda_2[0, 70] + 810*lambda_2[0, 71] + 810*lambda_2[0, 74] + 9*lambda_2[0, 79] + 9*lambda_2[0, 80] + 9*lambda_2[0, 83] + 27*lambda_2[0, 86] + 27*lambda_2[0, 87] + 81*lambda_2[0, 88] + 81*lambda_2[0, 89] + 81*lambda_2[0, 92] + 27*lambda_2[0, 95] + 81*lambda_2[0, 98] + 81*lambda_2[0, 99] + 486*lambda_2[0, 100] + 486*lambda_2[0, 101] + 486*lambda_2[0, 104] + 81*lambda_2[0, 107] + 243*lambda_2[0, 109] + 243*lambda_2[0, 110] + 243*lambda_2[0, 113] + 9*lambda_2[0, 120] + 9*lambda_2[0, 125] + 9*lambda_2[0, 126] + 81*lambda_2[0, 132] + 81*lambda_2[0, 137] + 81*lambda_2[0, 138] + 486*lambda_2[0, 144] + 486*lambda_2[0, 149] + 486*lambda_2[0, 150] + 27*lambda_2[0, 155] + 27*lambda_2[0, 156] + 27*lambda_2[0, 158] + 27*lambda_2[0, 159] + 27*lambda_2[0, 164] + 27*lambda_2[0, 165] + 81*lambda_2[0, 168] + 81*lambda_2[0, 169] + 243*lambda_2[0, 170] + 243*lambda_2[0, 171] + 81*lambda_2[0, 174] + 81*lambda_2[0, 175] + 243*lambda_2[0, 176] + 243*lambda_2[0, 177] + 243*lambda_2[0, 182] + 243*lambda_2[0, 183] + 81*lambda_2[0, 188] + 81*lambda_2[0, 189] + 81*lambda_2[0, 190] + 81*lambda_2[0, 192] + 81*lambda_2[0, 193] + 27*lambda_2[0, 197] + 243*lambda_2[0, 201] + 81*lambda_2[0, 204] + 81*lambda_2[0, 205] + 81*lambda_2[0, 208] >= -l*B[0, 12] + B[0, 5] + 16.3*B[0, 9]*t[0, 1] + 0.925*B[0, 9] + 80*B[0, 12]*t[0, 1] - 13.0*B[0, 12] - 0.01- objc]
	constraints += [lambda_2[0, 34] + 9*lambda_2[0, 46] + 54*lambda_2[0, 58] + 270*lambda_2[0, 70] + 6*lambda_2[0, 79] + 27*lambda_2[0, 86] + 54*lambda_2[0, 88] + 108*lambda_2[0, 98] + 324*lambda_2[0, 100] + 243*lambda_2[0, 109] + 3*lambda_2[0, 120] + 3*lambda_2[0, 125] + 27*lambda_2[0, 132] + 27*lambda_2[0, 137] + 162*lambda_2[0, 144] + 162*lambda_2[0, 149] + 18*lambda_2[0, 155] + 9*lambda_2[0, 156] + 18*lambda_2[0, 158] + 9*lambda_2[0, 164] + 81*lambda_2[0, 168] + 27*lambda_2[0, 169] + 162*lambda_2[0, 170] + 81*lambda_2[0, 171] + 81*lambda_2[0, 174] + 162*lambda_2[0, 176] + 81*lambda_2[0, 182] + 27*lambda_2[0, 188] + 54*lambda_2[0, 190] + 54*lambda_2[0, 192] + 9*lambda_2[0, 197] + 81*lambda_2[0, 201] + 54*lambda_2[0, 204] + 27*lambda_2[0, 205] + 27*lambda_2[0, 208] == 0]
	constraints += [lambda_2[0, 79] + 9*lambda_2[0, 86] + 9*lambda_2[0, 88] + 54*lambda_2[0, 98] + 54*lambda_2[0, 100] + 81*lambda_2[0, 109] + 3*lambda_2[0, 155] + 3*lambda_2[0, 158] + 27*lambda_2[0, 168] + 27*lambda_2[0, 170] + 27*lambda_2[0, 174] + 27*lambda_2[0, 176] + 9*lambda_2[0, 190] + 9*lambda_2[0, 192] + 9*lambda_2[0, 204] == 0]
	constraints += [lambda_2[0, 86] + 12*lambda_2[0, 98] + 9*lambda_2[0, 109] + 3*lambda_2[0, 168] + 3*lambda_2[0, 174] == 0]
	constraints += [lambda_2[0, 98] == 0]
	constraints += [lambda_2[0, 35] + 9*lambda_2[0, 47] + 54*lambda_2[0, 59] + 270*lambda_2[0, 71] + 6*lambda_2[0, 80] + 27*lambda_2[0, 87] + 54*lambda_2[0, 89] + 108*lambda_2[0, 99] + 324*lambda_2[0, 101] + 243*lambda_2[0, 110] + 3*lambda_2[0, 120] + 3*lambda_2[0, 126] + 27*lambda_2[0, 132] + 27*lambda_2[0, 138] + 162*lambda_2[0, 144] + 162*lambda_2[0, 150] + 9*lambda_2[0, 155] + 18*lambda_2[0, 156] + 18*lambda_2[0, 159] + 9*lambda_2[0, 165] + 27*lambda_2[0, 168] + 81*lambda_2[0, 169] + 81*lambda_2[0, 170] + 162*lambda_2[0, 171] + 81*lambda_2[0, 175] + 162*lambda_2[0, 177] + 81*lambda_2[0, 183] + 27*lambda_2[0, 189] + 54*lambda_2[0, 190] + 54*lambda_2[0, 193] + 9*lambda_2[0, 197] + 81*lambda_2[0, 201] + 27*lambda_2[0, 204] + 54*lambda_2[0, 205] + 27*lambda_2[0, 208] == 0]
	constraints += [lambda_2[0, 120] + 9*lambda_2[0, 132] + 54*lambda_2[0, 144] + 6*lambda_2[0, 155] + 6*lambda_2[0, 156] + 27*lambda_2[0, 168] + 27*lambda_2[0, 169] + 54*lambda_2[0, 170] + 54*lambda_2[0, 171] + 36*lambda_2[0, 190] + 3*lambda_2[0, 197] + 27*lambda_2[0, 201] + 18*lambda_2[0, 204] + 18*lambda_2[0, 205] + 9*lambda_2[0, 208] == 0]
	constraints += [lambda_2[0, 155] + 9*lambda_2[0, 168] + 9*lambda_2[0, 170] + 6*lambda_2[0, 190] + 3*lambda_2[0, 204] == 0]
	constraints += [lambda_2[0, 168] == 0]
	constraints += [lambda_2[0, 80] + 9*lambda_2[0, 87] + 9*lambda_2[0, 89] + 54*lambda_2[0, 99] + 54*lambda_2[0, 101] + 81*lambda_2[0, 110] + 3*lambda_2[0, 156] + 3*lambda_2[0, 159] + 27*lambda_2[0, 169] + 27*lambda_2[0, 171] + 27*lambda_2[0, 175] + 27*lambda_2[0, 177] + 9*lambda_2[0, 190] + 9*lambda_2[0, 193] + 9*lambda_2[0, 205] == 0]
	constraints += [lambda_2[0, 156] + 9*lambda_2[0, 169] + 9*lambda_2[0, 171] + 6*lambda_2[0, 190] + 3*lambda_2[0, 205] == 0]
	constraints += [lambda_2[0, 190] == 0]
	constraints += [lambda_2[0, 87] + 12*lambda_2[0, 99] + 9*lambda_2[0, 110] + 3*lambda_2[0, 169] + 3*lambda_2[0, 175] == 0]
	constraints += [lambda_2[0, 169] == 0]
	constraints += [lambda_2[0, 99] == 0]
	constraints += [lambda_2[0, 10] + 12*lambda_2[0, 14] + 90*lambda_2[0, 18] + 540*lambda_2[0, 22] + 3*lambda_2[0, 46] + 3*lambda_2[0, 47] + 3*lambda_2[0, 50] + 36*lambda_2[0, 58] + 36*lambda_2[0, 59] + 36*lambda_2[0, 62] + 270*lambda_2[0, 70] + 270*lambda_2[0, 71] + 270*lambda_2[0, 74] + 9*lambda_2[0, 88] + 9*lambda_2[0, 89] + 9*lambda_2[0, 92] + 108*lambda_2[0, 100] + 108*lambda_2[0, 101] + 108*lambda_2[0, 104] + 27*lambda_2[0, 109] + 27*lambda_2[0, 110] + 27*lambda_2[0, 113] + 9*lambda_2[0, 132] + 9*lambda_2[0, 137] + 9*lambda_2[0, 138] + 108*lambda_2[0, 144] + 108*lambda_2[0, 149] + 108*lambda_2[0, 150] + 27*lambda_2[0, 170] + 27*lambda_2[0, 171] + 27*lambda_2[0, 176] + 27*lambda_2[0, 177] + 27*lambda_2[0, 182] + 27*lambda_2[0, 183] + 27*lambda_2[0, 201] == 0]
	constraints += [lambda_2[0, 46] + 12*lambda_2[0, 58] + 90*lambda_2[0, 70] + 6*lambda_2[0, 88] + 72*lambda_2[0, 100] + 27*lambda_2[0, 109] + 3*lambda_2[0, 132] + 3*lambda_2[0, 137] + 36*lambda_2[0, 144] + 36*lambda_2[0, 149] + 18*lambda_2[0, 170] + 9*lambda_2[0, 171] + 18*lambda_2[0, 176] + 9*lambda_2[0, 182] + 9*lambda_2[0, 201] <= 4*k*B[0, 16] + 160*B[0, 16]*t[0, 3]+ objc]
	constraints += [lambda_2[0, 46] + 12*lambda_2[0, 58] + 90*lambda_2[0, 70] + 6*lambda_2[0, 88] + 72*lambda_2[0, 100] + 27*lambda_2[0, 109] + 3*lambda_2[0, 132] + 3*lambda_2[0, 137] + 36*lambda_2[0, 144] + 36*lambda_2[0, 149] + 18*lambda_2[0, 170] + 9*lambda_2[0, 171] + 18*lambda_2[0, 176] + 9*lambda_2[0, 182] + 9*lambda_2[0, 201] >= 4*k*B[0, 16] + 160*B[0, 16]*t[0, 3]- objc]
	constraints += [lambda_2[0, 88] + 12*lambda_2[0, 100] + 9*lambda_2[0, 109] + 3*lambda_2[0, 170] + 3*lambda_2[0, 176] == 0]
	constraints += [lambda_2[0, 109] == 0]
	constraints += [lambda_2[0, 47] + 12*lambda_2[0, 59] + 90*lambda_2[0, 71] + 6*lambda_2[0, 89] + 72*lambda_2[0, 101] + 27*lambda_2[0, 110] + 3*lambda_2[0, 132] + 3*lambda_2[0, 138] + 36*lambda_2[0, 144] + 36*lambda_2[0, 150] + 9*lambda_2[0, 170] + 18*lambda_2[0, 171] + 18*lambda_2[0, 177] + 9*lambda_2[0, 183] + 9*lambda_2[0, 201] <= 160*B[0, 16]*t[0, 2]+ objc]
	constraints += [lambda_2[0, 47] + 12*lambda_2[0, 59] + 90*lambda_2[0, 71] + 6*lambda_2[0, 89] + 72*lambda_2[0, 101] + 27*lambda_2[0, 110] + 3*lambda_2[0, 132] + 3*lambda_2[0, 138] + 36*lambda_2[0, 144] + 36*lambda_2[0, 150] + 9*lambda_2[0, 170] + 18*lambda_2[0, 171] + 18*lambda_2[0, 177] + 9*lambda_2[0, 183] + 9*lambda_2[0, 201] >= 160*B[0, 16]*t[0, 2]- objc]
	constraints += [lambda_2[0, 132] + 12*lambda_2[0, 144] + 6*lambda_2[0, 170] + 6*lambda_2[0, 171] + 3*lambda_2[0, 201] == 0]
	constraints += [lambda_2[0, 170] == 0]
	constraints += [lambda_2[0, 89] + 12*lambda_2[0, 101] + 9*lambda_2[0, 110] + 3*lambda_2[0, 171] + 3*lambda_2[0, 177] == 0]
	constraints += [lambda_2[0, 171] == 0]
	constraints += [lambda_2[0, 110] == 0]
	constraints += [lambda_2[0, 14] + 15*lambda_2[0, 18] + 135*lambda_2[0, 22] + 3*lambda_2[0, 58] + 3*lambda_2[0, 59] + 3*lambda_2[0, 62] + 45*lambda_2[0, 70] + 45*lambda_2[0, 71] + 45*lambda_2[0, 74] + 9*lambda_2[0, 100] + 9*lambda_2[0, 101] + 9*lambda_2[0, 104] + 9*lambda_2[0, 144] + 9*lambda_2[0, 149] + 9*lambda_2[0, 150] <= -l*B[0, 16] + 160*B[0, 16]*t[0, 1] - 26.0*B[0, 16]+ objc]
	constraints += [lambda_2[0, 14] + 15*lambda_2[0, 18] + 135*lambda_2[0, 22] + 3*lambda_2[0, 58] + 3*lambda_2[0, 59] + 3*lambda_2[0, 62] + 45*lambda_2[0, 70] + 45*lambda_2[0, 71] + 45*lambda_2[0, 74] + 9*lambda_2[0, 100] + 9*lambda_2[0, 101] + 9*lambda_2[0, 104] + 9*lambda_2[0, 144] + 9*lambda_2[0, 149] + 9*lambda_2[0, 150] >= -l*B[0, 16] + 160*B[0, 16]*t[0, 1] - 26.0*B[0, 16]- objc]
	constraints += [lambda_2[0, 58] + 15*lambda_2[0, 70] + 6*lambda_2[0, 100] + 3*lambda_2[0, 144] + 3*lambda_2[0, 149] == 0]
	constraints += [lambda_2[0, 100] == 0]
	constraints += [lambda_2[0, 59] + 15*lambda_2[0, 71] + 6*lambda_2[0, 101] + 3*lambda_2[0, 144] + 3*lambda_2[0, 150] == 0]
	constraints += [lambda_2[0, 144] == 0]
	constraints += [lambda_2[0, 101] == 0]
	constraints += [lambda_2[0, 18] + 18*lambda_2[0, 22] + 3*lambda_2[0, 70] + 3*lambda_2[0, 71] + 3*lambda_2[0, 74] == 0]
	constraints += [lambda_2[0, 70] <= 6*k*B[0, 20] + 240*B[0, 20]*t[0, 3]+ objc]
	constraints += [lambda_2[0, 70] >= 6*k*B[0, 20] + 240*B[0, 20]*t[0, 3]- objc]
	constraints += [lambda_2[0, 71] <= 240*B[0, 20]*t[0, 2]+ objc]
	constraints += [lambda_2[0, 71] >= 240*B[0, 20]*t[0, 2]- objc]
	constraints += [lambda_2[0, 22] <= -l*B[0, 20] + 240*B[0, 20]*t[0, 1] - 39.0*B[0, 20]+ objc]
	constraints += [lambda_2[0, 22] >= -l*B[0, 20] + 240*B[0, 20]*t[0, 1] - 39.0*B[0, 20]- objc]
	constraints += [lambda_2[0, 3] + 6*lambda_2[0, 7] + 27*lambda_2[0, 11] + 108*lambda_2[0, 15] + 405*lambda_2[0, 19] + 1458*lambda_2[0, 23] + 3*lambda_2[0, 27] + 3*lambda_2[0, 28] + 3*lambda_2[0, 29] + 9*lambda_2[0, 36] + 9*lambda_2[0, 37] + 9*lambda_2[0, 38] + 18*lambda_2[0, 39] + 18*lambda_2[0, 40] + 18*lambda_2[0, 41] + 27*lambda_2[0, 48] + 27*lambda_2[0, 49] + 27*lambda_2[0, 50] + 81*lambda_2[0, 51] + 81*lambda_2[0, 52] + 81*lambda_2[0, 53] + 81*lambda_2[0, 60] + 81*lambda_2[0, 61] + 81*lambda_2[0, 62] + 324*lambda_2[0, 63] + 324*lambda_2[0, 64] + 324*lambda_2[0, 65] + 243*lambda_2[0, 72] + 243*lambda_2[0, 73] + 243*lambda_2[0, 74] + 1215*lambda_2[0, 75] + 1215*lambda_2[0, 76] + 1215*lambda_2[0, 77] + 54*lambda_2[0, 81] + 54*lambda_2[0, 82] + 54*lambda_2[0, 83] + 162*lambda_2[0, 90] + 162*lambda_2[0, 91] + 162*lambda_2[0, 92] + 243*lambda_2[0, 93] + 243*lambda_2[0, 94] + 243*lambda_2[0, 95] + 486*lambda_2[0, 102] + 486*lambda_2[0, 103] + 486*lambda_2[0, 104] + 972*lambda_2[0, 105] + 972*lambda_2[0, 106] + 972*lambda_2[0, 107] + 729*lambda_2[0, 111] + 729*lambda_2[0, 112] + 729*lambda_2[0, 113] + 9*lambda_2[0, 115] + 9*lambda_2[0, 116] + 9*lambda_2[0, 117] + 27*lambda_2[0, 121] + 27*lambda_2[0, 122] + 27*lambda_2[0, 123] + 27*lambda_2[0, 124] + 27*lambda_2[0, 125] + 27*lambda_2[0, 126] + 54*lambda_2[0, 127] + 54*lambda_2[0, 128] + 54*lambda_2[0, 129] + 81*lambda_2[0, 133] + 81*lambda_2[0, 134] + 81*lambda_2[0, 135] + 81*lambda_2[0, 136] + 81*lambda_2[0, 137] + 81*lambda_2[0, 138] + 243*lambda_2[0, 139] + 243*lambda_2[0, 140] + 243*lambda_2[0, 141] + 243*lambda_2[0, 145] + 243*lambda_2[0, 146] + 243*lambda_2[0, 147] + 243*lambda_2[0, 148] + 243*lambda_2[0, 149] + 243*lambda_2[0, 150] + 972*lambda_2[0, 151] + 972*lambda_2[0, 152] + 972*lambda_2[0, 153] + 81*lambda_2[0, 157] + 81*lambda_2[0, 158] + 81*lambda_2[0, 159] + 162*lambda_2[0, 160] + 162*lambda_2[0, 161] + 162*lambda_2[0, 162] + 162*lambda_2[0, 163] + 162*lambda_2[0, 164] + 162*lambda_2[0, 165] + 243*lambda_2[0, 172] + 243*lambda_2[0, 173] + 243*lambda_2[0, 174] + 243*lambda_2[0, 175] + 243*lambda_2[0, 176] + 243*lambda_2[0, 177] + 486*lambda_2[0, 178] + 486*lambda_2[0, 179] + 486*lambda_2[0, 180] + 486*lambda_2[0, 181] + 486*lambda_2[0, 182] + 486*lambda_2[0, 183] + 729*lambda_2[0, 184] + 729*lambda_2[0, 185] + 729*lambda_2[0, 186] + 729*lambda_2[0, 187] + 729*lambda_2[0, 188] + 729*lambda_2[0, 189] + 486*lambda_2[0, 191] + 486*lambda_2[0, 192] + 486*lambda_2[0, 193] + 27*lambda_2[0, 194] + 81*lambda_2[0, 195] + 81*lambda_2[0, 196] + 81*lambda_2[0, 197] + 162*lambda_2[0, 198] + 243*lambda_2[0, 199] + 243*lambda_2[0, 200] + 243*lambda_2[0, 201] + 729*lambda_2[0, 202] + 243*lambda_2[0, 203] + 243*lambda_2[0, 204] + 243*lambda_2[0, 205] + 486*lambda_2[0, 206] + 486*lambda_2[0, 207] + 486*lambda_2[0, 208] <= -l*B[0, 1] + 40*B[0, 2]*t[0, 0] + 16.3*B[0, 4]*t[0, 0]+ objc]
	constraints += [lambda_2[0, 3] + 6*lambda_2[0, 7] + 27*lambda_2[0, 11] + 108*lambda_2[0, 15] + 405*lambda_2[0, 19] + 1458*lambda_2[0, 23] + 3*lambda_2[0, 27] + 3*lambda_2[0, 28] + 3*lambda_2[0, 29] + 9*lambda_2[0, 36] + 9*lambda_2[0, 37] + 9*lambda_2[0, 38] + 18*lambda_2[0, 39] + 18*lambda_2[0, 40] + 18*lambda_2[0, 41] + 27*lambda_2[0, 48] + 27*lambda_2[0, 49] + 27*lambda_2[0, 50] + 81*lambda_2[0, 51] + 81*lambda_2[0, 52] + 81*lambda_2[0, 53] + 81*lambda_2[0, 60] + 81*lambda_2[0, 61] + 81*lambda_2[0, 62] + 324*lambda_2[0, 63] + 324*lambda_2[0, 64] + 324*lambda_2[0, 65] + 243*lambda_2[0, 72] + 243*lambda_2[0, 73] + 243*lambda_2[0, 74] + 1215*lambda_2[0, 75] + 1215*lambda_2[0, 76] + 1215*lambda_2[0, 77] + 54*lambda_2[0, 81] + 54*lambda_2[0, 82] + 54*lambda_2[0, 83] + 162*lambda_2[0, 90] + 162*lambda_2[0, 91] + 162*lambda_2[0, 92] + 243*lambda_2[0, 93] + 243*lambda_2[0, 94] + 243*lambda_2[0, 95] + 486*lambda_2[0, 102] + 486*lambda_2[0, 103] + 486*lambda_2[0, 104] + 972*lambda_2[0, 105] + 972*lambda_2[0, 106] + 972*lambda_2[0, 107] + 729*lambda_2[0, 111] + 729*lambda_2[0, 112] + 729*lambda_2[0, 113] + 9*lambda_2[0, 115] + 9*lambda_2[0, 116] + 9*lambda_2[0, 117] + 27*lambda_2[0, 121] + 27*lambda_2[0, 122] + 27*lambda_2[0, 123] + 27*lambda_2[0, 124] + 27*lambda_2[0, 125] + 27*lambda_2[0, 126] + 54*lambda_2[0, 127] + 54*lambda_2[0, 128] + 54*lambda_2[0, 129] + 81*lambda_2[0, 133] + 81*lambda_2[0, 134] + 81*lambda_2[0, 135] + 81*lambda_2[0, 136] + 81*lambda_2[0, 137] + 81*lambda_2[0, 138] + 243*lambda_2[0, 139] + 243*lambda_2[0, 140] + 243*lambda_2[0, 141] + 243*lambda_2[0, 145] + 243*lambda_2[0, 146] + 243*lambda_2[0, 147] + 243*lambda_2[0, 148] + 243*lambda_2[0, 149] + 243*lambda_2[0, 150] + 972*lambda_2[0, 151] + 972*lambda_2[0, 152] + 972*lambda_2[0, 153] + 81*lambda_2[0, 157] + 81*lambda_2[0, 158] + 81*lambda_2[0, 159] + 162*lambda_2[0, 160] + 162*lambda_2[0, 161] + 162*lambda_2[0, 162] + 162*lambda_2[0, 163] + 162*lambda_2[0, 164] + 162*lambda_2[0, 165] + 243*lambda_2[0, 172] + 243*lambda_2[0, 173] + 243*lambda_2[0, 174] + 243*lambda_2[0, 175] + 243*lambda_2[0, 176] + 243*lambda_2[0, 177] + 486*lambda_2[0, 178] + 486*lambda_2[0, 179] + 486*lambda_2[0, 180] + 486*lambda_2[0, 181] + 486*lambda_2[0, 182] + 486*lambda_2[0, 183] + 729*lambda_2[0, 184] + 729*lambda_2[0, 185] + 729*lambda_2[0, 186] + 729*lambda_2[0, 187] + 729*lambda_2[0, 188] + 729*lambda_2[0, 189] + 486*lambda_2[0, 191] + 486*lambda_2[0, 192] + 486*lambda_2[0, 193] + 27*lambda_2[0, 194] + 81*lambda_2[0, 195] + 81*lambda_2[0, 196] + 81*lambda_2[0, 197] + 162*lambda_2[0, 198] + 243*lambda_2[0, 199] + 243*lambda_2[0, 200] + 243*lambda_2[0, 201] + 729*lambda_2[0, 202] + 243*lambda_2[0, 203] + 243*lambda_2[0, 204] + 243*lambda_2[0, 205] + 486*lambda_2[0, 206] + 486*lambda_2[0, 207] + 486*lambda_2[0, 208] >= -l*B[0, 1] + 40*B[0, 2]*t[0, 0] + 16.3*B[0, 4]*t[0, 0]- objc]
	constraints += [lambda_2[0, 27] + 6*lambda_2[0, 36] + 6*lambda_2[0, 39] + 27*lambda_2[0, 48] + 27*lambda_2[0, 51] + 108*lambda_2[0, 60] + 108*lambda_2[0, 63] + 405*lambda_2[0, 72] + 405*lambda_2[0, 75] + 36*lambda_2[0, 81] + 162*lambda_2[0, 90] + 162*lambda_2[0, 93] + 648*lambda_2[0, 102] + 648*lambda_2[0, 105] + 729*lambda_2[0, 111] + 3*lambda_2[0, 115] + 3*lambda_2[0, 116] + 18*lambda_2[0, 121] + 9*lambda_2[0, 122] + 18*lambda_2[0, 123] + 9*lambda_2[0, 125] + 18*lambda_2[0, 127] + 18*lambda_2[0, 128] + 81*lambda_2[0, 133] + 27*lambda_2[0, 134] + 81*lambda_2[0, 135] + 27*lambda_2[0, 137] + 81*lambda_2[0, 139] + 81*lambda_2[0, 140] + 324*lambda_2[0, 145] + 81*lambda_2[0, 146] + 324*lambda_2[0, 147] + 81*lambda_2[0, 149] + 324*lambda_2[0, 151] + 324*lambda_2[0, 152] + 54*lambda_2[0, 157] + 54*lambda_2[0, 158] + 108*lambda_2[0, 160] + 54*lambda_2[0, 161] + 108*lambda_2[0, 162] + 54*lambda_2[0, 164] + 243*lambda_2[0, 172] + 162*lambda_2[0, 173] + 243*lambda_2[0, 174] + 162*lambda_2[0, 176] + 486*lambda_2[0, 178] + 162*lambda_2[0, 179] + 486*lambda_2[0, 180] + 162*lambda_2[0, 182] + 486*lambda_2[0, 184] + 243*lambda_2[0, 185] + 486*lambda_2[0, 186] + 243*lambda_2[0, 188] + 324*lambda_2[0, 191] + 324*lambda_2[0, 192] + 9*lambda_2[0, 194] + 54*lambda_2[0, 195] + 27*lambda_2[0, 196] + 27*lambda_2[0, 197] + 54*lambda_2[0, 198] + 243*lambda_2[0, 199] + 81*lambda_2[0, 200] + 81*lambda_2[0, 201] + 243*lambda_2[0, 202] + 162*lambda_2[0, 203] + 162*lambda_2[0, 204] + 81*lambda_2[0, 205] + 324*lambda_2[0, 206] + 162*lambda_2[0, 207] + 162*lambda_2[0, 208] <= g*B[0, 7] + k*B[0, 5] - l*B[0, 7] + 40*B[0, 5]*t[0, 3] + B[0, 6] + 16.3*B[0, 7]*t[0, 3] + 40*B[0, 9]*t[0, 0] + 32.6*B[0, 14]*t[0, 0]+ objc]
	constraints += [lambda_2[0, 27] + 6*lambda_2[0, 36] + 6*lambda_2[0, 39] + 27*lambda_2[0, 48] + 27*lambda_2[0, 51] + 108*lambda_2[0, 60] + 108*lambda_2[0, 63] + 405*lambda_2[0, 72] + 405*lambda_2[0, 75] + 36*lambda_2[0, 81] + 162*lambda_2[0, 90] + 162*lambda_2[0, 93] + 648*lambda_2[0, 102] + 648*lambda_2[0, 105] + 729*lambda_2[0, 111] + 3*lambda_2[0, 115] + 3*lambda_2[0, 116] + 18*lambda_2[0, 121] + 9*lambda_2[0, 122] + 18*lambda_2[0, 123] + 9*lambda_2[0, 125] + 18*lambda_2[0, 127] + 18*lambda_2[0, 128] + 81*lambda_2[0, 133] + 27*lambda_2[0, 134] + 81*lambda_2[0, 135] + 27*lambda_2[0, 137] + 81*lambda_2[0, 139] + 81*lambda_2[0, 140] + 324*lambda_2[0, 145] + 81*lambda_2[0, 146] + 324*lambda_2[0, 147] + 81*lambda_2[0, 149] + 324*lambda_2[0, 151] + 324*lambda_2[0, 152] + 54*lambda_2[0, 157] + 54*lambda_2[0, 158] + 108*lambda_2[0, 160] + 54*lambda_2[0, 161] + 108*lambda_2[0, 162] + 54*lambda_2[0, 164] + 243*lambda_2[0, 172] + 162*lambda_2[0, 173] + 243*lambda_2[0, 174] + 162*lambda_2[0, 176] + 486*lambda_2[0, 178] + 162*lambda_2[0, 179] + 486*lambda_2[0, 180] + 162*lambda_2[0, 182] + 486*lambda_2[0, 184] + 243*lambda_2[0, 185] + 486*lambda_2[0, 186] + 243*lambda_2[0, 188] + 324*lambda_2[0, 191] + 324*lambda_2[0, 192] + 9*lambda_2[0, 194] + 54*lambda_2[0, 195] + 27*lambda_2[0, 196] + 27*lambda_2[0, 197] + 54*lambda_2[0, 198] + 243*lambda_2[0, 199] + 81*lambda_2[0, 200] + 81*lambda_2[0, 201] + 243*lambda_2[0, 202] + 162*lambda_2[0, 203] + 162*lambda_2[0, 204] + 81*lambda_2[0, 205] + 324*lambda_2[0, 206] + 162*lambda_2[0, 207] + 162*lambda_2[0, 208] >= g*B[0, 7] + k*B[0, 5] - l*B[0, 7] + 40*B[0, 5]*t[0, 3] + B[0, 6] + 16.3*B[0, 7]*t[0, 3] + 40*B[0, 9]*t[0, 0] + 32.6*B[0, 14]*t[0, 0]- objc]
	constraints += [lambda_2[0, 36] + 9*lambda_2[0, 48] + 54*lambda_2[0, 60] + 270*lambda_2[0, 72] + 6*lambda_2[0, 81] + 54*lambda_2[0, 90] + 27*lambda_2[0, 93] + 324*lambda_2[0, 102] + 108*lambda_2[0, 105] + 243*lambda_2[0, 111] + 3*lambda_2[0, 121] + 3*lambda_2[0, 123] + 27*lambda_2[0, 133] + 27*lambda_2[0, 135] + 162*lambda_2[0, 145] + 162*lambda_2[0, 147] + 9*lambda_2[0, 157] + 9*lambda_2[0, 158] + 18*lambda_2[0, 160] + 18*lambda_2[0, 162] + 81*lambda_2[0, 172] + 27*lambda_2[0, 173] + 81*lambda_2[0, 174] + 27*lambda_2[0, 176] + 162*lambda_2[0, 178] + 162*lambda_2[0, 180] + 81*lambda_2[0, 184] + 81*lambda_2[0, 186] + 54*lambda_2[0, 191] + 54*lambda_2[0, 192] + 9*lambda_2[0, 195] + 81*lambda_2[0, 199] + 27*lambda_2[0, 203] + 27*lambda_2[0, 204] + 54*lambda_2[0, 206] == 0]
	constraints += [lambda_2[0, 48] + 12*lambda_2[0, 60] + 90*lambda_2[0, 72] + 6*lambda_2[0, 90] + 72*lambda_2[0, 102] + 27*lambda_2[0, 111] + 3*lambda_2[0, 133] + 3*lambda_2[0, 135] + 36*lambda_2[0, 145] + 36*lambda_2[0, 147] + 9*lambda_2[0, 172] + 9*lambda_2[0, 174] + 18*lambda_2[0, 178] + 18*lambda_2[0, 180] + 9*lambda_2[0, 199] <= 65.2*B[0, 18]*t[0, 0]+ objc]
	constraints += [lambda_2[0, 48] + 12*lambda_2[0, 60] + 90*lambda_2[0, 72] + 6*lambda_2[0, 90] + 72*lambda_2[0, 102] + 27*lambda_2[0, 111] + 3*lambda_2[0, 133] + 3*lambda_2[0, 135] + 36*lambda_2[0, 145] + 36*lambda_2[0, 147] + 9*lambda_2[0, 172] + 9*lambda_2[0, 174] + 18*lambda_2[0, 178] + 18*lambda_2[0, 180] + 9*lambda_2[0, 199] >= 65.2*B[0, 18]*t[0, 0]- objc]
	constraints += [lambda_2[0, 60] + 15*lambda_2[0, 72] + 6*lambda_2[0, 102] + 3*lambda_2[0, 145] + 3*lambda_2[0, 147] == 0]
	constraints += [lambda_2[0, 72] <= 97.8*B[0, 22]*t[0, 0]+ objc]
	constraints += [lambda_2[0, 72] >= 97.8*B[0, 22]*t[0, 0]- objc]
	constraints += [lambda_2[0, 28] + 6*lambda_2[0, 37] + 6*lambda_2[0, 40] + 27*lambda_2[0, 49] + 27*lambda_2[0, 52] + 108*lambda_2[0, 61] + 108*lambda_2[0, 64] + 405*lambda_2[0, 73] + 405*lambda_2[0, 76] + 36*lambda_2[0, 82] + 162*lambda_2[0, 91] + 162*lambda_2[0, 94] + 648*lambda_2[0, 103] + 648*lambda_2[0, 106] + 729*lambda_2[0, 112] + 3*lambda_2[0, 115] + 3*lambda_2[0, 117] + 9*lambda_2[0, 121] + 18*lambda_2[0, 122] + 18*lambda_2[0, 124] + 9*lambda_2[0, 126] + 18*lambda_2[0, 127] + 18*lambda_2[0, 129] + 27*lambda_2[0, 133] + 81*lambda_2[0, 134] + 81*lambda_2[0, 136] + 27*lambda_2[0, 138] + 81*lambda_2[0, 139] + 81*lambda_2[0, 141] + 81*lambda_2[0, 145] + 324*lambda_2[0, 146] + 324*lambda_2[0, 148] + 81*lambda_2[0, 150] + 324*lambda_2[0, 151] + 324*lambda_2[0, 153] + 54*lambda_2[0, 157] + 54*lambda_2[0, 159] + 54*lambda_2[0, 160] + 108*lambda_2[0, 161] + 108*lambda_2[0, 163] + 54*lambda_2[0, 165] + 162*lambda_2[0, 172] + 243*lambda_2[0, 173] + 243*lambda_2[0, 175] + 162*lambda_2[0, 177] + 162*lambda_2[0, 178] + 486*lambda_2[0, 179] + 486*lambda_2[0, 181] + 162*lambda_2[0, 183] + 243*lambda_2[0, 184] + 486*lambda_2[0, 185] + 486*lambda_2[0, 187] + 243*lambda_2[0, 189] + 324*lambda_2[0, 191] + 324*lambda_2[0, 193] + 9*lambda_2[0, 194] + 27*lambda_2[0, 195] + 54*lambda_2[0, 196] + 27*lambda_2[0, 197] + 54*lambda_2[0, 198] + 81*lambda_2[0, 199] + 243*lambda_2[0, 200] + 81*lambda_2[0, 201] + 243*lambda_2[0, 202] + 162*lambda_2[0, 203] + 81*lambda_2[0, 204] + 162*lambda_2[0, 205] + 162*lambda_2[0, 206] + 324*lambda_2[0, 207] + 162*lambda_2[0, 208] <= -l*B[0, 6] + 40*B[0, 5]*t[0, 2] + 16.3*B[0, 7]*t[0, 2] + 40*B[0, 8]*t[0, 0] + 16.3*B[0, 10]*t[0, 0] + 26.8*B[0, 11]+ objc]
	constraints += [lambda_2[0, 28] + 6*lambda_2[0, 37] + 6*lambda_2[0, 40] + 27*lambda_2[0, 49] + 27*lambda_2[0, 52] + 108*lambda_2[0, 61] + 108*lambda_2[0, 64] + 405*lambda_2[0, 73] + 405*lambda_2[0, 76] + 36*lambda_2[0, 82] + 162*lambda_2[0, 91] + 162*lambda_2[0, 94] + 648*lambda_2[0, 103] + 648*lambda_2[0, 106] + 729*lambda_2[0, 112] + 3*lambda_2[0, 115] + 3*lambda_2[0, 117] + 9*lambda_2[0, 121] + 18*lambda_2[0, 122] + 18*lambda_2[0, 124] + 9*lambda_2[0, 126] + 18*lambda_2[0, 127] + 18*lambda_2[0, 129] + 27*lambda_2[0, 133] + 81*lambda_2[0, 134] + 81*lambda_2[0, 136] + 27*lambda_2[0, 138] + 81*lambda_2[0, 139] + 81*lambda_2[0, 141] + 81*lambda_2[0, 145] + 324*lambda_2[0, 146] + 324*lambda_2[0, 148] + 81*lambda_2[0, 150] + 324*lambda_2[0, 151] + 324*lambda_2[0, 153] + 54*lambda_2[0, 157] + 54*lambda_2[0, 159] + 54*lambda_2[0, 160] + 108*lambda_2[0, 161] + 108*lambda_2[0, 163] + 54*lambda_2[0, 165] + 162*lambda_2[0, 172] + 243*lambda_2[0, 173] + 243*lambda_2[0, 175] + 162*lambda_2[0, 177] + 162*lambda_2[0, 178] + 486*lambda_2[0, 179] + 486*lambda_2[0, 181] + 162*lambda_2[0, 183] + 243*lambda_2[0, 184] + 486*lambda_2[0, 185] + 486*lambda_2[0, 187] + 243*lambda_2[0, 189] + 324*lambda_2[0, 191] + 324*lambda_2[0, 193] + 9*lambda_2[0, 194] + 27*lambda_2[0, 195] + 54*lambda_2[0, 196] + 27*lambda_2[0, 197] + 54*lambda_2[0, 198] + 81*lambda_2[0, 199] + 243*lambda_2[0, 200] + 81*lambda_2[0, 201] + 243*lambda_2[0, 202] + 162*lambda_2[0, 203] + 81*lambda_2[0, 204] + 162*lambda_2[0, 205] + 162*lambda_2[0, 206] + 324*lambda_2[0, 207] + 162*lambda_2[0, 208] >= -l*B[0, 6] + 40*B[0, 5]*t[0, 2] + 16.3*B[0, 7]*t[0, 2] + 40*B[0, 8]*t[0, 0] + 16.3*B[0, 10]*t[0, 0] + 26.8*B[0, 11]- objc]
	constraints += [lambda_2[0, 115] + 6*lambda_2[0, 121] + 6*lambda_2[0, 122] + 6*lambda_2[0, 127] + 27*lambda_2[0, 133] + 27*lambda_2[0, 134] + 27*lambda_2[0, 139] + 108*lambda_2[0, 145] + 108*lambda_2[0, 146] + 108*lambda_2[0, 151] + 36*lambda_2[0, 157] + 36*lambda_2[0, 160] + 36*lambda_2[0, 161] + 162*lambda_2[0, 172] + 162*lambda_2[0, 173] + 162*lambda_2[0, 178] + 162*lambda_2[0, 179] + 162*lambda_2[0, 184] + 162*lambda_2[0, 185] + 216*lambda_2[0, 191] + 3*lambda_2[0, 194] + 18*lambda_2[0, 195] + 18*lambda_2[0, 196] + 9*lambda_2[0, 197] + 18*lambda_2[0, 198] + 81*lambda_2[0, 199] + 81*lambda_2[0, 200] + 27*lambda_2[0, 201] + 81*lambda_2[0, 202] + 108*lambda_2[0, 203] + 54*lambda_2[0, 204] + 54*lambda_2[0, 205] + 108*lambda_2[0, 206] + 108*lambda_2[0, 207] + 54*lambda_2[0, 208] == 0]
	constraints += [lambda_2[0, 121] + 9*lambda_2[0, 133] + 54*lambda_2[0, 145] + 6*lambda_2[0, 157] + 6*lambda_2[0, 160] + 54*lambda_2[0, 172] + 27*lambda_2[0, 173] + 54*lambda_2[0, 178] + 27*lambda_2[0, 184] + 36*lambda_2[0, 191] + 3*lambda_2[0, 195] + 27*lambda_2[0, 199] + 18*lambda_2[0, 203] + 9*lambda_2[0, 204] + 18*lambda_2[0, 206] == 0]
	constraints += [lambda_2[0, 133] + 12*lambda_2[0, 145] + 6*lambda_2[0, 172] + 6*lambda_2[0, 178] + 3*lambda_2[0, 199] == 0]
	constraints += [lambda_2[0, 145] == 0]
	constraints += [lambda_2[0, 37] + 9*lambda_2[0, 49] + 54*lambda_2[0, 61] + 270*lambda_2[0, 73] + 6*lambda_2[0, 82] + 54*lambda_2[0, 91] + 27*lambda_2[0, 94] + 324*lambda_2[0, 103] + 108*lambda_2[0, 106] + 243*lambda_2[0, 112] + 3*lambda_2[0, 122] + 3*lambda_2[0, 124] + 27*lambda_2[0, 134] + 27*lambda_2[0, 136] + 162*lambda_2[0, 146] + 162*lambda_2[0, 148] + 9*lambda_2[0, 157] + 9*lambda_2[0, 159] + 18*lambda_2[0, 161] + 18*lambda_2[0, 163] + 27*lambda_2[0, 172] + 81*lambda_2[0, 173] + 81*lambda_2[0, 175] + 27*lambda_2[0, 177] + 162*lambda_2[0, 179] + 162*lambda_2[0, 181] + 81*lambda_2[0, 185] + 81*lambda_2[0, 187] + 54*lambda_2[0, 191] + 54*lambda_2[0, 193] + 9*lambda_2[0, 196] + 81*lambda_2[0, 200] + 27*lambda_2[0, 203] + 27*lambda_2[0, 205] + 54*lambda_2[0, 207] == 0]
	constraints += [lambda_2[0, 122] + 9*lambda_2[0, 134] + 54*lambda_2[0, 146] + 6*lambda_2[0, 157] + 6*lambda_2[0, 161] + 27*lambda_2[0, 172] + 54*lambda_2[0, 173] + 54*lambda_2[0, 179] + 27*lambda_2[0, 185] + 36*lambda_2[0, 191] + 3*lambda_2[0, 196] + 27*lambda_2[0, 200] + 18*lambda_2[0, 203] + 9*lambda_2[0, 205] + 18*lambda_2[0, 207] == 0]
	constraints += [lambda_2[0, 157] + 9*lambda_2[0, 172] + 9*lambda_2[0, 173] + 6*lambda_2[0, 191] + 3*lambda_2[0, 203] == 0]
	constraints += [lambda_2[0, 172] == 0]
	constraints += [lambda_2[0, 49] + 12*lambda_2[0, 61] + 90*lambda_2[0, 73] + 6*lambda_2[0, 91] + 72*lambda_2[0, 103] + 27*lambda_2[0, 112] + 3*lambda_2[0, 134] + 3*lambda_2[0, 136] + 36*lambda_2[0, 146] + 36*lambda_2[0, 148] + 9*lambda_2[0, 173] + 9*lambda_2[0, 175] + 18*lambda_2[0, 179] + 18*lambda_2[0, 181] + 9*lambda_2[0, 200] == 0]
	constraints += [lambda_2[0, 134] + 12*lambda_2[0, 146] + 6*lambda_2[0, 173] + 6*lambda_2[0, 179] + 3*lambda_2[0, 200] == 0]
	constraints += [lambda_2[0, 173] == 0]
	constraints += [lambda_2[0, 61] + 15*lambda_2[0, 73] + 6*lambda_2[0, 103] + 3*lambda_2[0, 146] + 3*lambda_2[0, 148] == 0]
	constraints += [lambda_2[0, 146] == 0]
	constraints += [lambda_2[0, 73] == 0]
	constraints += [lambda_2[0, 29] + 6*lambda_2[0, 38] + 6*lambda_2[0, 41] + 27*lambda_2[0, 50] + 27*lambda_2[0, 53] + 108*lambda_2[0, 62] + 108*lambda_2[0, 65] + 405*lambda_2[0, 74] + 405*lambda_2[0, 77] + 36*lambda_2[0, 83] + 162*lambda_2[0, 92] + 162*lambda_2[0, 95] + 648*lambda_2[0, 104] + 648*lambda_2[0, 107] + 729*lambda_2[0, 113] + 3*lambda_2[0, 116] + 3*lambda_2[0, 117] + 9*lambda_2[0, 123] + 9*lambda_2[0, 124] + 18*lambda_2[0, 125] + 18*lambda_2[0, 126] + 18*lambda_2[0, 128] + 18*lambda_2[0, 129] + 27*lambda_2[0, 135] + 27*lambda_2[0, 136] + 81*lambda_2[0, 137] + 81*lambda_2[0, 138] + 81*lambda_2[0, 140] + 81*lambda_2[0, 141] + 81*lambda_2[0, 147] + 81*lambda_2[0, 148] + 324*lambda_2[0, 149] + 324*lambda_2[0, 150] + 324*lambda_2[0, 152] + 324*lambda_2[0, 153] + 54*lambda_2[0, 158] + 54*lambda_2[0, 159] + 54*lambda_2[0, 162] + 54*lambda_2[0, 163] + 108*lambda_2[0, 164] + 108*lambda_2[0, 165] + 162*lambda_2[0, 174] + 162*lambda_2[0, 175] + 243*lambda_2[0, 176] + 243*lambda_2[0, 177] + 162*lambda_2[0, 180] + 162*lambda_2[0, 181] + 486*lambda_2[0, 182] + 486*lambda_2[0, 183] + 243*lambda_2[0, 186] + 243*lambda_2[0, 187] + 486*lambda_2[0, 188] + 486*lambda_2[0, 189] + 324*lambda_2[0, 192] + 324*lambda_2[0, 193] + 9*lambda_2[0, 194] + 27*lambda_2[0, 195] + 27*lambda_2[0, 196] + 54*lambda_2[0, 197] + 54*lambda_2[0, 198] + 81*lambda_2[0, 199] + 81*lambda_2[0, 200] + 243*lambda_2[0, 201] + 243*lambda_2[0, 202] + 81*lambda_2[0, 203] + 162*lambda_2[0, 204] + 162*lambda_2[0, 205] + 162*lambda_2[0, 206] + 162*lambda_2[0, 207] + 324*lambda_2[0, 208] <= -l*B[0, 5] + 40*B[0, 5]*t[0, 1] - 6.5*B[0, 5] + 16.3*B[0, 7]*t[0, 1] + 0.925*B[0, 7] + 16.3*B[0, 9]*t[0, 0] + 2*B[0, 11] + 80*B[0, 12]*t[0, 0]+ objc]
	constraints += [lambda_2[0, 29] + 6*lambda_2[0, 38] + 6*lambda_2[0, 41] + 27*lambda_2[0, 50] + 27*lambda_2[0, 53] + 108*lambda_2[0, 62] + 108*lambda_2[0, 65] + 405*lambda_2[0, 74] + 405*lambda_2[0, 77] + 36*lambda_2[0, 83] + 162*lambda_2[0, 92] + 162*lambda_2[0, 95] + 648*lambda_2[0, 104] + 648*lambda_2[0, 107] + 729*lambda_2[0, 113] + 3*lambda_2[0, 116] + 3*lambda_2[0, 117] + 9*lambda_2[0, 123] + 9*lambda_2[0, 124] + 18*lambda_2[0, 125] + 18*lambda_2[0, 126] + 18*lambda_2[0, 128] + 18*lambda_2[0, 129] + 27*lambda_2[0, 135] + 27*lambda_2[0, 136] + 81*lambda_2[0, 137] + 81*lambda_2[0, 138] + 81*lambda_2[0, 140] + 81*lambda_2[0, 141] + 81*lambda_2[0, 147] + 81*lambda_2[0, 148] + 324*lambda_2[0, 149] + 324*lambda_2[0, 150] + 324*lambda_2[0, 152] + 324*lambda_2[0, 153] + 54*lambda_2[0, 158] + 54*lambda_2[0, 159] + 54*lambda_2[0, 162] + 54*lambda_2[0, 163] + 108*lambda_2[0, 164] + 108*lambda_2[0, 165] + 162*lambda_2[0, 174] + 162*lambda_2[0, 175] + 243*lambda_2[0, 176] + 243*lambda_2[0, 177] + 162*lambda_2[0, 180] + 162*lambda_2[0, 181] + 486*lambda_2[0, 182] + 486*lambda_2[0, 183] + 243*lambda_2[0, 186] + 243*lambda_2[0, 187] + 486*lambda_2[0, 188] + 486*lambda_2[0, 189] + 324*lambda_2[0, 192] + 324*lambda_2[0, 193] + 9*lambda_2[0, 194] + 27*lambda_2[0, 195] + 27*lambda_2[0, 196] + 54*lambda_2[0, 197] + 54*lambda_2[0, 198] + 81*lambda_2[0, 199] + 81*lambda_2[0, 200] + 243*lambda_2[0, 201] + 243*lambda_2[0, 202] + 81*lambda_2[0, 203] + 162*lambda_2[0, 204] + 162*lambda_2[0, 205] + 162*lambda_2[0, 206] + 162*lambda_2[0, 207] + 324*lambda_2[0, 208] >= -l*B[0, 5] + 40*B[0, 5]*t[0, 1] - 6.5*B[0, 5] + 16.3*B[0, 7]*t[0, 1] + 0.925*B[0, 7] + 16.3*B[0, 9]*t[0, 0] + 2*B[0, 11] + 80*B[0, 12]*t[0, 0]- objc]
	constraints += [lambda_2[0, 116] + 6*lambda_2[0, 123] + 6*lambda_2[0, 125] + 6*lambda_2[0, 128] + 27*lambda_2[0, 135] + 27*lambda_2[0, 137] + 27*lambda_2[0, 140] + 108*lambda_2[0, 147] + 108*lambda_2[0, 149] + 108*lambda_2[0, 152] + 36*lambda_2[0, 158] + 36*lambda_2[0, 162] + 36*lambda_2[0, 164] + 162*lambda_2[0, 174] + 162*lambda_2[0, 176] + 162*lambda_2[0, 180] + 162*lambda_2[0, 182] + 162*lambda_2[0, 186] + 162*lambda_2[0, 188] + 216*lambda_2[0, 192] + 3*lambda_2[0, 194] + 18*lambda_2[0, 195] + 9*lambda_2[0, 196] + 18*lambda_2[0, 197] + 18*lambda_2[0, 198] + 81*lambda_2[0, 199] + 27*lambda_2[0, 200] + 81*lambda_2[0, 201] + 81*lambda_2[0, 202] + 54*lambda_2[0, 203] + 108*lambda_2[0, 204] + 54*lambda_2[0, 205] + 108*lambda_2[0, 206] + 54*lambda_2[0, 207] + 108*lambda_2[0, 208] == 0]
	constraints += [lambda_2[0, 123] + 9*lambda_2[0, 135] + 54*lambda_2[0, 147] + 6*lambda_2[0, 158] + 6*lambda_2[0, 162] + 54*lambda_2[0, 174] + 27*lambda_2[0, 176] + 54*lambda_2[0, 180] + 27*lambda_2[0, 186] + 36*lambda_2[0, 192] + 3*lambda_2[0, 195] + 27*lambda_2[0, 199] + 9*lambda_2[0, 203] + 18*lambda_2[0, 204] + 18*lambda_2[0, 206] == 0]
	constraints += [lambda_2[0, 135] + 12*lambda_2[0, 147] + 6*lambda_2[0, 174] + 6*lambda_2[0, 180] + 3*lambda_2[0, 199] == 0]
	constraints += [lambda_2[0, 147] == 0]
	constraints += [lambda_2[0, 117] + 6*lambda_2[0, 124] + 6*lambda_2[0, 126] + 6*lambda_2[0, 129] + 27*lambda_2[0, 136] + 27*lambda_2[0, 138] + 27*lambda_2[0, 141] + 108*lambda_2[0, 148] + 108*lambda_2[0, 150] + 108*lambda_2[0, 153] + 36*lambda_2[0, 159] + 36*lambda_2[0, 163] + 36*lambda_2[0, 165] + 162*lambda_2[0, 175] + 162*lambda_2[0, 177] + 162*lambda_2[0, 181] + 162*lambda_2[0, 183] + 162*lambda_2[0, 187] + 162*lambda_2[0, 189] + 216*lambda_2[0, 193] + 3*lambda_2[0, 194] + 9*lambda_2[0, 195] + 18*lambda_2[0, 196] + 18*lambda_2[0, 197] + 18*lambda_2[0, 198] + 27*lambda_2[0, 199] + 81*lambda_2[0, 200] + 81*lambda_2[0, 201] + 81*lambda_2[0, 202] + 54*lambda_2[0, 203] + 54*lambda_2[0, 204] + 108*lambda_2[0, 205] + 54*lambda_2[0, 206] + 108*lambda_2[0, 207] + 108*lambda_2[0, 208] == 0]
	constraints += [lambda_2[0, 194] + 6*lambda_2[0, 195] + 6*lambda_2[0, 196] + 6*lambda_2[0, 197] + 6*lambda_2[0, 198] + 27*lambda_2[0, 199] + 27*lambda_2[0, 200] + 27*lambda_2[0, 201] + 27*lambda_2[0, 202] + 36*lambda_2[0, 203] + 36*lambda_2[0, 204] + 36*lambda_2[0, 205] + 36*lambda_2[0, 206] + 36*lambda_2[0, 207] + 36*lambda_2[0, 208] == 0]
	constraints += [lambda_2[0, 195] + 9*lambda_2[0, 199] + 6*lambda_2[0, 203] + 6*lambda_2[0, 204] + 6*lambda_2[0, 206] == 0]
	constraints += [lambda_2[0, 199] == 0]
	constraints += [lambda_2[0, 124] + 9*lambda_2[0, 136] + 54*lambda_2[0, 148] + 6*lambda_2[0, 159] + 6*lambda_2[0, 163] + 54*lambda_2[0, 175] + 27*lambda_2[0, 177] + 54*lambda_2[0, 181] + 27*lambda_2[0, 187] + 36*lambda_2[0, 193] + 3*lambda_2[0, 196] + 27*lambda_2[0, 200] + 9*lambda_2[0, 203] + 18*lambda_2[0, 205] + 18*lambda_2[0, 207] == 0]
	constraints += [lambda_2[0, 196] + 9*lambda_2[0, 200] + 6*lambda_2[0, 203] + 6*lambda_2[0, 205] + 6*lambda_2[0, 207] == 0]
	constraints += [lambda_2[0, 203] == 0]
	constraints += [lambda_2[0, 136] + 12*lambda_2[0, 148] + 6*lambda_2[0, 175] + 6*lambda_2[0, 181] + 3*lambda_2[0, 200] == 0]
	constraints += [lambda_2[0, 200] == 0]
	constraints += [lambda_2[0, 148] == 0]
	constraints += [lambda_2[0, 38] + 9*lambda_2[0, 50] + 54*lambda_2[0, 62] + 270*lambda_2[0, 74] + 6*lambda_2[0, 83] + 54*lambda_2[0, 92] + 27*lambda_2[0, 95] + 324*lambda_2[0, 104] + 108*lambda_2[0, 107] + 243*lambda_2[0, 113] + 3*lambda_2[0, 125] + 3*lambda_2[0, 126] + 27*lambda_2[0, 137] + 27*lambda_2[0, 138] + 162*lambda_2[0, 149] + 162*lambda_2[0, 150] + 9*lambda_2[0, 158] + 9*lambda_2[0, 159] + 18*lambda_2[0, 164] + 18*lambda_2[0, 165] + 27*lambda_2[0, 174] + 27*lambda_2[0, 175] + 81*lambda_2[0, 176] + 81*lambda_2[0, 177] + 162*lambda_2[0, 182] + 162*lambda_2[0, 183] + 81*lambda_2[0, 188] + 81*lambda_2[0, 189] + 54*lambda_2[0, 192] + 54*lambda_2[0, 193] + 9*lambda_2[0, 197] + 81*lambda_2[0, 201] + 27*lambda_2[0, 204] + 27*lambda_2[0, 205] + 54*lambda_2[0, 208] == 0]
	constraints += [lambda_2[0, 125] + 9*lambda_2[0, 137] + 54*lambda_2[0, 149] + 6*lambda_2[0, 158] + 6*lambda_2[0, 164] + 27*lambda_2[0, 174] + 54*lambda_2[0, 176] + 54*lambda_2[0, 182] + 27*lambda_2[0, 188] + 36*lambda_2[0, 192] + 3*lambda_2[0, 197] + 27*lambda_2[0, 201] + 18*lambda_2[0, 204] + 9*lambda_2[0, 205] + 18*lambda_2[0, 208] == 0]
	constraints += [lambda_2[0, 158] + 9*lambda_2[0, 174] + 9*lambda_2[0, 176] + 6*lambda_2[0, 192] + 3*lambda_2[0, 204] == 0]
	constraints += [lambda_2[0, 174] == 0]
	constraints += [lambda_2[0, 126] + 9*lambda_2[0, 138] + 54*lambda_2[0, 150] + 6*lambda_2[0, 159] + 6*lambda_2[0, 165] + 27*lambda_2[0, 175] + 54*lambda_2[0, 177] + 54*lambda_2[0, 183] + 27*lambda_2[0, 189] + 36*lambda_2[0, 193] + 3*lambda_2[0, 197] + 27*lambda_2[0, 201] + 9*lambda_2[0, 204] + 18*lambda_2[0, 205] + 18*lambda_2[0, 208] == 0]
	constraints += [lambda_2[0, 197] + 9*lambda_2[0, 201] + 6*lambda_2[0, 204] + 6*lambda_2[0, 205] + 6*lambda_2[0, 208] == 0]
	constraints += [lambda_2[0, 204] == 0]
	constraints += [lambda_2[0, 159] + 9*lambda_2[0, 175] + 9*lambda_2[0, 177] + 6*lambda_2[0, 193] + 3*lambda_2[0, 205] == 0]
	constraints += [lambda_2[0, 205] == 0]
	constraints += [lambda_2[0, 175] == 0]
	constraints += [lambda_2[0, 50] + 12*lambda_2[0, 62] + 90*lambda_2[0, 74] + 6*lambda_2[0, 92] + 72*lambda_2[0, 104] + 27*lambda_2[0, 113] + 3*lambda_2[0, 137] + 3*lambda_2[0, 138] + 36*lambda_2[0, 149] + 36*lambda_2[0, 150] + 9*lambda_2[0, 176] + 9*lambda_2[0, 177] + 18*lambda_2[0, 182] + 18*lambda_2[0, 183] + 9*lambda_2[0, 201] <= 160*B[0, 16]*t[0, 0]+ objc]
	constraints += [lambda_2[0, 50] + 12*lambda_2[0, 62] + 90*lambda_2[0, 74] + 6*lambda_2[0, 92] + 72*lambda_2[0, 104] + 27*lambda_2[0, 113] + 3*lambda_2[0, 137] + 3*lambda_2[0, 138] + 36*lambda_2[0, 149] + 36*lambda_2[0, 150] + 9*lambda_2[0, 176] + 9*lambda_2[0, 177] + 18*lambda_2[0, 182] + 18*lambda_2[0, 183] + 9*lambda_2[0, 201] >= 160*B[0, 16]*t[0, 0]- objc]
	constraints += [lambda_2[0, 137] + 12*lambda_2[0, 149] + 6*lambda_2[0, 176] + 6*lambda_2[0, 182] + 3*lambda_2[0, 201] == 0]
	constraints += [lambda_2[0, 176] == 0]
	constraints += [lambda_2[0, 138] + 12*lambda_2[0, 150] + 6*lambda_2[0, 177] + 6*lambda_2[0, 183] + 3*lambda_2[0, 201] == 0]
	constraints += [lambda_2[0, 201] == 0]
	constraints += [lambda_2[0, 177] == 0]
	constraints += [lambda_2[0, 62] + 15*lambda_2[0, 74] + 6*lambda_2[0, 104] + 3*lambda_2[0, 149] + 3*lambda_2[0, 150] == 0]
	constraints += [lambda_2[0, 149] == 0]
	constraints += [lambda_2[0, 150] == 0]
	constraints += [lambda_2[0, 74] <= 240*B[0, 20]*t[0, 0]+ objc]
	constraints += [lambda_2[0, 74] >= 240*B[0, 20]*t[0, 0]- objc]
	constraints += [lambda_2[0, 7] + 9*lambda_2[0, 11] + 54*lambda_2[0, 15] + 270*lambda_2[0, 19] + 1215*lambda_2[0, 23] + 3*lambda_2[0, 39] + 3*lambda_2[0, 40] + 3*lambda_2[0, 41] + 27*lambda_2[0, 51] + 27*lambda_2[0, 52] + 27*lambda_2[0, 53] + 162*lambda_2[0, 63] + 162*lambda_2[0, 64] + 162*lambda_2[0, 65] + 810*lambda_2[0, 75] + 810*lambda_2[0, 76] + 810*lambda_2[0, 77] + 9*lambda_2[0, 81] + 9*lambda_2[0, 82] + 9*lambda_2[0, 83] + 27*lambda_2[0, 90] + 27*lambda_2[0, 91] + 27*lambda_2[0, 92] + 81*lambda_2[0, 93] + 81*lambda_2[0, 94] + 81*lambda_2[0, 95] + 81*lambda_2[0, 102] + 81*lambda_2[0, 103] + 81*lambda_2[0, 104] + 486*lambda_2[0, 105] + 486*lambda_2[0, 106] + 486*lambda_2[0, 107] + 243*lambda_2[0, 111] + 243*lambda_2[0, 112] + 243*lambda_2[0, 113] + 9*lambda_2[0, 127] + 9*lambda_2[0, 128] + 9*lambda_2[0, 129] + 81*lambda_2[0, 139] + 81*lambda_2[0, 140] + 81*lambda_2[0, 141] + 486*lambda_2[0, 151] + 486*lambda_2[0, 152] + 486*lambda_2[0, 153] + 27*lambda_2[0, 160] + 27*lambda_2[0, 161] + 27*lambda_2[0, 162] + 27*lambda_2[0, 163] + 27*lambda_2[0, 164] + 27*lambda_2[0, 165] + 81*lambda_2[0, 178] + 81*lambda_2[0, 179] + 81*lambda_2[0, 180] + 81*lambda_2[0, 181] + 81*lambda_2[0, 182] + 81*lambda_2[0, 183] + 243*lambda_2[0, 184] + 243*lambda_2[0, 185] + 243*lambda_2[0, 186] + 243*lambda_2[0, 187] + 243*lambda_2[0, 188] + 243*lambda_2[0, 189] + 81*lambda_2[0, 191] + 81*lambda_2[0, 192] + 81*lambda_2[0, 193] + 27*lambda_2[0, 198] + 243*lambda_2[0, 202] + 81*lambda_2[0, 206] + 81*lambda_2[0, 207] + 81*lambda_2[0, 208] <= -l*B[0, 11] + 40*B[0, 5]*t[0, 0] + 16.3*B[0, 7]*t[0, 0] - 0.01+ objc]
	constraints += [lambda_2[0, 7] + 9*lambda_2[0, 11] + 54*lambda_2[0, 15] + 270*lambda_2[0, 19] + 1215*lambda_2[0, 23] + 3*lambda_2[0, 39] + 3*lambda_2[0, 40] + 3*lambda_2[0, 41] + 27*lambda_2[0, 51] + 27*lambda_2[0, 52] + 27*lambda_2[0, 53] + 162*lambda_2[0, 63] + 162*lambda_2[0, 64] + 162*lambda_2[0, 65] + 810*lambda_2[0, 75] + 810*lambda_2[0, 76] + 810*lambda_2[0, 77] + 9*lambda_2[0, 81] + 9*lambda_2[0, 82] + 9*lambda_2[0, 83] + 27*lambda_2[0, 90] + 27*lambda_2[0, 91] + 27*lambda_2[0, 92] + 81*lambda_2[0, 93] + 81*lambda_2[0, 94] + 81*lambda_2[0, 95] + 81*lambda_2[0, 102] + 81*lambda_2[0, 103] + 81*lambda_2[0, 104] + 486*lambda_2[0, 105] + 486*lambda_2[0, 106] + 486*lambda_2[0, 107] + 243*lambda_2[0, 111] + 243*lambda_2[0, 112] + 243*lambda_2[0, 113] + 9*lambda_2[0, 127] + 9*lambda_2[0, 128] + 9*lambda_2[0, 129] + 81*lambda_2[0, 139] + 81*lambda_2[0, 140] + 81*lambda_2[0, 141] + 486*lambda_2[0, 151] + 486*lambda_2[0, 152] + 486*lambda_2[0, 153] + 27*lambda_2[0, 160] + 27*lambda_2[0, 161] + 27*lambda_2[0, 162] + 27*lambda_2[0, 163] + 27*lambda_2[0, 164] + 27*lambda_2[0, 165] + 81*lambda_2[0, 178] + 81*lambda_2[0, 179] + 81*lambda_2[0, 180] + 81*lambda_2[0, 181] + 81*lambda_2[0, 182] + 81*lambda_2[0, 183] + 243*lambda_2[0, 184] + 243*lambda_2[0, 185] + 243*lambda_2[0, 186] + 243*lambda_2[0, 187] + 243*lambda_2[0, 188] + 243*lambda_2[0, 189] + 81*lambda_2[0, 191] + 81*lambda_2[0, 192] + 81*lambda_2[0, 193] + 27*lambda_2[0, 198] + 243*lambda_2[0, 202] + 81*lambda_2[0, 206] + 81*lambda_2[0, 207] + 81*lambda_2[0, 208] >= -l*B[0, 11] + 40*B[0, 5]*t[0, 0] + 16.3*B[0, 7]*t[0, 0] - 0.01- objc]
	constraints += [lambda_2[0, 39] + 9*lambda_2[0, 51] + 54*lambda_2[0, 63] + 270*lambda_2[0, 75] + 6*lambda_2[0, 81] + 27*lambda_2[0, 90] + 54*lambda_2[0, 93] + 108*lambda_2[0, 102] + 324*lambda_2[0, 105] + 243*lambda_2[0, 111] + 3*lambda_2[0, 127] + 3*lambda_2[0, 128] + 27*lambda_2[0, 139] + 27*lambda_2[0, 140] + 162*lambda_2[0, 151] + 162*lambda_2[0, 152] + 18*lambda_2[0, 160] + 9*lambda_2[0, 161] + 18*lambda_2[0, 162] + 9*lambda_2[0, 164] + 81*lambda_2[0, 178] + 27*lambda_2[0, 179] + 81*lambda_2[0, 180] + 27*lambda_2[0, 182] + 162*lambda_2[0, 184] + 81*lambda_2[0, 185] + 162*lambda_2[0, 186] + 81*lambda_2[0, 188] + 54*lambda_2[0, 191] + 54*lambda_2[0, 192] + 9*lambda_2[0, 198] + 81*lambda_2[0, 202] + 54*lambda_2[0, 206] + 27*lambda_2[0, 207] + 27*lambda_2[0, 208] == 0]
	constraints += [lambda_2[0, 81] + 9*lambda_2[0, 90] + 9*lambda_2[0, 93] + 54*lambda_2[0, 102] + 54*lambda_2[0, 105] + 81*lambda_2[0, 111] + 3*lambda_2[0, 160] + 3*lambda_2[0, 162] + 27*lambda_2[0, 178] + 27*lambda_2[0, 180] + 27*lambda_2[0, 184] + 27*lambda_2[0, 186] + 9*lambda_2[0, 191] + 9*lambda_2[0, 192] + 9*lambda_2[0, 206] == 0]
	constraints += [lambda_2[0, 90] + 12*lambda_2[0, 102] + 9*lambda_2[0, 111] + 3*lambda_2[0, 178] + 3*lambda_2[0, 180] == 0]
	constraints += [lambda_2[0, 102] == 0]
	constraints += [lambda_2[0, 40] + 9*lambda_2[0, 52] + 54*lambda_2[0, 64] + 270*lambda_2[0, 76] + 6*lambda_2[0, 82] + 27*lambda_2[0, 91] + 54*lambda_2[0, 94] + 108*lambda_2[0, 103] + 324*lambda_2[0, 106] + 243*lambda_2[0, 112] + 3*lambda_2[0, 127] + 3*lambda_2[0, 129] + 27*lambda_2[0, 139] + 27*lambda_2[0, 141] + 162*lambda_2[0, 151] + 162*lambda_2[0, 153] + 9*lambda_2[0, 160] + 18*lambda_2[0, 161] + 18*lambda_2[0, 163] + 9*lambda_2[0, 165] + 27*lambda_2[0, 178] + 81*lambda_2[0, 179] + 81*lambda_2[0, 181] + 27*lambda_2[0, 183] + 81*lambda_2[0, 184] + 162*lambda_2[0, 185] + 162*lambda_2[0, 187] + 81*lambda_2[0, 189] + 54*lambda_2[0, 191] + 54*lambda_2[0, 193] + 9*lambda_2[0, 198] + 81*lambda_2[0, 202] + 27*lambda_2[0, 206] + 54*lambda_2[0, 207] + 27*lambda_2[0, 208] == 0]
	constraints += [lambda_2[0, 127] + 9*lambda_2[0, 139] + 54*lambda_2[0, 151] + 6*lambda_2[0, 160] + 6*lambda_2[0, 161] + 27*lambda_2[0, 178] + 27*lambda_2[0, 179] + 54*lambda_2[0, 184] + 54*lambda_2[0, 185] + 36*lambda_2[0, 191] + 3*lambda_2[0, 198] + 27*lambda_2[0, 202] + 18*lambda_2[0, 206] + 18*lambda_2[0, 207] + 9*lambda_2[0, 208] == 0]
	constraints += [lambda_2[0, 160] + 9*lambda_2[0, 178] + 9*lambda_2[0, 184] + 6*lambda_2[0, 191] + 3*lambda_2[0, 206] == 0]
	constraints += [lambda_2[0, 178] == 0]
	constraints += [lambda_2[0, 82] + 9*lambda_2[0, 91] + 9*lambda_2[0, 94] + 54*lambda_2[0, 103] + 54*lambda_2[0, 106] + 81*lambda_2[0, 112] + 3*lambda_2[0, 161] + 3*lambda_2[0, 163] + 27*lambda_2[0, 179] + 27*lambda_2[0, 181] + 27*lambda_2[0, 185] + 27*lambda_2[0, 187] + 9*lambda_2[0, 191] + 9*lambda_2[0, 193] + 9*lambda_2[0, 207] == 0]
	constraints += [lambda_2[0, 161] + 9*lambda_2[0, 179] + 9*lambda_2[0, 185] + 6*lambda_2[0, 191] + 3*lambda_2[0, 207] == 0]
	constraints += [lambda_2[0, 191] == 0]
	constraints += [lambda_2[0, 91] + 12*lambda_2[0, 103] + 9*lambda_2[0, 112] + 3*lambda_2[0, 179] + 3*lambda_2[0, 181] == 0]
	constraints += [lambda_2[0, 179] == 0]
	constraints += [lambda_2[0, 103] == 0]
	constraints += [lambda_2[0, 41] + 9*lambda_2[0, 53] + 54*lambda_2[0, 65] + 270*lambda_2[0, 77] + 6*lambda_2[0, 83] + 27*lambda_2[0, 92] + 54*lambda_2[0, 95] + 108*lambda_2[0, 104] + 324*lambda_2[0, 107] + 243*lambda_2[0, 113] + 3*lambda_2[0, 128] + 3*lambda_2[0, 129] + 27*lambda_2[0, 140] + 27*lambda_2[0, 141] + 162*lambda_2[0, 152] + 162*lambda_2[0, 153] + 9*lambda_2[0, 162] + 9*lambda_2[0, 163] + 18*lambda_2[0, 164] + 18*lambda_2[0, 165] + 27*lambda_2[0, 180] + 27*lambda_2[0, 181] + 81*lambda_2[0, 182] + 81*lambda_2[0, 183] + 81*lambda_2[0, 186] + 81*lambda_2[0, 187] + 162*lambda_2[0, 188] + 162*lambda_2[0, 189] + 54*lambda_2[0, 192] + 54*lambda_2[0, 193] + 9*lambda_2[0, 198] + 81*lambda_2[0, 202] + 27*lambda_2[0, 206] + 27*lambda_2[0, 207] + 54*lambda_2[0, 208] == 0]
	constraints += [lambda_2[0, 128] + 9*lambda_2[0, 140] + 54*lambda_2[0, 152] + 6*lambda_2[0, 162] + 6*lambda_2[0, 164] + 27*lambda_2[0, 180] + 27*lambda_2[0, 182] + 54*lambda_2[0, 186] + 54*lambda_2[0, 188] + 36*lambda_2[0, 192] + 3*lambda_2[0, 198] + 27*lambda_2[0, 202] + 18*lambda_2[0, 206] + 9*lambda_2[0, 207] + 18*lambda_2[0, 208] == 0]
	constraints += [lambda_2[0, 162] + 9*lambda_2[0, 180] + 9*lambda_2[0, 186] + 6*lambda_2[0, 192] + 3*lambda_2[0, 206] == 0]
	constraints += [lambda_2[0, 180] == 0]
	constraints += [lambda_2[0, 129] + 9*lambda_2[0, 141] + 54*lambda_2[0, 153] + 6*lambda_2[0, 163] + 6*lambda_2[0, 165] + 27*lambda_2[0, 181] + 27*lambda_2[0, 183] + 54*lambda_2[0, 187] + 54*lambda_2[0, 189] + 36*lambda_2[0, 193] + 3*lambda_2[0, 198] + 27*lambda_2[0, 202] + 9*lambda_2[0, 206] + 18*lambda_2[0, 207] + 18*lambda_2[0, 208] == 0]
	constraints += [lambda_2[0, 198] + 9*lambda_2[0, 202] + 6*lambda_2[0, 206] + 6*lambda_2[0, 207] + 6*lambda_2[0, 208] == 0]
	constraints += [lambda_2[0, 206] == 0]
	constraints += [lambda_2[0, 163] + 9*lambda_2[0, 181] + 9*lambda_2[0, 187] + 6*lambda_2[0, 193] + 3*lambda_2[0, 207] == 0]
	constraints += [lambda_2[0, 207] == 0]
	constraints += [lambda_2[0, 181] == 0]
	constraints += [lambda_2[0, 83] + 9*lambda_2[0, 92] + 9*lambda_2[0, 95] + 54*lambda_2[0, 104] + 54*lambda_2[0, 107] + 81*lambda_2[0, 113] + 3*lambda_2[0, 164] + 3*lambda_2[0, 165] + 27*lambda_2[0, 182] + 27*lambda_2[0, 183] + 27*lambda_2[0, 188] + 27*lambda_2[0, 189] + 9*lambda_2[0, 192] + 9*lambda_2[0, 193] + 9*lambda_2[0, 208] == 0]
	constraints += [lambda_2[0, 164] + 9*lambda_2[0, 182] + 9*lambda_2[0, 188] + 6*lambda_2[0, 192] + 3*lambda_2[0, 208] == 0]
	constraints += [lambda_2[0, 192] == 0]
	constraints += [lambda_2[0, 165] + 9*lambda_2[0, 183] + 9*lambda_2[0, 189] + 6*lambda_2[0, 193] + 3*lambda_2[0, 208] == 0]
	constraints += [lambda_2[0, 208] == 0]
	constraints += [lambda_2[0, 193] == 0]
	constraints += [lambda_2[0, 92] + 12*lambda_2[0, 104] + 9*lambda_2[0, 113] + 3*lambda_2[0, 182] + 3*lambda_2[0, 183] == 0]
	constraints += [lambda_2[0, 182] == 0]
	constraints += [lambda_2[0, 183] == 0]
	constraints += [lambda_2[0, 104] == 0]
	constraints += [lambda_2[0, 11] + 12*lambda_2[0, 15] + 90*lambda_2[0, 19] + 540*lambda_2[0, 23] + 3*lambda_2[0, 51] + 3*lambda_2[0, 52] + 3*lambda_2[0, 53] + 36*lambda_2[0, 63] + 36*lambda_2[0, 64] + 36*lambda_2[0, 65] + 270*lambda_2[0, 75] + 270*lambda_2[0, 76] + 270*lambda_2[0, 77] + 9*lambda_2[0, 93] + 9*lambda_2[0, 94] + 9*lambda_2[0, 95] + 108*lambda_2[0, 105] + 108*lambda_2[0, 106] + 108*lambda_2[0, 107] + 27*lambda_2[0, 111] + 27*lambda_2[0, 112] + 27*lambda_2[0, 113] + 9*lambda_2[0, 139] + 9*lambda_2[0, 140] + 9*lambda_2[0, 141] + 108*lambda_2[0, 151] + 108*lambda_2[0, 152] + 108*lambda_2[0, 153] + 27*lambda_2[0, 184] + 27*lambda_2[0, 185] + 27*lambda_2[0, 186] + 27*lambda_2[0, 187] + 27*lambda_2[0, 188] + 27*lambda_2[0, 189] + 27*lambda_2[0, 202] == 0]
	constraints += [lambda_2[0, 51] + 12*lambda_2[0, 63] + 90*lambda_2[0, 75] + 6*lambda_2[0, 93] + 72*lambda_2[0, 105] + 27*lambda_2[0, 111] + 3*lambda_2[0, 139] + 3*lambda_2[0, 140] + 36*lambda_2[0, 151] + 36*lambda_2[0, 152] + 18*lambda_2[0, 184] + 9*lambda_2[0, 185] + 18*lambda_2[0, 186] + 9*lambda_2[0, 188] + 9*lambda_2[0, 202] == 0]
	constraints += [lambda_2[0, 93] + 12*lambda_2[0, 105] + 9*lambda_2[0, 111] + 3*lambda_2[0, 184] + 3*lambda_2[0, 186] == 0]
	constraints += [lambda_2[0, 111] == 0]
	constraints += [lambda_2[0, 52] + 12*lambda_2[0, 64] + 90*lambda_2[0, 76] + 6*lambda_2[0, 94] + 72*lambda_2[0, 106] + 27*lambda_2[0, 112] + 3*lambda_2[0, 139] + 3*lambda_2[0, 141] + 36*lambda_2[0, 151] + 36*lambda_2[0, 153] + 9*lambda_2[0, 184] + 18*lambda_2[0, 185] + 18*lambda_2[0, 187] + 9*lambda_2[0, 189] + 9*lambda_2[0, 202] <= 53.6*B[0, 15]+ objc]
	constraints += [lambda_2[0, 52] + 12*lambda_2[0, 64] + 90*lambda_2[0, 76] + 6*lambda_2[0, 94] + 72*lambda_2[0, 106] + 27*lambda_2[0, 112] + 3*lambda_2[0, 139] + 3*lambda_2[0, 141] + 36*lambda_2[0, 151] + 36*lambda_2[0, 153] + 9*lambda_2[0, 184] + 18*lambda_2[0, 185] + 18*lambda_2[0, 187] + 9*lambda_2[0, 189] + 9*lambda_2[0, 202] >= 53.6*B[0, 15]- objc]
	constraints += [lambda_2[0, 139] + 12*lambda_2[0, 151] + 6*lambda_2[0, 184] + 6*lambda_2[0, 185] + 3*lambda_2[0, 202] == 0]
	constraints += [lambda_2[0, 184] == 0]
	constraints += [lambda_2[0, 94] + 12*lambda_2[0, 106] + 9*lambda_2[0, 112] + 3*lambda_2[0, 185] + 3*lambda_2[0, 187] == 0]
	constraints += [lambda_2[0, 185] == 0]
	constraints += [lambda_2[0, 112] == 0]
	constraints += [lambda_2[0, 53] + 12*lambda_2[0, 65] + 90*lambda_2[0, 77] + 6*lambda_2[0, 95] + 72*lambda_2[0, 107] + 27*lambda_2[0, 113] + 3*lambda_2[0, 140] + 3*lambda_2[0, 141] + 36*lambda_2[0, 152] + 36*lambda_2[0, 153] + 9*lambda_2[0, 186] + 9*lambda_2[0, 187] + 18*lambda_2[0, 188] + 18*lambda_2[0, 189] + 9*lambda_2[0, 202] <= 4*B[0, 15]+ objc]
	constraints += [lambda_2[0, 53] + 12*lambda_2[0, 65] + 90*lambda_2[0, 77] + 6*lambda_2[0, 95] + 72*lambda_2[0, 107] + 27*lambda_2[0, 113] + 3*lambda_2[0, 140] + 3*lambda_2[0, 141] + 36*lambda_2[0, 152] + 36*lambda_2[0, 153] + 9*lambda_2[0, 186] + 9*lambda_2[0, 187] + 18*lambda_2[0, 188] + 18*lambda_2[0, 189] + 9*lambda_2[0, 202] >= 4*B[0, 15]- objc]
	constraints += [lambda_2[0, 140] + 12*lambda_2[0, 152] + 6*lambda_2[0, 186] + 6*lambda_2[0, 188] + 3*lambda_2[0, 202] == 0]
	constraints += [lambda_2[0, 186] == 0]
	constraints += [lambda_2[0, 141] + 12*lambda_2[0, 153] + 6*lambda_2[0, 187] + 6*lambda_2[0, 189] + 3*lambda_2[0, 202] == 0]
	constraints += [lambda_2[0, 202] == 0]
	constraints += [lambda_2[0, 187] == 0]
	constraints += [lambda_2[0, 95] + 12*lambda_2[0, 107] + 9*lambda_2[0, 113] + 3*lambda_2[0, 188] + 3*lambda_2[0, 189] == 0]
	constraints += [lambda_2[0, 188] == 0]
	constraints += [lambda_2[0, 189] == 0]
	constraints += [lambda_2[0, 113] == 0]
	constraints += [lambda_2[0, 15] + 15*lambda_2[0, 19] + 135*lambda_2[0, 23] + 3*lambda_2[0, 63] + 3*lambda_2[0, 64] + 3*lambda_2[0, 65] + 45*lambda_2[0, 75] + 45*lambda_2[0, 76] + 45*lambda_2[0, 77] + 9*lambda_2[0, 105] + 9*lambda_2[0, 106] + 9*lambda_2[0, 107] + 9*lambda_2[0, 151] + 9*lambda_2[0, 152] + 9*lambda_2[0, 153] <= -l*B[0, 15]+ objc]
	constraints += [lambda_2[0, 15] + 15*lambda_2[0, 19] + 135*lambda_2[0, 23] + 3*lambda_2[0, 63] + 3*lambda_2[0, 64] + 3*lambda_2[0, 65] + 45*lambda_2[0, 75] + 45*lambda_2[0, 76] + 45*lambda_2[0, 77] + 9*lambda_2[0, 105] + 9*lambda_2[0, 106] + 9*lambda_2[0, 107] + 9*lambda_2[0, 151] + 9*lambda_2[0, 152] + 9*lambda_2[0, 153] >= -l*B[0, 15]- objc]
	constraints += [lambda_2[0, 63] + 15*lambda_2[0, 75] + 6*lambda_2[0, 105] + 3*lambda_2[0, 151] + 3*lambda_2[0, 152] == 0]
	constraints += [lambda_2[0, 105] == 0]
	constraints += [lambda_2[0, 64] + 15*lambda_2[0, 76] + 6*lambda_2[0, 106] + 3*lambda_2[0, 151] + 3*lambda_2[0, 153] == 0]
	constraints += [lambda_2[0, 151] == 0]
	constraints += [lambda_2[0, 106] == 0]
	constraints += [lambda_2[0, 65] + 15*lambda_2[0, 77] + 6*lambda_2[0, 107] + 3*lambda_2[0, 152] + 3*lambda_2[0, 153] == 0]
	constraints += [lambda_2[0, 152] == 0]
	constraints += [lambda_2[0, 153] == 0]
	constraints += [lambda_2[0, 107] == 0]
	constraints += [lambda_2[0, 19] + 18*lambda_2[0, 23] + 3*lambda_2[0, 75] + 3*lambda_2[0, 76] + 3*lambda_2[0, 77] == 0]
	constraints += [lambda_2[0, 75] == 0]
	constraints += [lambda_2[0, 76] <= 80.4*B[0, 19]+ objc]
	constraints += [lambda_2[0, 76] >= 80.4*B[0, 19]- objc]
	constraints += [lambda_2[0, 77] <= 6*B[0, 19]+ objc]
	constraints += [lambda_2[0, 77] >= 6*B[0, 19]- objc]
	constraints += [lambda_2[0, 23] <= -l*B[0, 19]+ objc]
	constraints += [lambda_2[0, 23] >= -l*B[0, 19]- objc]


	#------------------The Unsafe conditions------------------
	constraints += [2*lambda_3[0, 0] + lambda_3[0, 1] + 3*lambda_3[0, 2] + 3*lambda_3[0, 3] + 4*lambda_3[0, 4] + lambda_3[0, 5] + 9*lambda_3[0, 6] + 9*lambda_3[0, 7] + 8*lambda_3[0, 8] + lambda_3[0, 9] + 27*lambda_3[0, 10] + 27*lambda_3[0, 11] + 16*lambda_3[0, 12] + lambda_3[0, 13] + 81*lambda_3[0, 14] + 81*lambda_3[0, 15] + 32*lambda_3[0, 16] + lambda_3[0, 17] + 243*lambda_3[0, 18] + 243*lambda_3[0, 19] + 64*lambda_3[0, 20] + lambda_3[0, 21] + 729*lambda_3[0, 22] + 729*lambda_3[0, 23] + 2*lambda_3[0, 24] + 6*lambda_3[0, 25] + 3*lambda_3[0, 26] + 6*lambda_3[0, 27] + 3*lambda_3[0, 28] + 9*lambda_3[0, 29] + 4*lambda_3[0, 30] + 2*lambda_3[0, 31] + 12*lambda_3[0, 32] + 3*lambda_3[0, 33] + 18*lambda_3[0, 34] + 9*lambda_3[0, 35] + 12*lambda_3[0, 36] + 3*lambda_3[0, 37] + 27*lambda_3[0, 38] + 18*lambda_3[0, 39] + 9*lambda_3[0, 40] + 27*lambda_3[0, 41] + 8*lambda_3[0, 42] + 2*lambda_3[0, 43] + 24*lambda_3[0, 44] + 3*lambda_3[0, 45] + 54*lambda_3[0, 46] + 27*lambda_3[0, 47] + 24*lambda_3[0, 48] + 3*lambda_3[0, 49] + 81*lambda_3[0, 50] + 54*lambda_3[0, 51] + 27*lambda_3[0, 52] + 81*lambda_3[0, 53] + 16*lambda_3[0, 54] + 2*lambda_3[0, 55] + 48*lambda_3[0, 56] + 3*lambda_3[0, 57] + 162*lambda_3[0, 58] + 81*lambda_3[0, 59] + 48*lambda_3[0, 60] + 3*lambda_3[0, 61] + 243*lambda_3[0, 62] + 162*lambda_3[0, 63] + 81*lambda_3[0, 64] + 243*lambda_3[0, 65] + 32*lambda_3[0, 66] + 2*lambda_3[0, 67] + 96*lambda_3[0, 68] + 3*lambda_3[0, 69] + 486*lambda_3[0, 70] + 243*lambda_3[0, 71] + 96*lambda_3[0, 72] + 3*lambda_3[0, 73] + 729*lambda_3[0, 74] + 486*lambda_3[0, 75] + 243*lambda_3[0, 76] + 729*lambda_3[0, 77] + 4*lambda_3[0, 78] + 36*lambda_3[0, 79] + 9*lambda_3[0, 80] + 36*lambda_3[0, 81] + 9*lambda_3[0, 82] + 81*lambda_3[0, 83] + 8*lambda_3[0, 84] + 4*lambda_3[0, 85] + 72*lambda_3[0, 86] + 9*lambda_3[0, 87] + 108*lambda_3[0, 88] + 27*lambda_3[0, 89] + 72*lambda_3[0, 90] + 9*lambda_3[0, 91] + 243*lambda_3[0, 92] + 108*lambda_3[0, 93] + 27*lambda_3[0, 94] + 243*lambda_3[0, 95] + 16*lambda_3[0, 96] + 4*lambda_3[0, 97] + 144*lambda_3[0, 98] + 9*lambda_3[0, 99] + 324*lambda_3[0, 100] + 81*lambda_3[0, 101] + 144*lambda_3[0, 102] + 9*lambda_3[0, 103] + 729*lambda_3[0, 104] + 324*lambda_3[0, 105] + 81*lambda_3[0, 106] + 729*lambda_3[0, 107] + 8*lambda_3[0, 108] + 216*lambda_3[0, 109] + 27*lambda_3[0, 110] + 216*lambda_3[0, 111] + 27*lambda_3[0, 112] + 729*lambda_3[0, 113] + 6*lambda_3[0, 114] + 6*lambda_3[0, 115] + 18*lambda_3[0, 116] + 9*lambda_3[0, 117] + 12*lambda_3[0, 118] + 6*lambda_3[0, 119] + 18*lambda_3[0, 120] + 12*lambda_3[0, 121] + 6*lambda_3[0, 122] + 36*lambda_3[0, 123] + 9*lambda_3[0, 124] + 54*lambda_3[0, 125] + 27*lambda_3[0, 126] + 18*lambda_3[0, 127] + 54*lambda_3[0, 128] + 27*lambda_3[0, 129] + 24*lambda_3[0, 130] + 6*lambda_3[0, 131] + 54*lambda_3[0, 132] + 24*lambda_3[0, 133] + 6*lambda_3[0, 134] + 72*lambda_3[0, 135] + 9*lambda_3[0, 136] + 162*lambda_3[0, 137] + 81*lambda_3[0, 138] + 54*lambda_3[0, 139] + 162*lambda_3[0, 140] + 81*lambda_3[0, 141] + 48*lambda_3[0, 142] + 6*lambda_3[0, 143] + 162*lambda_3[0, 144] + 48*lambda_3[0, 145] + 6*lambda_3[0, 146] + 144*lambda_3[0, 147] + 9*lambda_3[0, 148] + 486*lambda_3[0, 149] + 243*lambda_3[0, 150] + 162*lambda_3[0, 151] + 486*lambda_3[0, 152] + 243*lambda_3[0, 153] + 12*lambda_3[0, 154] + 36*lambda_3[0, 155] + 18*lambda_3[0, 156] + 12*lambda_3[0, 157] + 108*lambda_3[0, 158] + 27*lambda_3[0, 159] + 36*lambda_3[0, 160] + 18*lambda_3[0, 161] + 108*lambda_3[0, 162] + 27*lambda_3[0, 163] + 162*lambda_3[0, 164] + 81*lambda_3[0, 165] + 24*lambda_3[0, 166] + 12*lambda_3[0, 167] + 72*lambda_3[0, 168] + 18*lambda_3[0, 169] + 108*lambda_3[0, 170] + 54*lambda_3[0, 171] + 24*lambda_3[0, 172] + 12*lambda_3[0, 173] + 216*lambda_3[0, 174] + 27*lambda_3[0, 175] + 324*lambda_3[0, 176] + 81*lambda_3[0, 177] + 72*lambda_3[0, 178] + 18*lambda_3[0, 179] + 216*lambda_3[0, 180] + 27*lambda_3[0, 181] + 486*lambda_3[0, 182] + 243*lambda_3[0, 183] + 108*lambda_3[0, 184] + 54*lambda_3[0, 185] + 324*lambda_3[0, 186] + 81*lambda_3[0, 187] + 486*lambda_3[0, 188] + 243*lambda_3[0, 189] + 36*lambda_3[0, 190] + 36*lambda_3[0, 191] + 324*lambda_3[0, 192] + 81*lambda_3[0, 193] + 18*lambda_3[0, 194] + 36*lambda_3[0, 195] + 18*lambda_3[0, 196] + 54*lambda_3[0, 197] + 54*lambda_3[0, 198] + 72*lambda_3[0, 199] + 18*lambda_3[0, 200] + 162*lambda_3[0, 201] + 162*lambda_3[0, 202] + 36*lambda_3[0, 203] + 108*lambda_3[0, 204] + 54*lambda_3[0, 205] + 108*lambda_3[0, 206] + 54*lambda_3[0, 207] + 162*lambda_3[0, 208] <= -B[0, 0]+ objc]
	constraints += [2*lambda_3[0, 0] + lambda_3[0, 1] + 3*lambda_3[0, 2] + 3*lambda_3[0, 3] + 4*lambda_3[0, 4] + lambda_3[0, 5] + 9*lambda_3[0, 6] + 9*lambda_3[0, 7] + 8*lambda_3[0, 8] + lambda_3[0, 9] + 27*lambda_3[0, 10] + 27*lambda_3[0, 11] + 16*lambda_3[0, 12] + lambda_3[0, 13] + 81*lambda_3[0, 14] + 81*lambda_3[0, 15] + 32*lambda_3[0, 16] + lambda_3[0, 17] + 243*lambda_3[0, 18] + 243*lambda_3[0, 19] + 64*lambda_3[0, 20] + lambda_3[0, 21] + 729*lambda_3[0, 22] + 729*lambda_3[0, 23] + 2*lambda_3[0, 24] + 6*lambda_3[0, 25] + 3*lambda_3[0, 26] + 6*lambda_3[0, 27] + 3*lambda_3[0, 28] + 9*lambda_3[0, 29] + 4*lambda_3[0, 30] + 2*lambda_3[0, 31] + 12*lambda_3[0, 32] + 3*lambda_3[0, 33] + 18*lambda_3[0, 34] + 9*lambda_3[0, 35] + 12*lambda_3[0, 36] + 3*lambda_3[0, 37] + 27*lambda_3[0, 38] + 18*lambda_3[0, 39] + 9*lambda_3[0, 40] + 27*lambda_3[0, 41] + 8*lambda_3[0, 42] + 2*lambda_3[0, 43] + 24*lambda_3[0, 44] + 3*lambda_3[0, 45] + 54*lambda_3[0, 46] + 27*lambda_3[0, 47] + 24*lambda_3[0, 48] + 3*lambda_3[0, 49] + 81*lambda_3[0, 50] + 54*lambda_3[0, 51] + 27*lambda_3[0, 52] + 81*lambda_3[0, 53] + 16*lambda_3[0, 54] + 2*lambda_3[0, 55] + 48*lambda_3[0, 56] + 3*lambda_3[0, 57] + 162*lambda_3[0, 58] + 81*lambda_3[0, 59] + 48*lambda_3[0, 60] + 3*lambda_3[0, 61] + 243*lambda_3[0, 62] + 162*lambda_3[0, 63] + 81*lambda_3[0, 64] + 243*lambda_3[0, 65] + 32*lambda_3[0, 66] + 2*lambda_3[0, 67] + 96*lambda_3[0, 68] + 3*lambda_3[0, 69] + 486*lambda_3[0, 70] + 243*lambda_3[0, 71] + 96*lambda_3[0, 72] + 3*lambda_3[0, 73] + 729*lambda_3[0, 74] + 486*lambda_3[0, 75] + 243*lambda_3[0, 76] + 729*lambda_3[0, 77] + 4*lambda_3[0, 78] + 36*lambda_3[0, 79] + 9*lambda_3[0, 80] + 36*lambda_3[0, 81] + 9*lambda_3[0, 82] + 81*lambda_3[0, 83] + 8*lambda_3[0, 84] + 4*lambda_3[0, 85] + 72*lambda_3[0, 86] + 9*lambda_3[0, 87] + 108*lambda_3[0, 88] + 27*lambda_3[0, 89] + 72*lambda_3[0, 90] + 9*lambda_3[0, 91] + 243*lambda_3[0, 92] + 108*lambda_3[0, 93] + 27*lambda_3[0, 94] + 243*lambda_3[0, 95] + 16*lambda_3[0, 96] + 4*lambda_3[0, 97] + 144*lambda_3[0, 98] + 9*lambda_3[0, 99] + 324*lambda_3[0, 100] + 81*lambda_3[0, 101] + 144*lambda_3[0, 102] + 9*lambda_3[0, 103] + 729*lambda_3[0, 104] + 324*lambda_3[0, 105] + 81*lambda_3[0, 106] + 729*lambda_3[0, 107] + 8*lambda_3[0, 108] + 216*lambda_3[0, 109] + 27*lambda_3[0, 110] + 216*lambda_3[0, 111] + 27*lambda_3[0, 112] + 729*lambda_3[0, 113] + 6*lambda_3[0, 114] + 6*lambda_3[0, 115] + 18*lambda_3[0, 116] + 9*lambda_3[0, 117] + 12*lambda_3[0, 118] + 6*lambda_3[0, 119] + 18*lambda_3[0, 120] + 12*lambda_3[0, 121] + 6*lambda_3[0, 122] + 36*lambda_3[0, 123] + 9*lambda_3[0, 124] + 54*lambda_3[0, 125] + 27*lambda_3[0, 126] + 18*lambda_3[0, 127] + 54*lambda_3[0, 128] + 27*lambda_3[0, 129] + 24*lambda_3[0, 130] + 6*lambda_3[0, 131] + 54*lambda_3[0, 132] + 24*lambda_3[0, 133] + 6*lambda_3[0, 134] + 72*lambda_3[0, 135] + 9*lambda_3[0, 136] + 162*lambda_3[0, 137] + 81*lambda_3[0, 138] + 54*lambda_3[0, 139] + 162*lambda_3[0, 140] + 81*lambda_3[0, 141] + 48*lambda_3[0, 142] + 6*lambda_3[0, 143] + 162*lambda_3[0, 144] + 48*lambda_3[0, 145] + 6*lambda_3[0, 146] + 144*lambda_3[0, 147] + 9*lambda_3[0, 148] + 486*lambda_3[0, 149] + 243*lambda_3[0, 150] + 162*lambda_3[0, 151] + 486*lambda_3[0, 152] + 243*lambda_3[0, 153] + 12*lambda_3[0, 154] + 36*lambda_3[0, 155] + 18*lambda_3[0, 156] + 12*lambda_3[0, 157] + 108*lambda_3[0, 158] + 27*lambda_3[0, 159] + 36*lambda_3[0, 160] + 18*lambda_3[0, 161] + 108*lambda_3[0, 162] + 27*lambda_3[0, 163] + 162*lambda_3[0, 164] + 81*lambda_3[0, 165] + 24*lambda_3[0, 166] + 12*lambda_3[0, 167] + 72*lambda_3[0, 168] + 18*lambda_3[0, 169] + 108*lambda_3[0, 170] + 54*lambda_3[0, 171] + 24*lambda_3[0, 172] + 12*lambda_3[0, 173] + 216*lambda_3[0, 174] + 27*lambda_3[0, 175] + 324*lambda_3[0, 176] + 81*lambda_3[0, 177] + 72*lambda_3[0, 178] + 18*lambda_3[0, 179] + 216*lambda_3[0, 180] + 27*lambda_3[0, 181] + 486*lambda_3[0, 182] + 243*lambda_3[0, 183] + 108*lambda_3[0, 184] + 54*lambda_3[0, 185] + 324*lambda_3[0, 186] + 81*lambda_3[0, 187] + 486*lambda_3[0, 188] + 243*lambda_3[0, 189] + 36*lambda_3[0, 190] + 36*lambda_3[0, 191] + 324*lambda_3[0, 192] + 81*lambda_3[0, 193] + 18*lambda_3[0, 194] + 36*lambda_3[0, 195] + 18*lambda_3[0, 196] + 54*lambda_3[0, 197] + 54*lambda_3[0, 198] + 72*lambda_3[0, 199] + 18*lambda_3[0, 200] + 162*lambda_3[0, 201] + 162*lambda_3[0, 202] + 36*lambda_3[0, 203] + 108*lambda_3[0, 204] + 54*lambda_3[0, 205] + 108*lambda_3[0, 206] + 54*lambda_3[0, 207] + 162*lambda_3[0, 208] >= -B[0, 0]- objc]
	constraints += [-lambda_3[0, 0] - 4*lambda_3[0, 4] - 12*lambda_3[0, 8] - 32*lambda_3[0, 12] - 80*lambda_3[0, 16] - 192*lambda_3[0, 20] - lambda_3[0, 24] - 3*lambda_3[0, 25] - 3*lambda_3[0, 27] - 4*lambda_3[0, 30] - lambda_3[0, 31] - 12*lambda_3[0, 32] - 9*lambda_3[0, 34] - 12*lambda_3[0, 36] - 9*lambda_3[0, 39] - 12*lambda_3[0, 42] - lambda_3[0, 43] - 36*lambda_3[0, 44] - 27*lambda_3[0, 46] - 36*lambda_3[0, 48] - 27*lambda_3[0, 51] - 32*lambda_3[0, 54] - lambda_3[0, 55] - 96*lambda_3[0, 56] - 81*lambda_3[0, 58] - 96*lambda_3[0, 60] - 81*lambda_3[0, 63] - 80*lambda_3[0, 66] - lambda_3[0, 67] - 240*lambda_3[0, 68] - 243*lambda_3[0, 70] - 240*lambda_3[0, 72] - 243*lambda_3[0, 75] - 4*lambda_3[0, 78] - 36*lambda_3[0, 79] - 36*lambda_3[0, 81] - 12*lambda_3[0, 84] - 4*lambda_3[0, 85] - 108*lambda_3[0, 86] - 108*lambda_3[0, 88] - 108*lambda_3[0, 90] - 108*lambda_3[0, 93] - 32*lambda_3[0, 96] - 4*lambda_3[0, 97] - 288*lambda_3[0, 98] - 324*lambda_3[0, 100] - 288*lambda_3[0, 102] - 324*lambda_3[0, 105] - 12*lambda_3[0, 108] - 324*lambda_3[0, 109] - 324*lambda_3[0, 111] - 3*lambda_3[0, 114] - 3*lambda_3[0, 115] - 9*lambda_3[0, 116] - 12*lambda_3[0, 118] - 3*lambda_3[0, 119] - 9*lambda_3[0, 120] - 12*lambda_3[0, 121] - 3*lambda_3[0, 122] - 36*lambda_3[0, 123] - 27*lambda_3[0, 125] - 9*lambda_3[0, 127] - 27*lambda_3[0, 128] - 36*lambda_3[0, 130] - 3*lambda_3[0, 131] - 27*lambda_3[0, 132] - 36*lambda_3[0, 133] - 3*lambda_3[0, 134] - 108*lambda_3[0, 135] - 81*lambda_3[0, 137] - 27*lambda_3[0, 139] - 81*lambda_3[0, 140] - 96*lambda_3[0, 142] - 3*lambda_3[0, 143] - 81*lambda_3[0, 144] - 96*lambda_3[0, 145] - 3*lambda_3[0, 146] - 288*lambda_3[0, 147] - 243*lambda_3[0, 149] - 81*lambda_3[0, 151] - 243*lambda_3[0, 152] - 12*lambda_3[0, 154] - 36*lambda_3[0, 155] - 9*lambda_3[0, 156] - 12*lambda_3[0, 157] - 108*lambda_3[0, 158] - 36*lambda_3[0, 160] - 9*lambda_3[0, 161] - 108*lambda_3[0, 162] - 81*lambda_3[0, 164] - 36*lambda_3[0, 166] - 12*lambda_3[0, 167] - 108*lambda_3[0, 168] - 9*lambda_3[0, 169] - 108*lambda_3[0, 170] - 27*lambda_3[0, 171] - 36*lambda_3[0, 172] - 12*lambda_3[0, 173] - 324*lambda_3[0, 174] - 324*lambda_3[0, 176] - 108*lambda_3[0, 178] - 9*lambda_3[0, 179] - 324*lambda_3[0, 180] - 243*lambda_3[0, 182] - 108*lambda_3[0, 184] - 27*lambda_3[0, 185] - 324*lambda_3[0, 186] - 243*lambda_3[0, 188] - 36*lambda_3[0, 190] - 36*lambda_3[0, 191] - 324*lambda_3[0, 192] - 9*lambda_3[0, 194] - 36*lambda_3[0, 195] - 9*lambda_3[0, 196] - 27*lambda_3[0, 197] - 27*lambda_3[0, 198] - 108*lambda_3[0, 199] - 9*lambda_3[0, 200] - 81*lambda_3[0, 201] - 81*lambda_3[0, 202] - 36*lambda_3[0, 203] - 108*lambda_3[0, 204] - 27*lambda_3[0, 205] - 108*lambda_3[0, 206] - 27*lambda_3[0, 207] - 81*lambda_3[0, 208] <= -B[0, 4]+ objc]
	constraints += [-lambda_3[0, 0] - 4*lambda_3[0, 4] - 12*lambda_3[0, 8] - 32*lambda_3[0, 12] - 80*lambda_3[0, 16] - 192*lambda_3[0, 20] - lambda_3[0, 24] - 3*lambda_3[0, 25] - 3*lambda_3[0, 27] - 4*lambda_3[0, 30] - lambda_3[0, 31] - 12*lambda_3[0, 32] - 9*lambda_3[0, 34] - 12*lambda_3[0, 36] - 9*lambda_3[0, 39] - 12*lambda_3[0, 42] - lambda_3[0, 43] - 36*lambda_3[0, 44] - 27*lambda_3[0, 46] - 36*lambda_3[0, 48] - 27*lambda_3[0, 51] - 32*lambda_3[0, 54] - lambda_3[0, 55] - 96*lambda_3[0, 56] - 81*lambda_3[0, 58] - 96*lambda_3[0, 60] - 81*lambda_3[0, 63] - 80*lambda_3[0, 66] - lambda_3[0, 67] - 240*lambda_3[0, 68] - 243*lambda_3[0, 70] - 240*lambda_3[0, 72] - 243*lambda_3[0, 75] - 4*lambda_3[0, 78] - 36*lambda_3[0, 79] - 36*lambda_3[0, 81] - 12*lambda_3[0, 84] - 4*lambda_3[0, 85] - 108*lambda_3[0, 86] - 108*lambda_3[0, 88] - 108*lambda_3[0, 90] - 108*lambda_3[0, 93] - 32*lambda_3[0, 96] - 4*lambda_3[0, 97] - 288*lambda_3[0, 98] - 324*lambda_3[0, 100] - 288*lambda_3[0, 102] - 324*lambda_3[0, 105] - 12*lambda_3[0, 108] - 324*lambda_3[0, 109] - 324*lambda_3[0, 111] - 3*lambda_3[0, 114] - 3*lambda_3[0, 115] - 9*lambda_3[0, 116] - 12*lambda_3[0, 118] - 3*lambda_3[0, 119] - 9*lambda_3[0, 120] - 12*lambda_3[0, 121] - 3*lambda_3[0, 122] - 36*lambda_3[0, 123] - 27*lambda_3[0, 125] - 9*lambda_3[0, 127] - 27*lambda_3[0, 128] - 36*lambda_3[0, 130] - 3*lambda_3[0, 131] - 27*lambda_3[0, 132] - 36*lambda_3[0, 133] - 3*lambda_3[0, 134] - 108*lambda_3[0, 135] - 81*lambda_3[0, 137] - 27*lambda_3[0, 139] - 81*lambda_3[0, 140] - 96*lambda_3[0, 142] - 3*lambda_3[0, 143] - 81*lambda_3[0, 144] - 96*lambda_3[0, 145] - 3*lambda_3[0, 146] - 288*lambda_3[0, 147] - 243*lambda_3[0, 149] - 81*lambda_3[0, 151] - 243*lambda_3[0, 152] - 12*lambda_3[0, 154] - 36*lambda_3[0, 155] - 9*lambda_3[0, 156] - 12*lambda_3[0, 157] - 108*lambda_3[0, 158] - 36*lambda_3[0, 160] - 9*lambda_3[0, 161] - 108*lambda_3[0, 162] - 81*lambda_3[0, 164] - 36*lambda_3[0, 166] - 12*lambda_3[0, 167] - 108*lambda_3[0, 168] - 9*lambda_3[0, 169] - 108*lambda_3[0, 170] - 27*lambda_3[0, 171] - 36*lambda_3[0, 172] - 12*lambda_3[0, 173] - 324*lambda_3[0, 174] - 324*lambda_3[0, 176] - 108*lambda_3[0, 178] - 9*lambda_3[0, 179] - 324*lambda_3[0, 180] - 243*lambda_3[0, 182] - 108*lambda_3[0, 184] - 27*lambda_3[0, 185] - 324*lambda_3[0, 186] - 243*lambda_3[0, 188] - 36*lambda_3[0, 190] - 36*lambda_3[0, 191] - 324*lambda_3[0, 192] - 9*lambda_3[0, 194] - 36*lambda_3[0, 195] - 9*lambda_3[0, 196] - 27*lambda_3[0, 197] - 27*lambda_3[0, 198] - 108*lambda_3[0, 199] - 9*lambda_3[0, 200] - 81*lambda_3[0, 201] - 81*lambda_3[0, 202] - 36*lambda_3[0, 203] - 108*lambda_3[0, 204] - 27*lambda_3[0, 205] - 108*lambda_3[0, 206] - 27*lambda_3[0, 207] - 81*lambda_3[0, 208] >= -B[0, 4]- objc]
	constraints += [lambda_3[0, 4] + 6*lambda_3[0, 8] + 24*lambda_3[0, 12] + 80*lambda_3[0, 16] + 240*lambda_3[0, 20] + lambda_3[0, 30] + 3*lambda_3[0, 32] + 3*lambda_3[0, 36] + 6*lambda_3[0, 42] + 18*lambda_3[0, 44] + 18*lambda_3[0, 48] + 24*lambda_3[0, 54] + 72*lambda_3[0, 56] + 72*lambda_3[0, 60] + 80*lambda_3[0, 66] + 240*lambda_3[0, 68] + 240*lambda_3[0, 72] + lambda_3[0, 78] + 9*lambda_3[0, 79] + 9*lambda_3[0, 81] + 6*lambda_3[0, 84] + lambda_3[0, 85] + 54*lambda_3[0, 86] + 27*lambda_3[0, 88] + 54*lambda_3[0, 90] + 27*lambda_3[0, 93] + 24*lambda_3[0, 96] + lambda_3[0, 97] + 216*lambda_3[0, 98] + 81*lambda_3[0, 100] + 216*lambda_3[0, 102] + 81*lambda_3[0, 105] + 6*lambda_3[0, 108] + 162*lambda_3[0, 109] + 162*lambda_3[0, 111] + 3*lambda_3[0, 118] + 3*lambda_3[0, 121] + 9*lambda_3[0, 123] + 18*lambda_3[0, 130] + 18*lambda_3[0, 133] + 54*lambda_3[0, 135] + 72*lambda_3[0, 142] + 72*lambda_3[0, 145] + 216*lambda_3[0, 147] + 3*lambda_3[0, 154] + 9*lambda_3[0, 155] + 3*lambda_3[0, 157] + 27*lambda_3[0, 158] + 9*lambda_3[0, 160] + 27*lambda_3[0, 162] + 18*lambda_3[0, 166] + 3*lambda_3[0, 167] + 54*lambda_3[0, 168] + 27*lambda_3[0, 170] + 18*lambda_3[0, 172] + 3*lambda_3[0, 173] + 162*lambda_3[0, 174] + 81*lambda_3[0, 176] + 54*lambda_3[0, 178] + 162*lambda_3[0, 180] + 27*lambda_3[0, 184] + 81*lambda_3[0, 186] + 9*lambda_3[0, 190] + 9*lambda_3[0, 191] + 81*lambda_3[0, 192] + 9*lambda_3[0, 195] + 54*lambda_3[0, 199] + 9*lambda_3[0, 203] + 27*lambda_3[0, 204] + 27*lambda_3[0, 206] <= -B[0, 14] - 0.01+ objc]
	constraints += [lambda_3[0, 4] + 6*lambda_3[0, 8] + 24*lambda_3[0, 12] + 80*lambda_3[0, 16] + 240*lambda_3[0, 20] + lambda_3[0, 30] + 3*lambda_3[0, 32] + 3*lambda_3[0, 36] + 6*lambda_3[0, 42] + 18*lambda_3[0, 44] + 18*lambda_3[0, 48] + 24*lambda_3[0, 54] + 72*lambda_3[0, 56] + 72*lambda_3[0, 60] + 80*lambda_3[0, 66] + 240*lambda_3[0, 68] + 240*lambda_3[0, 72] + lambda_3[0, 78] + 9*lambda_3[0, 79] + 9*lambda_3[0, 81] + 6*lambda_3[0, 84] + lambda_3[0, 85] + 54*lambda_3[0, 86] + 27*lambda_3[0, 88] + 54*lambda_3[0, 90] + 27*lambda_3[0, 93] + 24*lambda_3[0, 96] + lambda_3[0, 97] + 216*lambda_3[0, 98] + 81*lambda_3[0, 100] + 216*lambda_3[0, 102] + 81*lambda_3[0, 105] + 6*lambda_3[0, 108] + 162*lambda_3[0, 109] + 162*lambda_3[0, 111] + 3*lambda_3[0, 118] + 3*lambda_3[0, 121] + 9*lambda_3[0, 123] + 18*lambda_3[0, 130] + 18*lambda_3[0, 133] + 54*lambda_3[0, 135] + 72*lambda_3[0, 142] + 72*lambda_3[0, 145] + 216*lambda_3[0, 147] + 3*lambda_3[0, 154] + 9*lambda_3[0, 155] + 3*lambda_3[0, 157] + 27*lambda_3[0, 158] + 9*lambda_3[0, 160] + 27*lambda_3[0, 162] + 18*lambda_3[0, 166] + 3*lambda_3[0, 167] + 54*lambda_3[0, 168] + 27*lambda_3[0, 170] + 18*lambda_3[0, 172] + 3*lambda_3[0, 173] + 162*lambda_3[0, 174] + 81*lambda_3[0, 176] + 54*lambda_3[0, 178] + 162*lambda_3[0, 180] + 27*lambda_3[0, 184] + 81*lambda_3[0, 186] + 9*lambda_3[0, 190] + 9*lambda_3[0, 191] + 81*lambda_3[0, 192] + 9*lambda_3[0, 195] + 54*lambda_3[0, 199] + 9*lambda_3[0, 203] + 27*lambda_3[0, 204] + 27*lambda_3[0, 206] >= -B[0, 14] - 0.01- objc]
	constraints += [-lambda_3[0, 8] - 8*lambda_3[0, 12] - 40*lambda_3[0, 16] - 160*lambda_3[0, 20] - lambda_3[0, 42] - 3*lambda_3[0, 44] - 3*lambda_3[0, 48] - 8*lambda_3[0, 54] - 24*lambda_3[0, 56] - 24*lambda_3[0, 60] - 40*lambda_3[0, 66] - 120*lambda_3[0, 68] - 120*lambda_3[0, 72] - lambda_3[0, 84] - 9*lambda_3[0, 86] - 9*lambda_3[0, 90] - 8*lambda_3[0, 96] - 72*lambda_3[0, 98] - 72*lambda_3[0, 102] - lambda_3[0, 108] - 27*lambda_3[0, 109] - 27*lambda_3[0, 111] - 3*lambda_3[0, 130] - 3*lambda_3[0, 133] - 9*lambda_3[0, 135] - 24*lambda_3[0, 142] - 24*lambda_3[0, 145] - 72*lambda_3[0, 147] - 3*lambda_3[0, 166] - 9*lambda_3[0, 168] - 3*lambda_3[0, 172] - 27*lambda_3[0, 174] - 9*lambda_3[0, 178] - 27*lambda_3[0, 180] - 9*lambda_3[0, 199] == 0]
	constraints += [lambda_3[0, 12] + 10*lambda_3[0, 16] + 60*lambda_3[0, 20] + lambda_3[0, 54] + 3*lambda_3[0, 56] + 3*lambda_3[0, 60] + 10*lambda_3[0, 66] + 30*lambda_3[0, 68] + 30*lambda_3[0, 72] + lambda_3[0, 96] + 9*lambda_3[0, 98] + 9*lambda_3[0, 102] + 3*lambda_3[0, 142] + 3*lambda_3[0, 145] + 9*lambda_3[0, 147] <= -B[0, 18]+ objc]
	constraints += [lambda_3[0, 12] + 10*lambda_3[0, 16] + 60*lambda_3[0, 20] + lambda_3[0, 54] + 3*lambda_3[0, 56] + 3*lambda_3[0, 60] + 10*lambda_3[0, 66] + 30*lambda_3[0, 68] + 30*lambda_3[0, 72] + lambda_3[0, 96] + 9*lambda_3[0, 98] + 9*lambda_3[0, 102] + 3*lambda_3[0, 142] + 3*lambda_3[0, 145] + 9*lambda_3[0, 147] >= -B[0, 18]- objc]
	constraints += [-lambda_3[0, 16] - 12*lambda_3[0, 20] - lambda_3[0, 66] - 3*lambda_3[0, 68] - 3*lambda_3[0, 72] == 0]
	constraints += [lambda_3[0, 20] <= -B[0, 22]+ objc]
	constraints += [lambda_3[0, 20] >= -B[0, 22]- objc]
	constraints += [-lambda_3[0, 1] - 2*lambda_3[0, 5] - 3*lambda_3[0, 9] - 4*lambda_3[0, 13] - 5*lambda_3[0, 17] - 6*lambda_3[0, 21] - 2*lambda_3[0, 24] - 3*lambda_3[0, 26] - 3*lambda_3[0, 28] - 4*lambda_3[0, 30] - 4*lambda_3[0, 31] - 6*lambda_3[0, 33] - 9*lambda_3[0, 35] - 6*lambda_3[0, 37] - 9*lambda_3[0, 40] - 8*lambda_3[0, 42] - 6*lambda_3[0, 43] - 9*lambda_3[0, 45] - 27*lambda_3[0, 47] - 9*lambda_3[0, 49] - 27*lambda_3[0, 52] - 16*lambda_3[0, 54] - 8*lambda_3[0, 55] - 12*lambda_3[0, 57] - 81*lambda_3[0, 59] - 12*lambda_3[0, 61] - 81*lambda_3[0, 64] - 32*lambda_3[0, 66] - 10*lambda_3[0, 67] - 15*lambda_3[0, 69] - 243*lambda_3[0, 71] - 15*lambda_3[0, 73] - 243*lambda_3[0, 76] - 8*lambda_3[0, 78] - 18*lambda_3[0, 80] - 18*lambda_3[0, 82] - 16*lambda_3[0, 84] - 12*lambda_3[0, 85] - 27*lambda_3[0, 87] - 54*lambda_3[0, 89] - 27*lambda_3[0, 91] - 54*lambda_3[0, 94] - 32*lambda_3[0, 96] - 16*lambda_3[0, 97] - 36*lambda_3[0, 99] - 162*lambda_3[0, 101] - 36*lambda_3[0, 103] - 162*lambda_3[0, 106] - 24*lambda_3[0, 108] - 81*lambda_3[0, 110] - 81*lambda_3[0, 112] - 6*lambda_3[0, 114] - 6*lambda_3[0, 115] - 9*lambda_3[0, 117] - 12*lambda_3[0, 118] - 12*lambda_3[0, 119] - 18*lambda_3[0, 120] - 12*lambda_3[0, 121] - 12*lambda_3[0, 122] - 18*lambda_3[0, 124] - 27*lambda_3[0, 126] - 18*lambda_3[0, 127] - 27*lambda_3[0, 129] - 24*lambda_3[0, 130] - 18*lambda_3[0, 131] - 54*lambda_3[0, 132] - 24*lambda_3[0, 133] - 18*lambda_3[0, 134] - 27*lambda_3[0, 136] - 81*lambda_3[0, 138] - 54*lambda_3[0, 139] - 81*lambda_3[0, 141] - 48*lambda_3[0, 142] - 24*lambda_3[0, 143] - 162*lambda_3[0, 144] - 48*lambda_3[0, 145] - 24*lambda_3[0, 146] - 36*lambda_3[0, 148] - 243*lambda_3[0, 150] - 162*lambda_3[0, 151] - 243*lambda_3[0, 153] - 24*lambda_3[0, 154] - 36*lambda_3[0, 155] - 36*lambda_3[0, 156] - 24*lambda_3[0, 157] - 54*lambda_3[0, 159] - 36*lambda_3[0, 160] - 36*lambda_3[0, 161] - 54*lambda_3[0, 163] - 81*lambda_3[0, 165] - 48*lambda_3[0, 166] - 36*lambda_3[0, 167] - 72*lambda_3[0, 168] - 54*lambda_3[0, 169] - 108*lambda_3[0, 170] - 108*lambda_3[0, 171] - 48*lambda_3[0, 172] - 36*lambda_3[0, 173] - 81*lambda_3[0, 175] - 162*lambda_3[0, 177] - 72*lambda_3[0, 178] - 54*lambda_3[0, 179] - 81*lambda_3[0, 181] - 243*lambda_3[0, 183] - 108*lambda_3[0, 184] - 108*lambda_3[0, 185] - 162*lambda_3[0, 187] - 243*lambda_3[0, 189] - 72*lambda_3[0, 190] - 72*lambda_3[0, 191] - 162*lambda_3[0, 193] - 18*lambda_3[0, 194] - 36*lambda_3[0, 195] - 36*lambda_3[0, 196] - 54*lambda_3[0, 197] - 54*lambda_3[0, 198] - 72*lambda_3[0, 199] - 54*lambda_3[0, 200] - 162*lambda_3[0, 201] - 162*lambda_3[0, 202] - 72*lambda_3[0, 203] - 108*lambda_3[0, 204] - 108*lambda_3[0, 205] - 108*lambda_3[0, 206] - 108*lambda_3[0, 207] - 162*lambda_3[0, 208] <= -B[0, 3]+ objc]
	constraints += [-lambda_3[0, 1] - 2*lambda_3[0, 5] - 3*lambda_3[0, 9] - 4*lambda_3[0, 13] - 5*lambda_3[0, 17] - 6*lambda_3[0, 21] - 2*lambda_3[0, 24] - 3*lambda_3[0, 26] - 3*lambda_3[0, 28] - 4*lambda_3[0, 30] - 4*lambda_3[0, 31] - 6*lambda_3[0, 33] - 9*lambda_3[0, 35] - 6*lambda_3[0, 37] - 9*lambda_3[0, 40] - 8*lambda_3[0, 42] - 6*lambda_3[0, 43] - 9*lambda_3[0, 45] - 27*lambda_3[0, 47] - 9*lambda_3[0, 49] - 27*lambda_3[0, 52] - 16*lambda_3[0, 54] - 8*lambda_3[0, 55] - 12*lambda_3[0, 57] - 81*lambda_3[0, 59] - 12*lambda_3[0, 61] - 81*lambda_3[0, 64] - 32*lambda_3[0, 66] - 10*lambda_3[0, 67] - 15*lambda_3[0, 69] - 243*lambda_3[0, 71] - 15*lambda_3[0, 73] - 243*lambda_3[0, 76] - 8*lambda_3[0, 78] - 18*lambda_3[0, 80] - 18*lambda_3[0, 82] - 16*lambda_3[0, 84] - 12*lambda_3[0, 85] - 27*lambda_3[0, 87] - 54*lambda_3[0, 89] - 27*lambda_3[0, 91] - 54*lambda_3[0, 94] - 32*lambda_3[0, 96] - 16*lambda_3[0, 97] - 36*lambda_3[0, 99] - 162*lambda_3[0, 101] - 36*lambda_3[0, 103] - 162*lambda_3[0, 106] - 24*lambda_3[0, 108] - 81*lambda_3[0, 110] - 81*lambda_3[0, 112] - 6*lambda_3[0, 114] - 6*lambda_3[0, 115] - 9*lambda_3[0, 117] - 12*lambda_3[0, 118] - 12*lambda_3[0, 119] - 18*lambda_3[0, 120] - 12*lambda_3[0, 121] - 12*lambda_3[0, 122] - 18*lambda_3[0, 124] - 27*lambda_3[0, 126] - 18*lambda_3[0, 127] - 27*lambda_3[0, 129] - 24*lambda_3[0, 130] - 18*lambda_3[0, 131] - 54*lambda_3[0, 132] - 24*lambda_3[0, 133] - 18*lambda_3[0, 134] - 27*lambda_3[0, 136] - 81*lambda_3[0, 138] - 54*lambda_3[0, 139] - 81*lambda_3[0, 141] - 48*lambda_3[0, 142] - 24*lambda_3[0, 143] - 162*lambda_3[0, 144] - 48*lambda_3[0, 145] - 24*lambda_3[0, 146] - 36*lambda_3[0, 148] - 243*lambda_3[0, 150] - 162*lambda_3[0, 151] - 243*lambda_3[0, 153] - 24*lambda_3[0, 154] - 36*lambda_3[0, 155] - 36*lambda_3[0, 156] - 24*lambda_3[0, 157] - 54*lambda_3[0, 159] - 36*lambda_3[0, 160] - 36*lambda_3[0, 161] - 54*lambda_3[0, 163] - 81*lambda_3[0, 165] - 48*lambda_3[0, 166] - 36*lambda_3[0, 167] - 72*lambda_3[0, 168] - 54*lambda_3[0, 169] - 108*lambda_3[0, 170] - 108*lambda_3[0, 171] - 48*lambda_3[0, 172] - 36*lambda_3[0, 173] - 81*lambda_3[0, 175] - 162*lambda_3[0, 177] - 72*lambda_3[0, 178] - 54*lambda_3[0, 179] - 81*lambda_3[0, 181] - 243*lambda_3[0, 183] - 108*lambda_3[0, 184] - 108*lambda_3[0, 185] - 162*lambda_3[0, 187] - 243*lambda_3[0, 189] - 72*lambda_3[0, 190] - 72*lambda_3[0, 191] - 162*lambda_3[0, 193] - 18*lambda_3[0, 194] - 36*lambda_3[0, 195] - 36*lambda_3[0, 196] - 54*lambda_3[0, 197] - 54*lambda_3[0, 198] - 72*lambda_3[0, 199] - 54*lambda_3[0, 200] - 162*lambda_3[0, 201] - 162*lambda_3[0, 202] - 72*lambda_3[0, 203] - 108*lambda_3[0, 204] - 108*lambda_3[0, 205] - 108*lambda_3[0, 206] - 108*lambda_3[0, 207] - 162*lambda_3[0, 208] >= -B[0, 3]- objc]
	constraints += [lambda_3[0, 24] + 4*lambda_3[0, 30] + 2*lambda_3[0, 31] + 12*lambda_3[0, 42] + 3*lambda_3[0, 43] + 32*lambda_3[0, 54] + 4*lambda_3[0, 55] + 80*lambda_3[0, 66] + 5*lambda_3[0, 67] + 8*lambda_3[0, 78] + 24*lambda_3[0, 84] + 12*lambda_3[0, 85] + 64*lambda_3[0, 96] + 16*lambda_3[0, 97] + 36*lambda_3[0, 108] + 3*lambda_3[0, 114] + 3*lambda_3[0, 115] + 12*lambda_3[0, 118] + 6*lambda_3[0, 119] + 9*lambda_3[0, 120] + 12*lambda_3[0, 121] + 6*lambda_3[0, 122] + 9*lambda_3[0, 127] + 36*lambda_3[0, 130] + 9*lambda_3[0, 131] + 27*lambda_3[0, 132] + 36*lambda_3[0, 133] + 9*lambda_3[0, 134] + 27*lambda_3[0, 139] + 96*lambda_3[0, 142] + 12*lambda_3[0, 143] + 81*lambda_3[0, 144] + 96*lambda_3[0, 145] + 12*lambda_3[0, 146] + 81*lambda_3[0, 151] + 24*lambda_3[0, 154] + 36*lambda_3[0, 155] + 18*lambda_3[0, 156] + 24*lambda_3[0, 157] + 36*lambda_3[0, 160] + 18*lambda_3[0, 161] + 72*lambda_3[0, 166] + 36*lambda_3[0, 167] + 108*lambda_3[0, 168] + 27*lambda_3[0, 169] + 108*lambda_3[0, 170] + 54*lambda_3[0, 171] + 72*lambda_3[0, 172] + 36*lambda_3[0, 173] + 108*lambda_3[0, 178] + 27*lambda_3[0, 179] + 108*lambda_3[0, 184] + 54*lambda_3[0, 185] + 72*lambda_3[0, 190] + 72*lambda_3[0, 191] + 9*lambda_3[0, 194] + 36*lambda_3[0, 195] + 18*lambda_3[0, 196] + 27*lambda_3[0, 197] + 27*lambda_3[0, 198] + 108*lambda_3[0, 199] + 27*lambda_3[0, 200] + 81*lambda_3[0, 201] + 81*lambda_3[0, 202] + 72*lambda_3[0, 203] + 108*lambda_3[0, 204] + 54*lambda_3[0, 205] + 108*lambda_3[0, 206] + 54*lambda_3[0, 207] + 81*lambda_3[0, 208] <= -B[0, 10]+ objc]
	constraints += [lambda_3[0, 24] + 4*lambda_3[0, 30] + 2*lambda_3[0, 31] + 12*lambda_3[0, 42] + 3*lambda_3[0, 43] + 32*lambda_3[0, 54] + 4*lambda_3[0, 55] + 80*lambda_3[0, 66] + 5*lambda_3[0, 67] + 8*lambda_3[0, 78] + 24*lambda_3[0, 84] + 12*lambda_3[0, 85] + 64*lambda_3[0, 96] + 16*lambda_3[0, 97] + 36*lambda_3[0, 108] + 3*lambda_3[0, 114] + 3*lambda_3[0, 115] + 12*lambda_3[0, 118] + 6*lambda_3[0, 119] + 9*lambda_3[0, 120] + 12*lambda_3[0, 121] + 6*lambda_3[0, 122] + 9*lambda_3[0, 127] + 36*lambda_3[0, 130] + 9*lambda_3[0, 131] + 27*lambda_3[0, 132] + 36*lambda_3[0, 133] + 9*lambda_3[0, 134] + 27*lambda_3[0, 139] + 96*lambda_3[0, 142] + 12*lambda_3[0, 143] + 81*lambda_3[0, 144] + 96*lambda_3[0, 145] + 12*lambda_3[0, 146] + 81*lambda_3[0, 151] + 24*lambda_3[0, 154] + 36*lambda_3[0, 155] + 18*lambda_3[0, 156] + 24*lambda_3[0, 157] + 36*lambda_3[0, 160] + 18*lambda_3[0, 161] + 72*lambda_3[0, 166] + 36*lambda_3[0, 167] + 108*lambda_3[0, 168] + 27*lambda_3[0, 169] + 108*lambda_3[0, 170] + 54*lambda_3[0, 171] + 72*lambda_3[0, 172] + 36*lambda_3[0, 173] + 108*lambda_3[0, 178] + 27*lambda_3[0, 179] + 108*lambda_3[0, 184] + 54*lambda_3[0, 185] + 72*lambda_3[0, 190] + 72*lambda_3[0, 191] + 9*lambda_3[0, 194] + 36*lambda_3[0, 195] + 18*lambda_3[0, 196] + 27*lambda_3[0, 197] + 27*lambda_3[0, 198] + 108*lambda_3[0, 199] + 27*lambda_3[0, 200] + 81*lambda_3[0, 201] + 81*lambda_3[0, 202] + 72*lambda_3[0, 203] + 108*lambda_3[0, 204] + 54*lambda_3[0, 205] + 108*lambda_3[0, 206] + 54*lambda_3[0, 207] + 81*lambda_3[0, 208] >= -B[0, 10]- objc]
	constraints += [-lambda_3[0, 30] - 6*lambda_3[0, 42] - 24*lambda_3[0, 54] - 80*lambda_3[0, 66] - 2*lambda_3[0, 78] - 12*lambda_3[0, 84] - 3*lambda_3[0, 85] - 48*lambda_3[0, 96] - 4*lambda_3[0, 97] - 18*lambda_3[0, 108] - 3*lambda_3[0, 118] - 3*lambda_3[0, 121] - 18*lambda_3[0, 130] - 18*lambda_3[0, 133] - 72*lambda_3[0, 142] - 72*lambda_3[0, 145] - 6*lambda_3[0, 154] - 9*lambda_3[0, 155] - 6*lambda_3[0, 157] - 9*lambda_3[0, 160] - 36*lambda_3[0, 166] - 9*lambda_3[0, 167] - 54*lambda_3[0, 168] - 27*lambda_3[0, 170] - 36*lambda_3[0, 172] - 9*lambda_3[0, 173] - 54*lambda_3[0, 178] - 27*lambda_3[0, 184] - 18*lambda_3[0, 190] - 18*lambda_3[0, 191] - 9*lambda_3[0, 195] - 54*lambda_3[0, 199] - 18*lambda_3[0, 203] - 27*lambda_3[0, 204] - 27*lambda_3[0, 206] == 0]
	constraints += [lambda_3[0, 42] + 8*lambda_3[0, 54] + 40*lambda_3[0, 66] + 2*lambda_3[0, 84] + 16*lambda_3[0, 96] + 3*lambda_3[0, 108] + 3*lambda_3[0, 130] + 3*lambda_3[0, 133] + 24*lambda_3[0, 142] + 24*lambda_3[0, 145] + 6*lambda_3[0, 166] + 9*lambda_3[0, 168] + 6*lambda_3[0, 172] + 9*lambda_3[0, 178] + 9*lambda_3[0, 199] == 0]
	constraints += [-lambda_3[0, 54] - 10*lambda_3[0, 66] - 2*lambda_3[0, 96] - 3*lambda_3[0, 142] - 3*lambda_3[0, 145] == 0]
	constraints += [lambda_3[0, 66] == 0]
	constraints += [lambda_3[0, 5] + 3*lambda_3[0, 9] + 6*lambda_3[0, 13] + 10*lambda_3[0, 17] + 15*lambda_3[0, 21] + 2*lambda_3[0, 31] + 3*lambda_3[0, 33] + 3*lambda_3[0, 37] + 6*lambda_3[0, 43] + 9*lambda_3[0, 45] + 9*lambda_3[0, 49] + 12*lambda_3[0, 55] + 18*lambda_3[0, 57] + 18*lambda_3[0, 61] + 20*lambda_3[0, 67] + 30*lambda_3[0, 69] + 30*lambda_3[0, 73] + 4*lambda_3[0, 78] + 9*lambda_3[0, 80] + 9*lambda_3[0, 82] + 8*lambda_3[0, 84] + 12*lambda_3[0, 85] + 27*lambda_3[0, 87] + 27*lambda_3[0, 89] + 27*lambda_3[0, 91] + 27*lambda_3[0, 94] + 16*lambda_3[0, 96] + 24*lambda_3[0, 97] + 54*lambda_3[0, 99] + 81*lambda_3[0, 101] + 54*lambda_3[0, 103] + 81*lambda_3[0, 106] + 24*lambda_3[0, 108] + 81*lambda_3[0, 110] + 81*lambda_3[0, 112] + 6*lambda_3[0, 119] + 6*lambda_3[0, 122] + 9*lambda_3[0, 124] + 18*lambda_3[0, 131] + 18*lambda_3[0, 134] + 27*lambda_3[0, 136] + 36*lambda_3[0, 143] + 36*lambda_3[0, 146] + 54*lambda_3[0, 148] + 12*lambda_3[0, 154] + 18*lambda_3[0, 156] + 12*lambda_3[0, 157] + 27*lambda_3[0, 159] + 18*lambda_3[0, 161] + 27*lambda_3[0, 163] + 24*lambda_3[0, 166] + 36*lambda_3[0, 167] + 54*lambda_3[0, 169] + 54*lambda_3[0, 171] + 24*lambda_3[0, 172] + 36*lambda_3[0, 173] + 81*lambda_3[0, 175] + 81*lambda_3[0, 177] + 54*lambda_3[0, 179] + 81*lambda_3[0, 181] + 54*lambda_3[0, 185] + 81*lambda_3[0, 187] + 36*lambda_3[0, 190] + 36*lambda_3[0, 191] + 81*lambda_3[0, 193] + 18*lambda_3[0, 196] + 54*lambda_3[0, 200] + 36*lambda_3[0, 203] + 54*lambda_3[0, 205] + 54*lambda_3[0, 207] <= -B[0, 13] - 0.01+ objc]
	constraints += [lambda_3[0, 5] + 3*lambda_3[0, 9] + 6*lambda_3[0, 13] + 10*lambda_3[0, 17] + 15*lambda_3[0, 21] + 2*lambda_3[0, 31] + 3*lambda_3[0, 33] + 3*lambda_3[0, 37] + 6*lambda_3[0, 43] + 9*lambda_3[0, 45] + 9*lambda_3[0, 49] + 12*lambda_3[0, 55] + 18*lambda_3[0, 57] + 18*lambda_3[0, 61] + 20*lambda_3[0, 67] + 30*lambda_3[0, 69] + 30*lambda_3[0, 73] + 4*lambda_3[0, 78] + 9*lambda_3[0, 80] + 9*lambda_3[0, 82] + 8*lambda_3[0, 84] + 12*lambda_3[0, 85] + 27*lambda_3[0, 87] + 27*lambda_3[0, 89] + 27*lambda_3[0, 91] + 27*lambda_3[0, 94] + 16*lambda_3[0, 96] + 24*lambda_3[0, 97] + 54*lambda_3[0, 99] + 81*lambda_3[0, 101] + 54*lambda_3[0, 103] + 81*lambda_3[0, 106] + 24*lambda_3[0, 108] + 81*lambda_3[0, 110] + 81*lambda_3[0, 112] + 6*lambda_3[0, 119] + 6*lambda_3[0, 122] + 9*lambda_3[0, 124] + 18*lambda_3[0, 131] + 18*lambda_3[0, 134] + 27*lambda_3[0, 136] + 36*lambda_3[0, 143] + 36*lambda_3[0, 146] + 54*lambda_3[0, 148] + 12*lambda_3[0, 154] + 18*lambda_3[0, 156] + 12*lambda_3[0, 157] + 27*lambda_3[0, 159] + 18*lambda_3[0, 161] + 27*lambda_3[0, 163] + 24*lambda_3[0, 166] + 36*lambda_3[0, 167] + 54*lambda_3[0, 169] + 54*lambda_3[0, 171] + 24*lambda_3[0, 172] + 36*lambda_3[0, 173] + 81*lambda_3[0, 175] + 81*lambda_3[0, 177] + 54*lambda_3[0, 179] + 81*lambda_3[0, 181] + 54*lambda_3[0, 185] + 81*lambda_3[0, 187] + 36*lambda_3[0, 190] + 36*lambda_3[0, 191] + 81*lambda_3[0, 193] + 18*lambda_3[0, 196] + 54*lambda_3[0, 200] + 36*lambda_3[0, 203] + 54*lambda_3[0, 205] + 54*lambda_3[0, 207] >= -B[0, 13] - 0.01- objc]
	constraints += [-lambda_3[0, 31] - 3*lambda_3[0, 43] - 6*lambda_3[0, 55] - 10*lambda_3[0, 67] - 4*lambda_3[0, 78] - 12*lambda_3[0, 84] - 12*lambda_3[0, 85] - 32*lambda_3[0, 96] - 24*lambda_3[0, 97] - 36*lambda_3[0, 108] - 3*lambda_3[0, 119] - 3*lambda_3[0, 122] - 9*lambda_3[0, 131] - 9*lambda_3[0, 134] - 18*lambda_3[0, 143] - 18*lambda_3[0, 146] - 12*lambda_3[0, 154] - 9*lambda_3[0, 156] - 12*lambda_3[0, 157] - 9*lambda_3[0, 161] - 36*lambda_3[0, 166] - 36*lambda_3[0, 167] - 27*lambda_3[0, 169] - 27*lambda_3[0, 171] - 36*lambda_3[0, 172] - 36*lambda_3[0, 173] - 27*lambda_3[0, 179] - 27*lambda_3[0, 185] - 36*lambda_3[0, 190] - 36*lambda_3[0, 191] - 9*lambda_3[0, 196] - 27*lambda_3[0, 200] - 36*lambda_3[0, 203] - 27*lambda_3[0, 205] - 27*lambda_3[0, 207] == 0]
	constraints += [lambda_3[0, 78] + 6*lambda_3[0, 84] + 3*lambda_3[0, 85] + 24*lambda_3[0, 96] + 6*lambda_3[0, 97] + 18*lambda_3[0, 108] + 3*lambda_3[0, 154] + 3*lambda_3[0, 157] + 18*lambda_3[0, 166] + 9*lambda_3[0, 167] + 18*lambda_3[0, 172] + 9*lambda_3[0, 173] + 9*lambda_3[0, 190] + 9*lambda_3[0, 191] + 9*lambda_3[0, 203] == 0]
	constraints += [-lambda_3[0, 84] - 8*lambda_3[0, 96] - 3*lambda_3[0, 108] - 3*lambda_3[0, 166] - 3*lambda_3[0, 172] == 0]
	constraints += [lambda_3[0, 96] == 0]
	constraints += [-lambda_3[0, 9] - 4*lambda_3[0, 13] - 10*lambda_3[0, 17] - 20*lambda_3[0, 21] - 2*lambda_3[0, 43] - 3*lambda_3[0, 45] - 3*lambda_3[0, 49] - 8*lambda_3[0, 55] - 12*lambda_3[0, 57] - 12*lambda_3[0, 61] - 20*lambda_3[0, 67] - 30*lambda_3[0, 69] - 30*lambda_3[0, 73] - 4*lambda_3[0, 85] - 9*lambda_3[0, 87] - 9*lambda_3[0, 91] - 16*lambda_3[0, 97] - 36*lambda_3[0, 99] - 36*lambda_3[0, 103] - 8*lambda_3[0, 108] - 27*lambda_3[0, 110] - 27*lambda_3[0, 112] - 6*lambda_3[0, 131] - 6*lambda_3[0, 134] - 9*lambda_3[0, 136] - 24*lambda_3[0, 143] - 24*lambda_3[0, 146] - 36*lambda_3[0, 148] - 12*lambda_3[0, 167] - 18*lambda_3[0, 169] - 12*lambda_3[0, 173] - 27*lambda_3[0, 175] - 18*lambda_3[0, 179] - 27*lambda_3[0, 181] - 18*lambda_3[0, 200] == 0]
	constraints += [lambda_3[0, 43] + 4*lambda_3[0, 55] + 10*lambda_3[0, 67] + 4*lambda_3[0, 85] + 16*lambda_3[0, 97] + 12*lambda_3[0, 108] + 3*lambda_3[0, 131] + 3*lambda_3[0, 134] + 12*lambda_3[0, 143] + 12*lambda_3[0, 146] + 12*lambda_3[0, 167] + 9*lambda_3[0, 169] + 12*lambda_3[0, 173] + 9*lambda_3[0, 179] + 9*lambda_3[0, 200] == 0]
	constraints += [-lambda_3[0, 85] - 4*lambda_3[0, 97] - 6*lambda_3[0, 108] - 3*lambda_3[0, 167] - 3*lambda_3[0, 173] == 0]
	constraints += [lambda_3[0, 108] == 0]
	constraints += [lambda_3[0, 13] + 5*lambda_3[0, 17] + 15*lambda_3[0, 21] + 2*lambda_3[0, 55] + 3*lambda_3[0, 57] + 3*lambda_3[0, 61] + 10*lambda_3[0, 67] + 15*lambda_3[0, 69] + 15*lambda_3[0, 73] + 4*lambda_3[0, 97] + 9*lambda_3[0, 99] + 9*lambda_3[0, 103] + 6*lambda_3[0, 143] + 6*lambda_3[0, 146] + 9*lambda_3[0, 148] <= -B[0, 17]+ objc]
	constraints += [lambda_3[0, 13] + 5*lambda_3[0, 17] + 15*lambda_3[0, 21] + 2*lambda_3[0, 55] + 3*lambda_3[0, 57] + 3*lambda_3[0, 61] + 10*lambda_3[0, 67] + 15*lambda_3[0, 69] + 15*lambda_3[0, 73] + 4*lambda_3[0, 97] + 9*lambda_3[0, 99] + 9*lambda_3[0, 103] + 6*lambda_3[0, 143] + 6*lambda_3[0, 146] + 9*lambda_3[0, 148] >= -B[0, 17]- objc]
	constraints += [-lambda_3[0, 55] - 5*lambda_3[0, 67] - 4*lambda_3[0, 97] - 3*lambda_3[0, 143] - 3*lambda_3[0, 146] == 0]
	constraints += [lambda_3[0, 97] == 0]
	constraints += [-lambda_3[0, 17] - 6*lambda_3[0, 21] - 2*lambda_3[0, 67] - 3*lambda_3[0, 69] - 3*lambda_3[0, 73] == 0]
	constraints += [lambda_3[0, 67] == 0]
	constraints += [lambda_3[0, 21] <= -B[0, 21]+ objc]
	constraints += [lambda_3[0, 21] >= -B[0, 21]- objc]
	constraints += [-lambda_3[0, 2] - 6*lambda_3[0, 6] - 27*lambda_3[0, 10] - 108*lambda_3[0, 14] - 405*lambda_3[0, 18] - 1458*lambda_3[0, 22] - 2*lambda_3[0, 25] - lambda_3[0, 26] - 3*lambda_3[0, 29] - 4*lambda_3[0, 32] - lambda_3[0, 33] - 12*lambda_3[0, 34] - 6*lambda_3[0, 35] - 18*lambda_3[0, 38] - 9*lambda_3[0, 41] - 8*lambda_3[0, 44] - lambda_3[0, 45] - 54*lambda_3[0, 46] - 27*lambda_3[0, 47] - 81*lambda_3[0, 50] - 27*lambda_3[0, 53] - 16*lambda_3[0, 56] - lambda_3[0, 57] - 216*lambda_3[0, 58] - 108*lambda_3[0, 59] - 324*lambda_3[0, 62] - 81*lambda_3[0, 65] - 32*lambda_3[0, 68] - lambda_3[0, 69] - 810*lambda_3[0, 70] - 405*lambda_3[0, 71] - 1215*lambda_3[0, 74] - 243*lambda_3[0, 77] - 24*lambda_3[0, 79] - 6*lambda_3[0, 80] - 54*lambda_3[0, 83] - 48*lambda_3[0, 86] - 6*lambda_3[0, 87] - 108*lambda_3[0, 88] - 27*lambda_3[0, 89] - 243*lambda_3[0, 92] - 162*lambda_3[0, 95] - 96*lambda_3[0, 98] - 6*lambda_3[0, 99] - 432*lambda_3[0, 100] - 108*lambda_3[0, 101] - 972*lambda_3[0, 104] - 486*lambda_3[0, 107] - 216*lambda_3[0, 109] - 27*lambda_3[0, 110] - 729*lambda_3[0, 113] - 2*lambda_3[0, 114] - 6*lambda_3[0, 116] - 3*lambda_3[0, 117] - 4*lambda_3[0, 118] - 2*lambda_3[0, 119] - 12*lambda_3[0, 120] - 12*lambda_3[0, 123] - 3*lambda_3[0, 124] - 36*lambda_3[0, 125] - 18*lambda_3[0, 126] - 18*lambda_3[0, 128] - 9*lambda_3[0, 129] - 8*lambda_3[0, 130] - 2*lambda_3[0, 131] - 54*lambda_3[0, 132] - 24*lambda_3[0, 135] - 3*lambda_3[0, 136] - 162*lambda_3[0, 137] - 81*lambda_3[0, 138] - 54*lambda_3[0, 140] - 27*lambda_3[0, 141] - 16*lambda_3[0, 142] - 2*lambda_3[0, 143] - 216*lambda_3[0, 144] - 48*lambda_3[0, 147] - 3*lambda_3[0, 148] - 648*lambda_3[0, 149] - 324*lambda_3[0, 150] - 162*lambda_3[0, 152] - 81*lambda_3[0, 153] - 4*lambda_3[0, 154] - 24*lambda_3[0, 155] - 12*lambda_3[0, 156] - 72*lambda_3[0, 158] - 18*lambda_3[0, 159] - 36*lambda_3[0, 162] - 9*lambda_3[0, 163] - 108*lambda_3[0, 164] - 54*lambda_3[0, 165] - 8*lambda_3[0, 166] - 4*lambda_3[0, 167] - 48*lambda_3[0, 168] - 12*lambda_3[0, 169] - 108*lambda_3[0, 170] - 54*lambda_3[0, 171] - 144*lambda_3[0, 174] - 18*lambda_3[0, 175] - 324*lambda_3[0, 176] - 81*lambda_3[0, 177] - 72*lambda_3[0, 180] - 9*lambda_3[0, 181] - 486*lambda_3[0, 182] - 243*lambda_3[0, 183] - 108*lambda_3[0, 186] - 27*lambda_3[0, 187] - 324*lambda_3[0, 188] - 162*lambda_3[0, 189] - 24*lambda_3[0, 190] - 216*lambda_3[0, 192] - 54*lambda_3[0, 193] - 6*lambda_3[0, 194] - 12*lambda_3[0, 195] - 6*lambda_3[0, 196] - 36*lambda_3[0, 197] - 18*lambda_3[0, 198] - 24*lambda_3[0, 199] - 6*lambda_3[0, 200] - 162*lambda_3[0, 201] - 54*lambda_3[0, 202] - 12*lambda_3[0, 203] - 72*lambda_3[0, 204] - 36*lambda_3[0, 205] - 36*lambda_3[0, 206] - 18*lambda_3[0, 207] - 108*lambda_3[0, 208] <= -B[0, 2]+ objc]
	constraints += [-lambda_3[0, 2] - 6*lambda_3[0, 6] - 27*lambda_3[0, 10] - 108*lambda_3[0, 14] - 405*lambda_3[0, 18] - 1458*lambda_3[0, 22] - 2*lambda_3[0, 25] - lambda_3[0, 26] - 3*lambda_3[0, 29] - 4*lambda_3[0, 32] - lambda_3[0, 33] - 12*lambda_3[0, 34] - 6*lambda_3[0, 35] - 18*lambda_3[0, 38] - 9*lambda_3[0, 41] - 8*lambda_3[0, 44] - lambda_3[0, 45] - 54*lambda_3[0, 46] - 27*lambda_3[0, 47] - 81*lambda_3[0, 50] - 27*lambda_3[0, 53] - 16*lambda_3[0, 56] - lambda_3[0, 57] - 216*lambda_3[0, 58] - 108*lambda_3[0, 59] - 324*lambda_3[0, 62] - 81*lambda_3[0, 65] - 32*lambda_3[0, 68] - lambda_3[0, 69] - 810*lambda_3[0, 70] - 405*lambda_3[0, 71] - 1215*lambda_3[0, 74] - 243*lambda_3[0, 77] - 24*lambda_3[0, 79] - 6*lambda_3[0, 80] - 54*lambda_3[0, 83] - 48*lambda_3[0, 86] - 6*lambda_3[0, 87] - 108*lambda_3[0, 88] - 27*lambda_3[0, 89] - 243*lambda_3[0, 92] - 162*lambda_3[0, 95] - 96*lambda_3[0, 98] - 6*lambda_3[0, 99] - 432*lambda_3[0, 100] - 108*lambda_3[0, 101] - 972*lambda_3[0, 104] - 486*lambda_3[0, 107] - 216*lambda_3[0, 109] - 27*lambda_3[0, 110] - 729*lambda_3[0, 113] - 2*lambda_3[0, 114] - 6*lambda_3[0, 116] - 3*lambda_3[0, 117] - 4*lambda_3[0, 118] - 2*lambda_3[0, 119] - 12*lambda_3[0, 120] - 12*lambda_3[0, 123] - 3*lambda_3[0, 124] - 36*lambda_3[0, 125] - 18*lambda_3[0, 126] - 18*lambda_3[0, 128] - 9*lambda_3[0, 129] - 8*lambda_3[0, 130] - 2*lambda_3[0, 131] - 54*lambda_3[0, 132] - 24*lambda_3[0, 135] - 3*lambda_3[0, 136] - 162*lambda_3[0, 137] - 81*lambda_3[0, 138] - 54*lambda_3[0, 140] - 27*lambda_3[0, 141] - 16*lambda_3[0, 142] - 2*lambda_3[0, 143] - 216*lambda_3[0, 144] - 48*lambda_3[0, 147] - 3*lambda_3[0, 148] - 648*lambda_3[0, 149] - 324*lambda_3[0, 150] - 162*lambda_3[0, 152] - 81*lambda_3[0, 153] - 4*lambda_3[0, 154] - 24*lambda_3[0, 155] - 12*lambda_3[0, 156] - 72*lambda_3[0, 158] - 18*lambda_3[0, 159] - 36*lambda_3[0, 162] - 9*lambda_3[0, 163] - 108*lambda_3[0, 164] - 54*lambda_3[0, 165] - 8*lambda_3[0, 166] - 4*lambda_3[0, 167] - 48*lambda_3[0, 168] - 12*lambda_3[0, 169] - 108*lambda_3[0, 170] - 54*lambda_3[0, 171] - 144*lambda_3[0, 174] - 18*lambda_3[0, 175] - 324*lambda_3[0, 176] - 81*lambda_3[0, 177] - 72*lambda_3[0, 180] - 9*lambda_3[0, 181] - 486*lambda_3[0, 182] - 243*lambda_3[0, 183] - 108*lambda_3[0, 186] - 27*lambda_3[0, 187] - 324*lambda_3[0, 188] - 162*lambda_3[0, 189] - 24*lambda_3[0, 190] - 216*lambda_3[0, 192] - 54*lambda_3[0, 193] - 6*lambda_3[0, 194] - 12*lambda_3[0, 195] - 6*lambda_3[0, 196] - 36*lambda_3[0, 197] - 18*lambda_3[0, 198] - 24*lambda_3[0, 199] - 6*lambda_3[0, 200] - 162*lambda_3[0, 201] - 54*lambda_3[0, 202] - 12*lambda_3[0, 203] - 72*lambda_3[0, 204] - 36*lambda_3[0, 205] - 36*lambda_3[0, 206] - 18*lambda_3[0, 207] - 108*lambda_3[0, 208] >= -B[0, 2]- objc]
	constraints += [lambda_3[0, 25] + 4*lambda_3[0, 32] + 6*lambda_3[0, 34] + 12*lambda_3[0, 44] + 27*lambda_3[0, 46] + 32*lambda_3[0, 56] + 108*lambda_3[0, 58] + 80*lambda_3[0, 68] + 405*lambda_3[0, 70] + 24*lambda_3[0, 79] + 72*lambda_3[0, 86] + 108*lambda_3[0, 88] + 192*lambda_3[0, 98] + 432*lambda_3[0, 100] + 324*lambda_3[0, 109] + lambda_3[0, 114] + 3*lambda_3[0, 116] + 4*lambda_3[0, 118] + lambda_3[0, 119] + 6*lambda_3[0, 120] + 12*lambda_3[0, 123] + 18*lambda_3[0, 125] + 9*lambda_3[0, 128] + 12*lambda_3[0, 130] + lambda_3[0, 131] + 27*lambda_3[0, 132] + 36*lambda_3[0, 135] + 81*lambda_3[0, 137] + 27*lambda_3[0, 140] + 32*lambda_3[0, 142] + lambda_3[0, 143] + 108*lambda_3[0, 144] + 96*lambda_3[0, 147] + 324*lambda_3[0, 149] + 81*lambda_3[0, 152] + 4*lambda_3[0, 154] + 24*lambda_3[0, 155] + 6*lambda_3[0, 156] + 72*lambda_3[0, 158] + 36*lambda_3[0, 162] + 54*lambda_3[0, 164] + 12*lambda_3[0, 166] + 4*lambda_3[0, 167] + 72*lambda_3[0, 168] + 6*lambda_3[0, 169] + 108*lambda_3[0, 170] + 27*lambda_3[0, 171] + 216*lambda_3[0, 174] + 324*lambda_3[0, 176] + 108*lambda_3[0, 180] + 243*lambda_3[0, 182] + 108*lambda_3[0, 186] + 162*lambda_3[0, 188] + 24*lambda_3[0, 190] + 216*lambda_3[0, 192] + 3*lambda_3[0, 194] + 12*lambda_3[0, 195] + 3*lambda_3[0, 196] + 18*lambda_3[0, 197] + 9*lambda_3[0, 198] + 36*lambda_3[0, 199] + 3*lambda_3[0, 200] + 81*lambda_3[0, 201] + 27*lambda_3[0, 202] + 12*lambda_3[0, 203] + 72*lambda_3[0, 204] + 18*lambda_3[0, 205] + 36*lambda_3[0, 206] + 9*lambda_3[0, 207] + 54*lambda_3[0, 208] <= -B[0, 9]+ objc]
	constraints += [lambda_3[0, 25] + 4*lambda_3[0, 32] + 6*lambda_3[0, 34] + 12*lambda_3[0, 44] + 27*lambda_3[0, 46] + 32*lambda_3[0, 56] + 108*lambda_3[0, 58] + 80*lambda_3[0, 68] + 405*lambda_3[0, 70] + 24*lambda_3[0, 79] + 72*lambda_3[0, 86] + 108*lambda_3[0, 88] + 192*lambda_3[0, 98] + 432*lambda_3[0, 100] + 324*lambda_3[0, 109] + lambda_3[0, 114] + 3*lambda_3[0, 116] + 4*lambda_3[0, 118] + lambda_3[0, 119] + 6*lambda_3[0, 120] + 12*lambda_3[0, 123] + 18*lambda_3[0, 125] + 9*lambda_3[0, 128] + 12*lambda_3[0, 130] + lambda_3[0, 131] + 27*lambda_3[0, 132] + 36*lambda_3[0, 135] + 81*lambda_3[0, 137] + 27*lambda_3[0, 140] + 32*lambda_3[0, 142] + lambda_3[0, 143] + 108*lambda_3[0, 144] + 96*lambda_3[0, 147] + 324*lambda_3[0, 149] + 81*lambda_3[0, 152] + 4*lambda_3[0, 154] + 24*lambda_3[0, 155] + 6*lambda_3[0, 156] + 72*lambda_3[0, 158] + 36*lambda_3[0, 162] + 54*lambda_3[0, 164] + 12*lambda_3[0, 166] + 4*lambda_3[0, 167] + 72*lambda_3[0, 168] + 6*lambda_3[0, 169] + 108*lambda_3[0, 170] + 27*lambda_3[0, 171] + 216*lambda_3[0, 174] + 324*lambda_3[0, 176] + 108*lambda_3[0, 180] + 243*lambda_3[0, 182] + 108*lambda_3[0, 186] + 162*lambda_3[0, 188] + 24*lambda_3[0, 190] + 216*lambda_3[0, 192] + 3*lambda_3[0, 194] + 12*lambda_3[0, 195] + 3*lambda_3[0, 196] + 18*lambda_3[0, 197] + 9*lambda_3[0, 198] + 36*lambda_3[0, 199] + 3*lambda_3[0, 200] + 81*lambda_3[0, 201] + 27*lambda_3[0, 202] + 12*lambda_3[0, 203] + 72*lambda_3[0, 204] + 18*lambda_3[0, 205] + 36*lambda_3[0, 206] + 9*lambda_3[0, 207] + 54*lambda_3[0, 208] >= -B[0, 9]- objc]
	constraints += [-lambda_3[0, 32] - 6*lambda_3[0, 44] - 24*lambda_3[0, 56] - 80*lambda_3[0, 68] - 6*lambda_3[0, 79] - 36*lambda_3[0, 86] - 27*lambda_3[0, 88] - 144*lambda_3[0, 98] - 108*lambda_3[0, 100] - 162*lambda_3[0, 109] - lambda_3[0, 118] - 3*lambda_3[0, 123] - 6*lambda_3[0, 130] - 18*lambda_3[0, 135] - 24*lambda_3[0, 142] - 72*lambda_3[0, 147] - lambda_3[0, 154] - 6*lambda_3[0, 155] - 18*lambda_3[0, 158] - 9*lambda_3[0, 162] - 6*lambda_3[0, 166] - lambda_3[0, 167] - 36*lambda_3[0, 168] - 27*lambda_3[0, 170] - 108*lambda_3[0, 174] - 81*lambda_3[0, 176] - 54*lambda_3[0, 180] - 27*lambda_3[0, 186] - 6*lambda_3[0, 190] - 54*lambda_3[0, 192] - 3*lambda_3[0, 195] - 18*lambda_3[0, 199] - 3*lambda_3[0, 203] - 18*lambda_3[0, 204] - 9*lambda_3[0, 206] == 0]
	constraints += [lambda_3[0, 44] + 8*lambda_3[0, 56] + 40*lambda_3[0, 68] + 6*lambda_3[0, 86] + 48*lambda_3[0, 98] + 27*lambda_3[0, 109] + lambda_3[0, 130] + 3*lambda_3[0, 135] + 8*lambda_3[0, 142] + 24*lambda_3[0, 147] + lambda_3[0, 166] + 6*lambda_3[0, 168] + 18*lambda_3[0, 174] + 9*lambda_3[0, 180] + 3*lambda_3[0, 199] == 0]
	constraints += [-lambda_3[0, 56] - 10*lambda_3[0, 68] - 6*lambda_3[0, 98] - lambda_3[0, 142] - 3*lambda_3[0, 147] == 0]
	constraints += [lambda_3[0, 68] == 0]
	constraints += [lambda_3[0, 26] + 2*lambda_3[0, 33] + 6*lambda_3[0, 35] + 3*lambda_3[0, 45] + 27*lambda_3[0, 47] + 4*lambda_3[0, 57] + 108*lambda_3[0, 59] + 5*lambda_3[0, 69] + 405*lambda_3[0, 71] + 12*lambda_3[0, 80] + 18*lambda_3[0, 87] + 54*lambda_3[0, 89] + 24*lambda_3[0, 99] + 216*lambda_3[0, 101] + 81*lambda_3[0, 110] + 2*lambda_3[0, 114] + 3*lambda_3[0, 117] + 4*lambda_3[0, 118] + 4*lambda_3[0, 119] + 12*lambda_3[0, 120] + 6*lambda_3[0, 124] + 18*lambda_3[0, 126] + 9*lambda_3[0, 129] + 8*lambda_3[0, 130] + 6*lambda_3[0, 131] + 54*lambda_3[0, 132] + 9*lambda_3[0, 136] + 81*lambda_3[0, 138] + 27*lambda_3[0, 141] + 16*lambda_3[0, 142] + 8*lambda_3[0, 143] + 216*lambda_3[0, 144] + 12*lambda_3[0, 148] + 324*lambda_3[0, 150] + 81*lambda_3[0, 153] + 8*lambda_3[0, 154] + 24*lambda_3[0, 155] + 24*lambda_3[0, 156] + 36*lambda_3[0, 159] + 18*lambda_3[0, 163] + 54*lambda_3[0, 165] + 16*lambda_3[0, 166] + 12*lambda_3[0, 167] + 48*lambda_3[0, 168] + 36*lambda_3[0, 169] + 108*lambda_3[0, 170] + 108*lambda_3[0, 171] + 54*lambda_3[0, 175] + 162*lambda_3[0, 177] + 27*lambda_3[0, 181] + 243*lambda_3[0, 183] + 54*lambda_3[0, 187] + 162*lambda_3[0, 189] + 48*lambda_3[0, 190] + 108*lambda_3[0, 193] + 6*lambda_3[0, 194] + 12*lambda_3[0, 195] + 12*lambda_3[0, 196] + 36*lambda_3[0, 197] + 18*lambda_3[0, 198] + 24*lambda_3[0, 199] + 18*lambda_3[0, 200] + 162*lambda_3[0, 201] + 54*lambda_3[0, 202] + 24*lambda_3[0, 203] + 72*lambda_3[0, 204] + 72*lambda_3[0, 205] + 36*lambda_3[0, 206] + 36*lambda_3[0, 207] + 108*lambda_3[0, 208] <= -B[0, 8]+ objc]
	constraints += [lambda_3[0, 26] + 2*lambda_3[0, 33] + 6*lambda_3[0, 35] + 3*lambda_3[0, 45] + 27*lambda_3[0, 47] + 4*lambda_3[0, 57] + 108*lambda_3[0, 59] + 5*lambda_3[0, 69] + 405*lambda_3[0, 71] + 12*lambda_3[0, 80] + 18*lambda_3[0, 87] + 54*lambda_3[0, 89] + 24*lambda_3[0, 99] + 216*lambda_3[0, 101] + 81*lambda_3[0, 110] + 2*lambda_3[0, 114] + 3*lambda_3[0, 117] + 4*lambda_3[0, 118] + 4*lambda_3[0, 119] + 12*lambda_3[0, 120] + 6*lambda_3[0, 124] + 18*lambda_3[0, 126] + 9*lambda_3[0, 129] + 8*lambda_3[0, 130] + 6*lambda_3[0, 131] + 54*lambda_3[0, 132] + 9*lambda_3[0, 136] + 81*lambda_3[0, 138] + 27*lambda_3[0, 141] + 16*lambda_3[0, 142] + 8*lambda_3[0, 143] + 216*lambda_3[0, 144] + 12*lambda_3[0, 148] + 324*lambda_3[0, 150] + 81*lambda_3[0, 153] + 8*lambda_3[0, 154] + 24*lambda_3[0, 155] + 24*lambda_3[0, 156] + 36*lambda_3[0, 159] + 18*lambda_3[0, 163] + 54*lambda_3[0, 165] + 16*lambda_3[0, 166] + 12*lambda_3[0, 167] + 48*lambda_3[0, 168] + 36*lambda_3[0, 169] + 108*lambda_3[0, 170] + 108*lambda_3[0, 171] + 54*lambda_3[0, 175] + 162*lambda_3[0, 177] + 27*lambda_3[0, 181] + 243*lambda_3[0, 183] + 54*lambda_3[0, 187] + 162*lambda_3[0, 189] + 48*lambda_3[0, 190] + 108*lambda_3[0, 193] + 6*lambda_3[0, 194] + 12*lambda_3[0, 195] + 12*lambda_3[0, 196] + 36*lambda_3[0, 197] + 18*lambda_3[0, 198] + 24*lambda_3[0, 199] + 18*lambda_3[0, 200] + 162*lambda_3[0, 201] + 54*lambda_3[0, 202] + 24*lambda_3[0, 203] + 72*lambda_3[0, 204] + 72*lambda_3[0, 205] + 36*lambda_3[0, 206] + 36*lambda_3[0, 207] + 108*lambda_3[0, 208] >= -B[0, 8]- objc]
	constraints += [-lambda_3[0, 114] - 4*lambda_3[0, 118] - 2*lambda_3[0, 119] - 6*lambda_3[0, 120] - 12*lambda_3[0, 130] - 3*lambda_3[0, 131] - 27*lambda_3[0, 132] - 32*lambda_3[0, 142] - 4*lambda_3[0, 143] - 108*lambda_3[0, 144] - 8*lambda_3[0, 154] - 24*lambda_3[0, 155] - 12*lambda_3[0, 156] - 24*lambda_3[0, 166] - 12*lambda_3[0, 167] - 72*lambda_3[0, 168] - 18*lambda_3[0, 169] - 108*lambda_3[0, 170] - 54*lambda_3[0, 171] - 48*lambda_3[0, 190] - 3*lambda_3[0, 194] - 12*lambda_3[0, 195] - 6*lambda_3[0, 196] - 18*lambda_3[0, 197] - 9*lambda_3[0, 198] - 36*lambda_3[0, 199] - 9*lambda_3[0, 200] - 81*lambda_3[0, 201] - 27*lambda_3[0, 202] - 24*lambda_3[0, 203] - 72*lambda_3[0, 204] - 36*lambda_3[0, 205] - 36*lambda_3[0, 206] - 18*lambda_3[0, 207] - 54*lambda_3[0, 208] == 0]
	constraints += [lambda_3[0, 118] + 6*lambda_3[0, 130] + 24*lambda_3[0, 142] + 2*lambda_3[0, 154] + 6*lambda_3[0, 155] + 12*lambda_3[0, 166] + 3*lambda_3[0, 167] + 36*lambda_3[0, 168] + 27*lambda_3[0, 170] + 12*lambda_3[0, 190] + 3*lambda_3[0, 195] + 18*lambda_3[0, 199] + 6*lambda_3[0, 203] + 18*lambda_3[0, 204] + 9*lambda_3[0, 206] == 0]
	constraints += [-lambda_3[0, 130] - 8*lambda_3[0, 142] - 2*lambda_3[0, 166] - 6*lambda_3[0, 168] - 3*lambda_3[0, 199] == 0]
	constraints += [lambda_3[0, 142] == 0]
	constraints += [-lambda_3[0, 33] - 3*lambda_3[0, 45] - 6*lambda_3[0, 57] - 10*lambda_3[0, 69] - 6*lambda_3[0, 80] - 18*lambda_3[0, 87] - 27*lambda_3[0, 89] - 36*lambda_3[0, 99] - 108*lambda_3[0, 101] - 81*lambda_3[0, 110] - 2*lambda_3[0, 119] - 3*lambda_3[0, 124] - 6*lambda_3[0, 131] - 9*lambda_3[0, 136] - 12*lambda_3[0, 143] - 18*lambda_3[0, 148] - 4*lambda_3[0, 154] - 12*lambda_3[0, 156] - 18*lambda_3[0, 159] - 9*lambda_3[0, 163] - 8*lambda_3[0, 166] - 12*lambda_3[0, 167] - 36*lambda_3[0, 169] - 54*lambda_3[0, 171] - 54*lambda_3[0, 175] - 81*lambda_3[0, 177] - 27*lambda_3[0, 181] - 27*lambda_3[0, 187] - 24*lambda_3[0, 190] - 54*lambda_3[0, 193] - 6*lambda_3[0, 196] - 18*lambda_3[0, 200] - 12*lambda_3[0, 203] - 36*lambda_3[0, 205] - 18*lambda_3[0, 207] == 0]
	constraints += [lambda_3[0, 119] + 3*lambda_3[0, 131] + 6*lambda_3[0, 143] + 4*lambda_3[0, 154] + 6*lambda_3[0, 156] + 12*lambda_3[0, 166] + 12*lambda_3[0, 167] + 18*lambda_3[0, 169] + 27*lambda_3[0, 171] + 24*lambda_3[0, 190] + 3*lambda_3[0, 196] + 9*lambda_3[0, 200] + 12*lambda_3[0, 203] + 18*lambda_3[0, 205] + 9*lambda_3[0, 207] == 0]
	constraints += [-lambda_3[0, 154] - 6*lambda_3[0, 166] - 3*lambda_3[0, 167] - 6*lambda_3[0, 190] - 3*lambda_3[0, 203] == 0]
	constraints += [lambda_3[0, 166] == 0]
	constraints += [lambda_3[0, 45] + 4*lambda_3[0, 57] + 10*lambda_3[0, 69] + 6*lambda_3[0, 87] + 24*lambda_3[0, 99] + 27*lambda_3[0, 110] + 2*lambda_3[0, 131] + 3*lambda_3[0, 136] + 8*lambda_3[0, 143] + 12*lambda_3[0, 148] + 4*lambda_3[0, 167] + 12*lambda_3[0, 169] + 18*lambda_3[0, 175] + 9*lambda_3[0, 181] + 6*lambda_3[0, 200] == 0]
	constraints += [-lambda_3[0, 131] - 4*lambda_3[0, 143] - 4*lambda_3[0, 167] - 6*lambda_3[0, 169] - 3*lambda_3[0, 200] == 0]
	constraints += [lambda_3[0, 167] == 0]
	constraints += [-lambda_3[0, 57] - 5*lambda_3[0, 69] - 6*lambda_3[0, 99] - 2*lambda_3[0, 143] - 3*lambda_3[0, 148] == 0]
	constraints += [lambda_3[0, 143] == 0]
	constraints += [lambda_3[0, 69] == 0]
	constraints += [lambda_3[0, 6] + 9*lambda_3[0, 10] + 54*lambda_3[0, 14] + 270*lambda_3[0, 18] + 1215*lambda_3[0, 22] + 2*lambda_3[0, 34] + lambda_3[0, 35] + 3*lambda_3[0, 38] + 18*lambda_3[0, 46] + 9*lambda_3[0, 47] + 27*lambda_3[0, 50] + 108*lambda_3[0, 58] + 54*lambda_3[0, 59] + 162*lambda_3[0, 62] + 540*lambda_3[0, 70] + 270*lambda_3[0, 71] + 810*lambda_3[0, 74] + 4*lambda_3[0, 79] + lambda_3[0, 80] + 9*lambda_3[0, 83] + 8*lambda_3[0, 86] + lambda_3[0, 87] + 36*lambda_3[0, 88] + 9*lambda_3[0, 89] + 81*lambda_3[0, 92] + 27*lambda_3[0, 95] + 16*lambda_3[0, 98] + lambda_3[0, 99] + 216*lambda_3[0, 100] + 54*lambda_3[0, 101] + 486*lambda_3[0, 104] + 81*lambda_3[0, 107] + 72*lambda_3[0, 109] + 9*lambda_3[0, 110] + 243*lambda_3[0, 113] + 2*lambda_3[0, 120] + 6*lambda_3[0, 125] + 3*lambda_3[0, 126] + 18*lambda_3[0, 132] + 54*lambda_3[0, 137] + 27*lambda_3[0, 138] + 108*lambda_3[0, 144] + 324*lambda_3[0, 149] + 162*lambda_3[0, 150] + 4*lambda_3[0, 155] + 2*lambda_3[0, 156] + 12*lambda_3[0, 158] + 3*lambda_3[0, 159] + 18*lambda_3[0, 164] + 9*lambda_3[0, 165] + 8*lambda_3[0, 168] + 2*lambda_3[0, 169] + 36*lambda_3[0, 170] + 18*lambda_3[0, 171] + 24*lambda_3[0, 174] + 3*lambda_3[0, 175] + 108*lambda_3[0, 176] + 27*lambda_3[0, 177] + 162*lambda_3[0, 182] + 81*lambda_3[0, 183] + 54*lambda_3[0, 188] + 27*lambda_3[0, 189] + 4*lambda_3[0, 190] + 36*lambda_3[0, 192] + 9*lambda_3[0, 193] + 6*lambda_3[0, 197] + 54*lambda_3[0, 201] + 12*lambda_3[0, 204] + 6*lambda_3[0, 205] + 18*lambda_3[0, 208] <= -B[0, 12] - 0.01+ objc]
	constraints += [lambda_3[0, 6] + 9*lambda_3[0, 10] + 54*lambda_3[0, 14] + 270*lambda_3[0, 18] + 1215*lambda_3[0, 22] + 2*lambda_3[0, 34] + lambda_3[0, 35] + 3*lambda_3[0, 38] + 18*lambda_3[0, 46] + 9*lambda_3[0, 47] + 27*lambda_3[0, 50] + 108*lambda_3[0, 58] + 54*lambda_3[0, 59] + 162*lambda_3[0, 62] + 540*lambda_3[0, 70] + 270*lambda_3[0, 71] + 810*lambda_3[0, 74] + 4*lambda_3[0, 79] + lambda_3[0, 80] + 9*lambda_3[0, 83] + 8*lambda_3[0, 86] + lambda_3[0, 87] + 36*lambda_3[0, 88] + 9*lambda_3[0, 89] + 81*lambda_3[0, 92] + 27*lambda_3[0, 95] + 16*lambda_3[0, 98] + lambda_3[0, 99] + 216*lambda_3[0, 100] + 54*lambda_3[0, 101] + 486*lambda_3[0, 104] + 81*lambda_3[0, 107] + 72*lambda_3[0, 109] + 9*lambda_3[0, 110] + 243*lambda_3[0, 113] + 2*lambda_3[0, 120] + 6*lambda_3[0, 125] + 3*lambda_3[0, 126] + 18*lambda_3[0, 132] + 54*lambda_3[0, 137] + 27*lambda_3[0, 138] + 108*lambda_3[0, 144] + 324*lambda_3[0, 149] + 162*lambda_3[0, 150] + 4*lambda_3[0, 155] + 2*lambda_3[0, 156] + 12*lambda_3[0, 158] + 3*lambda_3[0, 159] + 18*lambda_3[0, 164] + 9*lambda_3[0, 165] + 8*lambda_3[0, 168] + 2*lambda_3[0, 169] + 36*lambda_3[0, 170] + 18*lambda_3[0, 171] + 24*lambda_3[0, 174] + 3*lambda_3[0, 175] + 108*lambda_3[0, 176] + 27*lambda_3[0, 177] + 162*lambda_3[0, 182] + 81*lambda_3[0, 183] + 54*lambda_3[0, 188] + 27*lambda_3[0, 189] + 4*lambda_3[0, 190] + 36*lambda_3[0, 192] + 9*lambda_3[0, 193] + 6*lambda_3[0, 197] + 54*lambda_3[0, 201] + 12*lambda_3[0, 204] + 6*lambda_3[0, 205] + 18*lambda_3[0, 208] >= -B[0, 12] - 0.01- objc]
	constraints += [-lambda_3[0, 34] - 9*lambda_3[0, 46] - 54*lambda_3[0, 58] - 270*lambda_3[0, 70] - 4*lambda_3[0, 79] - 12*lambda_3[0, 86] - 36*lambda_3[0, 88] - 32*lambda_3[0, 98] - 216*lambda_3[0, 100] - 108*lambda_3[0, 109] - lambda_3[0, 120] - 3*lambda_3[0, 125] - 9*lambda_3[0, 132] - 27*lambda_3[0, 137] - 54*lambda_3[0, 144] - 162*lambda_3[0, 149] - 4*lambda_3[0, 155] - lambda_3[0, 156] - 12*lambda_3[0, 158] - 9*lambda_3[0, 164] - 12*lambda_3[0, 168] - lambda_3[0, 169] - 36*lambda_3[0, 170] - 9*lambda_3[0, 171] - 36*lambda_3[0, 174] - 108*lambda_3[0, 176] - 81*lambda_3[0, 182] - 27*lambda_3[0, 188] - 4*lambda_3[0, 190] - 36*lambda_3[0, 192] - 3*lambda_3[0, 197] - 27*lambda_3[0, 201] - 12*lambda_3[0, 204] - 3*lambda_3[0, 205] - 9*lambda_3[0, 208] == 0]
	constraints += [lambda_3[0, 79] + 6*lambda_3[0, 86] + 9*lambda_3[0, 88] + 24*lambda_3[0, 98] + 54*lambda_3[0, 100] + 54*lambda_3[0, 109] + lambda_3[0, 155] + 3*lambda_3[0, 158] + 6*lambda_3[0, 168] + 9*lambda_3[0, 170] + 18*lambda_3[0, 174] + 27*lambda_3[0, 176] + lambda_3[0, 190] + 9*lambda_3[0, 192] + 3*lambda_3[0, 204] == 0]
	constraints += [-lambda_3[0, 86] - 8*lambda_3[0, 98] - 9*lambda_3[0, 109] - lambda_3[0, 168] - 3*lambda_3[0, 174] == 0]
	constraints += [lambda_3[0, 98] == 0]
	constraints += [-lambda_3[0, 35] - 9*lambda_3[0, 47] - 54*lambda_3[0, 59] - 270*lambda_3[0, 71] - 2*lambda_3[0, 80] - 3*lambda_3[0, 87] - 18*lambda_3[0, 89] - 4*lambda_3[0, 99] - 108*lambda_3[0, 101] - 27*lambda_3[0, 110] - 2*lambda_3[0, 120] - 3*lambda_3[0, 126] - 18*lambda_3[0, 132] - 27*lambda_3[0, 138] - 108*lambda_3[0, 144] - 162*lambda_3[0, 150] - 4*lambda_3[0, 155] - 4*lambda_3[0, 156] - 6*lambda_3[0, 159] - 9*lambda_3[0, 165] - 8*lambda_3[0, 168] - 6*lambda_3[0, 169] - 36*lambda_3[0, 170] - 36*lambda_3[0, 171] - 9*lambda_3[0, 175] - 54*lambda_3[0, 177] - 81*lambda_3[0, 183] - 27*lambda_3[0, 189] - 8*lambda_3[0, 190] - 18*lambda_3[0, 193] - 6*lambda_3[0, 197] - 54*lambda_3[0, 201] - 12*lambda_3[0, 204] - 12*lambda_3[0, 205] - 18*lambda_3[0, 208] == 0]
	constraints += [lambda_3[0, 120] + 9*lambda_3[0, 132] + 54*lambda_3[0, 144] + 4*lambda_3[0, 155] + 2*lambda_3[0, 156] + 12*lambda_3[0, 168] + 3*lambda_3[0, 169] + 36*lambda_3[0, 170] + 18*lambda_3[0, 171] + 8*lambda_3[0, 190] + 3*lambda_3[0, 197] + 27*lambda_3[0, 201] + 12*lambda_3[0, 204] + 6*lambda_3[0, 205] + 9*lambda_3[0, 208] == 0]
	constraints += [-lambda_3[0, 155] - 6*lambda_3[0, 168] - 9*lambda_3[0, 170] - 2*lambda_3[0, 190] - 3*lambda_3[0, 204] == 0]
	constraints += [lambda_3[0, 168] == 0]
	constraints += [lambda_3[0, 80] + 3*lambda_3[0, 87] + 9*lambda_3[0, 89] + 6*lambda_3[0, 99] + 54*lambda_3[0, 101] + 27*lambda_3[0, 110] + 2*lambda_3[0, 156] + 3*lambda_3[0, 159] + 6*lambda_3[0, 169] + 18*lambda_3[0, 171] + 9*lambda_3[0, 175] + 27*lambda_3[0, 177] + 4*lambda_3[0, 190] + 9*lambda_3[0, 193] + 6*lambda_3[0, 205] == 0]
	constraints += [-lambda_3[0, 156] - 3*lambda_3[0, 169] - 9*lambda_3[0, 171] - 4*lambda_3[0, 190] - 3*lambda_3[0, 205] == 0]
	constraints += [lambda_3[0, 190] == 0]
	constraints += [-lambda_3[0, 87] - 4*lambda_3[0, 99] - 9*lambda_3[0, 110] - 2*lambda_3[0, 169] - 3*lambda_3[0, 175] == 0]
	constraints += [lambda_3[0, 169] == 0]
	constraints += [lambda_3[0, 99] == 0]
	constraints += [-lambda_3[0, 10] - 12*lambda_3[0, 14] - 90*lambda_3[0, 18] - 540*lambda_3[0, 22] - 2*lambda_3[0, 46] - lambda_3[0, 47] - 3*lambda_3[0, 50] - 24*lambda_3[0, 58] - 12*lambda_3[0, 59] - 36*lambda_3[0, 62] - 180*lambda_3[0, 70] - 90*lambda_3[0, 71] - 270*lambda_3[0, 74] - 4*lambda_3[0, 88] - lambda_3[0, 89] - 9*lambda_3[0, 92] - 48*lambda_3[0, 100] - 12*lambda_3[0, 101] - 108*lambda_3[0, 104] - 8*lambda_3[0, 109] - lambda_3[0, 110] - 27*lambda_3[0, 113] - 2*lambda_3[0, 132] - 6*lambda_3[0, 137] - 3*lambda_3[0, 138] - 24*lambda_3[0, 144] - 72*lambda_3[0, 149] - 36*lambda_3[0, 150] - 4*lambda_3[0, 170] - 2*lambda_3[0, 171] - 12*lambda_3[0, 176] - 3*lambda_3[0, 177] - 18*lambda_3[0, 182] - 9*lambda_3[0, 183] - 6*lambda_3[0, 201] == 0]
	constraints += [lambda_3[0, 46] + 12*lambda_3[0, 58] + 90*lambda_3[0, 70] + 4*lambda_3[0, 88] + 48*lambda_3[0, 100] + 12*lambda_3[0, 109] + lambda_3[0, 132] + 3*lambda_3[0, 137] + 12*lambda_3[0, 144] + 36*lambda_3[0, 149] + 4*lambda_3[0, 170] + lambda_3[0, 171] + 12*lambda_3[0, 176] + 9*lambda_3[0, 182] + 3*lambda_3[0, 201] == 0]
	constraints += [-lambda_3[0, 88] - 12*lambda_3[0, 100] - 6*lambda_3[0, 109] - lambda_3[0, 170] - 3*lambda_3[0, 176] == 0]
	constraints += [lambda_3[0, 109] == 0]
	constraints += [lambda_3[0, 47] + 12*lambda_3[0, 59] + 90*lambda_3[0, 71] + 2*lambda_3[0, 89] + 24*lambda_3[0, 101] + 3*lambda_3[0, 110] + 2*lambda_3[0, 132] + 3*lambda_3[0, 138] + 24*lambda_3[0, 144] + 36*lambda_3[0, 150] + 4*lambda_3[0, 170] + 4*lambda_3[0, 171] + 6*lambda_3[0, 177] + 9*lambda_3[0, 183] + 6*lambda_3[0, 201] == 0]
	constraints += [-lambda_3[0, 132] - 12*lambda_3[0, 144] - 4*lambda_3[0, 170] - 2*lambda_3[0, 171] - 3*lambda_3[0, 201] == 0]
	constraints += [lambda_3[0, 170] == 0]
	constraints += [-lambda_3[0, 89] - 12*lambda_3[0, 101] - 3*lambda_3[0, 110] - 2*lambda_3[0, 171] - 3*lambda_3[0, 177] == 0]
	constraints += [lambda_3[0, 171] == 0]
	constraints += [lambda_3[0, 110] == 0]
	constraints += [lambda_3[0, 14] + 15*lambda_3[0, 18] + 135*lambda_3[0, 22] + 2*lambda_3[0, 58] + lambda_3[0, 59] + 3*lambda_3[0, 62] + 30*lambda_3[0, 70] + 15*lambda_3[0, 71] + 45*lambda_3[0, 74] + 4*lambda_3[0, 100] + lambda_3[0, 101] + 9*lambda_3[0, 104] + 2*lambda_3[0, 144] + 6*lambda_3[0, 149] + 3*lambda_3[0, 150] <= -B[0, 16]+ objc]
	constraints += [lambda_3[0, 14] + 15*lambda_3[0, 18] + 135*lambda_3[0, 22] + 2*lambda_3[0, 58] + lambda_3[0, 59] + 3*lambda_3[0, 62] + 30*lambda_3[0, 70] + 15*lambda_3[0, 71] + 45*lambda_3[0, 74] + 4*lambda_3[0, 100] + lambda_3[0, 101] + 9*lambda_3[0, 104] + 2*lambda_3[0, 144] + 6*lambda_3[0, 149] + 3*lambda_3[0, 150] >= -B[0, 16]- objc]
	constraints += [-lambda_3[0, 58] - 15*lambda_3[0, 70] - 4*lambda_3[0, 100] - lambda_3[0, 144] - 3*lambda_3[0, 149] == 0]
	constraints += [lambda_3[0, 100] == 0]
	constraints += [-lambda_3[0, 59] - 15*lambda_3[0, 71] - 2*lambda_3[0, 101] - 2*lambda_3[0, 144] - 3*lambda_3[0, 150] == 0]
	constraints += [lambda_3[0, 144] == 0]
	constraints += [lambda_3[0, 101] == 0]
	constraints += [-lambda_3[0, 18] - 18*lambda_3[0, 22] - 2*lambda_3[0, 70] - lambda_3[0, 71] - 3*lambda_3[0, 74] == 0]
	constraints += [lambda_3[0, 70] == 0]
	constraints += [lambda_3[0, 71] == 0]
	constraints += [lambda_3[0, 22] <= -B[0, 20]+ objc]
	constraints += [lambda_3[0, 22] >= -B[0, 20]- objc]
	constraints += [-lambda_3[0, 3] - 6*lambda_3[0, 7] - 27*lambda_3[0, 11] - 108*lambda_3[0, 15] - 405*lambda_3[0, 19] - 1458*lambda_3[0, 23] - 2*lambda_3[0, 27] - lambda_3[0, 28] - 3*lambda_3[0, 29] - 4*lambda_3[0, 36] - lambda_3[0, 37] - 9*lambda_3[0, 38] - 12*lambda_3[0, 39] - 6*lambda_3[0, 40] - 18*lambda_3[0, 41] - 8*lambda_3[0, 48] - lambda_3[0, 49] - 27*lambda_3[0, 50] - 54*lambda_3[0, 51] - 27*lambda_3[0, 52] - 81*lambda_3[0, 53] - 16*lambda_3[0, 60] - lambda_3[0, 61] - 81*lambda_3[0, 62] - 216*lambda_3[0, 63] - 108*lambda_3[0, 64] - 324*lambda_3[0, 65] - 32*lambda_3[0, 72] - lambda_3[0, 73] - 243*lambda_3[0, 74] - 810*lambda_3[0, 75] - 405*lambda_3[0, 76] - 1215*lambda_3[0, 77] - 24*lambda_3[0, 81] - 6*lambda_3[0, 82] - 54*lambda_3[0, 83] - 48*lambda_3[0, 90] - 6*lambda_3[0, 91] - 162*lambda_3[0, 92] - 108*lambda_3[0, 93] - 27*lambda_3[0, 94] - 243*lambda_3[0, 95] - 96*lambda_3[0, 102] - 6*lambda_3[0, 103] - 486*lambda_3[0, 104] - 432*lambda_3[0, 105] - 108*lambda_3[0, 106] - 972*lambda_3[0, 107] - 216*lambda_3[0, 111] - 27*lambda_3[0, 112] - 729*lambda_3[0, 113] - 2*lambda_3[0, 115] - 6*lambda_3[0, 116] - 3*lambda_3[0, 117] - 4*lambda_3[0, 121] - 2*lambda_3[0, 122] - 12*lambda_3[0, 123] - 3*lambda_3[0, 124] - 18*lambda_3[0, 125] - 9*lambda_3[0, 126] - 12*lambda_3[0, 127] - 36*lambda_3[0, 128] - 18*lambda_3[0, 129] - 8*lambda_3[0, 133] - 2*lambda_3[0, 134] - 24*lambda_3[0, 135] - 3*lambda_3[0, 136] - 54*lambda_3[0, 137] - 27*lambda_3[0, 138] - 54*lambda_3[0, 139] - 162*lambda_3[0, 140] - 81*lambda_3[0, 141] - 16*lambda_3[0, 145] - 2*lambda_3[0, 146] - 48*lambda_3[0, 147] - 3*lambda_3[0, 148] - 162*lambda_3[0, 149] - 81*lambda_3[0, 150] - 216*lambda_3[0, 151] - 648*lambda_3[0, 152] - 324*lambda_3[0, 153] - 4*lambda_3[0, 157] - 36*lambda_3[0, 158] - 9*lambda_3[0, 159] - 24*lambda_3[0, 160] - 12*lambda_3[0, 161] - 72*lambda_3[0, 162] - 18*lambda_3[0, 163] - 108*lambda_3[0, 164] - 54*lambda_3[0, 165] - 8*lambda_3[0, 172] - 4*lambda_3[0, 173] - 72*lambda_3[0, 174] - 9*lambda_3[0, 175] - 108*lambda_3[0, 176] - 27*lambda_3[0, 177] - 48*lambda_3[0, 178] - 12*lambda_3[0, 179] - 144*lambda_3[0, 180] - 18*lambda_3[0, 181] - 324*lambda_3[0, 182] - 162*lambda_3[0, 183] - 108*lambda_3[0, 184] - 54*lambda_3[0, 185] - 324*lambda_3[0, 186] - 81*lambda_3[0, 187] - 486*lambda_3[0, 188] - 243*lambda_3[0, 189] - 24*lambda_3[0, 191] - 216*lambda_3[0, 192] - 54*lambda_3[0, 193] - 6*lambda_3[0, 194] - 12*lambda_3[0, 195] - 6*lambda_3[0, 196] - 18*lambda_3[0, 197] - 36*lambda_3[0, 198] - 24*lambda_3[0, 199] - 6*lambda_3[0, 200] - 54*lambda_3[0, 201] - 162*lambda_3[0, 202] - 12*lambda_3[0, 203] - 36*lambda_3[0, 204] - 18*lambda_3[0, 205] - 72*lambda_3[0, 206] - 36*lambda_3[0, 207] - 108*lambda_3[0, 208] <= -B[0, 1]+ objc]
	constraints += [-lambda_3[0, 3] - 6*lambda_3[0, 7] - 27*lambda_3[0, 11] - 108*lambda_3[0, 15] - 405*lambda_3[0, 19] - 1458*lambda_3[0, 23] - 2*lambda_3[0, 27] - lambda_3[0, 28] - 3*lambda_3[0, 29] - 4*lambda_3[0, 36] - lambda_3[0, 37] - 9*lambda_3[0, 38] - 12*lambda_3[0, 39] - 6*lambda_3[0, 40] - 18*lambda_3[0, 41] - 8*lambda_3[0, 48] - lambda_3[0, 49] - 27*lambda_3[0, 50] - 54*lambda_3[0, 51] - 27*lambda_3[0, 52] - 81*lambda_3[0, 53] - 16*lambda_3[0, 60] - lambda_3[0, 61] - 81*lambda_3[0, 62] - 216*lambda_3[0, 63] - 108*lambda_3[0, 64] - 324*lambda_3[0, 65] - 32*lambda_3[0, 72] - lambda_3[0, 73] - 243*lambda_3[0, 74] - 810*lambda_3[0, 75] - 405*lambda_3[0, 76] - 1215*lambda_3[0, 77] - 24*lambda_3[0, 81] - 6*lambda_3[0, 82] - 54*lambda_3[0, 83] - 48*lambda_3[0, 90] - 6*lambda_3[0, 91] - 162*lambda_3[0, 92] - 108*lambda_3[0, 93] - 27*lambda_3[0, 94] - 243*lambda_3[0, 95] - 96*lambda_3[0, 102] - 6*lambda_3[0, 103] - 486*lambda_3[0, 104] - 432*lambda_3[0, 105] - 108*lambda_3[0, 106] - 972*lambda_3[0, 107] - 216*lambda_3[0, 111] - 27*lambda_3[0, 112] - 729*lambda_3[0, 113] - 2*lambda_3[0, 115] - 6*lambda_3[0, 116] - 3*lambda_3[0, 117] - 4*lambda_3[0, 121] - 2*lambda_3[0, 122] - 12*lambda_3[0, 123] - 3*lambda_3[0, 124] - 18*lambda_3[0, 125] - 9*lambda_3[0, 126] - 12*lambda_3[0, 127] - 36*lambda_3[0, 128] - 18*lambda_3[0, 129] - 8*lambda_3[0, 133] - 2*lambda_3[0, 134] - 24*lambda_3[0, 135] - 3*lambda_3[0, 136] - 54*lambda_3[0, 137] - 27*lambda_3[0, 138] - 54*lambda_3[0, 139] - 162*lambda_3[0, 140] - 81*lambda_3[0, 141] - 16*lambda_3[0, 145] - 2*lambda_3[0, 146] - 48*lambda_3[0, 147] - 3*lambda_3[0, 148] - 162*lambda_3[0, 149] - 81*lambda_3[0, 150] - 216*lambda_3[0, 151] - 648*lambda_3[0, 152] - 324*lambda_3[0, 153] - 4*lambda_3[0, 157] - 36*lambda_3[0, 158] - 9*lambda_3[0, 159] - 24*lambda_3[0, 160] - 12*lambda_3[0, 161] - 72*lambda_3[0, 162] - 18*lambda_3[0, 163] - 108*lambda_3[0, 164] - 54*lambda_3[0, 165] - 8*lambda_3[0, 172] - 4*lambda_3[0, 173] - 72*lambda_3[0, 174] - 9*lambda_3[0, 175] - 108*lambda_3[0, 176] - 27*lambda_3[0, 177] - 48*lambda_3[0, 178] - 12*lambda_3[0, 179] - 144*lambda_3[0, 180] - 18*lambda_3[0, 181] - 324*lambda_3[0, 182] - 162*lambda_3[0, 183] - 108*lambda_3[0, 184] - 54*lambda_3[0, 185] - 324*lambda_3[0, 186] - 81*lambda_3[0, 187] - 486*lambda_3[0, 188] - 243*lambda_3[0, 189] - 24*lambda_3[0, 191] - 216*lambda_3[0, 192] - 54*lambda_3[0, 193] - 6*lambda_3[0, 194] - 12*lambda_3[0, 195] - 6*lambda_3[0, 196] - 18*lambda_3[0, 197] - 36*lambda_3[0, 198] - 24*lambda_3[0, 199] - 6*lambda_3[0, 200] - 54*lambda_3[0, 201] - 162*lambda_3[0, 202] - 12*lambda_3[0, 203] - 36*lambda_3[0, 204] - 18*lambda_3[0, 205] - 72*lambda_3[0, 206] - 36*lambda_3[0, 207] - 108*lambda_3[0, 208] >= -B[0, 1]- objc]
	constraints += [lambda_3[0, 27] + 4*lambda_3[0, 36] + 6*lambda_3[0, 39] + 12*lambda_3[0, 48] + 27*lambda_3[0, 51] + 32*lambda_3[0, 60] + 108*lambda_3[0, 63] + 80*lambda_3[0, 72] + 405*lambda_3[0, 75] + 24*lambda_3[0, 81] + 72*lambda_3[0, 90] + 108*lambda_3[0, 93] + 192*lambda_3[0, 102] + 432*lambda_3[0, 105] + 324*lambda_3[0, 111] + lambda_3[0, 115] + 3*lambda_3[0, 116] + 4*lambda_3[0, 121] + lambda_3[0, 122] + 12*lambda_3[0, 123] + 9*lambda_3[0, 125] + 6*lambda_3[0, 127] + 18*lambda_3[0, 128] + 12*lambda_3[0, 133] + lambda_3[0, 134] + 36*lambda_3[0, 135] + 27*lambda_3[0, 137] + 27*lambda_3[0, 139] + 81*lambda_3[0, 140] + 32*lambda_3[0, 145] + lambda_3[0, 146] + 96*lambda_3[0, 147] + 81*lambda_3[0, 149] + 108*lambda_3[0, 151] + 324*lambda_3[0, 152] + 4*lambda_3[0, 157] + 36*lambda_3[0, 158] + 24*lambda_3[0, 160] + 6*lambda_3[0, 161] + 72*lambda_3[0, 162] + 54*lambda_3[0, 164] + 12*lambda_3[0, 172] + 4*lambda_3[0, 173] + 108*lambda_3[0, 174] + 108*lambda_3[0, 176] + 72*lambda_3[0, 178] + 6*lambda_3[0, 179] + 216*lambda_3[0, 180] + 162*lambda_3[0, 182] + 108*lambda_3[0, 184] + 27*lambda_3[0, 185] + 324*lambda_3[0, 186] + 243*lambda_3[0, 188] + 24*lambda_3[0, 191] + 216*lambda_3[0, 192] + 3*lambda_3[0, 194] + 12*lambda_3[0, 195] + 3*lambda_3[0, 196] + 9*lambda_3[0, 197] + 18*lambda_3[0, 198] + 36*lambda_3[0, 199] + 3*lambda_3[0, 200] + 27*lambda_3[0, 201] + 81*lambda_3[0, 202] + 12*lambda_3[0, 203] + 36*lambda_3[0, 204] + 9*lambda_3[0, 205] + 72*lambda_3[0, 206] + 18*lambda_3[0, 207] + 54*lambda_3[0, 208] <= -B[0, 7]+ objc]
	constraints += [lambda_3[0, 27] + 4*lambda_3[0, 36] + 6*lambda_3[0, 39] + 12*lambda_3[0, 48] + 27*lambda_3[0, 51] + 32*lambda_3[0, 60] + 108*lambda_3[0, 63] + 80*lambda_3[0, 72] + 405*lambda_3[0, 75] + 24*lambda_3[0, 81] + 72*lambda_3[0, 90] + 108*lambda_3[0, 93] + 192*lambda_3[0, 102] + 432*lambda_3[0, 105] + 324*lambda_3[0, 111] + lambda_3[0, 115] + 3*lambda_3[0, 116] + 4*lambda_3[0, 121] + lambda_3[0, 122] + 12*lambda_3[0, 123] + 9*lambda_3[0, 125] + 6*lambda_3[0, 127] + 18*lambda_3[0, 128] + 12*lambda_3[0, 133] + lambda_3[0, 134] + 36*lambda_3[0, 135] + 27*lambda_3[0, 137] + 27*lambda_3[0, 139] + 81*lambda_3[0, 140] + 32*lambda_3[0, 145] + lambda_3[0, 146] + 96*lambda_3[0, 147] + 81*lambda_3[0, 149] + 108*lambda_3[0, 151] + 324*lambda_3[0, 152] + 4*lambda_3[0, 157] + 36*lambda_3[0, 158] + 24*lambda_3[0, 160] + 6*lambda_3[0, 161] + 72*lambda_3[0, 162] + 54*lambda_3[0, 164] + 12*lambda_3[0, 172] + 4*lambda_3[0, 173] + 108*lambda_3[0, 174] + 108*lambda_3[0, 176] + 72*lambda_3[0, 178] + 6*lambda_3[0, 179] + 216*lambda_3[0, 180] + 162*lambda_3[0, 182] + 108*lambda_3[0, 184] + 27*lambda_3[0, 185] + 324*lambda_3[0, 186] + 243*lambda_3[0, 188] + 24*lambda_3[0, 191] + 216*lambda_3[0, 192] + 3*lambda_3[0, 194] + 12*lambda_3[0, 195] + 3*lambda_3[0, 196] + 9*lambda_3[0, 197] + 18*lambda_3[0, 198] + 36*lambda_3[0, 199] + 3*lambda_3[0, 200] + 27*lambda_3[0, 201] + 81*lambda_3[0, 202] + 12*lambda_3[0, 203] + 36*lambda_3[0, 204] + 9*lambda_3[0, 205] + 72*lambda_3[0, 206] + 18*lambda_3[0, 207] + 54*lambda_3[0, 208] >= -B[0, 7]- objc]
	constraints += [-lambda_3[0, 36] - 6*lambda_3[0, 48] - 24*lambda_3[0, 60] - 80*lambda_3[0, 72] - 6*lambda_3[0, 81] - 36*lambda_3[0, 90] - 27*lambda_3[0, 93] - 144*lambda_3[0, 102] - 108*lambda_3[0, 105] - 162*lambda_3[0, 111] - lambda_3[0, 121] - 3*lambda_3[0, 123] - 6*lambda_3[0, 133] - 18*lambda_3[0, 135] - 24*lambda_3[0, 145] - 72*lambda_3[0, 147] - lambda_3[0, 157] - 9*lambda_3[0, 158] - 6*lambda_3[0, 160] - 18*lambda_3[0, 162] - 6*lambda_3[0, 172] - lambda_3[0, 173] - 54*lambda_3[0, 174] - 27*lambda_3[0, 176] - 36*lambda_3[0, 178] - 108*lambda_3[0, 180] - 27*lambda_3[0, 184] - 81*lambda_3[0, 186] - 6*lambda_3[0, 191] - 54*lambda_3[0, 192] - 3*lambda_3[0, 195] - 18*lambda_3[0, 199] - 3*lambda_3[0, 203] - 9*lambda_3[0, 204] - 18*lambda_3[0, 206] == 0]
	constraints += [lambda_3[0, 48] + 8*lambda_3[0, 60] + 40*lambda_3[0, 72] + 6*lambda_3[0, 90] + 48*lambda_3[0, 102] + 27*lambda_3[0, 111] + lambda_3[0, 133] + 3*lambda_3[0, 135] + 8*lambda_3[0, 145] + 24*lambda_3[0, 147] + lambda_3[0, 172] + 9*lambda_3[0, 174] + 6*lambda_3[0, 178] + 18*lambda_3[0, 180] + 3*lambda_3[0, 199] == 0]
	constraints += [-lambda_3[0, 60] - 10*lambda_3[0, 72] - 6*lambda_3[0, 102] - lambda_3[0, 145] - 3*lambda_3[0, 147] == 0]
	constraints += [lambda_3[0, 72] == 0]
	constraints += [lambda_3[0, 28] + 2*lambda_3[0, 37] + 6*lambda_3[0, 40] + 3*lambda_3[0, 49] + 27*lambda_3[0, 52] + 4*lambda_3[0, 61] + 108*lambda_3[0, 64] + 5*lambda_3[0, 73] + 405*lambda_3[0, 76] + 12*lambda_3[0, 82] + 18*lambda_3[0, 91] + 54*lambda_3[0, 94] + 24*lambda_3[0, 103] + 216*lambda_3[0, 106] + 81*lambda_3[0, 112] + 2*lambda_3[0, 115] + 3*lambda_3[0, 117] + 4*lambda_3[0, 121] + 4*lambda_3[0, 122] + 6*lambda_3[0, 124] + 9*lambda_3[0, 126] + 12*lambda_3[0, 127] + 18*lambda_3[0, 129] + 8*lambda_3[0, 133] + 6*lambda_3[0, 134] + 9*lambda_3[0, 136] + 27*lambda_3[0, 138] + 54*lambda_3[0, 139] + 81*lambda_3[0, 141] + 16*lambda_3[0, 145] + 8*lambda_3[0, 146] + 12*lambda_3[0, 148] + 81*lambda_3[0, 150] + 216*lambda_3[0, 151] + 324*lambda_3[0, 153] + 8*lambda_3[0, 157] + 18*lambda_3[0, 159] + 24*lambda_3[0, 160] + 24*lambda_3[0, 161] + 36*lambda_3[0, 163] + 54*lambda_3[0, 165] + 16*lambda_3[0, 172] + 12*lambda_3[0, 173] + 27*lambda_3[0, 175] + 54*lambda_3[0, 177] + 48*lambda_3[0, 178] + 36*lambda_3[0, 179] + 54*lambda_3[0, 181] + 162*lambda_3[0, 183] + 108*lambda_3[0, 184] + 108*lambda_3[0, 185] + 162*lambda_3[0, 187] + 243*lambda_3[0, 189] + 48*lambda_3[0, 191] + 108*lambda_3[0, 193] + 6*lambda_3[0, 194] + 12*lambda_3[0, 195] + 12*lambda_3[0, 196] + 18*lambda_3[0, 197] + 36*lambda_3[0, 198] + 24*lambda_3[0, 199] + 18*lambda_3[0, 200] + 54*lambda_3[0, 201] + 162*lambda_3[0, 202] + 24*lambda_3[0, 203] + 36*lambda_3[0, 204] + 36*lambda_3[0, 205] + 72*lambda_3[0, 206] + 72*lambda_3[0, 207] + 108*lambda_3[0, 208] <= -B[0, 6]+ objc]
	constraints += [lambda_3[0, 28] + 2*lambda_3[0, 37] + 6*lambda_3[0, 40] + 3*lambda_3[0, 49] + 27*lambda_3[0, 52] + 4*lambda_3[0, 61] + 108*lambda_3[0, 64] + 5*lambda_3[0, 73] + 405*lambda_3[0, 76] + 12*lambda_3[0, 82] + 18*lambda_3[0, 91] + 54*lambda_3[0, 94] + 24*lambda_3[0, 103] + 216*lambda_3[0, 106] + 81*lambda_3[0, 112] + 2*lambda_3[0, 115] + 3*lambda_3[0, 117] + 4*lambda_3[0, 121] + 4*lambda_3[0, 122] + 6*lambda_3[0, 124] + 9*lambda_3[0, 126] + 12*lambda_3[0, 127] + 18*lambda_3[0, 129] + 8*lambda_3[0, 133] + 6*lambda_3[0, 134] + 9*lambda_3[0, 136] + 27*lambda_3[0, 138] + 54*lambda_3[0, 139] + 81*lambda_3[0, 141] + 16*lambda_3[0, 145] + 8*lambda_3[0, 146] + 12*lambda_3[0, 148] + 81*lambda_3[0, 150] + 216*lambda_3[0, 151] + 324*lambda_3[0, 153] + 8*lambda_3[0, 157] + 18*lambda_3[0, 159] + 24*lambda_3[0, 160] + 24*lambda_3[0, 161] + 36*lambda_3[0, 163] + 54*lambda_3[0, 165] + 16*lambda_3[0, 172] + 12*lambda_3[0, 173] + 27*lambda_3[0, 175] + 54*lambda_3[0, 177] + 48*lambda_3[0, 178] + 36*lambda_3[0, 179] + 54*lambda_3[0, 181] + 162*lambda_3[0, 183] + 108*lambda_3[0, 184] + 108*lambda_3[0, 185] + 162*lambda_3[0, 187] + 243*lambda_3[0, 189] + 48*lambda_3[0, 191] + 108*lambda_3[0, 193] + 6*lambda_3[0, 194] + 12*lambda_3[0, 195] + 12*lambda_3[0, 196] + 18*lambda_3[0, 197] + 36*lambda_3[0, 198] + 24*lambda_3[0, 199] + 18*lambda_3[0, 200] + 54*lambda_3[0, 201] + 162*lambda_3[0, 202] + 24*lambda_3[0, 203] + 36*lambda_3[0, 204] + 36*lambda_3[0, 205] + 72*lambda_3[0, 206] + 72*lambda_3[0, 207] + 108*lambda_3[0, 208] >= -B[0, 6]- objc]
	constraints += [-lambda_3[0, 115] - 4*lambda_3[0, 121] - 2*lambda_3[0, 122] - 6*lambda_3[0, 127] - 12*lambda_3[0, 133] - 3*lambda_3[0, 134] - 27*lambda_3[0, 139] - 32*lambda_3[0, 145] - 4*lambda_3[0, 146] - 108*lambda_3[0, 151] - 8*lambda_3[0, 157] - 24*lambda_3[0, 160] - 12*lambda_3[0, 161] - 24*lambda_3[0, 172] - 12*lambda_3[0, 173] - 72*lambda_3[0, 178] - 18*lambda_3[0, 179] - 108*lambda_3[0, 184] - 54*lambda_3[0, 185] - 48*lambda_3[0, 191] - 3*lambda_3[0, 194] - 12*lambda_3[0, 195] - 6*lambda_3[0, 196] - 9*lambda_3[0, 197] - 18*lambda_3[0, 198] - 36*lambda_3[0, 199] - 9*lambda_3[0, 200] - 27*lambda_3[0, 201] - 81*lambda_3[0, 202] - 24*lambda_3[0, 203] - 36*lambda_3[0, 204] - 18*lambda_3[0, 205] - 72*lambda_3[0, 206] - 36*lambda_3[0, 207] - 54*lambda_3[0, 208] == 0]
	constraints += [lambda_3[0, 121] + 6*lambda_3[0, 133] + 24*lambda_3[0, 145] + 2*lambda_3[0, 157] + 6*lambda_3[0, 160] + 12*lambda_3[0, 172] + 3*lambda_3[0, 173] + 36*lambda_3[0, 178] + 27*lambda_3[0, 184] + 12*lambda_3[0, 191] + 3*lambda_3[0, 195] + 18*lambda_3[0, 199] + 6*lambda_3[0, 203] + 9*lambda_3[0, 204] + 18*lambda_3[0, 206] == 0]
	constraints += [-lambda_3[0, 133] - 8*lambda_3[0, 145] - 2*lambda_3[0, 172] - 6*lambda_3[0, 178] - 3*lambda_3[0, 199] == 0]
	constraints += [lambda_3[0, 145] == 0]
	constraints += [-lambda_3[0, 37] - 3*lambda_3[0, 49] - 6*lambda_3[0, 61] - 10*lambda_3[0, 73] - 6*lambda_3[0, 82] - 18*lambda_3[0, 91] - 27*lambda_3[0, 94] - 36*lambda_3[0, 103] - 108*lambda_3[0, 106] - 81*lambda_3[0, 112] - 2*lambda_3[0, 122] - 3*lambda_3[0, 124] - 6*lambda_3[0, 134] - 9*lambda_3[0, 136] - 12*lambda_3[0, 146] - 18*lambda_3[0, 148] - 4*lambda_3[0, 157] - 9*lambda_3[0, 159] - 12*lambda_3[0, 161] - 18*lambda_3[0, 163] - 8*lambda_3[0, 172] - 12*lambda_3[0, 173] - 27*lambda_3[0, 175] - 27*lambda_3[0, 177] - 36*lambda_3[0, 179] - 54*lambda_3[0, 181] - 54*lambda_3[0, 185] - 81*lambda_3[0, 187] - 24*lambda_3[0, 191] - 54*lambda_3[0, 193] - 6*lambda_3[0, 196] - 18*lambda_3[0, 200] - 12*lambda_3[0, 203] - 18*lambda_3[0, 205] - 36*lambda_3[0, 207] == 0]
	constraints += [lambda_3[0, 122] + 3*lambda_3[0, 134] + 6*lambda_3[0, 146] + 4*lambda_3[0, 157] + 6*lambda_3[0, 161] + 12*lambda_3[0, 172] + 12*lambda_3[0, 173] + 18*lambda_3[0, 179] + 27*lambda_3[0, 185] + 24*lambda_3[0, 191] + 3*lambda_3[0, 196] + 9*lambda_3[0, 200] + 12*lambda_3[0, 203] + 9*lambda_3[0, 205] + 18*lambda_3[0, 207] == 0]
	constraints += [-lambda_3[0, 157] - 6*lambda_3[0, 172] - 3*lambda_3[0, 173] - 6*lambda_3[0, 191] - 3*lambda_3[0, 203] == 0]
	constraints += [lambda_3[0, 172] == 0]
	constraints += [lambda_3[0, 49] + 4*lambda_3[0, 61] + 10*lambda_3[0, 73] + 6*lambda_3[0, 91] + 24*lambda_3[0, 103] + 27*lambda_3[0, 112] + 2*lambda_3[0, 134] + 3*lambda_3[0, 136] + 8*lambda_3[0, 146] + 12*lambda_3[0, 148] + 4*lambda_3[0, 173] + 9*lambda_3[0, 175] + 12*lambda_3[0, 179] + 18*lambda_3[0, 181] + 6*lambda_3[0, 200] == 0]
	constraints += [-lambda_3[0, 134] - 4*lambda_3[0, 146] - 4*lambda_3[0, 173] - 6*lambda_3[0, 179] - 3*lambda_3[0, 200] == 0]
	constraints += [lambda_3[0, 173] == 0]
	constraints += [-lambda_3[0, 61] - 5*lambda_3[0, 73] - 6*lambda_3[0, 103] - 2*lambda_3[0, 146] - 3*lambda_3[0, 148] == 0]
	constraints += [lambda_3[0, 146] == 0]
	constraints += [lambda_3[0, 73] == 0]
	constraints += [lambda_3[0, 29] + 6*lambda_3[0, 38] + 6*lambda_3[0, 41] + 27*lambda_3[0, 50] + 27*lambda_3[0, 53] + 108*lambda_3[0, 62] + 108*lambda_3[0, 65] + 405*lambda_3[0, 74] + 405*lambda_3[0, 77] + 36*lambda_3[0, 83] + 162*lambda_3[0, 92] + 162*lambda_3[0, 95] + 648*lambda_3[0, 104] + 648*lambda_3[0, 107] + 729*lambda_3[0, 113] + 2*lambda_3[0, 116] + lambda_3[0, 117] + 4*lambda_3[0, 123] + lambda_3[0, 124] + 12*lambda_3[0, 125] + 6*lambda_3[0, 126] + 12*lambda_3[0, 128] + 6*lambda_3[0, 129] + 8*lambda_3[0, 135] + lambda_3[0, 136] + 54*lambda_3[0, 137] + 27*lambda_3[0, 138] + 54*lambda_3[0, 140] + 27*lambda_3[0, 141] + 16*lambda_3[0, 147] + lambda_3[0, 148] + 216*lambda_3[0, 149] + 108*lambda_3[0, 150] + 216*lambda_3[0, 152] + 108*lambda_3[0, 153] + 24*lambda_3[0, 158] + 6*lambda_3[0, 159] + 24*lambda_3[0, 162] + 6*lambda_3[0, 163] + 72*lambda_3[0, 164] + 36*lambda_3[0, 165] + 48*lambda_3[0, 174] + 6*lambda_3[0, 175] + 108*lambda_3[0, 176] + 27*lambda_3[0, 177] + 48*lambda_3[0, 180] + 6*lambda_3[0, 181] + 324*lambda_3[0, 182] + 162*lambda_3[0, 183] + 108*lambda_3[0, 186] + 27*lambda_3[0, 187] + 324*lambda_3[0, 188] + 162*lambda_3[0, 189] + 144*lambda_3[0, 192] + 36*lambda_3[0, 193] + 2*lambda_3[0, 194] + 4*lambda_3[0, 195] + 2*lambda_3[0, 196] + 12*lambda_3[0, 197] + 12*lambda_3[0, 198] + 8*lambda_3[0, 199] + 2*lambda_3[0, 200] + 54*lambda_3[0, 201] + 54*lambda_3[0, 202] + 4*lambda_3[0, 203] + 24*lambda_3[0, 204] + 12*lambda_3[0, 205] + 24*lambda_3[0, 206] + 12*lambda_3[0, 207] + 72*lambda_3[0, 208] <= -B[0, 5]+ objc]
	constraints += [lambda_3[0, 29] + 6*lambda_3[0, 38] + 6*lambda_3[0, 41] + 27*lambda_3[0, 50] + 27*lambda_3[0, 53] + 108*lambda_3[0, 62] + 108*lambda_3[0, 65] + 405*lambda_3[0, 74] + 405*lambda_3[0, 77] + 36*lambda_3[0, 83] + 162*lambda_3[0, 92] + 162*lambda_3[0, 95] + 648*lambda_3[0, 104] + 648*lambda_3[0, 107] + 729*lambda_3[0, 113] + 2*lambda_3[0, 116] + lambda_3[0, 117] + 4*lambda_3[0, 123] + lambda_3[0, 124] + 12*lambda_3[0, 125] + 6*lambda_3[0, 126] + 12*lambda_3[0, 128] + 6*lambda_3[0, 129] + 8*lambda_3[0, 135] + lambda_3[0, 136] + 54*lambda_3[0, 137] + 27*lambda_3[0, 138] + 54*lambda_3[0, 140] + 27*lambda_3[0, 141] + 16*lambda_3[0, 147] + lambda_3[0, 148] + 216*lambda_3[0, 149] + 108*lambda_3[0, 150] + 216*lambda_3[0, 152] + 108*lambda_3[0, 153] + 24*lambda_3[0, 158] + 6*lambda_3[0, 159] + 24*lambda_3[0, 162] + 6*lambda_3[0, 163] + 72*lambda_3[0, 164] + 36*lambda_3[0, 165] + 48*lambda_3[0, 174] + 6*lambda_3[0, 175] + 108*lambda_3[0, 176] + 27*lambda_3[0, 177] + 48*lambda_3[0, 180] + 6*lambda_3[0, 181] + 324*lambda_3[0, 182] + 162*lambda_3[0, 183] + 108*lambda_3[0, 186] + 27*lambda_3[0, 187] + 324*lambda_3[0, 188] + 162*lambda_3[0, 189] + 144*lambda_3[0, 192] + 36*lambda_3[0, 193] + 2*lambda_3[0, 194] + 4*lambda_3[0, 195] + 2*lambda_3[0, 196] + 12*lambda_3[0, 197] + 12*lambda_3[0, 198] + 8*lambda_3[0, 199] + 2*lambda_3[0, 200] + 54*lambda_3[0, 201] + 54*lambda_3[0, 202] + 4*lambda_3[0, 203] + 24*lambda_3[0, 204] + 12*lambda_3[0, 205] + 24*lambda_3[0, 206] + 12*lambda_3[0, 207] + 72*lambda_3[0, 208] >= -B[0, 5]- objc]
	constraints += [-lambda_3[0, 116] - 4*lambda_3[0, 123] - 6*lambda_3[0, 125] - 6*lambda_3[0, 128] - 12*lambda_3[0, 135] - 27*lambda_3[0, 137] - 27*lambda_3[0, 140] - 32*lambda_3[0, 147] - 108*lambda_3[0, 149] - 108*lambda_3[0, 152] - 24*lambda_3[0, 158] - 24*lambda_3[0, 162] - 36*lambda_3[0, 164] - 72*lambda_3[0, 174] - 108*lambda_3[0, 176] - 72*lambda_3[0, 180] - 162*lambda_3[0, 182] - 108*lambda_3[0, 186] - 162*lambda_3[0, 188] - 144*lambda_3[0, 192] - lambda_3[0, 194] - 4*lambda_3[0, 195] - lambda_3[0, 196] - 6*lambda_3[0, 197] - 6*lambda_3[0, 198] - 12*lambda_3[0, 199] - lambda_3[0, 200] - 27*lambda_3[0, 201] - 27*lambda_3[0, 202] - 4*lambda_3[0, 203] - 24*lambda_3[0, 204] - 6*lambda_3[0, 205] - 24*lambda_3[0, 206] - 6*lambda_3[0, 207] - 36*lambda_3[0, 208] == 0]
	constraints += [lambda_3[0, 123] + 6*lambda_3[0, 135] + 24*lambda_3[0, 147] + 6*lambda_3[0, 158] + 6*lambda_3[0, 162] + 36*lambda_3[0, 174] + 27*lambda_3[0, 176] + 36*lambda_3[0, 180] + 27*lambda_3[0, 186] + 36*lambda_3[0, 192] + lambda_3[0, 195] + 6*lambda_3[0, 199] + lambda_3[0, 203] + 6*lambda_3[0, 204] + 6*lambda_3[0, 206] == 0]
	constraints += [-lambda_3[0, 135] - 8*lambda_3[0, 147] - 6*lambda_3[0, 174] - 6*lambda_3[0, 180] - lambda_3[0, 199] == 0]
	constraints += [lambda_3[0, 147] == 0]
	constraints += [-lambda_3[0, 117] - 2*lambda_3[0, 124] - 6*lambda_3[0, 126] - 6*lambda_3[0, 129] - 3*lambda_3[0, 136] - 27*lambda_3[0, 138] - 27*lambda_3[0, 141] - 4*lambda_3[0, 148] - 108*lambda_3[0, 150] - 108*lambda_3[0, 153] - 12*lambda_3[0, 159] - 12*lambda_3[0, 163] - 36*lambda_3[0, 165] - 18*lambda_3[0, 175] - 54*lambda_3[0, 177] - 18*lambda_3[0, 181] - 162*lambda_3[0, 183] - 54*lambda_3[0, 187] - 162*lambda_3[0, 189] - 72*lambda_3[0, 193] - 2*lambda_3[0, 194] - 4*lambda_3[0, 195] - 4*lambda_3[0, 196] - 12*lambda_3[0, 197] - 12*lambda_3[0, 198] - 8*lambda_3[0, 199] - 6*lambda_3[0, 200] - 54*lambda_3[0, 201] - 54*lambda_3[0, 202] - 8*lambda_3[0, 203] - 24*lambda_3[0, 204] - 24*lambda_3[0, 205] - 24*lambda_3[0, 206] - 24*lambda_3[0, 207] - 72*lambda_3[0, 208] == 0]
	constraints += [lambda_3[0, 194] + 4*lambda_3[0, 195] + 2*lambda_3[0, 196] + 6*lambda_3[0, 197] + 6*lambda_3[0, 198] + 12*lambda_3[0, 199] + 3*lambda_3[0, 200] + 27*lambda_3[0, 201] + 27*lambda_3[0, 202] + 8*lambda_3[0, 203] + 24*lambda_3[0, 204] + 12*lambda_3[0, 205] + 24*lambda_3[0, 206] + 12*lambda_3[0, 207] + 36*lambda_3[0, 208] == 0]
	constraints += [-lambda_3[0, 195] - 6*lambda_3[0, 199] - 2*lambda_3[0, 203] - 6*lambda_3[0, 204] - 6*lambda_3[0, 206] == 0]
	constraints += [lambda_3[0, 199] == 0]
	constraints += [lambda_3[0, 124] + 3*lambda_3[0, 136] + 6*lambda_3[0, 148] + 6*lambda_3[0, 159] + 6*lambda_3[0, 163] + 18*lambda_3[0, 175] + 27*lambda_3[0, 177] + 18*lambda_3[0, 181] + 27*lambda_3[0, 187] + 36*lambda_3[0, 193] + 2*lambda_3[0, 196] + 6*lambda_3[0, 200] + 4*lambda_3[0, 203] + 12*lambda_3[0, 205] + 12*lambda_3[0, 207] == 0]
	constraints += [-lambda_3[0, 196] - 3*lambda_3[0, 200] - 4*lambda_3[0, 203] - 6*lambda_3[0, 205] - 6*lambda_3[0, 207] == 0]
	constraints += [lambda_3[0, 203] == 0]
	constraints += [-lambda_3[0, 136] - 4*lambda_3[0, 148] - 6*lambda_3[0, 175] - 6*lambda_3[0, 181] - 2*lambda_3[0, 200] == 0]
	constraints += [lambda_3[0, 200] == 0]
	constraints += [lambda_3[0, 148] == 0]
	constraints += [-lambda_3[0, 38] - 9*lambda_3[0, 50] - 54*lambda_3[0, 62] - 270*lambda_3[0, 74] - 6*lambda_3[0, 83] - 54*lambda_3[0, 92] - 27*lambda_3[0, 95] - 324*lambda_3[0, 104] - 108*lambda_3[0, 107] - 243*lambda_3[0, 113] - 2*lambda_3[0, 125] - lambda_3[0, 126] - 18*lambda_3[0, 137] - 9*lambda_3[0, 138] - 108*lambda_3[0, 149] - 54*lambda_3[0, 150] - 4*lambda_3[0, 158] - lambda_3[0, 159] - 12*lambda_3[0, 164] - 6*lambda_3[0, 165] - 8*lambda_3[0, 174] - lambda_3[0, 175] - 36*lambda_3[0, 176] - 9*lambda_3[0, 177] - 108*lambda_3[0, 182] - 54*lambda_3[0, 183] - 54*lambda_3[0, 188] - 27*lambda_3[0, 189] - 24*lambda_3[0, 192] - 6*lambda_3[0, 193] - 2*lambda_3[0, 197] - 18*lambda_3[0, 201] - 4*lambda_3[0, 204] - 2*lambda_3[0, 205] - 12*lambda_3[0, 208] == 0]
	constraints += [lambda_3[0, 125] + 9*lambda_3[0, 137] + 54*lambda_3[0, 149] + 4*lambda_3[0, 158] + 6*lambda_3[0, 164] + 12*lambda_3[0, 174] + 36*lambda_3[0, 176] + 54*lambda_3[0, 182] + 27*lambda_3[0, 188] + 24*lambda_3[0, 192] + lambda_3[0, 197] + 9*lambda_3[0, 201] + 4*lambda_3[0, 204] + lambda_3[0, 205] + 6*lambda_3[0, 208] == 0]
	constraints += [-lambda_3[0, 158] - 6*lambda_3[0, 174] - 9*lambda_3[0, 176] - 6*lambda_3[0, 192] - lambda_3[0, 204] == 0]
	constraints += [lambda_3[0, 174] == 0]
	constraints += [lambda_3[0, 126] + 9*lambda_3[0, 138] + 54*lambda_3[0, 150] + 2*lambda_3[0, 159] + 6*lambda_3[0, 165] + 3*lambda_3[0, 175] + 18*lambda_3[0, 177] + 54*lambda_3[0, 183] + 27*lambda_3[0, 189] + 12*lambda_3[0, 193] + 2*lambda_3[0, 197] + 18*lambda_3[0, 201] + 4*lambda_3[0, 204] + 4*lambda_3[0, 205] + 12*lambda_3[0, 208] == 0]
	constraints += [-lambda_3[0, 197] - 9*lambda_3[0, 201] - 4*lambda_3[0, 204] - 2*lambda_3[0, 205] - 6*lambda_3[0, 208] == 0]
	constraints += [lambda_3[0, 204] == 0]
	constraints += [-lambda_3[0, 159] - 3*lambda_3[0, 175] - 9*lambda_3[0, 177] - 6*lambda_3[0, 193] - 2*lambda_3[0, 205] == 0]
	constraints += [lambda_3[0, 205] == 0]
	constraints += [lambda_3[0, 175] == 0]
	constraints += [lambda_3[0, 50] + 12*lambda_3[0, 62] + 90*lambda_3[0, 74] + 6*lambda_3[0, 92] + 72*lambda_3[0, 104] + 27*lambda_3[0, 113] + 2*lambda_3[0, 137] + lambda_3[0, 138] + 24*lambda_3[0, 149] + 12*lambda_3[0, 150] + 4*lambda_3[0, 176] + lambda_3[0, 177] + 12*lambda_3[0, 182] + 6*lambda_3[0, 183] + 2*lambda_3[0, 201] == 0]
	constraints += [-lambda_3[0, 137] - 12*lambda_3[0, 149] - 4*lambda_3[0, 176] - 6*lambda_3[0, 182] - lambda_3[0, 201] == 0]
	constraints += [lambda_3[0, 176] == 0]
	constraints += [-lambda_3[0, 138] - 12*lambda_3[0, 150] - 2*lambda_3[0, 177] - 6*lambda_3[0, 183] - 2*lambda_3[0, 201] == 0]
	constraints += [lambda_3[0, 201] == 0]
	constraints += [lambda_3[0, 177] == 0]
	constraints += [-lambda_3[0, 62] - 15*lambda_3[0, 74] - 6*lambda_3[0, 104] - 2*lambda_3[0, 149] - lambda_3[0, 150] == 0]
	constraints += [lambda_3[0, 149] == 0]
	constraints += [lambda_3[0, 150] == 0]
	constraints += [lambda_3[0, 74] == 0]
	constraints += [lambda_3[0, 7] + 9*lambda_3[0, 11] + 54*lambda_3[0, 15] + 270*lambda_3[0, 19] + 1215*lambda_3[0, 23] + 2*lambda_3[0, 39] + lambda_3[0, 40] + 3*lambda_3[0, 41] + 18*lambda_3[0, 51] + 9*lambda_3[0, 52] + 27*lambda_3[0, 53] + 108*lambda_3[0, 63] + 54*lambda_3[0, 64] + 162*lambda_3[0, 65] + 540*lambda_3[0, 75] + 270*lambda_3[0, 76] + 810*lambda_3[0, 77] + 4*lambda_3[0, 81] + lambda_3[0, 82] + 9*lambda_3[0, 83] + 8*lambda_3[0, 90] + lambda_3[0, 91] + 27*lambda_3[0, 92] + 36*lambda_3[0, 93] + 9*lambda_3[0, 94] + 81*lambda_3[0, 95] + 16*lambda_3[0, 102] + lambda_3[0, 103] + 81*lambda_3[0, 104] + 216*lambda_3[0, 105] + 54*lambda_3[0, 106] + 486*lambda_3[0, 107] + 72*lambda_3[0, 111] + 9*lambda_3[0, 112] + 243*lambda_3[0, 113] + 2*lambda_3[0, 127] + 6*lambda_3[0, 128] + 3*lambda_3[0, 129] + 18*lambda_3[0, 139] + 54*lambda_3[0, 140] + 27*lambda_3[0, 141] + 108*lambda_3[0, 151] + 324*lambda_3[0, 152] + 162*lambda_3[0, 153] + 4*lambda_3[0, 160] + 2*lambda_3[0, 161] + 12*lambda_3[0, 162] + 3*lambda_3[0, 163] + 18*lambda_3[0, 164] + 9*lambda_3[0, 165] + 8*lambda_3[0, 178] + 2*lambda_3[0, 179] + 24*lambda_3[0, 180] + 3*lambda_3[0, 181] + 54*lambda_3[0, 182] + 27*lambda_3[0, 183] + 36*lambda_3[0, 184] + 18*lambda_3[0, 185] + 108*lambda_3[0, 186] + 27*lambda_3[0, 187] + 162*lambda_3[0, 188] + 81*lambda_3[0, 189] + 4*lambda_3[0, 191] + 36*lambda_3[0, 192] + 9*lambda_3[0, 193] + 6*lambda_3[0, 198] + 54*lambda_3[0, 202] + 12*lambda_3[0, 206] + 6*lambda_3[0, 207] + 18*lambda_3[0, 208] <= -B[0, 11] - 0.01+ objc]
	constraints += [lambda_3[0, 7] + 9*lambda_3[0, 11] + 54*lambda_3[0, 15] + 270*lambda_3[0, 19] + 1215*lambda_3[0, 23] + 2*lambda_3[0, 39] + lambda_3[0, 40] + 3*lambda_3[0, 41] + 18*lambda_3[0, 51] + 9*lambda_3[0, 52] + 27*lambda_3[0, 53] + 108*lambda_3[0, 63] + 54*lambda_3[0, 64] + 162*lambda_3[0, 65] + 540*lambda_3[0, 75] + 270*lambda_3[0, 76] + 810*lambda_3[0, 77] + 4*lambda_3[0, 81] + lambda_3[0, 82] + 9*lambda_3[0, 83] + 8*lambda_3[0, 90] + lambda_3[0, 91] + 27*lambda_3[0, 92] + 36*lambda_3[0, 93] + 9*lambda_3[0, 94] + 81*lambda_3[0, 95] + 16*lambda_3[0, 102] + lambda_3[0, 103] + 81*lambda_3[0, 104] + 216*lambda_3[0, 105] + 54*lambda_3[0, 106] + 486*lambda_3[0, 107] + 72*lambda_3[0, 111] + 9*lambda_3[0, 112] + 243*lambda_3[0, 113] + 2*lambda_3[0, 127] + 6*lambda_3[0, 128] + 3*lambda_3[0, 129] + 18*lambda_3[0, 139] + 54*lambda_3[0, 140] + 27*lambda_3[0, 141] + 108*lambda_3[0, 151] + 324*lambda_3[0, 152] + 162*lambda_3[0, 153] + 4*lambda_3[0, 160] + 2*lambda_3[0, 161] + 12*lambda_3[0, 162] + 3*lambda_3[0, 163] + 18*lambda_3[0, 164] + 9*lambda_3[0, 165] + 8*lambda_3[0, 178] + 2*lambda_3[0, 179] + 24*lambda_3[0, 180] + 3*lambda_3[0, 181] + 54*lambda_3[0, 182] + 27*lambda_3[0, 183] + 36*lambda_3[0, 184] + 18*lambda_3[0, 185] + 108*lambda_3[0, 186] + 27*lambda_3[0, 187] + 162*lambda_3[0, 188] + 81*lambda_3[0, 189] + 4*lambda_3[0, 191] + 36*lambda_3[0, 192] + 9*lambda_3[0, 193] + 6*lambda_3[0, 198] + 54*lambda_3[0, 202] + 12*lambda_3[0, 206] + 6*lambda_3[0, 207] + 18*lambda_3[0, 208] >= -B[0, 11] - 0.01- objc]
	constraints += [-lambda_3[0, 39] - 9*lambda_3[0, 51] - 54*lambda_3[0, 63] - 270*lambda_3[0, 75] - 4*lambda_3[0, 81] - 12*lambda_3[0, 90] - 36*lambda_3[0, 93] - 32*lambda_3[0, 102] - 216*lambda_3[0, 105] - 108*lambda_3[0, 111] - lambda_3[0, 127] - 3*lambda_3[0, 128] - 9*lambda_3[0, 139] - 27*lambda_3[0, 140] - 54*lambda_3[0, 151] - 162*lambda_3[0, 152] - 4*lambda_3[0, 160] - lambda_3[0, 161] - 12*lambda_3[0, 162] - 9*lambda_3[0, 164] - 12*lambda_3[0, 178] - lambda_3[0, 179] - 36*lambda_3[0, 180] - 27*lambda_3[0, 182] - 36*lambda_3[0, 184] - 9*lambda_3[0, 185] - 108*lambda_3[0, 186] - 81*lambda_3[0, 188] - 4*lambda_3[0, 191] - 36*lambda_3[0, 192] - 3*lambda_3[0, 198] - 27*lambda_3[0, 202] - 12*lambda_3[0, 206] - 3*lambda_3[0, 207] - 9*lambda_3[0, 208] == 0]
	constraints += [lambda_3[0, 81] + 6*lambda_3[0, 90] + 9*lambda_3[0, 93] + 24*lambda_3[0, 102] + 54*lambda_3[0, 105] + 54*lambda_3[0, 111] + lambda_3[0, 160] + 3*lambda_3[0, 162] + 6*lambda_3[0, 178] + 18*lambda_3[0, 180] + 9*lambda_3[0, 184] + 27*lambda_3[0, 186] + lambda_3[0, 191] + 9*lambda_3[0, 192] + 3*lambda_3[0, 206] == 0]
	constraints += [-lambda_3[0, 90] - 8*lambda_3[0, 102] - 9*lambda_3[0, 111] - lambda_3[0, 178] - 3*lambda_3[0, 180] == 0]
	constraints += [lambda_3[0, 102] == 0]
	constraints += [-lambda_3[0, 40] - 9*lambda_3[0, 52] - 54*lambda_3[0, 64] - 270*lambda_3[0, 76] - 2*lambda_3[0, 82] - 3*lambda_3[0, 91] - 18*lambda_3[0, 94] - 4*lambda_3[0, 103] - 108*lambda_3[0, 106] - 27*lambda_3[0, 112] - 2*lambda_3[0, 127] - 3*lambda_3[0, 129] - 18*lambda_3[0, 139] - 27*lambda_3[0, 141] - 108*lambda_3[0, 151] - 162*lambda_3[0, 153] - 4*lambda_3[0, 160] - 4*lambda_3[0, 161] - 6*lambda_3[0, 163] - 9*lambda_3[0, 165] - 8*lambda_3[0, 178] - 6*lambda_3[0, 179] - 9*lambda_3[0, 181] - 27*lambda_3[0, 183] - 36*lambda_3[0, 184] - 36*lambda_3[0, 185] - 54*lambda_3[0, 187] - 81*lambda_3[0, 189] - 8*lambda_3[0, 191] - 18*lambda_3[0, 193] - 6*lambda_3[0, 198] - 54*lambda_3[0, 202] - 12*lambda_3[0, 206] - 12*lambda_3[0, 207] - 18*lambda_3[0, 208] == 0]
	constraints += [lambda_3[0, 127] + 9*lambda_3[0, 139] + 54*lambda_3[0, 151] + 4*lambda_3[0, 160] + 2*lambda_3[0, 161] + 12*lambda_3[0, 178] + 3*lambda_3[0, 179] + 36*lambda_3[0, 184] + 18*lambda_3[0, 185] + 8*lambda_3[0, 191] + 3*lambda_3[0, 198] + 27*lambda_3[0, 202] + 12*lambda_3[0, 206] + 6*lambda_3[0, 207] + 9*lambda_3[0, 208] == 0]
	constraints += [-lambda_3[0, 160] - 6*lambda_3[0, 178] - 9*lambda_3[0, 184] - 2*lambda_3[0, 191] - 3*lambda_3[0, 206] == 0]
	constraints += [lambda_3[0, 178] == 0]
	constraints += [lambda_3[0, 82] + 3*lambda_3[0, 91] + 9*lambda_3[0, 94] + 6*lambda_3[0, 103] + 54*lambda_3[0, 106] + 27*lambda_3[0, 112] + 2*lambda_3[0, 161] + 3*lambda_3[0, 163] + 6*lambda_3[0, 179] + 9*lambda_3[0, 181] + 18*lambda_3[0, 185] + 27*lambda_3[0, 187] + 4*lambda_3[0, 191] + 9*lambda_3[0, 193] + 6*lambda_3[0, 207] == 0]
	constraints += [-lambda_3[0, 161] - 3*lambda_3[0, 179] - 9*lambda_3[0, 185] - 4*lambda_3[0, 191] - 3*lambda_3[0, 207] == 0]
	constraints += [lambda_3[0, 191] == 0]
	constraints += [-lambda_3[0, 91] - 4*lambda_3[0, 103] - 9*lambda_3[0, 112] - 2*lambda_3[0, 179] - 3*lambda_3[0, 181] == 0]
	constraints += [lambda_3[0, 179] == 0]
	constraints += [lambda_3[0, 103] == 0]
	constraints += [-lambda_3[0, 41] - 9*lambda_3[0, 53] - 54*lambda_3[0, 65] - 270*lambda_3[0, 77] - 6*lambda_3[0, 83] - 27*lambda_3[0, 92] - 54*lambda_3[0, 95] - 108*lambda_3[0, 104] - 324*lambda_3[0, 107] - 243*lambda_3[0, 113] - 2*lambda_3[0, 128] - lambda_3[0, 129] - 18*lambda_3[0, 140] - 9*lambda_3[0, 141] - 108*lambda_3[0, 152] - 54*lambda_3[0, 153] - 4*lambda_3[0, 162] - lambda_3[0, 163] - 12*lambda_3[0, 164] - 6*lambda_3[0, 165] - 8*lambda_3[0, 180] - lambda_3[0, 181] - 54*lambda_3[0, 182] - 27*lambda_3[0, 183] - 36*lambda_3[0, 186] - 9*lambda_3[0, 187] - 108*lambda_3[0, 188] - 54*lambda_3[0, 189] - 24*lambda_3[0, 192] - 6*lambda_3[0, 193] - 2*lambda_3[0, 198] - 18*lambda_3[0, 202] - 4*lambda_3[0, 206] - 2*lambda_3[0, 207] - 12*lambda_3[0, 208] == 0]
	constraints += [lambda_3[0, 128] + 9*lambda_3[0, 140] + 54*lambda_3[0, 152] + 4*lambda_3[0, 162] + 6*lambda_3[0, 164] + 12*lambda_3[0, 180] + 27*lambda_3[0, 182] + 36*lambda_3[0, 186] + 54*lambda_3[0, 188] + 24*lambda_3[0, 192] + lambda_3[0, 198] + 9*lambda_3[0, 202] + 4*lambda_3[0, 206] + lambda_3[0, 207] + 6*lambda_3[0, 208] == 0]
	constraints += [-lambda_3[0, 162] - 6*lambda_3[0, 180] - 9*lambda_3[0, 186] - 6*lambda_3[0, 192] - lambda_3[0, 206] == 0]
	constraints += [lambda_3[0, 180] == 0]
	constraints += [lambda_3[0, 129] + 9*lambda_3[0, 141] + 54*lambda_3[0, 153] + 2*lambda_3[0, 163] + 6*lambda_3[0, 165] + 3*lambda_3[0, 181] + 27*lambda_3[0, 183] + 18*lambda_3[0, 187] + 54*lambda_3[0, 189] + 12*lambda_3[0, 193] + 2*lambda_3[0, 198] + 18*lambda_3[0, 202] + 4*lambda_3[0, 206] + 4*lambda_3[0, 207] + 12*lambda_3[0, 208] == 0]
	constraints += [-lambda_3[0, 198] - 9*lambda_3[0, 202] - 4*lambda_3[0, 206] - 2*lambda_3[0, 207] - 6*lambda_3[0, 208] == 0]
	constraints += [lambda_3[0, 206] == 0]
	constraints += [-lambda_3[0, 163] - 3*lambda_3[0, 181] - 9*lambda_3[0, 187] - 6*lambda_3[0, 193] - 2*lambda_3[0, 207] == 0]
	constraints += [lambda_3[0, 207] == 0]
	constraints += [lambda_3[0, 181] == 0]
	constraints += [lambda_3[0, 83] + 9*lambda_3[0, 92] + 9*lambda_3[0, 95] + 54*lambda_3[0, 104] + 54*lambda_3[0, 107] + 81*lambda_3[0, 113] + 2*lambda_3[0, 164] + lambda_3[0, 165] + 18*lambda_3[0, 182] + 9*lambda_3[0, 183] + 18*lambda_3[0, 188] + 9*lambda_3[0, 189] + 4*lambda_3[0, 192] + lambda_3[0, 193] + 2*lambda_3[0, 208] == 0]
	constraints += [-lambda_3[0, 164] - 9*lambda_3[0, 182] - 9*lambda_3[0, 188] - 4*lambda_3[0, 192] - lambda_3[0, 208] == 0]
	constraints += [lambda_3[0, 192] == 0]
	constraints += [-lambda_3[0, 165] - 9*lambda_3[0, 183] - 9*lambda_3[0, 189] - 2*lambda_3[0, 193] - 2*lambda_3[0, 208] == 0]
	constraints += [lambda_3[0, 208] == 0]
	constraints += [lambda_3[0, 193] == 0]
	constraints += [-lambda_3[0, 92] - 12*lambda_3[0, 104] - 9*lambda_3[0, 113] - 2*lambda_3[0, 182] - lambda_3[0, 183] == 0]
	constraints += [lambda_3[0, 182] == 0]
	constraints += [lambda_3[0, 183] == 0]
	constraints += [lambda_3[0, 104] == 0]
	constraints += [-lambda_3[0, 11] - 12*lambda_3[0, 15] - 90*lambda_3[0, 19] - 540*lambda_3[0, 23] - 2*lambda_3[0, 51] - lambda_3[0, 52] - 3*lambda_3[0, 53] - 24*lambda_3[0, 63] - 12*lambda_3[0, 64] - 36*lambda_3[0, 65] - 180*lambda_3[0, 75] - 90*lambda_3[0, 76] - 270*lambda_3[0, 77] - 4*lambda_3[0, 93] - lambda_3[0, 94] - 9*lambda_3[0, 95] - 48*lambda_3[0, 105] - 12*lambda_3[0, 106] - 108*lambda_3[0, 107] - 8*lambda_3[0, 111] - lambda_3[0, 112] - 27*lambda_3[0, 113] - 2*lambda_3[0, 139] - 6*lambda_3[0, 140] - 3*lambda_3[0, 141] - 24*lambda_3[0, 151] - 72*lambda_3[0, 152] - 36*lambda_3[0, 153] - 4*lambda_3[0, 184] - 2*lambda_3[0, 185] - 12*lambda_3[0, 186] - 3*lambda_3[0, 187] - 18*lambda_3[0, 188] - 9*lambda_3[0, 189] - 6*lambda_3[0, 202] == 0]
	constraints += [lambda_3[0, 51] + 12*lambda_3[0, 63] + 90*lambda_3[0, 75] + 4*lambda_3[0, 93] + 48*lambda_3[0, 105] + 12*lambda_3[0, 111] + lambda_3[0, 139] + 3*lambda_3[0, 140] + 12*lambda_3[0, 151] + 36*lambda_3[0, 152] + 4*lambda_3[0, 184] + lambda_3[0, 185] + 12*lambda_3[0, 186] + 9*lambda_3[0, 188] + 3*lambda_3[0, 202] == 0]
	constraints += [-lambda_3[0, 93] - 12*lambda_3[0, 105] - 6*lambda_3[0, 111] - lambda_3[0, 184] - 3*lambda_3[0, 186] == 0]
	constraints += [lambda_3[0, 111] == 0]
	constraints += [lambda_3[0, 52] + 12*lambda_3[0, 64] + 90*lambda_3[0, 76] + 2*lambda_3[0, 94] + 24*lambda_3[0, 106] + 3*lambda_3[0, 112] + 2*lambda_3[0, 139] + 3*lambda_3[0, 141] + 24*lambda_3[0, 151] + 36*lambda_3[0, 153] + 4*lambda_3[0, 184] + 4*lambda_3[0, 185] + 6*lambda_3[0, 187] + 9*lambda_3[0, 189] + 6*lambda_3[0, 202] == 0]
	constraints += [-lambda_3[0, 139] - 12*lambda_3[0, 151] - 4*lambda_3[0, 184] - 2*lambda_3[0, 185] - 3*lambda_3[0, 202] == 0]
	constraints += [lambda_3[0, 184] == 0]
	constraints += [-lambda_3[0, 94] - 12*lambda_3[0, 106] - 3*lambda_3[0, 112] - 2*lambda_3[0, 185] - 3*lambda_3[0, 187] == 0]
	constraints += [lambda_3[0, 185] == 0]
	constraints += [lambda_3[0, 112] == 0]
	constraints += [lambda_3[0, 53] + 12*lambda_3[0, 65] + 90*lambda_3[0, 77] + 6*lambda_3[0, 95] + 72*lambda_3[0, 107] + 27*lambda_3[0, 113] + 2*lambda_3[0, 140] + lambda_3[0, 141] + 24*lambda_3[0, 152] + 12*lambda_3[0, 153] + 4*lambda_3[0, 186] + lambda_3[0, 187] + 12*lambda_3[0, 188] + 6*lambda_3[0, 189] + 2*lambda_3[0, 202] == 0]
	constraints += [-lambda_3[0, 140] - 12*lambda_3[0, 152] - 4*lambda_3[0, 186] - 6*lambda_3[0, 188] - lambda_3[0, 202] == 0]
	constraints += [lambda_3[0, 186] == 0]
	constraints += [-lambda_3[0, 141] - 12*lambda_3[0, 153] - 2*lambda_3[0, 187] - 6*lambda_3[0, 189] - 2*lambda_3[0, 202] == 0]
	constraints += [lambda_3[0, 202] == 0]
	constraints += [lambda_3[0, 187] == 0]
	constraints += [-lambda_3[0, 95] - 12*lambda_3[0, 107] - 9*lambda_3[0, 113] - 2*lambda_3[0, 188] - lambda_3[0, 189] == 0]
	constraints += [lambda_3[0, 188] == 0]
	constraints += [lambda_3[0, 189] == 0]
	constraints += [lambda_3[0, 113] == 0]
	constraints += [lambda_3[0, 15] + 15*lambda_3[0, 19] + 135*lambda_3[0, 23] + 2*lambda_3[0, 63] + lambda_3[0, 64] + 3*lambda_3[0, 65] + 30*lambda_3[0, 75] + 15*lambda_3[0, 76] + 45*lambda_3[0, 77] + 4*lambda_3[0, 105] + lambda_3[0, 106] + 9*lambda_3[0, 107] + 2*lambda_3[0, 151] + 6*lambda_3[0, 152] + 3*lambda_3[0, 153] <= -B[0, 15]+ objc]
	constraints += [lambda_3[0, 15] + 15*lambda_3[0, 19] + 135*lambda_3[0, 23] + 2*lambda_3[0, 63] + lambda_3[0, 64] + 3*lambda_3[0, 65] + 30*lambda_3[0, 75] + 15*lambda_3[0, 76] + 45*lambda_3[0, 77] + 4*lambda_3[0, 105] + lambda_3[0, 106] + 9*lambda_3[0, 107] + 2*lambda_3[0, 151] + 6*lambda_3[0, 152] + 3*lambda_3[0, 153] >= -B[0, 15]- objc]
	constraints += [-lambda_3[0, 63] - 15*lambda_3[0, 75] - 4*lambda_3[0, 105] - lambda_3[0, 151] - 3*lambda_3[0, 152] == 0]
	constraints += [lambda_3[0, 105] == 0]
	constraints += [-lambda_3[0, 64] - 15*lambda_3[0, 76] - 2*lambda_3[0, 106] - 2*lambda_3[0, 151] - 3*lambda_3[0, 153] == 0]
	constraints += [lambda_3[0, 151] == 0]
	constraints += [lambda_3[0, 106] == 0]
	constraints += [-lambda_3[0, 65] - 15*lambda_3[0, 77] - 6*lambda_3[0, 107] - 2*lambda_3[0, 152] - lambda_3[0, 153] == 0]
	constraints += [lambda_3[0, 152] == 0]
	constraints += [lambda_3[0, 153] == 0]
	constraints += [lambda_3[0, 107] == 0]
	constraints += [-lambda_3[0, 19] - 18*lambda_3[0, 23] - 2*lambda_3[0, 75] - lambda_3[0, 76] - 3*lambda_3[0, 77] == 0]
	constraints += [lambda_3[0, 75] == 0]
	constraints += [lambda_3[0, 76] == 0]
	constraints += [lambda_3[0, 77] == 0]
	constraints += [lambda_3[0, 23] <= -B[0, 19]+ objc]
	constraints += [lambda_3[0, 23] >= -B[0, 19]- objc]


	
	constraints += [objc >= 0]
	# constraints += [B >= -1]
	# constraints += [B <= 1]
	# constraints += [cp.norm(B[0,], 1)>=0.0015]
	# constraints += [cp.abs(B[0, 0]) >= 0.00001]
	# constraints += [cp.abs(B[0, 1]) >= 0.00001]
	# constraints += [cp.abs(B[0, 2]) >= 0.00001]
	# constraints += [cp.abs(B[0, 3]) >= 0.00001]
	# constraints += [cp.abs(B[0, 4]) >= 0.00001]
	# constraints += [cp.abs(B[0, 5]) >= 0.00001]
	# constraints += [cp.abs(B[0, 6]) >= 0.00001]
	# constraints += [cp.abs(B[0, 7]) >= 0.00001]
	# constraints += [cp.abs(B[0, 8]) >= 0.00001]
	# constraints += [cp.abs(B[0, 9]) >= 0.00001]
	# constraints += [cp.abs(B[0, 10]) >= 0.00001]
	# constraints += [cp.abs(B[0, 11]) >= 0.00001]
	# constraints += [cp.abs(B[0, 12]) >= 0.00001]
	# constraints += [cp.abs(B[0, 13]) >= 0.00001]
	# constraints += [cp.abs(B[0, 14]) >= 0.00001]
	# print("Third section of constraints")


	problem = cp.Problem(objective, constraints)
	assert problem.is_dcp()
	assert problem.is_dpp()
	# print("form the problem")
	control_param = np.reshape(control_param, (1, 4))
	theta_t = torch.from_numpy(control_param).float()
	theta_t.requires_grad = True
	layer = CvxpyLayer(problem, parameters=[t], variables=[lambda_1, lambda_2, lambda_3, B, objc])
	lambda_1_star, lambda_2_star, lambda_3_star, B_star, objc_star = layer(theta_t)
	# print("solve the problem")
	objc_star.backward()
	B = B_star.detach().numpy()[0]
	initTest, unsafeTest, lieTest, init, unsafe, lie = BarrierTest(B, control_param[0], l, k, g)

	return B, theta_t.grad.detach().numpy()[0], objc_star.detach().numpy(), initTest, unsafeTest, lieTest, init, unsafe, lie


def highOrderBarSDP(control_param, l, k, g):

	X = cp.Variable((13, 13), symmetric=True) #Q1
	Y = cp.Variable((13, 13), symmetric=True) #Q2
	Z = cp.Variable((13, 13), symmetric=True) #Q3
	M = cp.Variable((5, 5), symmetric=True)
	N = cp.Variable((5, 5), symmetric=True)
	Q = cp.Variable((5, 5), symmetric=True)
	objc = cp.Variable(pos=True)
	a = cp.Variable((1, 9))
	e = cp.Variable((1, 9)) 
	f = cp.Variable((1, 9)) 
	B = cp.Variable((1, 23)) #Barrier parameters for SOS rings
	t = cp.Parameter((1, 4)) #controller parameters

	objective = cp.Minimize(objc)
	constraints = []

	constraints += [ X >> 0.0]
	constraints += [ Y >> 0.0]
	constraints += [ Z >> 0.01]
	constraints += [ M >> 0.0]
	constraints += [ N >> 0.0]
	constraints += [ Q >> 0.0]


	constraints += [ X[0, 0]  ==  B[0, 0] + 4.4*a[0, 0] ]
	constraints += [ X[0, 4] + X[4, 0]  ==  B[0, 4] + 4.4*a[0, 4] ]
	constraints += [ X[0, 8] + X[4, 4] + X[8, 0]  ==  B[0, 14] + a[0, 0] + 4.4*a[0, 8] ]
	constraints += [ X[0, 12] + X[4, 8] + X[8, 4] + X[12, 0]  ==  a[0, 4] ]
	constraints += [ X[4, 12] + X[8, 8] + X[12, 4]  ==  B[0, 18] + a[0, 8] ]
	constraints += [ X[8, 12] + X[12, 8]  ==  0 ]
	constraints += [ X[12, 12]  ==  B[0, 22] ]
	constraints += [ X[0, 3] + X[3, 0]  ==  B[0, 3] - 1.0*a[0, 0] + 4.4*a[0, 3] ]
	constraints += [ X[3, 4] + X[4, 3]  ==  B[0, 10] - 1.0*a[0, 4] ]
	constraints += [ X[3, 8] + X[8, 3]  ==  a[0, 3] - 1.0*a[0, 8] ]
	constraints += [ X[3, 12] + X[12, 3]  ==  0 ]
	constraints += [ X[0, 7] + X[3, 3] + X[7, 0]  ==  B[0, 13] + a[0, 0] - 1.0*a[0, 3] + 4.4*a[0, 7] ]
	constraints += [ X[4, 7] + X[7, 4]  ==  a[0, 4] ]
	constraints += [ X[7, 8] + X[8, 7]  ==  a[0, 7] + a[0, 8] ]
	constraints += [ X[7, 12] + X[12, 7]  ==  0 ]
	constraints += [ X[0, 11] + X[3, 7] + X[7, 3] + X[11, 0]  ==  a[0, 3] - 1.0*a[0, 7] ]
	constraints += [ X[4, 11] + X[11, 4]  ==  0 ]
	constraints += [ X[8, 11] + X[11, 8]  ==  0 ]
	constraints += [ X[11, 12] + X[12, 11]  ==  0 ]
	constraints += [ X[3, 11] + X[7, 7] + X[11, 3]  ==  B[0, 17] + a[0, 7] ]
	constraints += [ X[7, 11] + X[11, 7]  ==  0 ]
	constraints += [ X[11, 11]  ==  B[0, 21] ]
	constraints += [ X[0, 2] + X[2, 0]  ==  B[0, 2] - 4*a[0, 0] + 4.4*a[0, 2] ]
	constraints += [ X[2, 4] + X[4, 2]  ==  B[0, 9] - 4*a[0, 4] ]
	constraints += [ X[2, 8] + X[8, 2]  ==  a[0, 2] - 4*a[0, 8] ]
	constraints += [ X[2, 12] + X[12, 2]  ==  0 ]
	constraints += [ X[2, 3] + X[3, 2]  ==  B[0, 8] - 1.0*a[0, 2] - 4*a[0, 3] ]
	constraints += [ X[2, 7] + X[7, 2]  ==  a[0, 2] - 4*a[0, 7] ]
	constraints += [ X[2, 11] + X[11, 2]  ==  0 ]
	constraints += [ X[0, 6] + X[2, 2] + X[6, 0]  ==  B[0, 12] + a[0, 0] - 4*a[0, 2] + 4.4*a[0, 6] ]
	constraints += [ X[4, 6] + X[6, 4]  ==  a[0, 4] ]
	constraints += [ X[6, 8] + X[8, 6]  ==  a[0, 6] + a[0, 8] ]
	constraints += [ X[6, 12] + X[12, 6]  ==  0 ]
	constraints += [ X[3, 6] + X[6, 3]  ==  a[0, 3] - 1.0*a[0, 6] ]
	constraints += [ X[6, 7] + X[7, 6]  ==  a[0, 6] + a[0, 7] ]
	constraints += [ X[6, 11] + X[11, 6]  ==  0 ]
	constraints += [ X[0, 10] + X[2, 6] + X[6, 2] + X[10, 0]  ==  a[0, 2] - 4*a[0, 6] ]
	constraints += [ X[4, 10] + X[10, 4]  ==  0 ]
	constraints += [ X[8, 10] + X[10, 8]  ==  0 ]
	constraints += [ X[10, 12] + X[12, 10]  ==  0 ]
	constraints += [ X[3, 10] + X[10, 3]  ==  0 ]
	constraints += [ X[7, 10] + X[10, 7]  ==  0 ]
	constraints += [ X[10, 11] + X[11, 10]  ==  0 ]
	constraints += [ X[2, 10] + X[6, 6] + X[10, 2]  ==  B[0, 16] + a[0, 6] ]
	constraints += [ X[6, 10] + X[10, 6]  ==  0 ]
	constraints += [ X[10, 10]  ==  B[0, 20] ]
	constraints += [ X[0, 1] + X[1, 0]  ==  B[0, 1] - 0.8*a[0, 0] + 4.4*a[0, 1] ]
	constraints += [ X[1, 4] + X[4, 1]  ==  B[0, 7] - 0.8*a[0, 4] ]
	constraints += [ X[1, 8] + X[8, 1]  ==  a[0, 1] - 0.8*a[0, 8] ]
	constraints += [ X[1, 12] + X[12, 1]  ==  0 ]
	constraints += [ X[1, 3] + X[3, 1]  ==  B[0, 6] - 1.0*a[0, 1] - 0.8*a[0, 3] ]
	constraints += [ X[1, 7] + X[7, 1]  ==  a[0, 1] - 0.8*a[0, 7] ]
	constraints += [ X[1, 11] + X[11, 1]  ==  0 ]
	constraints += [ X[1, 2] + X[2, 1]  ==  B[0, 5] - 4*a[0, 1] - 0.8*a[0, 2] ]
	constraints += [ X[1, 6] + X[6, 1]  ==  a[0, 1] - 0.8*a[0, 6] ]
	constraints += [ X[1, 10] + X[10, 1]  ==  0 ]
	constraints += [ X[0, 5] + X[1, 1] + X[5, 0]  ==  B[0, 11] + a[0, 0] - 0.8*a[0, 1] + 4.4*a[0, 5] ]
	constraints += [ X[4, 5] + X[5, 4]  ==  a[0, 4] ]
	constraints += [ X[5, 8] + X[8, 5]  ==  a[0, 5] + a[0, 8] ]
	constraints += [ X[5, 12] + X[12, 5]  ==  0 ]
	constraints += [ X[3, 5] + X[5, 3]  ==  a[0, 3] - 1.0*a[0, 5] ]
	constraints += [ X[5, 7] + X[7, 5]  ==  a[0, 5] + a[0, 7] ]
	constraints += [ X[5, 11] + X[11, 5]  ==  0 ]
	constraints += [ X[2, 5] + X[5, 2]  ==  a[0, 2] - 4*a[0, 5] ]
	constraints += [ X[5, 6] + X[6, 5]  ==  a[0, 5] + a[0, 6] ]
	constraints += [ X[5, 10] + X[10, 5]  ==  0 ]
	constraints += [ X[0, 9] + X[1, 5] + X[5, 1] + X[9, 0]  ==  a[0, 1] - 0.8*a[0, 5] ]
	constraints += [ X[4, 9] + X[9, 4]  ==  0 ]
	constraints += [ X[8, 9] + X[9, 8]  ==  0 ]
	constraints += [ X[9, 12] + X[12, 9]  ==  0 ]
	constraints += [ X[3, 9] + X[9, 3]  ==  0 ]
	constraints += [ X[7, 9] + X[9, 7]  ==  0 ]
	constraints += [ X[9, 11] + X[11, 9]  ==  0 ]
	constraints += [ X[2, 9] + X[9, 2]  ==  0 ]
	constraints += [ X[6, 9] + X[9, 6]  ==  0 ]
	constraints += [ X[9, 10] + X[10, 9]  ==  0 ]
	constraints += [ X[1, 9] + X[5, 5] + X[9, 1]  ==  B[0, 15] + a[0, 5] ]
	constraints += [ X[5, 9] + X[9, 5]  ==  0 ]
	constraints += [ X[9, 9]  ==  B[0, 19] ]
	constraints += [ M[0, 0]  ==  a[0, 0] ]
	constraints += [ M[0, 4] + M[4, 0]  ==  a[0, 4] ]
	constraints += [ M[4, 4]  ==  a[0, 8] ]
	constraints += [ M[0, 3] + M[3, 0]  ==  a[0, 3] ]
	constraints += [ M[3, 4] + M[4, 3]  ==  0 ]
	constraints += [ M[3, 3]  ==  a[0, 7] ]
	constraints += [ M[0, 2] + M[2, 0]  ==  a[0, 2] ]
	constraints += [ M[2, 4] + M[4, 2]  ==  0 ]
	constraints += [ M[2, 3] + M[3, 2]  ==  0 ]
	constraints += [ M[2, 2]  ==  a[0, 6] ]
	constraints += [ M[0, 1] + M[1, 0]  ==  a[0, 1] ]
	constraints += [ M[1, 4] + M[4, 1]  ==  0 ]
	constraints += [ M[1, 3] + M[3, 1]  ==  0 ]
	constraints += [ M[1, 2] + M[2, 1]  ==  0 ]
	constraints += [ M[1, 1]  ==  a[0, 5] ]
	constraints += [ Y[0, 0]  ==  -B[0, 0] + 8*e[0, 0] ]
	constraints += [ Y[0, 4] + Y[4, 0]  ==  -B[0, 4] - 2*e[0, 0] + 8*e[0, 4] ]
	constraints += [ Y[0, 8] + Y[4, 4] + Y[8, 0]  ==  -B[0, 14] + e[0, 0] - 2*e[0, 4] + 8*e[0, 8] ]
	constraints += [ Y[0, 12] + Y[4, 8] + Y[8, 4] + Y[12, 0]  ==  e[0, 4] - 2*e[0, 8] ]
	constraints += [ Y[4, 12] + Y[8, 8] + Y[12, 4]  ==  -B[0, 18] + e[0, 8] ]
	constraints += [ Y[8, 12] + Y[12, 8]  ==  0 ]
	constraints += [ Y[12, 12]  ==  -B[0, 22] ]
	constraints += [ Y[0, 3] + Y[3, 0]  ==  -B[0, 3] + 8*e[0, 3] ]
	constraints += [ Y[3, 4] + Y[4, 3]  ==  -B[0, 10] - 2*e[0, 3] ]
	constraints += [ Y[3, 8] + Y[8, 3]  ==  e[0, 3] ]
	constraints += [ Y[3, 12] + Y[12, 3]  ==  0 ]
	constraints += [ Y[0, 7] + Y[3, 3] + Y[7, 0]  ==  -B[0, 13] + e[0, 0] + 8*e[0, 7] ]
	constraints += [ Y[4, 7] + Y[7, 4]  ==  e[0, 4] - 2*e[0, 7] ]
	constraints += [ Y[7, 8] + Y[8, 7]  ==  e[0, 7] + e[0, 8] ]
	constraints += [ Y[7, 12] + Y[12, 7]  ==  0 ]
	constraints += [ Y[0, 11] + Y[3, 7] + Y[7, 3] + Y[11, 0]  ==  e[0, 3] ]
	constraints += [ Y[4, 11] + Y[11, 4]  ==  0 ]
	constraints += [ Y[8, 11] + Y[11, 8]  ==  0 ]
	constraints += [ Y[11, 12] + Y[12, 11]  ==  0 ]
	constraints += [ Y[3, 11] + Y[7, 7] + Y[11, 3]  ==  -B[0, 17] + e[0, 7] ]
	constraints += [ Y[7, 11] + Y[11, 7]  ==  0 ]
	constraints += [ Y[11, 11]  ==  -B[0, 21] ]
	constraints += [ Y[0, 2] + Y[2, 0]  ==  -B[0, 2] - 4*e[0, 0] + 8*e[0, 2] ]
	constraints += [ Y[2, 4] + Y[4, 2]  ==  -B[0, 9] - 2*e[0, 2] - 4*e[0, 4] ]
	constraints += [ Y[2, 8] + Y[8, 2]  ==  e[0, 2] - 4*e[0, 8] ]
	constraints += [ Y[2, 12] + Y[12, 2]  ==  0 ]
	constraints += [ Y[2, 3] + Y[3, 2]  ==  -B[0, 8] - 4*e[0, 3] ]
	constraints += [ Y[2, 7] + Y[7, 2]  ==  e[0, 2] - 4*e[0, 7] ]
	constraints += [ Y[2, 11] + Y[11, 2]  ==  0 ]
	constraints += [ Y[0, 6] + Y[2, 2] + Y[6, 0]  ==  -B[0, 12] + e[0, 0] - 4*e[0, 2] + 8*e[0, 6] ]
	constraints += [ Y[4, 6] + Y[6, 4]  ==  e[0, 4] - 2*e[0, 6] ]
	constraints += [ Y[6, 8] + Y[8, 6]  ==  e[0, 6] + e[0, 8] ]
	constraints += [ Y[6, 12] + Y[12, 6]  ==  0 ]
	constraints += [ Y[3, 6] + Y[6, 3]  ==  e[0, 3] ]
	constraints += [ Y[6, 7] + Y[7, 6]  ==  e[0, 6] + e[0, 7] ]
	constraints += [ Y[6, 11] + Y[11, 6]  ==  0 ]
	constraints += [ Y[0, 10] + Y[2, 6] + Y[6, 2] + Y[10, 0]  ==  e[0, 2] - 4*e[0, 6] ]
	constraints += [ Y[4, 10] + Y[10, 4]  ==  0 ]
	constraints += [ Y[8, 10] + Y[10, 8]  ==  0 ]
	constraints += [ Y[10, 12] + Y[12, 10]  ==  0 ]
	constraints += [ Y[3, 10] + Y[10, 3]  ==  0 ]
	constraints += [ Y[7, 10] + Y[10, 7]  ==  0 ]
	constraints += [ Y[10, 11] + Y[11, 10]  ==  0 ]
	constraints += [ Y[2, 10] + Y[6, 6] + Y[10, 2]  ==  -B[0, 16] + e[0, 6] ]
	constraints += [ Y[6, 10] + Y[10, 6]  ==  0 ]
	constraints += [ Y[10, 10]  ==  -B[0, 20] ]
	constraints += [ Y[0, 1] + Y[1, 0]  ==  -B[0, 1] - 4*e[0, 0] + 8*e[0, 1] ]
	constraints += [ Y[1, 4] + Y[4, 1]  ==  -B[0, 7] - 2*e[0, 1] - 4*e[0, 4] ]
	constraints += [ Y[1, 8] + Y[8, 1]  ==  e[0, 1] - 4*e[0, 8] ]
	constraints += [ Y[1, 12] + Y[12, 1]  ==  0 ]
	constraints += [ Y[1, 3] + Y[3, 1]  ==  -B[0, 6] - 4*e[0, 3] ]
	constraints += [ Y[1, 7] + Y[7, 1]  ==  e[0, 1] - 4*e[0, 7] ]
	constraints += [ Y[1, 11] + Y[11, 1]  ==  0 ]
	constraints += [ Y[1, 2] + Y[2, 1]  ==  -B[0, 5] - 4*e[0, 1] - 4*e[0, 2] ]
	constraints += [ Y[1, 6] + Y[6, 1]  ==  e[0, 1] - 4*e[0, 6] ]
	constraints += [ Y[1, 10] + Y[10, 1]  ==  0 ]
	constraints += [ Y[0, 5] + Y[1, 1] + Y[5, 0]  ==  -B[0, 11] + e[0, 0] - 4*e[0, 1] + 8*e[0, 5] ]
	constraints += [ Y[4, 5] + Y[5, 4]  ==  e[0, 4] - 2*e[0, 5] ]
	constraints += [ Y[5, 8] + Y[8, 5]  ==  e[0, 5] + e[0, 8] ]
	constraints += [ Y[5, 12] + Y[12, 5]  ==  0 ]
	constraints += [ Y[3, 5] + Y[5, 3]  ==  e[0, 3] ]
	constraints += [ Y[5, 7] + Y[7, 5]  ==  e[0, 5] + e[0, 7] ]
	constraints += [ Y[5, 11] + Y[11, 5]  ==  0 ]
	constraints += [ Y[2, 5] + Y[5, 2]  ==  e[0, 2] - 4*e[0, 5] ]
	constraints += [ Y[5, 6] + Y[6, 5]  ==  e[0, 5] + e[0, 6] ]
	constraints += [ Y[5, 10] + Y[10, 5]  ==  0 ]
	constraints += [ Y[0, 9] + Y[1, 5] + Y[5, 1] + Y[9, 0]  ==  e[0, 1] - 4*e[0, 5] ]
	constraints += [ Y[4, 9] + Y[9, 4]  ==  0 ]
	constraints += [ Y[8, 9] + Y[9, 8]  ==  0 ]
	constraints += [ Y[9, 12] + Y[12, 9]  ==  0 ]
	constraints += [ Y[3, 9] + Y[9, 3]  ==  0 ]
	constraints += [ Y[7, 9] + Y[9, 7]  ==  0 ]
	constraints += [ Y[9, 11] + Y[11, 9]  ==  0 ]
	constraints += [ Y[2, 9] + Y[9, 2]  ==  0 ]
	constraints += [ Y[6, 9] + Y[9, 6]  ==  0 ]
	constraints += [ Y[9, 10] + Y[10, 9]  ==  0 ]
	constraints += [ Y[1, 9] + Y[5, 5] + Y[9, 1]  ==  -B[0, 15] + e[0, 5] ]
	constraints += [ Y[5, 9] + Y[9, 5]  ==  0 ]
	constraints += [ Y[9, 9]  ==  -B[0, 19] ]
	constraints += [ N[0, 0]  ==  e[0, 0] ]
	constraints += [ N[0, 4] + N[4, 0]  ==  e[0, 4] ]
	constraints += [ N[4, 4]  ==  e[0, 8] ]
	constraints += [ N[0, 3] + N[3, 0]  ==  e[0, 3] ]
	constraints += [ N[3, 4] + N[4, 3]  ==  0 ]
	constraints += [ N[3, 3]  ==  e[0, 7] ]
	constraints += [ N[0, 2] + N[2, 0]  ==  e[0, 2] ]
	constraints += [ N[2, 4] + N[4, 2]  ==  0 ]
	constraints += [ N[2, 3] + N[3, 2]  ==  0 ]
	constraints += [ N[2, 2]  ==  e[0, 6] ]
	constraints += [ N[0, 1] + N[1, 0]  ==  e[0, 1] ]
	constraints += [ N[1, 4] + N[4, 1]  ==  0 ]
	constraints += [ N[1, 3] + N[3, 1]  ==  0 ]
	constraints += [ N[1, 2] + N[2, 1]  ==  0 ]
	constraints += [ N[1, 1]  ==  e[0, 5] ]
	constraints += [ Z[0, 0]  ==  -l*B[0, 0] - 9*f[0, 0] ]
	constraints += [ Z[0, 4] + Z[4, 0]  ==  g*B[0, 4] + k*B[0, 2] - l*B[0, 4] + 40*B[0, 2]*t[0, 3] + B[0, 3] + 16.3*B[0, 4]*t[0, 3] - 9*f[0, 4] ]
	constraints += [ Z[0, 8] + Z[4, 4] + Z[8, 0]  ==  2*g*B[0, 14] + k*B[0, 9] - l*B[0, 14] + 40*B[0, 9]*t[0, 3] + B[0, 10] + 32.6*B[0, 14]*t[0, 3] + f[0, 0] - 9*f[0, 8] ]
	constraints += [ Z[0, 12] + Z[4, 8] + Z[8, 4] + Z[12, 0]  ==  f[0, 4] ]
	constraints += [ Z[4, 12] + Z[8, 8] + Z[12, 4]  ==  4*g*B[0, 18] - l*B[0, 18] + 65.2*B[0, 18]*t[0, 3] + f[0, 8] ]
	constraints += [ Z[8, 12] + Z[12, 8]  ==  0 ]
	constraints += [ Z[12, 12]  ==  6*g*B[0, 22] - l*B[0, 22] + 97.8*B[0, 22]*t[0, 3] ]
	constraints += [ Z[0, 3] + Z[3, 0]  ==  -l*B[0, 3] + 13.4*B[0, 1] + 40*B[0, 2]*t[0, 2] + 16.3*B[0, 4]*t[0, 2] - 9*f[0, 3] ]
	constraints += [ Z[3, 4] + Z[4, 3]  ==  g*B[0, 10] + k*B[0, 8] - l*B[0, 10] + 13.4*B[0, 7] + 40*B[0, 8]*t[0, 3] + 40*B[0, 9]*t[0, 2] + 16.3*B[0, 10]*t[0, 3] + 2*B[0, 13] + 32.6*B[0, 14]*t[0, 2] ]
	constraints += [ Z[3, 8] + Z[8, 3]  ==  f[0, 3] ]
	constraints += [ Z[3, 12] + Z[12, 3]  ==  65.2*B[0, 18]*t[0, 2] ]
	constraints += [ Z[0, 7] + Z[3, 3] + Z[7, 0]  ==  -l*B[0, 13] + 13.4*B[0, 6] + 40*B[0, 8]*t[0, 2] + 16.3*B[0, 10]*t[0, 2] + f[0, 0] - 9*f[0, 7] ]
	constraints += [ Z[4, 7] + Z[7, 4]  ==  f[0, 4] ]
	constraints += [ Z[7, 8] + Z[8, 7]  ==  f[0, 7] + f[0, 8] ]
	constraints += [ Z[7, 12] + Z[12, 7]  ==  0 ]
	constraints += [ Z[0, 11] + Z[3, 7] + Z[7, 3] + Z[11, 0]  ==  f[0, 3] ]
	constraints += [ Z[4, 11] + Z[11, 4]  ==  4*B[0, 17] ]
	constraints += [ Z[8, 11] + Z[11, 8]  ==  0 ]
	constraints += [ Z[11, 12] + Z[12, 11]  ==  0 ]
	constraints += [ Z[3, 11] + Z[7, 7] + Z[11, 3]  ==  -l*B[0, 17] + f[0, 7] ]
	constraints += [ Z[7, 11] + Z[11, 7]  ==  0 ]
	constraints += [ Z[11, 11]  ==  -l*B[0, 21] ]
	constraints += [ Z[0, 2] + Z[2, 0]  ==  -l*B[0, 2] + B[0, 1] + 40*B[0, 2]*t[0, 1] - 6.5*B[0, 2] + 16.3*B[0, 4]*t[0, 1] + 0.925*B[0, 4] - 9*f[0, 2] ]
	constraints += [ Z[2, 4] + Z[4, 2]  ==  g*B[0, 9] + 2*k*B[0, 12] - l*B[0, 9] + B[0, 7] + B[0, 8] + 40*B[0, 9]*t[0, 1] + 16.3*B[0, 9]*t[0, 3] - 6.5*B[0, 9] + 80*B[0, 12]*t[0, 3] + 32.6*B[0, 14]*t[0, 1] + 1.85*B[0, 14] ]
	constraints += [ Z[2, 8] + Z[8, 2]  ==  f[0, 2] ]
	constraints += [ Z[2, 12] + Z[12, 2]  ==  65.2*B[0, 18]*t[0, 1] + 3.7*B[0, 18] ]
	constraints += [ Z[2, 3] + Z[3, 2]  ==  -l*B[0, 8] + 13.4*B[0, 5] + B[0, 6] + 40*B[0, 8]*t[0, 1] - 6.5*B[0, 8] + 16.3*B[0, 9]*t[0, 2] + 16.3*B[0, 10]*t[0, 1] + 0.925*B[0, 10] + 80*B[0, 12]*t[0, 2] ]
	constraints += [ Z[2, 7] + Z[7, 2]  ==  f[0, 2] ]
	constraints += [ Z[2, 11] + Z[11, 2]  ==  0 ]
	constraints += [ Z[0, 6] + Z[2, 2] + Z[6, 0]  ==  -l*B[0, 12] + B[0, 5] + 16.3*B[0, 9]*t[0, 1] + 0.925*B[0, 9] + 80*B[0, 12]*t[0, 1] - 13.0*B[0, 12] + f[0, 0] - 9*f[0, 6] ]
	constraints += [ Z[4, 6] + Z[6, 4]  ==  f[0, 4] ]
	constraints += [ Z[6, 8] + Z[8, 6]  ==  f[0, 6] + f[0, 8] ]
	constraints += [ Z[6, 12] + Z[12, 6]  ==  0 ]
	constraints += [ Z[3, 6] + Z[6, 3]  ==  f[0, 3] ]
	constraints += [ Z[6, 7] + Z[7, 6]  ==  f[0, 6] + f[0, 7] ]
	constraints += [ Z[6, 11] + Z[11, 6]  ==  0 ]
	constraints += [ Z[0, 10] + Z[2, 6] + Z[6, 2] + Z[10, 0]  ==  f[0, 2] ]
	constraints += [ Z[4, 10] + Z[10, 4]  ==  4*k*B[0, 16] + 160*B[0, 16]*t[0, 3] ]
	constraints += [ Z[8, 10] + Z[10, 8]  ==  0 ]
	constraints += [ Z[10, 12] + Z[12, 10]  ==  0 ]
	constraints += [ Z[3, 10] + Z[10, 3]  ==  160*B[0, 16]*t[0, 2] ]
	constraints += [ Z[7, 10] + Z[10, 7]  ==  0 ]
	constraints += [ Z[10, 11] + Z[11, 10]  ==  0 ]
	constraints += [ Z[2, 10] + Z[6, 6] + Z[10, 2]  ==  -l*B[0, 16] + 160*B[0, 16]*t[0, 1] - 26.0*B[0, 16] + f[0, 6] ]
	constraints += [ Z[6, 10] + Z[10, 6]  ==  0 ]
	constraints += [ Z[10, 10]  ==  -l*B[0, 20] + 240*B[0, 20]*t[0, 1] - 39.0*B[0, 20] ]
	constraints += [ Z[0, 1] + Z[1, 0]  ==  -l*B[0, 1] + 40*B[0, 2]*t[0, 0] + 16.3*B[0, 4]*t[0, 0] - 9*f[0, 1] ]
	constraints += [ Z[1, 4] + Z[4, 1]  ==  g*B[0, 7] + k*B[0, 5] - l*B[0, 7] + 40*B[0, 5]*t[0, 3] + B[0, 6] + 16.3*B[0, 7]*t[0, 3] + 40*B[0, 9]*t[0, 0] + 32.6*B[0, 14]*t[0, 0] ]
	constraints += [ Z[1, 8] + Z[8, 1]  ==  f[0, 1] ]
	constraints += [ Z[1, 12] + Z[12, 1]  ==  65.2*B[0, 18]*t[0, 0] ]
	constraints += [ Z[1, 3] + Z[3, 1]  ==  -l*B[0, 6] + 40*B[0, 5]*t[0, 2] + 16.3*B[0, 7]*t[0, 2] + 40*B[0, 8]*t[0, 0] + 16.3*B[0, 10]*t[0, 0] + 26.8*B[0, 11] ]
	constraints += [ Z[1, 7] + Z[7, 1]  ==  f[0, 1] ]
	constraints += [ Z[1, 11] + Z[11, 1]  ==  0 ]
	constraints += [ Z[1, 2] + Z[2, 1]  ==  -l*B[0, 5] + 40*B[0, 5]*t[0, 1] - 6.5*B[0, 5] + 16.3*B[0, 7]*t[0, 1] + 0.925*B[0, 7] + 16.3*B[0, 9]*t[0, 0] + 2*B[0, 11] + 80*B[0, 12]*t[0, 0] ]
	constraints += [ Z[1, 6] + Z[6, 1]  ==  f[0, 1] ]
	constraints += [ Z[1, 10] + Z[10, 1]  ==  160*B[0, 16]*t[0, 0] ]
	constraints += [ Z[0, 5] + Z[1, 1] + Z[5, 0]  ==  -l*B[0, 11] + 40*B[0, 5]*t[0, 0] + 16.3*B[0, 7]*t[0, 0] + f[0, 0] - 9*f[0, 5] ]
	constraints += [ Z[4, 5] + Z[5, 4]  ==  f[0, 4] ]
	constraints += [ Z[5, 8] + Z[8, 5]  ==  f[0, 5] + f[0, 8] ]
	constraints += [ Z[5, 12] + Z[12, 5]  ==  0 ]
	constraints += [ Z[3, 5] + Z[5, 3]  ==  f[0, 3] ]
	constraints += [ Z[5, 7] + Z[7, 5]  ==  f[0, 5] + f[0, 7] ]
	constraints += [ Z[5, 11] + Z[11, 5]  ==  0 ]
	constraints += [ Z[2, 5] + Z[5, 2]  ==  f[0, 2] ]
	constraints += [ Z[5, 6] + Z[6, 5]  ==  f[0, 5] + f[0, 6] ]
	constraints += [ Z[5, 10] + Z[10, 5]  ==  0 ]
	constraints += [ Z[0, 9] + Z[1, 5] + Z[5, 1] + Z[9, 0]  ==  f[0, 1] ]
	constraints += [ Z[4, 9] + Z[9, 4]  ==  0 ]
	constraints += [ Z[8, 9] + Z[9, 8]  ==  0 ]
	constraints += [ Z[9, 12] + Z[12, 9]  ==  0 ]
	constraints += [ Z[3, 9] + Z[9, 3]  ==  53.6*B[0, 15] ]
	constraints += [ Z[7, 9] + Z[9, 7]  ==  0 ]
	constraints += [ Z[9, 11] + Z[11, 9]  ==  0 ]
	constraints += [ Z[2, 9] + Z[9, 2]  ==  4*B[0, 15] ]
	constraints += [ Z[6, 9] + Z[9, 6]  ==  0 ]
	constraints += [ Z[9, 10] + Z[10, 9]  ==  0 ]
	constraints += [ Z[1, 9] + Z[5, 5] + Z[9, 1]  ==  -l*B[0, 15] + f[0, 5] ]
	constraints += [ Z[5, 9] + Z[9, 5]  ==  0 ]
	constraints += [ Z[9, 9]  ==  -l*B[0, 19] ]
	constraints += [ Q[0, 0]  ==  f[0, 0] ]
	constraints += [ Q[0, 4] + Q[4, 0]  ==  f[0, 4] ]
	constraints += [ Q[4, 4]  ==  f[0, 8] ]
	constraints += [ Q[0, 3] + Q[3, 0]  ==  f[0, 3] ]
	constraints += [ Q[3, 4] + Q[4, 3]  ==  0 ]
	constraints += [ Q[3, 3]  ==  f[0, 7] ]
	constraints += [ Q[0, 2] + Q[2, 0]  ==  f[0, 2] ]
	constraints += [ Q[2, 4] + Q[4, 2]  ==  0 ]
	constraints += [ Q[2, 3] + Q[3, 2]  ==  0 ]
	constraints += [ Q[2, 2]  ==  f[0, 6] ]
	constraints += [ Q[0, 1] + Q[1, 0]  ==  f[0, 1] ]
	constraints += [ Q[1, 4] + Q[4, 1]  ==  0 ]
	constraints += [ Q[1, 3] + Q[3, 1]  ==  0 ]
	constraints += [ Q[1, 2] + Q[2, 1]  ==  0 ]
	constraints += [ Q[1, 1]  ==  f[0, 5] ]

	constraints += [objc>=0]

	problem = cp.Problem(objective, constraints)
	assert problem.is_dcp()
	assert problem.is_dpp()

	control_param = np.reshape(control_param, (1, 4))
	theta_t = torch.from_numpy(control_param).float()
	theta_t.requires_grad = True
	layer = CvxpyLayer(problem, parameters=[t], variables=[X, Y, Z, M, N, B, objc, a, e])
	X_star, Y_star, Z_star, M_star, N_star, B_star, objc_star, _, _ = layer(theta_t)

	return B_star


def BarrierTest(Barrier_param, control_param, l, k, g):
	initTest, unsafeTest, lieTest = True, True, True
	init, unsafe, Lie = 0, 0, 0
	assert Barrier_param.shape == (23, )
	assert control_param.shape == (4, )
	for i in range(10000):
		y = np.random.uniform(low=0.3, high=0.5, size=1)[0]
		v_y = np.random.uniform(low=1.9, high=2.1, size=1)[0]
		phi_e = np.random.uniform(low=0.4, high=0.6, size=1)[0]
		r = np.random.uniform(low=-0.1, high=0.1, size=1)[0]
		while (y - 0.4)**2 + (v_y - 2)**2 + (phi_e - 0.5)**2 + r**2 > 0.01:
			y = np.random.uniform(low=0.3, high=0.5, size=1)[0]
			v_y = np.random.uniform(low=1.9, high=2.1, size=1)[0]
			phi_e = np.random.uniform(low=0.4, high=0.6, size=1)[0]
			r = np.random.uniform(low=-0.1, high=0.1, size=1)[0]
		initBarrier = Barrier_param.dot(np.array([1, y, v_y, phi_e, r, y*v_y, y*phi_e, y*r, v_y*phi_e, v_y*r, phi_e*r, y**2, v_y**2, phi_e**2, r**2, y**4, v_y**4, phi_e**4, r**4, y**6, v_y**6, phi_e**6, r**6]))
		if initBarrier < 0:
			init += 1
			initTest = False

		y = np.random.uniform(low=1, high=3, size=1)[0]
		v_y = np.random.uniform(low=1, high=3, size=1)[0]
		phi_e = np.random.uniform(low=-1, high=1, size=1)[0]
		r = np.random.uniform(low=0, high=2, size=1)[0]
		while (y-2)**2 + (v_y-2)**2 + phi_e**2 + (r-1)**2 > 0.25:
			y = np.random.uniform(low=1, high=3, size=1)[0]
			v_y = np.random.uniform(low=1, high=3, size=1)[0]
			phi_e = np.random.uniform(low=-1, high=1, size=1)[0]
			r = np.random.uniform(low=0, high=2, size=1)[0]
		unsafeBarrier = Barrier_param.dot(np.array([1, y, v_y, phi_e, r, y*v_y, y*phi_e, y*r, v_y*phi_e, v_y*r, phi_e*r, y**2, v_y**2, phi_e**2, r**2, y**4, v_y**4, phi_e**4, r**4, y**6, v_y**6, phi_e**6, r**6]))
		if unsafeBarrier >= 0:
			unsafe += 1
			unsafeTest = False

		rstate = np.random.uniform(low=-3, high=3, size=(4, ))
		y, v_y, phi_e, r = rstate[0], rstate[1], rstate[2], rstate[3]
		while (y)**2 + (v_y)**2 + (phi_e)**2 + r**2 > 9:
			rstate = np.random.uniform(low=-3, high=3, size=(4, ))
			y, v_y, phi_e, r = rstate[0], rstate[1], rstate[2], rstate[3]		
		t = np.reshape(control_param, (1, 4))
		B = np.reshape(Barrier_param, (1, 23))
		# lie = -l*m**4*B[13] - l*m**3*B[12] - l*m**2*B[11] - l*m*n*B[5] - l*m*p*B[6] - l*m*q*B[7] - l*m*B[1] - l*n*p*B[8] - l*n*q*B[9] - l*n*B[2] - l*p*q*B[10] - l*p*B[3] - l*q*B[4] - l*B[0] + 4*m**3*n*B[13] + 53.6*m**3*p*B[13] + 3*m**2*n*B[12] + 40.2*m**2*p*B[12] + 40*m**2*B[5]*t[0] + 16.3*m**2*B[7]*t[0] + 40*m*n*B[5]*t[1] - 6.5*m*n*B[5] + 16.3*m*n*B[7]*t[1] + 0.925*m*n*B[7] + 16.3*m*n*B[9]*t[0] + 2*m*n*B[11] + 40*m*p*B[5]*t[2] + 16.3*m*p*B[7]*t[2] + 40*m*p*B[8]*t[0] + 16.3*m*p*B[10]*t[0] + 26.8*m*p*B[11] + 40*m*q*B[5]*t[3] - 10.5*m*q*B[5] + m*q*B[6] + 16.3*m*q*B[7]*t[3] - 5.61*m*q*B[7] + 40*m*q*B[9]*t[0] + 40*m*B[2]*t[0] + 16.3*m*B[4]*t[0] + n**2*B[5] + 16.3*n**2*B[9]*t[1] + 0.925*n**2*B[9] + 13.4*n*p*B[5] + n*p*B[6] + 40*n*p*B[8]*t[1] - 6.5*n*p*B[8] + 16.3*n*p*B[9]*t[2] + 16.3*n*p*B[10]*t[1] + 0.925*n*p*B[10] + n*q*B[7] + n*q*B[8] + 40*n*q*B[9]*t[1] + 16.3*n*q*B[9]*t[3] - 12.11*n*q*B[9] + n*B[1] + 40*n*B[2]*t[1] - 6.5*n*B[2] + 16.3*n*B[4]*t[1] + 0.925*n*B[4] + 13.4*p**2*B[6] + 40*p**2*B[8]*t[2] + 16.3*p**2*B[10]*t[2] + 13.4*p*q*B[7] + 40*p*q*B[8]*t[3] - 10.5*p*q*B[8] + 40*p*q*B[9]*t[2] + 16.3*p*q*B[10]*t[3] - 5.61*p*q*B[10] + 13.4*p*B[1] + 40*p*B[2]*t[2] + 16.3*p*B[4]*t[2] + 40*q**2*B[9]*t[3] - 10.5*q**2*B[9] + q**2*B[10] + 40*q*B[2]*t[3] - 10.5*q*B[2] + q*B[3] + 16.3*q*B[4]*t[3] - 5.61*q*B[4]
		# lie = g*phi_e**3*r*B[0, 36] + 2*g*phi_e**2*r**2*B[0, 47] + g*phi_e**2*r*v_y*B[0, 58] + g*phi_e**2*r*y*B[0, 61] + g*phi_e**2*r*B[0, 24] + 3*g*phi_e*r**3*B[0, 35] + 2*g*phi_e*r**2*v_y*B[0, 57] + 2*g*phi_e*r**2*y*B[0, 60] + 2*g*phi_e*r**2*B[0, 23] + g*phi_e*r*v_y**2*B[0, 59] + g*phi_e*r*v_y*y*B[0, 69] + g*phi_e*r*v_y*B[0, 53] + g*phi_e*r*y**2*B[0, 66] + g*phi_e*r*y*B[0, 54] + g*phi_e*r*B[0, 17] + 4*g*r**4*B[0, 13] + 3*g*r**3*v_y*B[0, 37] + 3*g*r**3*y*B[0, 41] + 3*g*r**3*B[0, 9] + 2*g*r**2*v_y**2*B[0, 48] + 2*g*r**2*v_y*y*B[0, 62] + 2*g*r**2*v_y*B[0, 25] + 2*g*r**2*y**2*B[0, 50] + 2*g*r**2*y*B[0, 29] + 2*g*r**2*B[0, 5] + g*r*v_y**3*B[0, 39] + g*r*v_y**2*y*B[0, 64] + g*r*v_y**2*B[0, 27] + g*r*v_y*y**2*B[0, 67] + g*r*v_y*y*B[0, 55] + g*r*v_y*B[0, 18] + g*r*y**3*B[0, 44] + g*r*y**2*B[0, 32] + g*r*y*B[0, 20] + g*r*B[0, 1] + k*phi_e**3*r*B[0, 38] + k*phi_e**2*r**2*B[0, 58] + 2*k*phi_e**2*r*v_y*B[0, 49] + k*phi_e**2*r*y*B[0, 63] + k*phi_e**2*r*B[0, 26] + k*phi_e*r**3*B[0, 57] + 2*k*phi_e*r**2*v_y*B[0, 59] + k*phi_e*r**2*y*B[0, 69] + k*phi_e*r**2*B[0, 53] + 3*k*phi_e*r*v_y**2*B[0, 40] + 2*k*phi_e*r*v_y*y*B[0, 65] + 2*k*phi_e*r*v_y*B[0, 28] + k*phi_e*r*y**2*B[0, 68] + k*phi_e*r*y*B[0, 56] + k*phi_e*r*B[0, 19] + k*r**4*B[0, 37] + 2*k*r**3*v_y*B[0, 48] + k*r**3*y*B[0, 62] + k*r**3*B[0, 25] + 3*k*r**2*v_y**2*B[0, 39] + 2*k*r**2*v_y*y*B[0, 64] + 2*k*r**2*v_y*B[0, 27] + k*r**2*y**2*B[0, 67] + k*r**2*y*B[0, 55] + k*r**2*B[0, 18] + 4*k*r*v_y**3*B[0, 15] + 3*k*r*v_y**2*y*B[0, 43] + 3*k*r*v_y**2*B[0, 11] + 2*k*r*v_y*y**2*B[0, 52] + 2*k*r*v_y*y*B[0, 31] + 2*k*r*v_y*B[0, 7] + k*r*y**3*B[0, 46] + k*r*y**2*B[0, 34] + k*r*y*B[0, 22] + k*r*B[0, 3] - l*phi_e**4*B[0, 14] - l*phi_e**3*r*B[0, 36] - l*phi_e**3*v_y*B[0, 38] - l*phi_e**3*y*B[0, 42] - l*phi_e**3*B[0, 10] - l*phi_e**2*r**2*B[0, 47] - l*phi_e**2*r*v_y*B[0, 58] - l*phi_e**2*r*y*B[0, 61] - l*phi_e**2*r*B[0, 24] - l*phi_e**2*v_y**2*B[0, 49] - l*phi_e**2*v_y*y*B[0, 63] - l*phi_e**2*v_y*B[0, 26] - l*phi_e**2*y**2*B[0, 51] - l*phi_e**2*y*B[0, 30] - l*phi_e**2*B[0, 6] - l*phi_e*r**3*B[0, 35] - l*phi_e*r**2*v_y*B[0, 57] - l*phi_e*r**2*y*B[0, 60] - l*phi_e*r**2*B[0, 23] - l*phi_e*r*v_y**2*B[0, 59] - l*phi_e*r*v_y*y*B[0, 69] - l*phi_e*r*v_y*B[0, 53] - l*phi_e*r*y**2*B[0, 66] - l*phi_e*r*y*B[0, 54] - l*phi_e*r*B[0, 17] - l*phi_e*v_y**3*B[0, 40] - l*phi_e*v_y**2*y*B[0, 65] - l*phi_e*v_y**2*B[0, 28] - l*phi_e*v_y*y**2*B[0, 68] - l*phi_e*v_y*y*B[0, 56] - l*phi_e*v_y*B[0, 19] - l*phi_e*y**3*B[0, 45] - l*phi_e*y**2*B[0, 33] - l*phi_e*y*B[0, 21] - l*phi_e*B[0, 2] - l*r**4*B[0, 13] - l*r**3*v_y*B[0, 37] - l*r**3*y*B[0, 41] - l*r**3*B[0, 9] - l*r**2*v_y**2*B[0, 48] - l*r**2*v_y*y*B[0, 62] - l*r**2*v_y*B[0, 25] - l*r**2*y**2*B[0, 50] - l*r**2*y*B[0, 29] - l*r**2*B[0, 5] - l*r*v_y**3*B[0, 39] - l*r*v_y**2*y*B[0, 64] - l*r*v_y**2*B[0, 27] - l*r*v_y*y**2*B[0, 67] - l*r*v_y*y*B[0, 55] - l*r*v_y*B[0, 18] - l*r*y**3*B[0, 44] - l*r*y**2*B[0, 32] - l*r*y*B[0, 20] - l*r*B[0, 1] - l*v_y**4*B[0, 15] - l*v_y**3*y*B[0, 43] - l*v_y**3*B[0, 11] - l*v_y**2*y**2*B[0, 52] - l*v_y**2*y*B[0, 31] - l*v_y**2*B[0, 7] - l*v_y*y**3*B[0, 46] - l*v_y*y**2*B[0, 34] - l*v_y*y*B[0, 22] - l*v_y*B[0, 3] - l*y**4*B[0, 16] - l*y**3*B[0, 12] - l*y**2*B[0, 8] - l*y*B[0, 4] - l*B[0, 0] + 16.3*phi_e**4*B[0, 36]*t[0, 2] + 40*phi_e**4*B[0, 38]*t[0, 2] + 13.4*phi_e**4*B[0, 42] + 4*phi_e**3*r*B[0, 14] + 16.3*phi_e**3*r*B[0, 36]*t[0, 3] + 40*phi_e**3*r*B[0, 38]*t[0, 3] + 32.6*phi_e**3*r*B[0, 47]*t[0, 2] + 40*phi_e**3*r*B[0, 58]*t[0, 2] + 13.4*phi_e**3*r*B[0, 61] + 16.3*phi_e**3*v_y*B[0, 36]*t[0, 1] + 0.925*phi_e**3*v_y*B[0, 36] + 40*phi_e**3*v_y*B[0, 38]*t[0, 1] - 6.5*phi_e**3*v_y*B[0, 38] + phi_e**3*v_y*B[0, 42] + 80*phi_e**3*v_y*B[0, 49]*t[0, 2] + 16.3*phi_e**3*v_y*B[0, 58]*t[0, 2] + 13.4*phi_e**3*v_y*B[0, 63] + 16.3*phi_e**3*y*B[0, 36]*t[0, 0] + 40*phi_e**3*y*B[0, 38]*t[0, 0] + 26.8*phi_e**3*y*B[0, 51] + 16.3*phi_e**3*y*B[0, 61]*t[0, 2] + 40*phi_e**3*y*B[0, 63]*t[0, 2] + 16.3*phi_e**3*B[0, 24]*t[0, 2] + 40*phi_e**3*B[0, 26]*t[0, 2] + 13.4*phi_e**3*B[0, 30] + 48.9*phi_e**2*r**2*B[0, 35]*t[0, 2] + 3*phi_e**2*r**2*B[0, 36] + 32.6*phi_e**2*r**2*B[0, 47]*t[0, 3] + 40*phi_e**2*r**2*B[0, 57]*t[0, 2] + 40*phi_e**2*r**2*B[0, 58]*t[0, 3] + 13.4*phi_e**2*r**2*B[0, 60] + 3*phi_e**2*r*v_y*B[0, 38] + 32.6*phi_e**2*r*v_y*B[0, 47]*t[0, 1] + 1.85*phi_e**2*r*v_y*B[0, 47] + 80*phi_e**2*r*v_y*B[0, 49]*t[0, 3] + 32.6*phi_e**2*r*v_y*B[0, 57]*t[0, 2] + 40*phi_e**2*r*v_y*B[0, 58]*t[0, 1] + 16.3*phi_e**2*r*v_y*B[0, 58]*t[0, 3] - 6.5*phi_e**2*r*v_y*B[0, 58] + 80*phi_e**2*r*v_y*B[0, 59]*t[0, 2] + phi_e**2*r*v_y*B[0, 61] + 13.4*phi_e**2*r*v_y*B[0, 69] + 3*phi_e**2*r*y*B[0, 42] + 32.6*phi_e**2*r*y*B[0, 47]*t[0, 0] + 40*phi_e**2*r*y*B[0, 58]*t[0, 0] + 32.6*phi_e**2*r*y*B[0, 60]*t[0, 2] + 16.3*phi_e**2*r*y*B[0, 61]*t[0, 3] + 40*phi_e**2*r*y*B[0, 63]*t[0, 3] + 26.8*phi_e**2*r*y*B[0, 66] + 40*phi_e**2*r*y*B[0, 69]*t[0, 2] + 3*phi_e**2*r*B[0, 10] + 32.6*phi_e**2*r*B[0, 23]*t[0, 2] + 16.3*phi_e**2*r*B[0, 24]*t[0, 3] + 40*phi_e**2*r*B[0, 26]*t[0, 3] + 40*phi_e**2*r*B[0, 53]*t[0, 2] + 13.4*phi_e**2*r*B[0, 54] + 120*phi_e**2*v_y**2*B[0, 40]*t[0, 2] + 80*phi_e**2*v_y**2*B[0, 49]*t[0, 1] - 13.0*phi_e**2*v_y**2*B[0, 49] + 16.3*phi_e**2*v_y**2*B[0, 58]*t[0, 1] + 0.925*phi_e**2*v_y**2*B[0, 58] + 16.3*phi_e**2*v_y**2*B[0, 59]*t[0, 2] + phi_e**2*v_y**2*B[0, 63] + 13.4*phi_e**2*v_y**2*B[0, 65] + 80*phi_e**2*v_y*y*B[0, 49]*t[0, 0] + 2*phi_e**2*v_y*y*B[0, 51] + 16.3*phi_e**2*v_y*y*B[0, 58]*t[0, 0] + 16.3*phi_e**2*v_y*y*B[0, 61]*t[0, 1] + 0.925*phi_e**2*v_y*y*B[0, 61] + 40*phi_e**2*v_y*y*B[0, 63]*t[0, 1] - 6.5*phi_e**2*v_y*y*B[0, 63] + 80*phi_e**2*v_y*y*B[0, 65]*t[0, 2] + 26.8*phi_e**2*v_y*y*B[0, 68] + 16.3*phi_e**2*v_y*y*B[0, 69]*t[0, 2] + 16.3*phi_e**2*v_y*B[0, 24]*t[0, 1] + 0.925*phi_e**2*v_y*B[0, 24] + 40*phi_e**2*v_y*B[0, 26]*t[0, 1] - 6.5*phi_e**2*v_y*B[0, 26] + 80*phi_e**2*v_y*B[0, 28]*t[0, 2] + phi_e**2*v_y*B[0, 30] + 16.3*phi_e**2*v_y*B[0, 53]*t[0, 2] + 13.4*phi_e**2*v_y*B[0, 56] + 40.2*phi_e**2*y**2*B[0, 45] + 16.3*phi_e**2*y**2*B[0, 61]*t[0, 0] + 40*phi_e**2*y**2*B[0, 63]*t[0, 0] + 16.3*phi_e**2*y**2*B[0, 66]*t[0, 2] + 40*phi_e**2*y**2*B[0, 68]*t[0, 2] + 16.3*phi_e**2*y*B[0, 24]*t[0, 0] + 40*phi_e**2*y*B[0, 26]*t[0, 0] + 26.8*phi_e**2*y*B[0, 33] + 16.3*phi_e**2*y*B[0, 54]*t[0, 2] + 40*phi_e**2*y*B[0, 56]*t[0, 2] + 16.3*phi_e**2*B[0, 17]*t[0, 2] + 40*phi_e**2*B[0, 19]*t[0, 2] + 13.4*phi_e**2*B[0, 21] + 65.2*phi_e*r**3*B[0, 13]*t[0, 2] + 48.9*phi_e*r**3*B[0, 35]*t[0, 3] + 40*phi_e*r**3*B[0, 37]*t[0, 2] + 13.4*phi_e*r**3*B[0, 41] + 2*phi_e*r**3*B[0, 47] + 40*phi_e*r**3*B[0, 57]*t[0, 3] + 48.9*phi_e*r**2*v_y*B[0, 35]*t[0, 1] + 2.775*phi_e*r**2*v_y*B[0, 35] + 48.9*phi_e*r**2*v_y*B[0, 37]*t[0, 2] + 80*phi_e*r**2*v_y*B[0, 48]*t[0, 2] + 40*phi_e*r**2*v_y*B[0, 57]*t[0, 1] + 32.6*phi_e*r**2*v_y*B[0, 57]*t[0, 3] - 6.5*phi_e*r**2*v_y*B[0, 57] + 2*phi_e*r**2*v_y*B[0, 58] + 80*phi_e*r**2*v_y*B[0, 59]*t[0, 3] + phi_e*r**2*v_y*B[0, 60] + 13.4*phi_e*r**2*v_y*B[0, 62] + 48.9*phi_e*r**2*y*B[0, 35]*t[0, 0] + 48.9*phi_e*r**2*y*B[0, 41]*t[0, 2] + 26.8*phi_e*r**2*y*B[0, 50] + 40*phi_e*r**2*y*B[0, 57]*t[0, 0] + 32.6*phi_e*r**2*y*B[0, 60]*t[0, 3] + 2*phi_e*r**2*y*B[0, 61] + 40*phi_e*r**2*y*B[0, 62]*t[0, 2] + 40*phi_e*r**2*y*B[0, 69]*t[0, 3] + 48.9*phi_e*r**2*B[0, 9]*t[0, 2] + 32.6*phi_e*r**2*B[0, 23]*t[0, 3] + 2*phi_e*r**2*B[0, 24] + 40*phi_e*r**2*B[0, 25]*t[0, 2] + 13.4*phi_e*r**2*B[0, 29] + 40*phi_e*r**2*B[0, 53]*t[0, 3] + 120*phi_e*r*v_y**2*B[0, 39]*t[0, 2] + 120*phi_e*r*v_y**2*B[0, 40]*t[0, 3] + 32.6*phi_e*r*v_y**2*B[0, 48]*t[0, 2] + 2*phi_e*r*v_y**2*B[0, 49] + 32.6*phi_e*r*v_y**2*B[0, 57]*t[0, 1] + 1.85*phi_e*r*v_y**2*B[0, 57] + 80*phi_e*r*v_y**2*B[0, 59]*t[0, 1] + 16.3*phi_e*r*v_y**2*B[0, 59]*t[0, 3] - 13.0*phi_e*r*v_y**2*B[0, 59] + 13.4*phi_e*r*v_y**2*B[0, 64] + phi_e*r*v_y**2*B[0, 69] + 32.6*phi_e*r*v_y*y*B[0, 57]*t[0, 0] + 80*phi_e*r*v_y*y*B[0, 59]*t[0, 0] + 32.6*phi_e*r*v_y*y*B[0, 60]*t[0, 1] + 1.85*phi_e*r*v_y*y*B[0, 60] + 32.6*phi_e*r*v_y*y*B[0, 62]*t[0, 2] + 2*phi_e*r*v_y*y*B[0, 63] + 80*phi_e*r*v_y*y*B[0, 64]*t[0, 2] + 80*phi_e*r*v_y*y*B[0, 65]*t[0, 3] + 2*phi_e*r*v_y*y*B[0, 66] + 26.8*phi_e*r*v_y*y*B[0, 67] + 40*phi_e*r*v_y*y*B[0, 69]*t[0, 1] + 16.3*phi_e*r*v_y*y*B[0, 69]*t[0, 3] - 6.5*phi_e*r*v_y*y*B[0, 69] + 32.6*phi_e*r*v_y*B[0, 23]*t[0, 1] + 1.85*phi_e*r*v_y*B[0, 23] + 32.6*phi_e*r*v_y*B[0, 25]*t[0, 2] + 2*phi_e*r*v_y*B[0, 26] + 80*phi_e*r*v_y*B[0, 27]*t[0, 2] + 80*phi_e*r*v_y*B[0, 28]*t[0, 3] + 40*phi_e*r*v_y*B[0, 53]*t[0, 1] + 16.3*phi_e*r*v_y*B[0, 53]*t[0, 3] - 6.5*phi_e*r*v_y*B[0, 53] + phi_e*r*v_y*B[0, 54] + 13.4*phi_e*r*v_y*B[0, 55] + 40.2*phi_e*r*y**2*B[0, 44] + 32.6*phi_e*r*y**2*B[0, 50]*t[0, 2] + 2*phi_e*r*y**2*B[0, 51] + 32.6*phi_e*r*y**2*B[0, 60]*t[0, 0] + 16.3*phi_e*r*y**2*B[0, 66]*t[0, 3] + 40*phi_e*r*y**2*B[0, 67]*t[0, 2] + 40*phi_e*r*y**2*B[0, 68]*t[0, 3] + 40*phi_e*r*y**2*B[0, 69]*t[0, 0] + 32.6*phi_e*r*y*B[0, 23]*t[0, 0] + 32.6*phi_e*r*y*B[0, 29]*t[0, 2] + 2*phi_e*r*y*B[0, 30] + 26.8*phi_e*r*y*B[0, 32] + 40*phi_e*r*y*B[0, 53]*t[0, 0] + 16.3*phi_e*r*y*B[0, 54]*t[0, 3] + 40*phi_e*r*y*B[0, 55]*t[0, 2] + 40*phi_e*r*y*B[0, 56]*t[0, 3] + 32.6*phi_e*r*B[0, 5]*t[0, 2] + 2*phi_e*r*B[0, 6] + 16.3*phi_e*r*B[0, 17]*t[0, 3] + 40*phi_e*r*B[0, 18]*t[0, 2] + 40*phi_e*r*B[0, 19]*t[0, 3] + 13.4*phi_e*r*B[0, 20] + 160*phi_e*v_y**3*B[0, 15]*t[0, 2] + 16.3*phi_e*v_y**3*B[0, 39]*t[0, 2] + 120*phi_e*v_y**3*B[0, 40]*t[0, 1] - 19.5*phi_e*v_y**3*B[0, 40] + 13.4*phi_e*v_y**3*B[0, 43] + 16.3*phi_e*v_y**3*B[0, 59]*t[0, 1] + 0.925*phi_e*v_y**3*B[0, 59] + phi_e*v_y**3*B[0, 65] + 120*phi_e*v_y**2*y*B[0, 40]*t[0, 0] + 120*phi_e*v_y**2*y*B[0, 43]*t[0, 2] + 26.8*phi_e*v_y**2*y*B[0, 52] + 16.3*phi_e*v_y**2*y*B[0, 59]*t[0, 0] + 16.3*phi_e*v_y**2*y*B[0, 64]*t[0, 2] + 80*phi_e*v_y**2*y*B[0, 65]*t[0, 1] - 13.0*phi_e*v_y**2*y*B[0, 65] + 2*phi_e*v_y**2*y*B[0, 68] + 16.3*phi_e*v_y**2*y*B[0, 69]*t[0, 1] + 0.925*phi_e*v_y**2*y*B[0, 69] + 120*phi_e*v_y**2*B[0, 11]*t[0, 2] + 16.3*phi_e*v_y**2*B[0, 27]*t[0, 2] + 80*phi_e*v_y**2*B[0, 28]*t[0, 1] - 13.0*phi_e*v_y**2*B[0, 28] + 13.4*phi_e*v_y**2*B[0, 31] + 16.3*phi_e*v_y**2*B[0, 53]*t[0, 1] + 0.925*phi_e*v_y**2*B[0, 53] + phi_e*v_y**2*B[0, 56] + 3*phi_e*v_y*y**2*B[0, 45] + 40.2*phi_e*v_y*y**2*B[0, 46] + 80*phi_e*v_y*y**2*B[0, 52]*t[0, 2] + 80*phi_e*v_y*y**2*B[0, 65]*t[0, 0] + 16.3*phi_e*v_y*y**2*B[0, 66]*t[0, 1] + 0.925*phi_e*v_y*y**2*B[0, 66] + 16.3*phi_e*v_y*y**2*B[0, 67]*t[0, 2] + 40*phi_e*v_y*y**2*B[0, 68]*t[0, 1] - 6.5*phi_e*v_y*y**2*B[0, 68] + 16.3*phi_e*v_y*y**2*B[0, 69]*t[0, 0] + 80*phi_e*v_y*y*B[0, 28]*t[0, 0] + 80*phi_e*v_y*y*B[0, 31]*t[0, 2] + 2*phi_e*v_y*y*B[0, 33] + 26.8*phi_e*v_y*y*B[0, 34] + 16.3*phi_e*v_y*y*B[0, 53]*t[0, 0] + 16.3*phi_e*v_y*y*B[0, 54]*t[0, 1] + 0.925*phi_e*v_y*y*B[0, 54] + 16.3*phi_e*v_y*y*B[0, 55]*t[0, 2] + 40*phi_e*v_y*y*B[0, 56]*t[0, 1] - 6.5*phi_e*v_y*y*B[0, 56] + 80*phi_e*v_y*B[0, 7]*t[0, 2] + 16.3*phi_e*v_y*B[0, 17]*t[0, 1] + 0.925*phi_e*v_y*B[0, 17] + 16.3*phi_e*v_y*B[0, 18]*t[0, 2] + 40*phi_e*v_y*B[0, 19]*t[0, 1] - 6.5*phi_e*v_y*B[0, 19] + phi_e*v_y*B[0, 21] + 13.4*phi_e*v_y*B[0, 22] + 53.6*phi_e*y**3*B[0, 16] + 16.3*phi_e*y**3*B[0, 44]*t[0, 2] + 40*phi_e*y**3*B[0, 46]*t[0, 2] + 16.3*phi_e*y**3*B[0, 66]*t[0, 0] + 40*phi_e*y**3*B[0, 68]*t[0, 0] + 40.2*phi_e*y**2*B[0, 12] + 16.3*phi_e*y**2*B[0, 32]*t[0, 2] + 40*phi_e*y**2*B[0, 34]*t[0, 2] + 16.3*phi_e*y**2*B[0, 54]*t[0, 0] + 40*phi_e*y**2*B[0, 56]*t[0, 0] + 26.8*phi_e*y*B[0, 8] + 16.3*phi_e*y*B[0, 17]*t[0, 0] + 40*phi_e*y*B[0, 19]*t[0, 0] + 16.3*phi_e*y*B[0, 20]*t[0, 2] + 40*phi_e*y*B[0, 22]*t[0, 2] + 16.3*phi_e*B[0, 1]*t[0, 2] + 40*phi_e*B[0, 3]*t[0, 2] + 13.4*phi_e*B[0, 4] + 65.2*r**4*B[0, 13]*t[0, 3] + r**4*B[0, 35] + 40*r**4*B[0, 37]*t[0, 3] + 65.2*r**3*v_y*B[0, 13]*t[0, 1] + 3.7*r**3*v_y*B[0, 13] + 40*r**3*v_y*B[0, 37]*t[0, 1] + 48.9*r**3*v_y*B[0, 37]*t[0, 3] - 6.5*r**3*v_y*B[0, 37] + r**3*v_y*B[0, 41] + 80*r**3*v_y*B[0, 48]*t[0, 3] + r**3*v_y*B[0, 57] + 65.2*r**3*y*B[0, 13]*t[0, 0] + 40*r**3*y*B[0, 37]*t[0, 0] + 48.9*r**3*y*B[0, 41]*t[0, 3] + r**3*y*B[0, 60] + 40*r**3*y*B[0, 62]*t[0, 3] + 48.9*r**3*B[0, 9]*t[0, 3] + r**3*B[0, 23] + 40*r**3*B[0, 25]*t[0, 3] + 48.9*r**2*v_y**2*B[0, 37]*t[0, 1] + 2.775*r**2*v_y**2*B[0, 37] + 120*r**2*v_y**2*B[0, 39]*t[0, 3] + 80*r**2*v_y**2*B[0, 48]*t[0, 1] + 32.6*r**2*v_y**2*B[0, 48]*t[0, 3] - 13.0*r**2*v_y**2*B[0, 48] + r**2*v_y**2*B[0, 59] + r**2*v_y**2*B[0, 62] + 48.9*r**2*v_y*y*B[0, 37]*t[0, 0] + 48.9*r**2*v_y*y*B[0, 41]*t[0, 1] + 2.775*r**2*v_y*y*B[0, 41] + 80*r**2*v_y*y*B[0, 48]*t[0, 0] + 2*r**2*v_y*y*B[0, 50] + 40*r**2*v_y*y*B[0, 62]*t[0, 1] + 32.6*r**2*v_y*y*B[0, 62]*t[0, 3] - 6.5*r**2*v_y*y*B[0, 62] + 80*r**2*v_y*y*B[0, 64]*t[0, 3] + r**2*v_y*y*B[0, 69] + 48.9*r**2*v_y*B[0, 9]*t[0, 1] + 2.775*r**2*v_y*B[0, 9] + 40*r**2*v_y*B[0, 25]*t[0, 1] + 32.6*r**2*v_y*B[0, 25]*t[0, 3] - 6.5*r**2*v_y*B[0, 25] + 80*r**2*v_y*B[0, 27]*t[0, 3] + r**2*v_y*B[0, 29] + r**2*v_y*B[0, 53] + 48.9*r**2*y**2*B[0, 41]*t[0, 0] + 32.6*r**2*y**2*B[0, 50]*t[0, 3] + 40*r**2*y**2*B[0, 62]*t[0, 0] + r**2*y**2*B[0, 66] + 40*r**2*y**2*B[0, 67]*t[0, 3] + 48.9*r**2*y*B[0, 9]*t[0, 0] + 40*r**2*y*B[0, 25]*t[0, 0] + 32.6*r**2*y*B[0, 29]*t[0, 3] + r**2*y*B[0, 54] + 40*r**2*y*B[0, 55]*t[0, 3] + 32.6*r**2*B[0, 5]*t[0, 3] + r**2*B[0, 17] + 40*r**2*B[0, 18]*t[0, 3] + 160*r*v_y**3*B[0, 15]*t[0, 3] + 120*r*v_y**3*B[0, 39]*t[0, 1] + 16.3*r*v_y**3*B[0, 39]*t[0, 3] - 19.5*r*v_y**3*B[0, 39] + r*v_y**3*B[0, 40] + 32.6*r*v_y**3*B[0, 48]*t[0, 1] + 1.85*r*v_y**3*B[0, 48] + r*v_y**3*B[0, 64] + 120*r*v_y**2*y*B[0, 39]*t[0, 0] + 120*r*v_y**2*y*B[0, 43]*t[0, 3] + 32.6*r*v_y**2*y*B[0, 48]*t[0, 0] + 32.6*r*v_y**2*y*B[0, 62]*t[0, 1] + 1.85*r*v_y**2*y*B[0, 62] + 80*r*v_y**2*y*B[0, 64]*t[0, 1] + 16.3*r*v_y**2*y*B[0, 64]*t[0, 3] - 13.0*r*v_y**2*y*B[0, 64] + r*v_y**2*y*B[0, 65] + 2*r*v_y**2*y*B[0, 67] + 120*r*v_y**2*B[0, 11]*t[0, 3] + 32.6*r*v_y**2*B[0, 25]*t[0, 1] + 1.85*r*v_y**2*B[0, 25] + 80*r*v_y**2*B[0, 27]*t[0, 1] + 16.3*r*v_y**2*B[0, 27]*t[0, 3] - 13.0*r*v_y**2*B[0, 27] + r*v_y**2*B[0, 28] + r*v_y**2*B[0, 55] + 3*r*v_y*y**2*B[0, 44] + 32.6*r*v_y*y**2*B[0, 50]*t[0, 1] + 1.85*r*v_y*y**2*B[0, 50] + 80*r*v_y*y**2*B[0, 52]*t[0, 3] + 32.6*r*v_y*y**2*B[0, 62]*t[0, 0] + 80*r*v_y*y**2*B[0, 64]*t[0, 0] + 40*r*v_y*y**2*B[0, 67]*t[0, 1] + 16.3*r*v_y*y**2*B[0, 67]*t[0, 3] - 6.5*r*v_y*y**2*B[0, 67] + r*v_y*y**2*B[0, 68] + 32.6*r*v_y*y*B[0, 25]*t[0, 0] + 80*r*v_y*y*B[0, 27]*t[0, 0] + 32.6*r*v_y*y*B[0, 29]*t[0, 1] + 1.85*r*v_y*y*B[0, 29] + 80*r*v_y*y*B[0, 31]*t[0, 3] + 2*r*v_y*y*B[0, 32] + 40*r*v_y*y*B[0, 55]*t[0, 1] + 16.3*r*v_y*y*B[0, 55]*t[0, 3] - 6.5*r*v_y*y*B[0, 55] + r*v_y*y*B[0, 56] + 32.6*r*v_y*B[0, 5]*t[0, 1] + 1.85*r*v_y*B[0, 5] + 80*r*v_y*B[0, 7]*t[0, 3] + 40*r*v_y*B[0, 18]*t[0, 1] + 16.3*r*v_y*B[0, 18]*t[0, 3] - 6.5*r*v_y*B[0, 18] + r*v_y*B[0, 19] + r*v_y*B[0, 20] + 16.3*r*y**3*B[0, 44]*t[0, 3] + r*y**3*B[0, 45] + 40*r*y**3*B[0, 46]*t[0, 3] + 32.6*r*y**3*B[0, 50]*t[0, 0] + 40*r*y**3*B[0, 67]*t[0, 0] + 32.6*r*y**2*B[0, 29]*t[0, 0] + 16.3*r*y**2*B[0, 32]*t[0, 3] + r*y**2*B[0, 33] + 40*r*y**2*B[0, 34]*t[0, 3] + 40*r*y**2*B[0, 55]*t[0, 0] + 32.6*r*y*B[0, 5]*t[0, 0] + 40*r*y*B[0, 18]*t[0, 0] + 16.3*r*y*B[0, 20]*t[0, 3] + r*y*B[0, 21] + 40*r*y*B[0, 22]*t[0, 3] + 16.3*r*B[0, 1]*t[0, 3] + r*B[0, 2] + 40*r*B[0, 3]*t[0, 3] + 160*v_y**4*B[0, 15]*t[0, 1] - 26.0*v_y**4*B[0, 15] + 16.3*v_y**4*B[0, 39]*t[0, 1] + 0.925*v_y**4*B[0, 39] + v_y**4*B[0, 43] + 160*v_y**3*y*B[0, 15]*t[0, 0] + 16.3*v_y**3*y*B[0, 39]*t[0, 0] + 120*v_y**3*y*B[0, 43]*t[0, 1] - 19.5*v_y**3*y*B[0, 43] + 2*v_y**3*y*B[0, 52] + 16.3*v_y**3*y*B[0, 64]*t[0, 1] + 0.925*v_y**3*y*B[0, 64] + 120*v_y**3*B[0, 11]*t[0, 1] - 19.5*v_y**3*B[0, 11] + 16.3*v_y**3*B[0, 27]*t[0, 1] + 0.925*v_y**3*B[0, 27] + v_y**3*B[0, 31] + 120*v_y**2*y**2*B[0, 43]*t[0, 0] + 3*v_y**2*y**2*B[0, 46] + 80*v_y**2*y**2*B[0, 52]*t[0, 1] - 13.0*v_y**2*y**2*B[0, 52] + 16.3*v_y**2*y**2*B[0, 64]*t[0, 0] + 16.3*v_y**2*y**2*B[0, 67]*t[0, 1] + 0.925*v_y**2*y**2*B[0, 67] + 120*v_y**2*y*B[0, 11]*t[0, 0] + 16.3*v_y**2*y*B[0, 27]*t[0, 0] + 80*v_y**2*y*B[0, 31]*t[0, 1] - 13.0*v_y**2*y*B[0, 31] + 2*v_y**2*y*B[0, 34] + 16.3*v_y**2*y*B[0, 55]*t[0, 1] + 0.925*v_y**2*y*B[0, 55] + 80*v_y**2*B[0, 7]*t[0, 1] - 13.0*v_y**2*B[0, 7] + 16.3*v_y**2*B[0, 18]*t[0, 1] + 0.925*v_y**2*B[0, 18] + v_y**2*B[0, 22] + 4*v_y*y**3*B[0, 16] + 16.3*v_y*y**3*B[0, 44]*t[0, 1] + 0.925*v_y*y**3*B[0, 44] + 40*v_y*y**3*B[0, 46]*t[0, 1] - 6.5*v_y*y**3*B[0, 46] + 80*v_y*y**3*B[0, 52]*t[0, 0] + 16.3*v_y*y**3*B[0, 67]*t[0, 0] + 3*v_y*y**2*B[0, 12] + 80*v_y*y**2*B[0, 31]*t[0, 0] + 16.3*v_y*y**2*B[0, 32]*t[0, 1] + 0.925*v_y*y**2*B[0, 32] + 40*v_y*y**2*B[0, 34]*t[0, 1] - 6.5*v_y*y**2*B[0, 34] + 16.3*v_y*y**2*B[0, 55]*t[0, 0] + 80*v_y*y*B[0, 7]*t[0, 0] + 2*v_y*y*B[0, 8] + 16.3*v_y*y*B[0, 18]*t[0, 0] + 16.3*v_y*y*B[0, 20]*t[0, 1] + 0.925*v_y*y*B[0, 20] + 40*v_y*y*B[0, 22]*t[0, 1] - 6.5*v_y*y*B[0, 22] + 16.3*v_y*B[0, 1]*t[0, 1] + 0.925*v_y*B[0, 1] + 40*v_y*B[0, 3]*t[0, 1] - 6.5*v_y*B[0, 3] + v_y*B[0, 4] + 16.3*y**4*B[0, 44]*t[0, 0] + 40*y**4*B[0, 46]*t[0, 0] + 16.3*y**3*B[0, 32]*t[0, 0] + 40*y**3*B[0, 34]*t[0, 0] + 16.3*y**2*B[0, 20]*t[0, 0] + 40*y**2*B[0, 22]*t[0, 0] + 16.3*y*B[0, 1]*t[0, 0] + 40*y*B[0, 3]*t[0, 0]
		# lie = g*phi_e**3*r*B[0, 36] + 2*g*phi_e**2*r**2*B[0, 47] + g*phi_e**2*r*v_y*B[0, 58] + g*phi_e**2*r*y*B[0, 61] + g*phi_e**2*r*B[0, 24] + 3*g*phi_e*r**3*B[0, 35] + 2*g*phi_e*r**2*v_y*B[0, 57] + 2*g*phi_e*r**2*y*B[0, 60] + 2*g*phi_e*r**2*B[0, 23] + g*phi_e*r*v_y**2*B[0, 59] + g*phi_e*r*v_y*y*B[0, 69] + g*phi_e*r*v_y*B[0, 53] + g*phi_e*r*y**2*B[0, 66] + g*phi_e*r*y*B[0, 54] + g*phi_e*r*B[0, 17] + 4*g*r**4*B[0, 13] + 3*g*r**3*v_y*B[0, 37] + 3*g*r**3*y*B[0, 41] + 3*g*r**3*B[0, 9] + 2*g*r**2*v_y**2*B[0, 48] + 2*g*r**2*v_y*y*B[0, 62] + 2*g*r**2*v_y*B[0, 25] + 2*g*r**2*y**2*B[0, 50] + 2*g*r**2*y*B[0, 29] + 2*g*r**2*B[0, 5] + g*r*v_y**3*B[0, 39] + g*r*v_y**2*y*B[0, 64] + g*r*v_y**2*B[0, 27] + g*r*v_y*y**2*B[0, 67] + g*r*v_y*y*B[0, 55] + g*r*v_y*B[0, 18] + g*r*y**3*B[0, 44] + g*r*y**2*B[0, 32] + g*r*y*B[0, 20] + g*r*B[0, 1] + k*phi_e**3*r*B[0, 38] + k*phi_e**2*r**2*B[0, 58] + 2*k*phi_e**2*r*v_y*B[0, 49] + k*phi_e**2*r*y*B[0, 63] + k*phi_e**2*r*B[0, 26] + k*phi_e*r**3*B[0, 57] + 2*k*phi_e*r**2*v_y*B[0, 59] + k*phi_e*r**2*y*B[0, 69] + k*phi_e*r**2*B[0, 53] + 3*k*phi_e*r*v_y**2*B[0, 40] + 2*k*phi_e*r*v_y*y*B[0, 65] + 2*k*phi_e*r*v_y*B[0, 28] + k*phi_e*r*y**2*B[0, 68] + k*phi_e*r*y*B[0, 56] + k*phi_e*r*B[0, 19] + k*r**4*B[0, 37] + 2*k*r**3*v_y*B[0, 48] + k*r**3*y*B[0, 62] + k*r**3*B[0, 25] + 3*k*r**2*v_y**2*B[0, 39] + 2*k*r**2*v_y*y*B[0, 64] + 2*k*r**2*v_y*B[0, 27] + k*r**2*y**2*B[0, 67] + k*r**2*y*B[0, 55] + k*r**2*B[0, 18] + 4*k*r*v_y**3*B[0, 15] + 3*k*r*v_y**2*y*B[0, 43] + 3*k*r*v_y**2*B[0, 11] + 2*k*r*v_y*y**2*B[0, 52] + 2*k*r*v_y*y*B[0, 31] + 2*k*r*v_y*B[0, 7] + k*r*y**3*B[0, 46] + k*r*y**2*B[0, 34] + k*r*y*B[0, 22] + k*r*B[0, 3] - l*phi_e**4*B[0, 14] - l*phi_e**3*r*B[0, 36] - l*phi_e**3*v_y*B[0, 38] - l*phi_e**3*y*B[0, 42] - l*phi_e**3*B[0, 10] - l*phi_e**2*r**2*B[0, 47] - l*phi_e**2*r*v_y*B[0, 58] - l*phi_e**2*r*y*B[0, 61] - l*phi_e**2*r*B[0, 24] - l*phi_e**2*v_y**2*B[0, 49] - l*phi_e**2*v_y*y*B[0, 63] - l*phi_e**2*v_y*B[0, 26] - l*phi_e**2*y**2*B[0, 51] - l*phi_e**2*y*B[0, 30] - l*phi_e**2*B[0, 6] - l*phi_e*r**3*B[0, 35] - l*phi_e*r**2*v_y*B[0, 57] - l*phi_e*r**2*y*B[0, 60] - l*phi_e*r**2*B[0, 23] - l*phi_e*r*v_y**2*B[0, 59] - l*phi_e*r*v_y*y*B[0, 69] - l*phi_e*r*v_y*B[0, 53] - l*phi_e*r*y**2*B[0, 66] - l*phi_e*r*y*B[0, 54] - l*phi_e*r*B[0, 17] - l*phi_e*v_y**3*B[0, 40] - l*phi_e*v_y**2*y*B[0, 65] - l*phi_e*v_y**2*B[0, 28] - l*phi_e*v_y*y**2*B[0, 68] - l*phi_e*v_y*y*B[0, 56] - l*phi_e*v_y*B[0, 19] - l*phi_e*y**3*B[0, 45] - l*phi_e*y**2*B[0, 33] - l*phi_e*y*B[0, 21] - l*phi_e*B[0, 2] - l*r**4*B[0, 13] - l*r**3*v_y*B[0, 37] - l*r**3*y*B[0, 41] - l*r**3*B[0, 9] - l*r**2*v_y**2*B[0, 48] - l*r**2*v_y*y*B[0, 62] - l*r**2*v_y*B[0, 25] - l*r**2*y**2*B[0, 50] - l*r**2*y*B[0, 29] - l*r**2*B[0, 5] - l*r*v_y**3*B[0, 39] - l*r*v_y**2*y*B[0, 64] - l*r*v_y**2*B[0, 27] - l*r*v_y*y**2*B[0, 67] - l*r*v_y*y*B[0, 55] - l*r*v_y*B[0, 18] - l*r*y**3*B[0, 44] - l*r*y**2*B[0, 32] - l*r*y*B[0, 20] - l*r*B[0, 1] - l*v_y**4*B[0, 15] - l*v_y**3*y*B[0, 43] - l*v_y**3*B[0, 11] - l*v_y**2*y**2*B[0, 52] - l*v_y**2*y*B[0, 31] - l*v_y**2*B[0, 7] - l*v_y*y**3*B[0, 46] - l*v_y*y**2*B[0, 34] - l*v_y*y*B[0, 22] - l*v_y*B[0, 3] - l*y**4*B[0, 16] - l*y**3*B[0, 12] - l*y**2*B[0, 8] - l*y*B[0, 4] - l*B[0, 0] + 16.3*phi_e**4*B[0, 36]*t[0, 2] + 40*phi_e**4*B[0, 38]*t[0, 2] + 13.4*phi_e**4*B[0, 42] + 4*phi_e**3*r*B[0, 14] + 16.3*phi_e**3*r*B[0, 36]*t[0, 3] + 40*phi_e**3*r*B[0, 38]*t[0, 3] + 32.6*phi_e**3*r*B[0, 47]*t[0, 2] + 40*phi_e**3*r*B[0, 58]*t[0, 2] + 13.4*phi_e**3*r*B[0, 61] + 16.3*phi_e**3*v_y*B[0, 36]*t[0, 1] + 0.925*phi_e**3*v_y*B[0, 36] + 40*phi_e**3*v_y*B[0, 38]*t[0, 1] - 6.5*phi_e**3*v_y*B[0, 38] + phi_e**3*v_y*B[0, 42] + 80*phi_e**3*v_y*B[0, 49]*t[0, 2] + 16.3*phi_e**3*v_y*B[0, 58]*t[0, 2] + 13.4*phi_e**3*v_y*B[0, 63] + 16.3*phi_e**3*y*B[0, 36]*t[0, 0] + 40*phi_e**3*y*B[0, 38]*t[0, 0] + 26.8*phi_e**3*y*B[0, 51] + 16.3*phi_e**3*y*B[0, 61]*t[0, 2] + 40*phi_e**3*y*B[0, 63]*t[0, 2] + 16.3*phi_e**3*B[0, 24]*t[0, 2] + 40*phi_e**3*B[0, 26]*t[0, 2] + 13.4*phi_e**3*B[0, 30] + 48.9*phi_e**2*r**2*B[0, 35]*t[0, 2] + 3*phi_e**2*r**2*B[0, 36] + 32.6*phi_e**2*r**2*B[0, 47]*t[0, 3] + 40*phi_e**2*r**2*B[0, 57]*t[0, 2] + 40*phi_e**2*r**2*B[0, 58]*t[0, 3] + 13.4*phi_e**2*r**2*B[0, 60] + 3*phi_e**2*r*v_y*B[0, 38] + 32.6*phi_e**2*r*v_y*B[0, 47]*t[0, 1] + 1.85*phi_e**2*r*v_y*B[0, 47] + 80*phi_e**2*r*v_y*B[0, 49]*t[0, 3] + 32.6*phi_e**2*r*v_y*B[0, 57]*t[0, 2] + 40*phi_e**2*r*v_y*B[0, 58]*t[0, 1] + 16.3*phi_e**2*r*v_y*B[0, 58]*t[0, 3] - 6.5*phi_e**2*r*v_y*B[0, 58] + 80*phi_e**2*r*v_y*B[0, 59]*t[0, 2] + phi_e**2*r*v_y*B[0, 61] + 13.4*phi_e**2*r*v_y*B[0, 69] + 3*phi_e**2*r*y*B[0, 42] + 32.6*phi_e**2*r*y*B[0, 47]*t[0, 0] + 40*phi_e**2*r*y*B[0, 58]*t[0, 0] + 32.6*phi_e**2*r*y*B[0, 60]*t[0, 2] + 16.3*phi_e**2*r*y*B[0, 61]*t[0, 3] + 40*phi_e**2*r*y*B[0, 63]*t[0, 3] + 26.8*phi_e**2*r*y*B[0, 66] + 40*phi_e**2*r*y*B[0, 69]*t[0, 2] + 3*phi_e**2*r*B[0, 10] + 32.6*phi_e**2*r*B[0, 23]*t[0, 2] + 16.3*phi_e**2*r*B[0, 24]*t[0, 3] + 40*phi_e**2*r*B[0, 26]*t[0, 3] + 40*phi_e**2*r*B[0, 53]*t[0, 2] + 13.4*phi_e**2*r*B[0, 54] + 120*phi_e**2*v_y**2*B[0, 40]*t[0, 2] + 80*phi_e**2*v_y**2*B[0, 49]*t[0, 1] - 13.0*phi_e**2*v_y**2*B[0, 49] + 16.3*phi_e**2*v_y**2*B[0, 58]*t[0, 1] + 0.925*phi_e**2*v_y**2*B[0, 58] + 16.3*phi_e**2*v_y**2*B[0, 59]*t[0, 2] + phi_e**2*v_y**2*B[0, 63] + 13.4*phi_e**2*v_y**2*B[0, 65] + 80*phi_e**2*v_y*y*B[0, 49]*t[0, 0] + 2*phi_e**2*v_y*y*B[0, 51] + 16.3*phi_e**2*v_y*y*B[0, 58]*t[0, 0] + 16.3*phi_e**2*v_y*y*B[0, 61]*t[0, 1] + 0.925*phi_e**2*v_y*y*B[0, 61] + 40*phi_e**2*v_y*y*B[0, 63]*t[0, 1] - 6.5*phi_e**2*v_y*y*B[0, 63] + 80*phi_e**2*v_y*y*B[0, 65]*t[0, 2] + 26.8*phi_e**2*v_y*y*B[0, 68] + 16.3*phi_e**2*v_y*y*B[0, 69]*t[0, 2] + 16.3*phi_e**2*v_y*B[0, 24]*t[0, 1] + 0.925*phi_e**2*v_y*B[0, 24] + 40*phi_e**2*v_y*B[0, 26]*t[0, 1] - 6.5*phi_e**2*v_y*B[0, 26] + 80*phi_e**2*v_y*B[0, 28]*t[0, 2] + phi_e**2*v_y*B[0, 30] + 16.3*phi_e**2*v_y*B[0, 53]*t[0, 2] + 13.4*phi_e**2*v_y*B[0, 56] + 40.2*phi_e**2*y**2*B[0, 45] + 16.3*phi_e**2*y**2*B[0, 61]*t[0, 0] + 40*phi_e**2*y**2*B[0, 63]*t[0, 0] + 16.3*phi_e**2*y**2*B[0, 66]*t[0, 2] + 40*phi_e**2*y**2*B[0, 68]*t[0, 2] + 16.3*phi_e**2*y*B[0, 24]*t[0, 0] + 40*phi_e**2*y*B[0, 26]*t[0, 0] + 26.8*phi_e**2*y*B[0, 33] + 16.3*phi_e**2*y*B[0, 54]*t[0, 2] + 40*phi_e**2*y*B[0, 56]*t[0, 2] + 16.3*phi_e**2*B[0, 17]*t[0, 2] + 40*phi_e**2*B[0, 19]*t[0, 2] + 13.4*phi_e**2*B[0, 21] + 65.2*phi_e*r**3*B[0, 13]*t[0, 2] + 48.9*phi_e*r**3*B[0, 35]*t[0, 3] + 40*phi_e*r**3*B[0, 37]*t[0, 2] + 13.4*phi_e*r**3*B[0, 41] + 2*phi_e*r**3*B[0, 47] + 40*phi_e*r**3*B[0, 57]*t[0, 3] + 48.9*phi_e*r**2*v_y*B[0, 35]*t[0, 1] + 2.775*phi_e*r**2*v_y*B[0, 35] + 48.9*phi_e*r**2*v_y*B[0, 37]*t[0, 2] + 80*phi_e*r**2*v_y*B[0, 48]*t[0, 2] + 40*phi_e*r**2*v_y*B[0, 57]*t[0, 1] + 32.6*phi_e*r**2*v_y*B[0, 57]*t[0, 3] - 6.5*phi_e*r**2*v_y*B[0, 57] + 2*phi_e*r**2*v_y*B[0, 58] + 80*phi_e*r**2*v_y*B[0, 59]*t[0, 3] + phi_e*r**2*v_y*B[0, 60] + 13.4*phi_e*r**2*v_y*B[0, 62] + 48.9*phi_e*r**2*y*B[0, 35]*t[0, 0] + 48.9*phi_e*r**2*y*B[0, 41]*t[0, 2] + 26.8*phi_e*r**2*y*B[0, 50] + 40*phi_e*r**2*y*B[0, 57]*t[0, 0] + 32.6*phi_e*r**2*y*B[0, 60]*t[0, 3] + 2*phi_e*r**2*y*B[0, 61] + 40*phi_e*r**2*y*B[0, 62]*t[0, 2] + 40*phi_e*r**2*y*B[0, 69]*t[0, 3] + 48.9*phi_e*r**2*B[0, 9]*t[0, 2] + 32.6*phi_e*r**2*B[0, 23]*t[0, 3] + 2*phi_e*r**2*B[0, 24] + 40*phi_e*r**2*B[0, 25]*t[0, 2] + 13.4*phi_e*r**2*B[0, 29] + 40*phi_e*r**2*B[0, 53]*t[0, 3] + 120*phi_e*r*v_y**2*B[0, 39]*t[0, 2] + 120*phi_e*r*v_y**2*B[0, 40]*t[0, 3] + 32.6*phi_e*r*v_y**2*B[0, 48]*t[0, 2] + 2*phi_e*r*v_y**2*B[0, 49] + 32.6*phi_e*r*v_y**2*B[0, 57]*t[0, 1] + 1.85*phi_e*r*v_y**2*B[0, 57] + 80*phi_e*r*v_y**2*B[0, 59]*t[0, 1] + 16.3*phi_e*r*v_y**2*B[0, 59]*t[0, 3] - 13.0*phi_e*r*v_y**2*B[0, 59] + 13.4*phi_e*r*v_y**2*B[0, 64] + phi_e*r*v_y**2*B[0, 69] + 32.6*phi_e*r*v_y*y*B[0, 57]*t[0, 0] + 80*phi_e*r*v_y*y*B[0, 59]*t[0, 0] + 32.6*phi_e*r*v_y*y*B[0, 60]*t[0, 1] + 1.85*phi_e*r*v_y*y*B[0, 60] + 32.6*phi_e*r*v_y*y*B[0, 62]*t[0, 2] + 2*phi_e*r*v_y*y*B[0, 63] + 80*phi_e*r*v_y*y*B[0, 64]*t[0, 2] + 80*phi_e*r*v_y*y*B[0, 65]*t[0, 3] + 2*phi_e*r*v_y*y*B[0, 66] + 26.8*phi_e*r*v_y*y*B[0, 67] + 40*phi_e*r*v_y*y*B[0, 69]*t[0, 1] + 16.3*phi_e*r*v_y*y*B[0, 69]*t[0, 3] - 6.5*phi_e*r*v_y*y*B[0, 69] + 32.6*phi_e*r*v_y*B[0, 23]*t[0, 1] + 1.85*phi_e*r*v_y*B[0, 23] + 32.6*phi_e*r*v_y*B[0, 25]*t[0, 2] + 2*phi_e*r*v_y*B[0, 26] + 80*phi_e*r*v_y*B[0, 27]*t[0, 2] + 80*phi_e*r*v_y*B[0, 28]*t[0, 3] + 40*phi_e*r*v_y*B[0, 53]*t[0, 1] + 16.3*phi_e*r*v_y*B[0, 53]*t[0, 3] - 6.5*phi_e*r*v_y*B[0, 53] + phi_e*r*v_y*B[0, 54] + 13.4*phi_e*r*v_y*B[0, 55] + 40.2*phi_e*r*y**2*B[0, 44] + 32.6*phi_e*r*y**2*B[0, 50]*t[0, 2] + 2*phi_e*r*y**2*B[0, 51] + 32.6*phi_e*r*y**2*B[0, 60]*t[0, 0] + 16.3*phi_e*r*y**2*B[0, 66]*t[0, 3] + 40*phi_e*r*y**2*B[0, 67]*t[0, 2] + 40*phi_e*r*y**2*B[0, 68]*t[0, 3] + 40*phi_e*r*y**2*B[0, 69]*t[0, 0] + 32.6*phi_e*r*y*B[0, 23]*t[0, 0] + 32.6*phi_e*r*y*B[0, 29]*t[0, 2] + 2*phi_e*r*y*B[0, 30] + 26.8*phi_e*r*y*B[0, 32] + 40*phi_e*r*y*B[0, 53]*t[0, 0] + 16.3*phi_e*r*y*B[0, 54]*t[0, 3] + 40*phi_e*r*y*B[0, 55]*t[0, 2] + 40*phi_e*r*y*B[0, 56]*t[0, 3] + 32.6*phi_e*r*B[0, 5]*t[0, 2] + 2*phi_e*r*B[0, 6] + 16.3*phi_e*r*B[0, 17]*t[0, 3] + 40*phi_e*r*B[0, 18]*t[0, 2] + 40*phi_e*r*B[0, 19]*t[0, 3] + 13.4*phi_e*r*B[0, 20] + 160*phi_e*v_y**3*B[0, 15]*t[0, 2] + 16.3*phi_e*v_y**3*B[0, 39]*t[0, 2] + 120*phi_e*v_y**3*B[0, 40]*t[0, 1] - 19.5*phi_e*v_y**3*B[0, 40] + 13.4*phi_e*v_y**3*B[0, 43] + 16.3*phi_e*v_y**3*B[0, 59]*t[0, 1] + 0.925*phi_e*v_y**3*B[0, 59] + phi_e*v_y**3*B[0, 65] + 120*phi_e*v_y**2*y*B[0, 40]*t[0, 0] + 120*phi_e*v_y**2*y*B[0, 43]*t[0, 2] + 26.8*phi_e*v_y**2*y*B[0, 52] + 16.3*phi_e*v_y**2*y*B[0, 59]*t[0, 0] + 16.3*phi_e*v_y**2*y*B[0, 64]*t[0, 2] + 80*phi_e*v_y**2*y*B[0, 65]*t[0, 1] - 13.0*phi_e*v_y**2*y*B[0, 65] + 2*phi_e*v_y**2*y*B[0, 68] + 16.3*phi_e*v_y**2*y*B[0, 69]*t[0, 1] + 0.925*phi_e*v_y**2*y*B[0, 69] + 120*phi_e*v_y**2*B[0, 11]*t[0, 2] + 16.3*phi_e*v_y**2*B[0, 27]*t[0, 2] + 80*phi_e*v_y**2*B[0, 28]*t[0, 1] - 13.0*phi_e*v_y**2*B[0, 28] + 13.4*phi_e*v_y**2*B[0, 31] + 16.3*phi_e*v_y**2*B[0, 53]*t[0, 1] + 0.925*phi_e*v_y**2*B[0, 53] + phi_e*v_y**2*B[0, 56] + 3*phi_e*v_y*y**2*B[0, 45] + 40.2*phi_e*v_y*y**2*B[0, 46] + 80*phi_e*v_y*y**2*B[0, 52]*t[0, 2] + 80*phi_e*v_y*y**2*B[0, 65]*t[0, 0] + 16.3*phi_e*v_y*y**2*B[0, 66]*t[0, 1] + 0.925*phi_e*v_y*y**2*B[0, 66] + 16.3*phi_e*v_y*y**2*B[0, 67]*t[0, 2] + 40*phi_e*v_y*y**2*B[0, 68]*t[0, 1] - 6.5*phi_e*v_y*y**2*B[0, 68] + 16.3*phi_e*v_y*y**2*B[0, 69]*t[0, 0] + 80*phi_e*v_y*y*B[0, 28]*t[0, 0] + 80*phi_e*v_y*y*B[0, 31]*t[0, 2] + 2*phi_e*v_y*y*B[0, 33] + 26.8*phi_e*v_y*y*B[0, 34] + 16.3*phi_e*v_y*y*B[0, 53]*t[0, 0] + 16.3*phi_e*v_y*y*B[0, 54]*t[0, 1] + 0.925*phi_e*v_y*y*B[0, 54] + 16.3*phi_e*v_y*y*B[0, 55]*t[0, 2] + 40*phi_e*v_y*y*B[0, 56]*t[0, 1] - 6.5*phi_e*v_y*y*B[0, 56] + 80*phi_e*v_y*B[0, 7]*t[0, 2] + 16.3*phi_e*v_y*B[0, 17]*t[0, 1] + 0.925*phi_e*v_y*B[0, 17] + 16.3*phi_e*v_y*B[0, 18]*t[0, 2] + 40*phi_e*v_y*B[0, 19]*t[0, 1] - 6.5*phi_e*v_y*B[0, 19] + phi_e*v_y*B[0, 21] + 13.4*phi_e*v_y*B[0, 22] + 53.6*phi_e*y**3*B[0, 16] + 16.3*phi_e*y**3*B[0, 44]*t[0, 2] + 40*phi_e*y**3*B[0, 46]*t[0, 2] + 16.3*phi_e*y**3*B[0, 66]*t[0, 0] + 40*phi_e*y**3*B[0, 68]*t[0, 0] + 40.2*phi_e*y**2*B[0, 12] + 16.3*phi_e*y**2*B[0, 32]*t[0, 2] + 40*phi_e*y**2*B[0, 34]*t[0, 2] + 16.3*phi_e*y**2*B[0, 54]*t[0, 0] + 40*phi_e*y**2*B[0, 56]*t[0, 0] + 26.8*phi_e*y*B[0, 8] + 16.3*phi_e*y*B[0, 17]*t[0, 0] + 40*phi_e*y*B[0, 19]*t[0, 0] + 16.3*phi_e*y*B[0, 20]*t[0, 2] + 40*phi_e*y*B[0, 22]*t[0, 2] + 16.3*phi_e*B[0, 1]*t[0, 2] + 40*phi_e*B[0, 3]*t[0, 2] + 13.4*phi_e*B[0, 4] + 65.2*r**4*B[0, 13]*t[0, 3] + r**4*B[0, 35] + 40*r**4*B[0, 37]*t[0, 3] + 65.2*r**3*v_y*B[0, 13]*t[0, 1] + 3.7*r**3*v_y*B[0, 13] + 40*r**3*v_y*B[0, 37]*t[0, 1] + 48.9*r**3*v_y*B[0, 37]*t[0, 3] - 6.5*r**3*v_y*B[0, 37] + r**3*v_y*B[0, 41] + 80*r**3*v_y*B[0, 48]*t[0, 3] + r**3*v_y*B[0, 57] + 65.2*r**3*y*B[0, 13]*t[0, 0] + 40*r**3*y*B[0, 37]*t[0, 0] + 48.9*r**3*y*B[0, 41]*t[0, 3] + r**3*y*B[0, 60] + 40*r**3*y*B[0, 62]*t[0, 3] + 48.9*r**3*B[0, 9]*t[0, 3] + r**3*B[0, 23] + 40*r**3*B[0, 25]*t[0, 3] + 48.9*r**2*v_y**2*B[0, 37]*t[0, 1] + 2.775*r**2*v_y**2*B[0, 37] + 120*r**2*v_y**2*B[0, 39]*t[0, 3] + 80*r**2*v_y**2*B[0, 48]*t[0, 1] + 32.6*r**2*v_y**2*B[0, 48]*t[0, 3] - 13.0*r**2*v_y**2*B[0, 48] + r**2*v_y**2*B[0, 59] + r**2*v_y**2*B[0, 62] + 48.9*r**2*v_y*y*B[0, 37]*t[0, 0] + 48.9*r**2*v_y*y*B[0, 41]*t[0, 1] + 2.775*r**2*v_y*y*B[0, 41] + 80*r**2*v_y*y*B[0, 48]*t[0, 0] + 2*r**2*v_y*y*B[0, 50] + 40*r**2*v_y*y*B[0, 62]*t[0, 1] + 32.6*r**2*v_y*y*B[0, 62]*t[0, 3] - 6.5*r**2*v_y*y*B[0, 62] + 80*r**2*v_y*y*B[0, 64]*t[0, 3] + r**2*v_y*y*B[0, 69] + 48.9*r**2*v_y*B[0, 9]*t[0, 1] + 2.775*r**2*v_y*B[0, 9] + 40*r**2*v_y*B[0, 25]*t[0, 1] + 32.6*r**2*v_y*B[0, 25]*t[0, 3] - 6.5*r**2*v_y*B[0, 25] + 80*r**2*v_y*B[0, 27]*t[0, 3] + r**2*v_y*B[0, 29] + r**2*v_y*B[0, 53] + 48.9*r**2*y**2*B[0, 41]*t[0, 0] + 32.6*r**2*y**2*B[0, 50]*t[0, 3] + 40*r**2*y**2*B[0, 62]*t[0, 0] + r**2*y**2*B[0, 66] + 40*r**2*y**2*B[0, 67]*t[0, 3] + 48.9*r**2*y*B[0, 9]*t[0, 0] + 40*r**2*y*B[0, 25]*t[0, 0] + 32.6*r**2*y*B[0, 29]*t[0, 3] + r**2*y*B[0, 54] + 40*r**2*y*B[0, 55]*t[0, 3] + 32.6*r**2*B[0, 5]*t[0, 3] + r**2*B[0, 17] + 40*r**2*B[0, 18]*t[0, 3] + 160*r*v_y**3*B[0, 15]*t[0, 3] + 120*r*v_y**3*B[0, 39]*t[0, 1] + 16.3*r*v_y**3*B[0, 39]*t[0, 3] - 19.5*r*v_y**3*B[0, 39] + r*v_y**3*B[0, 40] + 32.6*r*v_y**3*B[0, 48]*t[0, 1] + 1.85*r*v_y**3*B[0, 48] + r*v_y**3*B[0, 64] + 120*r*v_y**2*y*B[0, 39]*t[0, 0] + 120*r*v_y**2*y*B[0, 43]*t[0, 3] + 32.6*r*v_y**2*y*B[0, 48]*t[0, 0] + 32.6*r*v_y**2*y*B[0, 62]*t[0, 1] + 1.85*r*v_y**2*y*B[0, 62] + 80*r*v_y**2*y*B[0, 64]*t[0, 1] + 16.3*r*v_y**2*y*B[0, 64]*t[0, 3] - 13.0*r*v_y**2*y*B[0, 64] + r*v_y**2*y*B[0, 65] + 2*r*v_y**2*y*B[0, 67] + 120*r*v_y**2*B[0, 11]*t[0, 3] + 32.6*r*v_y**2*B[0, 25]*t[0, 1] + 1.85*r*v_y**2*B[0, 25] + 80*r*v_y**2*B[0, 27]*t[0, 1] + 16.3*r*v_y**2*B[0, 27]*t[0, 3] - 13.0*r*v_y**2*B[0, 27] + r*v_y**2*B[0, 28] + r*v_y**2*B[0, 55] + 3*r*v_y*y**2*B[0, 44] + 32.6*r*v_y*y**2*B[0, 50]*t[0, 1] + 1.85*r*v_y*y**2*B[0, 50] + 80*r*v_y*y**2*B[0, 52]*t[0, 3] + 32.6*r*v_y*y**2*B[0, 62]*t[0, 0] + 80*r*v_y*y**2*B[0, 64]*t[0, 0] + 40*r*v_y*y**2*B[0, 67]*t[0, 1] + 16.3*r*v_y*y**2*B[0, 67]*t[0, 3] - 6.5*r*v_y*y**2*B[0, 67] + r*v_y*y**2*B[0, 68] + 32.6*r*v_y*y*B[0, 25]*t[0, 0] + 80*r*v_y*y*B[0, 27]*t[0, 0] + 32.6*r*v_y*y*B[0, 29]*t[0, 1] + 1.85*r*v_y*y*B[0, 29] + 80*r*v_y*y*B[0, 31]*t[0, 3] + 2*r*v_y*y*B[0, 32] + 40*r*v_y*y*B[0, 55]*t[0, 1] + 16.3*r*v_y*y*B[0, 55]*t[0, 3] - 6.5*r*v_y*y*B[0, 55] + r*v_y*y*B[0, 56] + 32.6*r*v_y*B[0, 5]*t[0, 1] + 1.85*r*v_y*B[0, 5] + 80*r*v_y*B[0, 7]*t[0, 3] + 40*r*v_y*B[0, 18]*t[0, 1] + 16.3*r*v_y*B[0, 18]*t[0, 3] - 6.5*r*v_y*B[0, 18] + r*v_y*B[0, 19] + r*v_y*B[0, 20] + 16.3*r*y**3*B[0, 44]*t[0, 3] + r*y**3*B[0, 45] + 40*r*y**3*B[0, 46]*t[0, 3] + 32.6*r*y**3*B[0, 50]*t[0, 0] + 40*r*y**3*B[0, 67]*t[0, 0] + 32.6*r*y**2*B[0, 29]*t[0, 0] + 16.3*r*y**2*B[0, 32]*t[0, 3] + r*y**2*B[0, 33] + 40*r*y**2*B[0, 34]*t[0, 3] + 40*r*y**2*B[0, 55]*t[0, 0] + 32.6*r*y*B[0, 5]*t[0, 0] + 40*r*y*B[0, 18]*t[0, 0] + 16.3*r*y*B[0, 20]*t[0, 3] + r*y*B[0, 21] + 40*r*y*B[0, 22]*t[0, 3] + 16.3*r*B[0, 1]*t[0, 3] + r*B[0, 2] + 40*r*B[0, 3]*t[0, 3] + 160*v_y**4*B[0, 15]*t[0, 1] - 26.0*v_y**4*B[0, 15] + 16.3*v_y**4*B[0, 39]*t[0, 1] + 0.925*v_y**4*B[0, 39] + v_y**4*B[0, 43] + 160*v_y**3*y*B[0, 15]*t[0, 0] + 16.3*v_y**3*y*B[0, 39]*t[0, 0] + 120*v_y**3*y*B[0, 43]*t[0, 1] - 19.5*v_y**3*y*B[0, 43] + 2*v_y**3*y*B[0, 52] + 16.3*v_y**3*y*B[0, 64]*t[0, 1] + 0.925*v_y**3*y*B[0, 64] + 120*v_y**3*B[0, 11]*t[0, 1] - 19.5*v_y**3*B[0, 11] + 16.3*v_y**3*B[0, 27]*t[0, 1] + 0.925*v_y**3*B[0, 27] + v_y**3*B[0, 31] + 120*v_y**2*y**2*B[0, 43]*t[0, 0] + 3*v_y**2*y**2*B[0, 46] + 80*v_y**2*y**2*B[0, 52]*t[0, 1] - 13.0*v_y**2*y**2*B[0, 52] + 16.3*v_y**2*y**2*B[0, 64]*t[0, 0] + 16.3*v_y**2*y**2*B[0, 67]*t[0, 1] + 0.925*v_y**2*y**2*B[0, 67] + 120*v_y**2*y*B[0, 11]*t[0, 0] + 16.3*v_y**2*y*B[0, 27]*t[0, 0] + 80*v_y**2*y*B[0, 31]*t[0, 1] - 13.0*v_y**2*y*B[0, 31] + 2*v_y**2*y*B[0, 34] + 16.3*v_y**2*y*B[0, 55]*t[0, 1] + 0.925*v_y**2*y*B[0, 55] + 80*v_y**2*B[0, 7]*t[0, 1] - 13.0*v_y**2*B[0, 7] + 16.3*v_y**2*B[0, 18]*t[0, 1] + 0.925*v_y**2*B[0, 18] + v_y**2*B[0, 22] + 4*v_y*y**3*B[0, 16] + 16.3*v_y*y**3*B[0, 44]*t[0, 1] + 0.925*v_y*y**3*B[0, 44] + 40*v_y*y**3*B[0, 46]*t[0, 1] - 6.5*v_y*y**3*B[0, 46] + 80*v_y*y**3*B[0, 52]*t[0, 0] + 16.3*v_y*y**3*B[0, 67]*t[0, 0] + 3*v_y*y**2*B[0, 12] + 80*v_y*y**2*B[0, 31]*t[0, 0] + 16.3*v_y*y**2*B[0, 32]*t[0, 1] + 0.925*v_y*y**2*B[0, 32] + 40*v_y*y**2*B[0, 34]*t[0, 1] - 6.5*v_y*y**2*B[0, 34] + 16.3*v_y*y**2*B[0, 55]*t[0, 0] + 80*v_y*y*B[0, 7]*t[0, 0] + 2*v_y*y*B[0, 8] + 16.3*v_y*y*B[0, 18]*t[0, 0] + 16.3*v_y*y*B[0, 20]*t[0, 1] + 0.925*v_y*y*B[0, 20] + 40*v_y*y*B[0, 22]*t[0, 1] - 6.5*v_y*y*B[0, 22] + 16.3*v_y*B[0, 1]*t[0, 1] + 0.925*v_y*B[0, 1] + 40*v_y*B[0, 3]*t[0, 1] - 6.5*v_y*B[0, 3] + v_y*B[0, 4] + 16.3*y**4*B[0, 44]*t[0, 0] + 40*y**4*B[0, 46]*t[0, 0] + 16.3*y**3*B[0, 32]*t[0, 0] + 40*y**3*B[0, 34]*t[0, 0] + 16.3*y**2*B[0, 20]*t[0, 0] + 40*y**2*B[0, 22]*t[0, 0] + 16.3*y*B[0, 1]*t[0, 0] + 40*y*B[0, 3]*t[0, 0]
		# lie = g*phi_e*r*B[0, 10] + 4*g*r**4*B[0, 18] + 2*g*r**2*B[0, 14] + g*r*v_y*B[0, 9] + g*r*y*B[0, 7] + g*r*B[0, 4] + k*phi_e*r*B[0, 8] + k*r**2*B[0, 9] + 4*k*r*v_y**3*B[0, 16] + 2*k*r*v_y*B[0, 12] + k*r*y*B[0, 5] + k*r*B[0, 2] - l*phi_e**4*B[0, 17] - l*phi_e**2*B[0, 13] - l*phi_e*r*B[0, 10] - l*phi_e*v_y*B[0, 8] - l*phi_e*y*B[0, 6] - l*phi_e*B[0, 3] - l*r**4*B[0, 18] - l*r**2*B[0, 14] - l*r*v_y*B[0, 9] - l*r*y*B[0, 7] - l*r*B[0, 4] - l*v_y**4*B[0, 16] - l*v_y**2*B[0, 12] - l*v_y*y*B[0, 5] - l*v_y*B[0, 2] - l*y**4*B[0, 15] - l*y**2*B[0, 11] - l*y*B[0, 1] - l*B[0, 0] + 4*phi_e**3*r*B[0, 17] + 13.4*phi_e**2*B[0, 6] + 40*phi_e**2*B[0, 8]*t[0, 2] + 16.3*phi_e**2*B[0, 10]*t[0, 2] + 65.2*phi_e*r**3*B[0, 18]*t[0, 2] + 13.4*phi_e*r*B[0, 7] + 40*phi_e*r*B[0, 8]*t[0, 3] + 40*phi_e*r*B[0, 9]*t[0, 2] + 16.3*phi_e*r*B[0, 10]*t[0, 3] + 2*phi_e*r*B[0, 13] + 32.6*phi_e*r*B[0, 14]*t[0, 2] + 160*phi_e*v_y**3*B[0, 16]*t[0, 2] + 13.4*phi_e*v_y*B[0, 5] + phi_e*v_y*B[0, 6] + 40*phi_e*v_y*B[0, 8]*t[0, 1] - 6.5*phi_e*v_y*B[0, 8] + 16.3*phi_e*v_y*B[0, 9]*t[0, 2] + 16.3*phi_e*v_y*B[0, 10]*t[0, 1] + 0.925*phi_e*v_y*B[0, 10] + 80*phi_e*v_y*B[0, 12]*t[0, 2] + 53.6*phi_e*y**3*B[0, 15] + 40*phi_e*y*B[0, 5]*t[0, 2] + 16.3*phi_e*y*B[0, 7]*t[0, 2] + 40*phi_e*y*B[0, 8]*t[0, 0] + 16.3*phi_e*y*B[0, 10]*t[0, 0] + 26.8*phi_e*y*B[0, 11] + 13.4*phi_e*B[0, 1] + 40*phi_e*B[0, 2]*t[0, 2] + 16.3*phi_e*B[0, 4]*t[0, 2] + 65.2*r**4*B[0, 18]*t[0, 3] + 65.2*r**3*v_y*B[0, 18]*t[0, 1] + 3.7*r**3*v_y*B[0, 18] + 65.2*r**3*y*B[0, 18]*t[0, 0] + 40*r**2*B[0, 9]*t[0, 3] + r**2*B[0, 10] + 32.6*r**2*B[0, 14]*t[0, 3] + 160*r*v_y**3*B[0, 16]*t[0, 3] + r*v_y*B[0, 7] + r*v_y*B[0, 8] + 40*r*v_y*B[0, 9]*t[0, 1] + 16.3*r*v_y*B[0, 9]*t[0, 3] - 6.5*r*v_y*B[0, 9] + 80*r*v_y*B[0, 12]*t[0, 3] + 32.6*r*v_y*B[0, 14]*t[0, 1] + 1.85*r*v_y*B[0, 14] + 40*r*y*B[0, 5]*t[0, 3] + r*y*B[0, 6] + 16.3*r*y*B[0, 7]*t[0, 3] + 40*r*y*B[0, 9]*t[0, 0] + 32.6*r*y*B[0, 14]*t[0, 0] + 40*r*B[0, 2]*t[0, 3] + r*B[0, 3] + 16.3*r*B[0, 4]*t[0, 3] + 160*v_y**4*B[0, 16]*t[0, 1] - 26.0*v_y**4*B[0, 16] + 160*v_y**3*y*B[0, 16]*t[0, 0] + v_y**2*B[0, 5] + 16.3*v_y**2*B[0, 9]*t[0, 1] + 0.925*v_y**2*B[0, 9] + 80*v_y**2*B[0, 12]*t[0, 1] - 13.0*v_y**2*B[0, 12] + 4*v_y*y**3*B[0, 15] + 40*v_y*y*B[0, 5]*t[0, 1] - 6.5*v_y*y*B[0, 5] + 16.3*v_y*y*B[0, 7]*t[0, 1] + 0.925*v_y*y*B[0, 7] + 16.3*v_y*y*B[0, 9]*t[0, 0] + 2*v_y*y*B[0, 11] + 80*v_y*y*B[0, 12]*t[0, 0] + v_y*B[0, 1] + 40*v_y*B[0, 2]*t[0, 1] - 6.5*v_y*B[0, 2] + 16.3*v_y*B[0, 4]*t[0, 1] + 0.925*v_y*B[0, 4] + 40*y**2*B[0, 5]*t[0, 0] + 16.3*y**2*B[0, 7]*t[0, 0] + 40*y*B[0, 2]*t[0, 0] + 16.3*y*B[0, 4]*t[0, 0]
		lie = g*phi_e*r*B[0, 10] + 6*g*r**6*B[0, 22] + 4*g*r**4*B[0, 18] + 2*g*r**2*B[0, 14] + g*r*v_y*B[0, 9] + g*r*y*B[0, 7] + g*r*B[0, 4] + k*phi_e*r*B[0, 8] + k*r**2*B[0, 9] + 6*k*r*v_y**5*B[0, 20] + 4*k*r*v_y**3*B[0, 16] + 2*k*r*v_y*B[0, 12] + k*r*y*B[0, 5] + k*r*B[0, 2] - l*phi_e**6*B[0, 21] - l*phi_e**4*B[0, 17] - l*phi_e**2*B[0, 13] - l*phi_e*r*B[0, 10] - l*phi_e*v_y*B[0, 8] - l*phi_e*y*B[0, 6] - l*phi_e*B[0, 3] - l*r**6*B[0, 22] - l*r**4*B[0, 18] - l*r**2*B[0, 14] - l*r*v_y*B[0, 9] - l*r*y*B[0, 7] - l*r*B[0, 4] - l*v_y**6*B[0, 20] - l*v_y**4*B[0, 16] - l*v_y**2*B[0, 12] - l*v_y*y*B[0, 5] - l*v_y*B[0, 2] - l*y**6*B[0, 19] - l*y**4*B[0, 15] - l*y**2*B[0, 11] - l*y*B[0, 1] - l*B[0, 0] + 6*phi_e**5*r*B[0, 21] + 4*phi_e**3*r*B[0, 17] + 13.4*phi_e**2*B[0, 6] + 40*phi_e**2*B[0, 8]*t[0, 2] + 16.3*phi_e**2*B[0, 10]*t[0, 2] + 97.8*phi_e*r**5*B[0, 22]*t[0, 2] + 65.2*phi_e*r**3*B[0, 18]*t[0, 2] + 13.4*phi_e*r*B[0, 7] + 40*phi_e*r*B[0, 8]*t[0, 3] + 40*phi_e*r*B[0, 9]*t[0, 2] + 16.3*phi_e*r*B[0, 10]*t[0, 3] + 2*phi_e*r*B[0, 13] + 32.6*phi_e*r*B[0, 14]*t[0, 2] + 240*phi_e*v_y**5*B[0, 20]*t[0, 2] + 160*phi_e*v_y**3*B[0, 16]*t[0, 2] + 13.4*phi_e*v_y*B[0, 5] + phi_e*v_y*B[0, 6] + 40*phi_e*v_y*B[0, 8]*t[0, 1] - 6.5*phi_e*v_y*B[0, 8] + 16.3*phi_e*v_y*B[0, 9]*t[0, 2] + 16.3*phi_e*v_y*B[0, 10]*t[0, 1] + 0.925*phi_e*v_y*B[0, 10] + 80*phi_e*v_y*B[0, 12]*t[0, 2] + 80.4*phi_e*y**5*B[0, 19] + 53.6*phi_e*y**3*B[0, 15] + 40*phi_e*y*B[0, 5]*t[0, 2] + 16.3*phi_e*y*B[0, 7]*t[0, 2] + 40*phi_e*y*B[0, 8]*t[0, 0] + 16.3*phi_e*y*B[0, 10]*t[0, 0] + 26.8*phi_e*y*B[0, 11] + 13.4*phi_e*B[0, 1] + 40*phi_e*B[0, 2]*t[0, 2] + 16.3*phi_e*B[0, 4]*t[0, 2] + 97.8*r**6*B[0, 22]*t[0, 3] + 97.8*r**5*v_y*B[0, 22]*t[0, 1] + 5.55*r**5*v_y*B[0, 22] + 97.8*r**5*y*B[0, 22]*t[0, 0] + 65.2*r**4*B[0, 18]*t[0, 3] + 65.2*r**3*v_y*B[0, 18]*t[0, 1] + 3.7*r**3*v_y*B[0, 18] + 65.2*r**3*y*B[0, 18]*t[0, 0] + 40*r**2*B[0, 9]*t[0, 3] + r**2*B[0, 10] + 32.6*r**2*B[0, 14]*t[0, 3] + 240*r*v_y**5*B[0, 20]*t[0, 3] + 160*r*v_y**3*B[0, 16]*t[0, 3] + r*v_y*B[0, 7] + r*v_y*B[0, 8] + 40*r*v_y*B[0, 9]*t[0, 1] + 16.3*r*v_y*B[0, 9]*t[0, 3] - 6.5*r*v_y*B[0, 9] + 80*r*v_y*B[0, 12]*t[0, 3] + 32.6*r*v_y*B[0, 14]*t[0, 1] + 1.85*r*v_y*B[0, 14] + 40*r*y*B[0, 5]*t[0, 3] + r*y*B[0, 6] + 16.3*r*y*B[0, 7]*t[0, 3] + 40*r*y*B[0, 9]*t[0, 0] + 32.6*r*y*B[0, 14]*t[0, 0] + 40*r*B[0, 2]*t[0, 3] + r*B[0, 3] + 16.3*r*B[0, 4]*t[0, 3] + 240*v_y**6*B[0, 20]*t[0, 1] - 39.0*v_y**6*B[0, 20] + 240*v_y**5*y*B[0, 20]*t[0, 0] + 160*v_y**4*B[0, 16]*t[0, 1] - 26.0*v_y**4*B[0, 16] + 160*v_y**3*y*B[0, 16]*t[0, 0] + v_y**2*B[0, 5] + 16.3*v_y**2*B[0, 9]*t[0, 1] + 0.925*v_y**2*B[0, 9] + 80*v_y**2*B[0, 12]*t[0, 1] - 13.0*v_y**2*B[0, 12] + 6*v_y*y**5*B[0, 19] + 4*v_y*y**3*B[0, 15] + 40*v_y*y*B[0, 5]*t[0, 1] - 6.5*v_y*y*B[0, 5] + 16.3*v_y*y*B[0, 7]*t[0, 1] + 0.925*v_y*y*B[0, 7] + 16.3*v_y*y*B[0, 9]*t[0, 0] + 2*v_y*y*B[0, 11] + 80*v_y*y*B[0, 12]*t[0, 0] + v_y*B[0, 1] + 40*v_y*B[0, 2]*t[0, 1] - 6.5*v_y*B[0, 2] + 16.3*v_y*B[0, 4]*t[0, 1] + 0.925*v_y*B[0, 4] + 40*y**2*B[0, 5]*t[0, 0] + 16.3*y**2*B[0, 7]*t[0, 0] + 40*y*B[0, 2]*t[0, 0] + 16.3*y*B[0, 4]*t[0, 0]

		# lie = g*phi_e*r*B[0, 9] + 2*g*r**2*B[0, 5] + g*r*v_y*B[0, 10] + g*r*y*B[0, 12] + g*r*B[0, 1] + k*phi_e*r*B[0, 11] + k*r**2*B[0, 10] + 2*k*r*v_y*B[0, 7] + k*r*y*B[0, 14] + k*r*B[0, 3] - l*phi_e**2*B[0, 6] - l*phi_e*r*B[0, 9] - l*phi_e*v_y*B[0, 11] - l*phi_e*y*B[0, 13] - l*phi_e*B[0, 2] - l*r**2*B[0, 5] - l*r*v_y*B[0, 10] - l*r*y*B[0, 12] - l*r*B[0, 1] - l*v_y**2*B[0, 7] - l*v_y*y*B[0, 14] - l*v_y*B[0, 3] - l*y**2*B[0, 8] - l*y*B[0, 4] - l*B[0, 0] + 16.3*phi_e**2*B[0, 9]*t[0, 2] + 40*phi_e**2*B[0, 11]*t[0, 2] + 13.4*phi_e**2*B[0, 13] + 32.6*phi_e*r*B[0, 5]*t[0, 2] + 2*phi_e*r*B[0, 6] + 16.3*phi_e*r*B[0, 9]*t[0, 3] + 40*phi_e*r*B[0, 10]*t[0, 2] + 40*phi_e*r*B[0, 11]*t[0, 3] + 13.4*phi_e*r*B[0, 12] + 80*phi_e*v_y*B[0, 7]*t[0, 2] + 16.3*phi_e*v_y*B[0, 9]*t[0, 1] + 0.925*phi_e*v_y*B[0, 9] + 16.3*phi_e*v_y*B[0, 10]*t[0, 2] + 40*phi_e*v_y*B[0, 11]*t[0, 1] - 6.5*phi_e*v_y*B[0, 11] + phi_e*v_y*B[0, 13] + 13.4*phi_e*v_y*B[0, 14] + 26.8*phi_e*y*B[0, 8] + 16.3*phi_e*y*B[0, 9]*t[0, 0] + 40*phi_e*y*B[0, 11]*t[0, 0] + 16.3*phi_e*y*B[0, 12]*t[0, 2] + 40*phi_e*y*B[0, 14]*t[0, 2] + 16.3*phi_e*B[0, 1]*t[0, 2] + 40*phi_e*B[0, 3]*t[0, 2] + 13.4*phi_e*B[0, 4] + 32.6*r**2*B[0, 5]*t[0, 3] + r**2*B[0, 9] + 40*r**2*B[0, 10]*t[0, 3] + 32.6*r*v_y*B[0, 5]*t[0, 1] + 1.85*r*v_y*B[0, 5] + 80*r*v_y*B[0, 7]*t[0, 3] + 40*r*v_y*B[0, 10]*t[0, 1] + 16.3*r*v_y*B[0, 10]*t[0, 3] - 6.5*r*v_y*B[0, 10] + r*v_y*B[0, 11] + r*v_y*B[0, 12] + 32.6*r*y*B[0, 5]*t[0, 0] + 40*r*y*B[0, 10]*t[0, 0] + 16.3*r*y*B[0, 12]*t[0, 3] + r*y*B[0, 13] + 40*r*y*B[0, 14]*t[0, 3] + 16.3*r*B[0, 1]*t[0, 3] + r*B[0, 2] + 40*r*B[0, 3]*t[0, 3] + 80*v_y**2*B[0, 7]*t[0, 1] - 13.0*v_y**2*B[0, 7] + 16.3*v_y**2*B[0, 10]*t[0, 1] + 0.925*v_y**2*B[0, 10] + v_y**2*B[0, 14] + 80*v_y*y*B[0, 7]*t[0, 0] + 2*v_y*y*B[0, 8] + 16.3*v_y*y*B[0, 10]*t[0, 0] + 16.3*v_y*y*B[0, 12]*t[0, 1] + 0.925*v_y*y*B[0, 12] + 40*v_y*y*B[0, 14]*t[0, 1] - 6.5*v_y*y*B[0, 14] + 16.3*v_y*B[0, 1]*t[0, 1] + 0.925*v_y*B[0, 1] + 40*v_y*B[0, 3]*t[0, 1] - 6.5*v_y*B[0, 3] + v_y*B[0, 4] + 16.3*y**2*B[0, 12]*t[0, 0] + 40*y**2*B[0, 14]*t[0, 0] + 16.3*y*B[0, 1]*t[0, 0] + 40*y*B[0, 3]*t[0, 0]
		if lie <= 0:
			Lie += 1
			lieTest = False

	return initTest, unsafeTest, lieTest, init, unsafe, Lie


def LyaLP(control_param, f, g, SVGOnly=False):
	lambda_1 = cp.Variable((1, 44)) #Q1
	lambda_2 = cp.Variable((1, 44)) #Q2

	objc = cp.Variable(pos=True) 
	V = cp.Variable((1, 15)) #Laypunov parameters for SOS rings
	t = cp.Parameter((1, 4)) #controller parameters

	objective = cp.Minimize(objc)
	constraints = []
	constraints += [lambda_1 >= 0]
	constraints += [lambda_2 >= 0]

	#-------------------The initial conditions-------------------
	constraints += [3*lambda_1[0, 0] + 3*lambda_1[0, 1] + 3*lambda_1[0, 2] + 3*lambda_1[0, 3] + 3*lambda_1[0, 4] + 3*lambda_1[0, 5] + 3*lambda_1[0, 6] + 3*lambda_1[0, 7] + 9*lambda_1[0, 8] + 9*lambda_1[0, 9] + 9*lambda_1[0, 10] + 9*lambda_1[0, 11] + 9*lambda_1[0, 12] + 9*lambda_1[0, 13] + 9*lambda_1[0, 14] + 9*lambda_1[0, 15] + 9*lambda_1[0, 16] + 9*lambda_1[0, 17] + 9*lambda_1[0, 18] + 9*lambda_1[0, 19] + 9*lambda_1[0, 20] + 9*lambda_1[0, 21] + 9*lambda_1[0, 22] + 9*lambda_1[0, 23] + 9*lambda_1[0, 24] + 9*lambda_1[0, 25] + 9*lambda_1[0, 26] + 9*lambda_1[0, 27] + 9*lambda_1[0, 28] + 9*lambda_1[0, 29] + 9*lambda_1[0, 30] + 9*lambda_1[0, 31] + 9*lambda_1[0, 32] + 9*lambda_1[0, 33] + 9*lambda_1[0, 34] + 9*lambda_1[0, 35] + 9*lambda_1[0, 36] + 9*lambda_1[0, 37] + 9*lambda_1[0, 38] + 9*lambda_1[0, 39] + 9*lambda_1[0, 40] + 9*lambda_1[0, 41] + 9*lambda_1[0, 42] + 9*lambda_1[0, 43] <= V[0, 0]+ objc]
	constraints += [3*lambda_1[0, 0] + 3*lambda_1[0, 1] + 3*lambda_1[0, 2] + 3*lambda_1[0, 3] + 3*lambda_1[0, 4] + 3*lambda_1[0, 5] + 3*lambda_1[0, 6] + 3*lambda_1[0, 7] + 9*lambda_1[0, 8] + 9*lambda_1[0, 9] + 9*lambda_1[0, 10] + 9*lambda_1[0, 11] + 9*lambda_1[0, 12] + 9*lambda_1[0, 13] + 9*lambda_1[0, 14] + 9*lambda_1[0, 15] + 9*lambda_1[0, 16] + 9*lambda_1[0, 17] + 9*lambda_1[0, 18] + 9*lambda_1[0, 19] + 9*lambda_1[0, 20] + 9*lambda_1[0, 21] + 9*lambda_1[0, 22] + 9*lambda_1[0, 23] + 9*lambda_1[0, 24] + 9*lambda_1[0, 25] + 9*lambda_1[0, 26] + 9*lambda_1[0, 27] + 9*lambda_1[0, 28] + 9*lambda_1[0, 29] + 9*lambda_1[0, 30] + 9*lambda_1[0, 31] + 9*lambda_1[0, 32] + 9*lambda_1[0, 33] + 9*lambda_1[0, 34] + 9*lambda_1[0, 35] + 9*lambda_1[0, 36] + 9*lambda_1[0, 37] + 9*lambda_1[0, 38] + 9*lambda_1[0, 39] + 9*lambda_1[0, 40] + 9*lambda_1[0, 41] + 9*lambda_1[0, 42] + 9*lambda_1[0, 43] >= V[0, 0]- objc]
	constraints += [-lambda_1[0, 0] + lambda_1[0, 4] - 6*lambda_1[0, 8] + 6*lambda_1[0, 12] - 3*lambda_1[0, 16] - 3*lambda_1[0, 17] - 3*lambda_1[0, 19] + 3*lambda_1[0, 23] + 3*lambda_1[0, 24] + 3*lambda_1[0, 25] - 3*lambda_1[0, 26] + 3*lambda_1[0, 30] - 3*lambda_1[0, 31] + 3*lambda_1[0, 35] - 3*lambda_1[0, 37] + 3*lambda_1[0, 41] <= V[0, 1]+ objc]
	constraints += [-lambda_1[0, 0] + lambda_1[0, 4] - 6*lambda_1[0, 8] + 6*lambda_1[0, 12] - 3*lambda_1[0, 16] - 3*lambda_1[0, 17] - 3*lambda_1[0, 19] + 3*lambda_1[0, 23] + 3*lambda_1[0, 24] + 3*lambda_1[0, 25] - 3*lambda_1[0, 26] + 3*lambda_1[0, 30] - 3*lambda_1[0, 31] + 3*lambda_1[0, 35] - 3*lambda_1[0, 37] + 3*lambda_1[0, 41] >= V[0, 1]- objc]
	constraints += [lambda_1[0, 8] + lambda_1[0, 12] - lambda_1[0, 22] <= V[0, 5] - 0.001+ objc]
	constraints += [lambda_1[0, 8] + lambda_1[0, 12] - lambda_1[0, 22] >= V[0, 5] - 0.001- objc]
	constraints += [-lambda_1[0, 1] + lambda_1[0, 5] - 6*lambda_1[0, 9] + 6*lambda_1[0, 13] - 3*lambda_1[0, 16] - 3*lambda_1[0, 18] - 3*lambda_1[0, 20] - 3*lambda_1[0, 23] + 3*lambda_1[0, 26] + 3*lambda_1[0, 28] + 3*lambda_1[0, 29] + 3*lambda_1[0, 30] - 3*lambda_1[0, 32] + 3*lambda_1[0, 36] - 3*lambda_1[0, 38] + 3*lambda_1[0, 42] <= V[0, 2]+ objc]
	constraints += [-lambda_1[0, 1] + lambda_1[0, 5] - 6*lambda_1[0, 9] + 6*lambda_1[0, 13] - 3*lambda_1[0, 16] - 3*lambda_1[0, 18] - 3*lambda_1[0, 20] - 3*lambda_1[0, 23] + 3*lambda_1[0, 26] + 3*lambda_1[0, 28] + 3*lambda_1[0, 29] + 3*lambda_1[0, 30] - 3*lambda_1[0, 32] + 3*lambda_1[0, 36] - 3*lambda_1[0, 38] + 3*lambda_1[0, 42] >= V[0, 2]- objc]
	constraints += [lambda_1[0, 16] - lambda_1[0, 23] - lambda_1[0, 26] + lambda_1[0, 30] <= V[0, 9]+ objc]
	constraints += [lambda_1[0, 16] - lambda_1[0, 23] - lambda_1[0, 26] + lambda_1[0, 30] >= V[0, 9]- objc]
	constraints += [lambda_1[0, 9] + lambda_1[0, 13] - lambda_1[0, 27] <= V[0, 6] - 0.001+ objc]
	constraints += [lambda_1[0, 9] + lambda_1[0, 13] - lambda_1[0, 27] >= V[0, 6] - 0.001- objc]
	constraints += [-lambda_1[0, 2] + lambda_1[0, 6] - 6*lambda_1[0, 10] + 6*lambda_1[0, 14] - 3*lambda_1[0, 17] - 3*lambda_1[0, 18] - 3*lambda_1[0, 21] - 3*lambda_1[0, 24] - 3*lambda_1[0, 28] + 3*lambda_1[0, 31] + 3*lambda_1[0, 32] + 3*lambda_1[0, 34] + 3*lambda_1[0, 35] + 3*lambda_1[0, 36] - 3*lambda_1[0, 39] + 3*lambda_1[0, 43] <= V[0, 3]+ objc]
	constraints += [-lambda_1[0, 2] + lambda_1[0, 6] - 6*lambda_1[0, 10] + 6*lambda_1[0, 14] - 3*lambda_1[0, 17] - 3*lambda_1[0, 18] - 3*lambda_1[0, 21] - 3*lambda_1[0, 24] - 3*lambda_1[0, 28] + 3*lambda_1[0, 31] + 3*lambda_1[0, 32] + 3*lambda_1[0, 34] + 3*lambda_1[0, 35] + 3*lambda_1[0, 36] - 3*lambda_1[0, 39] + 3*lambda_1[0, 43] >= V[0, 3]- objc]
	constraints += [lambda_1[0, 17] - lambda_1[0, 24] - lambda_1[0, 31] + lambda_1[0, 35] <= V[0, 10]+ objc]
	constraints += [lambda_1[0, 17] - lambda_1[0, 24] - lambda_1[0, 31] + lambda_1[0, 35] >= V[0, 10]- objc]
	constraints += [lambda_1[0, 18] - lambda_1[0, 28] - lambda_1[0, 32] + lambda_1[0, 36] <= V[0, 11]+ objc]
	constraints += [lambda_1[0, 18] - lambda_1[0, 28] - lambda_1[0, 32] + lambda_1[0, 36] >= V[0, 11]- objc]
	constraints += [lambda_1[0, 10] + lambda_1[0, 14] - lambda_1[0, 33] <= V[0, 7] - 0.001+ objc]
	constraints += [lambda_1[0, 10] + lambda_1[0, 14] - lambda_1[0, 33] >= V[0, 7] - 0.001- objc]
	constraints += [-lambda_1[0, 3] + lambda_1[0, 7] - 6*lambda_1[0, 11] + 6*lambda_1[0, 15] - 3*lambda_1[0, 19] - 3*lambda_1[0, 20] - 3*lambda_1[0, 21] - 3*lambda_1[0, 25] - 3*lambda_1[0, 29] - 3*lambda_1[0, 34] + 3*lambda_1[0, 37] + 3*lambda_1[0, 38] + 3*lambda_1[0, 39] + 3*lambda_1[0, 41] + 3*lambda_1[0, 42] + 3*lambda_1[0, 43] <= V[0, 4]+ objc]
	constraints += [-lambda_1[0, 3] + lambda_1[0, 7] - 6*lambda_1[0, 11] + 6*lambda_1[0, 15] - 3*lambda_1[0, 19] - 3*lambda_1[0, 20] - 3*lambda_1[0, 21] - 3*lambda_1[0, 25] - 3*lambda_1[0, 29] - 3*lambda_1[0, 34] + 3*lambda_1[0, 37] + 3*lambda_1[0, 38] + 3*lambda_1[0, 39] + 3*lambda_1[0, 41] + 3*lambda_1[0, 42] + 3*lambda_1[0, 43] >= V[0, 4]- objc]
	constraints += [lambda_1[0, 19] - lambda_1[0, 25] - lambda_1[0, 37] + lambda_1[0, 41] <= V[0, 12]+ objc]
	constraints += [lambda_1[0, 19] - lambda_1[0, 25] - lambda_1[0, 37] + lambda_1[0, 41] >= V[0, 12]- objc]
	constraints += [lambda_1[0, 20] - lambda_1[0, 29] - lambda_1[0, 38] + lambda_1[0, 42] <= V[0, 13]+ objc]
	constraints += [lambda_1[0, 20] - lambda_1[0, 29] - lambda_1[0, 38] + lambda_1[0, 42] >= V[0, 13]- objc]
	constraints += [lambda_1[0, 21] - lambda_1[0, 34] - lambda_1[0, 39] + lambda_1[0, 43] <= V[0, 14]+ objc]
	constraints += [lambda_1[0, 21] - lambda_1[0, 34] - lambda_1[0, 39] + lambda_1[0, 43] >= V[0, 14]- objc]
	constraints += [lambda_1[0, 11] + lambda_1[0, 15] - lambda_1[0, 40] <= V[0, 8] - 0.001+ objc]
	constraints += [lambda_1[0, 11] + lambda_1[0, 15] - lambda_1[0, 40] >= V[0, 8] - 0.001- objc]

	#-------------------The derivative conditions-------------------
	constraints += [3*lambda_2[0, 0] + 3*lambda_2[0, 1] + 3*lambda_2[0, 2] + 3*lambda_2[0, 3] + 3*lambda_2[0, 4] + 3*lambda_2[0, 5] + 3*lambda_2[0, 6] + 3*lambda_2[0, 7] + 9*lambda_2[0, 8] + 9*lambda_2[0, 9] + 9*lambda_2[0, 10] + 9*lambda_2[0, 11] + 9*lambda_2[0, 12] + 9*lambda_2[0, 13] + 9*lambda_2[0, 14] + 9*lambda_2[0, 15] + 9*lambda_2[0, 16] + 9*lambda_2[0, 17] + 9*lambda_2[0, 18] + 9*lambda_2[0, 19] + 9*lambda_2[0, 20] + 9*lambda_2[0, 21] + 9*lambda_2[0, 22] + 9*lambda_2[0, 23] + 9*lambda_2[0, 24] + 9*lambda_2[0, 25] + 9*lambda_2[0, 26] + 9*lambda_2[0, 27] + 9*lambda_2[0, 28] + 9*lambda_2[0, 29] + 9*lambda_2[0, 30] + 9*lambda_2[0, 31] + 9*lambda_2[0, 32] + 9*lambda_2[0, 33] + 9*lambda_2[0, 34] + 9*lambda_2[0, 35] + 9*lambda_2[0, 36] + 9*lambda_2[0, 37] + 9*lambda_2[0, 38] + 9*lambda_2[0, 39] + 9*lambda_2[0, 40] + 9*lambda_2[0, 41] + 9*lambda_2[0, 42] + 9*lambda_2[0, 43] == 0]
	constraints += [-lambda_2[0, 0] + lambda_2[0, 4] - 6*lambda_2[0, 8] + 6*lambda_2[0, 12] - 3*lambda_2[0, 16] - 3*lambda_2[0, 17] - 3*lambda_2[0, 19] + 3*lambda_2[0, 23] + 3*lambda_2[0, 24] + 3*lambda_2[0, 25] - 3*lambda_2[0, 26] + 3*lambda_2[0, 30] - 3*lambda_2[0, 31] + 3*lambda_2[0, 35] - 3*lambda_2[0, 37] + 3*lambda_2[0, 41] <= -f*V[0, 3] - g*V[0, 1] - 16.3*V[0, 1]*t[0, 3] - V[0, 2] - 40*V[0, 3]*t[0, 3]+ objc]
	constraints += [-lambda_2[0, 0] + lambda_2[0, 4] - 6*lambda_2[0, 8] + 6*lambda_2[0, 12] - 3*lambda_2[0, 16] - 3*lambda_2[0, 17] - 3*lambda_2[0, 19] + 3*lambda_2[0, 23] + 3*lambda_2[0, 24] + 3*lambda_2[0, 25] - 3*lambda_2[0, 26] + 3*lambda_2[0, 30] - 3*lambda_2[0, 31] + 3*lambda_2[0, 35] - 3*lambda_2[0, 37] + 3*lambda_2[0, 41] >= -f*V[0, 3] - g*V[0, 1] - 16.3*V[0, 1]*t[0, 3] - V[0, 2] - 40*V[0, 3]*t[0, 3]- objc]
	constraints += [lambda_2[0, 8] + lambda_2[0, 12] - lambda_2[0, 22] <= -f*V[0, 10] - 2*g*V[0, 5] - 32.6*V[0, 5]*t[0, 3] - V[0, 9] - 40*V[0, 10]*t[0, 3] - 0.05+ objc]
	constraints += [lambda_2[0, 8] + lambda_2[0, 12] - lambda_2[0, 22] >= -f*V[0, 10] - 2*g*V[0, 5] - 32.6*V[0, 5]*t[0, 3] - V[0, 9] - 40*V[0, 10]*t[0, 3] - 0.05- objc]
	constraints += [-lambda_2[0, 1] + lambda_2[0, 5] - 6*lambda_2[0, 9] + 6*lambda_2[0, 13] - 3*lambda_2[0, 16] - 3*lambda_2[0, 18] - 3*lambda_2[0, 20] - 3*lambda_2[0, 23] + 3*lambda_2[0, 26] + 3*lambda_2[0, 28] + 3*lambda_2[0, 29] + 3*lambda_2[0, 30] - 3*lambda_2[0, 32] + 3*lambda_2[0, 36] - 3*lambda_2[0, 38] + 3*lambda_2[0, 42] <= -16.3*V[0, 1]*t[0, 2] - 40*V[0, 3]*t[0, 2] - 13.4*V[0, 4]+ objc]
	constraints += [-lambda_2[0, 1] + lambda_2[0, 5] - 6*lambda_2[0, 9] + 6*lambda_2[0, 13] - 3*lambda_2[0, 16] - 3*lambda_2[0, 18] - 3*lambda_2[0, 20] - 3*lambda_2[0, 23] + 3*lambda_2[0, 26] + 3*lambda_2[0, 28] + 3*lambda_2[0, 29] + 3*lambda_2[0, 30] - 3*lambda_2[0, 32] + 3*lambda_2[0, 36] - 3*lambda_2[0, 38] + 3*lambda_2[0, 42] >= -16.3*V[0, 1]*t[0, 2] - 40*V[0, 3]*t[0, 2] - 13.4*V[0, 4]- objc]
	constraints += [lambda_2[0, 16] - lambda_2[0, 23] - lambda_2[0, 26] + lambda_2[0, 30] <= -f*V[0, 11] - g*V[0, 9] - 32.6*V[0, 5]*t[0, 2] - 2*V[0, 6] - 16.3*V[0, 9]*t[0, 3] - 40*V[0, 10]*t[0, 2] - 40*V[0, 11]*t[0, 3] - 13.4*V[0, 12]+ objc]
	constraints += [lambda_2[0, 16] - lambda_2[0, 23] - lambda_2[0, 26] + lambda_2[0, 30] >= -f*V[0, 11] - g*V[0, 9] - 32.6*V[0, 5]*t[0, 2] - 2*V[0, 6] - 16.3*V[0, 9]*t[0, 3] - 40*V[0, 10]*t[0, 2] - 40*V[0, 11]*t[0, 3] - 13.4*V[0, 12]- objc]
	constraints += [lambda_2[0, 9] + lambda_2[0, 13] - lambda_2[0, 27] <= -16.3*V[0, 9]*t[0, 2] - 40*V[0, 11]*t[0, 2] - 13.4*V[0, 13] - 0.05+ objc]
	constraints += [lambda_2[0, 9] + lambda_2[0, 13] - lambda_2[0, 27] >= -16.3*V[0, 9]*t[0, 2] - 40*V[0, 11]*t[0, 2] - 13.4*V[0, 13] - 0.05- objc]
	constraints += [-lambda_2[0, 2] + lambda_2[0, 6] - 6*lambda_2[0, 10] + 6*lambda_2[0, 14] - 3*lambda_2[0, 17] - 3*lambda_2[0, 18] - 3*lambda_2[0, 21] - 3*lambda_2[0, 24] - 3*lambda_2[0, 28] + 3*lambda_2[0, 31] + 3*lambda_2[0, 32] + 3*lambda_2[0, 34] + 3*lambda_2[0, 35] + 3*lambda_2[0, 36] - 3*lambda_2[0, 39] + 3*lambda_2[0, 43] <= -16.3*V[0, 1]*t[0, 1] - 0.925*V[0, 1] - 40*V[0, 3]*t[0, 1] + 6.5*V[0, 3] - V[0, 4]+ objc]
	constraints += [-lambda_2[0, 2] + lambda_2[0, 6] - 6*lambda_2[0, 10] + 6*lambda_2[0, 14] - 3*lambda_2[0, 17] - 3*lambda_2[0, 18] - 3*lambda_2[0, 21] - 3*lambda_2[0, 24] - 3*lambda_2[0, 28] + 3*lambda_2[0, 31] + 3*lambda_2[0, 32] + 3*lambda_2[0, 34] + 3*lambda_2[0, 35] + 3*lambda_2[0, 36] - 3*lambda_2[0, 39] + 3*lambda_2[0, 43] >= -16.3*V[0, 1]*t[0, 1] - 0.925*V[0, 1] - 40*V[0, 3]*t[0, 1] + 6.5*V[0, 3] - V[0, 4]- objc]
	constraints += [lambda_2[0, 17] - lambda_2[0, 24] - lambda_2[0, 31] + lambda_2[0, 35] <= -2*f*V[0, 7] - g*V[0, 10] - 32.6*V[0, 5]*t[0, 1] - 1.85*V[0, 5] - 80*V[0, 7]*t[0, 3] - 40*V[0, 10]*t[0, 1] - 16.3*V[0, 10]*t[0, 3] + 6.5*V[0, 10] - V[0, 11] - V[0, 12]+ objc]
	constraints += [lambda_2[0, 17] - lambda_2[0, 24] - lambda_2[0, 31] + lambda_2[0, 35] >= -2*f*V[0, 7] - g*V[0, 10] - 32.6*V[0, 5]*t[0, 1] - 1.85*V[0, 5] - 80*V[0, 7]*t[0, 3] - 40*V[0, 10]*t[0, 1] - 16.3*V[0, 10]*t[0, 3] + 6.5*V[0, 10] - V[0, 11] - V[0, 12]- objc]
	constraints += [lambda_2[0, 18] - lambda_2[0, 28] - lambda_2[0, 32] + lambda_2[0, 36] <= -80*V[0, 7]*t[0, 2] - 16.3*V[0, 9]*t[0, 1] - 0.925*V[0, 9] - 16.3*V[0, 10]*t[0, 2] - 40*V[0, 11]*t[0, 1] + 6.5*V[0, 11] - V[0, 13] - 13.4*V[0, 14]+ objc]
	constraints += [lambda_2[0, 18] - lambda_2[0, 28] - lambda_2[0, 32] + lambda_2[0, 36] >= -80*V[0, 7]*t[0, 2] - 16.3*V[0, 9]*t[0, 1] - 0.925*V[0, 9] - 16.3*V[0, 10]*t[0, 2] - 40*V[0, 11]*t[0, 1] + 6.5*V[0, 11] - V[0, 13] - 13.4*V[0, 14]- objc]
	constraints += [lambda_2[0, 10] + lambda_2[0, 14] - lambda_2[0, 33] <= -80*V[0, 7]*t[0, 1] + 13.0*V[0, 7] - 16.3*V[0, 10]*t[0, 1] - 0.925*V[0, 10] - V[0, 14] - 0.05+ objc]
	constraints += [lambda_2[0, 10] + lambda_2[0, 14] - lambda_2[0, 33] >= -80*V[0, 7]*t[0, 1] + 13.0*V[0, 7] - 16.3*V[0, 10]*t[0, 1] - 0.925*V[0, 10] - V[0, 14] - 0.05- objc]
	constraints += [-lambda_2[0, 3] + lambda_2[0, 7] - 6*lambda_2[0, 11] + 6*lambda_2[0, 15] - 3*lambda_2[0, 19] - 3*lambda_2[0, 20] - 3*lambda_2[0, 21] - 3*lambda_2[0, 25] - 3*lambda_2[0, 29] - 3*lambda_2[0, 34] + 3*lambda_2[0, 37] + 3*lambda_2[0, 38] + 3*lambda_2[0, 39] + 3*lambda_2[0, 41] + 3*lambda_2[0, 42] + 3*lambda_2[0, 43] <= -16.3*V[0, 1]*t[0, 0] - 40*V[0, 3]*t[0, 0]+ objc]
	constraints += [-lambda_2[0, 3] + lambda_2[0, 7] - 6*lambda_2[0, 11] + 6*lambda_2[0, 15] - 3*lambda_2[0, 19] - 3*lambda_2[0, 20] - 3*lambda_2[0, 21] - 3*lambda_2[0, 25] - 3*lambda_2[0, 29] - 3*lambda_2[0, 34] + 3*lambda_2[0, 37] + 3*lambda_2[0, 38] + 3*lambda_2[0, 39] + 3*lambda_2[0, 41] + 3*lambda_2[0, 42] + 3*lambda_2[0, 43] >= -16.3*V[0, 1]*t[0, 0] - 40*V[0, 3]*t[0, 0]- objc]
	constraints += [lambda_2[0, 19] - lambda_2[0, 25] - lambda_2[0, 37] + lambda_2[0, 41] <= -f*V[0, 14] - g*V[0, 12] - 32.6*V[0, 5]*t[0, 0] - 40*V[0, 10]*t[0, 0] - 16.3*V[0, 12]*t[0, 3] - V[0, 13] - 40*V[0, 14]*t[0, 3]+ objc]
	constraints += [lambda_2[0, 19] - lambda_2[0, 25] - lambda_2[0, 37] + lambda_2[0, 41] >= -f*V[0, 14] - g*V[0, 12] - 32.6*V[0, 5]*t[0, 0] - 40*V[0, 10]*t[0, 0] - 16.3*V[0, 12]*t[0, 3] - V[0, 13] - 40*V[0, 14]*t[0, 3]- objc]
	constraints += [lambda_2[0, 20] - lambda_2[0, 29] - lambda_2[0, 38] + lambda_2[0, 42] <= -26.8*V[0, 8] - 16.3*V[0, 9]*t[0, 0] - 40*V[0, 11]*t[0, 0] - 16.3*V[0, 12]*t[0, 2] - 40*V[0, 14]*t[0, 2]+ objc]
	constraints += [lambda_2[0, 20] - lambda_2[0, 29] - lambda_2[0, 38] + lambda_2[0, 42] >= -26.8*V[0, 8] - 16.3*V[0, 9]*t[0, 0] - 40*V[0, 11]*t[0, 0] - 16.3*V[0, 12]*t[0, 2] - 40*V[0, 14]*t[0, 2]- objc]
	constraints += [lambda_2[0, 21] - lambda_2[0, 34] - lambda_2[0, 39] + lambda_2[0, 43] <= -80*V[0, 7]*t[0, 0] - 2*V[0, 8] - 16.3*V[0, 10]*t[0, 0] - 16.3*V[0, 12]*t[0, 1] - 0.925*V[0, 12] - 40*V[0, 14]*t[0, 1] + 6.5*V[0, 14]+ objc]
	constraints += [lambda_2[0, 21] - lambda_2[0, 34] - lambda_2[0, 39] + lambda_2[0, 43] >= -80*V[0, 7]*t[0, 0] - 2*V[0, 8] - 16.3*V[0, 10]*t[0, 0] - 16.3*V[0, 12]*t[0, 1] - 0.925*V[0, 12] - 40*V[0, 14]*t[0, 1] + 6.5*V[0, 14]- objc]
	constraints += [lambda_2[0, 11] + lambda_2[0, 15] - lambda_2[0, 40] <= -16.3*V[0, 12]*t[0, 0] - 40*V[0, 14]*t[0, 0] - 0.05+ objc]
	constraints += [lambda_2[0, 11] + lambda_2[0, 15] - lambda_2[0, 40] >= -16.3*V[0, 12]*t[0, 0] - 40*V[0, 14]*t[0, 0] - 0.05- objc]

	constraints += [objc>=0]
	constraints += [V>=-5]
	constraints += [V<=5]

	problem = cp.Problem(objective, constraints)
	assert problem.is_dcp()
	assert problem.is_dpp()

	control_param = np.reshape(control_param, (1, 4))
	theta_t = torch.from_numpy(control_param).float()
	theta_t.requires_grad = True
	layer = CvxpyLayer(problem, parameters=[t], variables=[lambda_1, lambda_2, V, objc])
	lambda_1_star, lambda_2_star, V_star, objc_star = layer(theta_t)
	
	objc_star.backward()

	Lyapunov_param = V_star.detach().numpy()[0]
	stateTest, lieTest = LyapunovTest(Lyapunov_param, control_param[0], f, g)

	return Lyapunov_param, theta_t.grad.detach().numpy()[0], objc_star.detach().numpy(), stateTest, lieTest


def LyapunovTest(V, t, f, g):
	stateTest, lieTest = True, True
	assert V.shape == (15,)
	assert t.shape == (4,)
	for i in range(10000):
		rstate = np.random.uniform(low=-3, high=3, size=(4, ))
		y,v_y,phi_e,r = rstate[0], rstate[1], rstate[2], rstate[3]
		LyaValue = V.dot(np.array([1, r, phi_e,v_y, y, r**2, phi_e**2, v_y**2, y**2, phi_e*r, r*v_y, phi_e*v_y, r*y, phi_e*y, v_y*y]))
		if LyaValue < 0:
			stateTest = False
		V = np.reshape(V, (1, 15))
		t = np.reshape(t, (1, 4))
		lieValue = f*phi_e*r*V[0, 11] + f*r**2*V[0, 10] + 2*f*r*v_y*V[0, 7] + f*r*y*V[0, 14] + f*r*V[0, 3] + g*phi_e*r*V[0, 9] + 2*g*r**2*V[0, 5] + g*r*v_y*V[0, 10] + g*r*y*V[0, 12] + g*r*V[0, 1] + 16.3*phi_e**2*V[0, 9]*t[0, 2] + 40*phi_e**2*V[0, 11]*t[0, 2] + 13.4*phi_e**2*V[0, 13] + 32.6*phi_e*r*V[0, 5]*t[0, 2] + 2*phi_e*r*V[0, 6] + 16.3*phi_e*r*V[0, 9]*t[0, 3] + 40*phi_e*r*V[0, 10]*t[0, 2] + 40*phi_e*r*V[0, 11]*t[0, 3] + 13.4*phi_e*r*V[0, 12] + 80*phi_e*v_y*V[0, 7]*t[0, 2] + 16.3*phi_e*v_y*V[0, 9]*t[0, 1] + 0.925*phi_e*v_y*V[0, 9] + 16.3*phi_e*v_y*V[0, 10]*t[0, 2] + 40*phi_e*v_y*V[0, 11]*t[0, 1] - 6.5*phi_e*v_y*V[0, 11] + phi_e*v_y*V[0, 13] + 13.4*phi_e*v_y*V[0, 14] + 26.8*phi_e*y*V[0, 8] + 16.3*phi_e*y*V[0, 9]*t[0, 0] + 40*phi_e*y*V[0, 11]*t[0, 0] + 16.3*phi_e*y*V[0, 12]*t[0, 2] + 40*phi_e*y*V[0, 14]*t[0, 2] + 16.3*phi_e*V[0, 1]*t[0, 2] + 40*phi_e*V[0, 3]*t[0, 2] + 13.4*phi_e*V[0, 4] + 32.6*r**2*V[0, 5]*t[0, 3] + r**2*V[0, 9] + 40*r**2*V[0, 10]*t[0, 3] + 32.6*r*v_y*V[0, 5]*t[0, 1] + 1.85*r*v_y*V[0, 5] + 80*r*v_y*V[0, 7]*t[0, 3] + 40*r*v_y*V[0, 10]*t[0, 1] + 16.3*r*v_y*V[0, 10]*t[0, 3] - 6.5*r*v_y*V[0, 10] + r*v_y*V[0, 11] + r*v_y*V[0, 12] + 32.6*r*y*V[0, 5]*t[0, 0] + 40*r*y*V[0, 10]*t[0, 0] + 16.3*r*y*V[0, 12]*t[0, 3] + r*y*V[0, 13] + 40*r*y*V[0, 14]*t[0, 3] + 16.3*r*V[0, 1]*t[0, 3] + r*V[0, 2] + 40*r*V[0, 3]*t[0, 3] + 80*v_y**2*V[0, 7]*t[0, 1] - 13.0*v_y**2*V[0, 7] + 16.3*v_y**2*V[0, 10]*t[0, 1] + 0.925*v_y**2*V[0, 10] + v_y**2*V[0, 14] + 80*v_y*y*V[0, 7]*t[0, 0] + 2*v_y*y*V[0, 8] + 16.3*v_y*y*V[0, 10]*t[0, 0] + 16.3*v_y*y*V[0, 12]*t[0, 1] + 0.925*v_y*y*V[0, 12] + 40*v_y*y*V[0, 14]*t[0, 1] - 6.5*v_y*y*V[0, 14] + 16.3*v_y*V[0, 1]*t[0, 1] + 0.925*v_y*V[0, 1] + 40*v_y*V[0, 3]*t[0, 1] - 6.5*v_y*V[0, 3] + v_y*V[0, 4] + 16.3*y**2*V[0, 12]*t[0, 0] + 40*y**2*V[0, 14]*t[0, 0] + 16.3*y*V[0, 1]*t[0, 0] + 40*y*V[0, 3]*t[0, 0]
		if lieValue > 0:
			lieTest = False
	return stateTest, lieTest	


def safeChecker(state, control_param, env, f_low=-0.3, f_high=-0.08, g_low=0.8, g_high=0.98):
	y, v_y, phi_e, r = state[0], state[1], state[2], state[3]
	# assert (m-2)**2 + (n-2)**2 + (p)**2 + (q-1)**2 - 1 > 0
	assert (y-2)**2 + (v_y-2)**2 + phi_e**2 + (r-1)**2 -1 > 0

	stop = False
	u = control_param.dot(state)
	m_next = env.A[0].dot(state) + env.B[0]*u
	p_next = env.A[2].dot(state) + env.B[2]*u
	n_next_opt = min(abs(env.A[1, :3].dot(state[:3]) + f_low*r + env.B[1]*u - 2), 
		abs(env.A[1, :3].dot(state[:3]) + f_high*r + env.B[1]*u - 2))

	q_next_opt = min(abs(env.A[3, :3].dot(state[:3]) + g_low*r + env.B[3]*u - 1), 
		abs(env.A[3, :3].dot(state[:3]) + g_high*r + env.B[3]*u - 1))

	if (m_next-2)**2 + (n_next_opt)**2 + (p_next)**2 + (q_next_opt)**2 - 1 < 0:
		stop = True
		# assert False

	return stop


def SVG(control_param, fd, gd, weight=0):
	UNSAFE, STEPS, SAFETYChecker = 0, 0, 0
	env = LK()
	state_tra = []
	control_tra = []
	reward_tra = []
	distance_tra = []
	unsafedis_tra = []
	state, done = env.reset(), False

	ep_r = 0
	while not done:
		if env.distance >= 5:
			break
		if safeChecker(state, control_param, env):
			break
		control_input = control_param.dot(state)
		state_tra.append(state)
		control_tra.append(control_input)
		distance_tra.append(env.distance)
		unsafedis_tra.append(env.unsafedis)
		next_state, reward, done = env.step(control_input)
		reward_tra.append(reward)
		ep_r += 2 + reward
		state = next_state
	EPR.append(ep_r)

	vs_prime = np.array([[0, 0, 0, 0]])
	vtheta_prime = np.array([[0, 0, 0, 0]])
	gamma = 0.99
	for i in range(len(state_tra)-1, -1, -1):
		m, n, p, q = state_tra[i][0], state_tra[i][1], state_tra[i][2], state_tra[i][3]
		ra = np.array([0, 0, 0, 0])
		assert distance_tra[i] >= 0
		rs = np.array([
			-m / distance_tra[i] + weight*(m-2)/unsafedis_tra[i], 
			-n / distance_tra[i] + weight*(n-2)/unsafedis_tra[i], 
			-p / distance_tra[i] + weight*(p-0)/unsafedis_tra[i], 
			-q / distance_tra[i] + weight*(q-1)/unsafedis_tra[i]])
		pis = np.reshape(control_param, (1, 4))
		fs = env.A
		fa = np.reshape(env.B, (4, 1))
		vs = rs + gamma * vs_prime.dot(fs + fa.dot(pis))

		pitheta = np.array([[m, n, p, q]])
		vtheta =  gamma * vs_prime.dot(fa).dot(pitheta) + gamma * vtheta_prime
		vs_prime = vs
		vtheta_prime = vtheta

		# Dynamics parameters estimation
		if i >= 1:
			deltagd = (state_tra[i][3] - env.B[3]*control_tra[i-1] - state_tra[i-1][:3].dot(env.A[3,:3])) / state_tra[i-1][3]
			gd -= 0.1*(gd-deltagd)
			deltafd = (state_tra[i][1] - env.B[1]*control_tra[i-1] - state_tra[i-1][:3].dot(env.A[1,:3])) / state_tra[i-1][3]
			fd -= 0.1*(fd-deltafd)
	return vtheta, state, fd/env.deltaT, (gd-1)/env.deltaT


def plot(control_param, V, B, figname, N=10, SVG=False):
	env = LK()
	trajectory = []
	LyapunovValue = []
	BarrierValue = []

	for i in range(N):
		state = env.reset()
		for _ in range(env.max_iteration):
			y, v_y, phi_e, r = state[0], state[1], state[2], state[3]
			if i >= 5:
				LyapunovValue.append(V.dot(np.array([1, r, phi_e, v_y, y, r**2, phi_e**2, v_y**2, y**2, phi_e*r, r*v_y, phi_e*v_y, r*y, phi_e*y, v_y*y])))
				BarrierValue.append(-B.dot(np.array([1, y, v_y, phi_e, r, y*v_y, y*phi_e, y*r, v_y*phi_e, v_y*r, phi_e*r, y**2, v_y**2, phi_e**2, r**2, y**4, v_y**4, phi_e**4, r**4])))
			# print(state,  LyapunovValue[-1], BarrierValue[-1])
				u = control_param.dot(np.array([y, v_y, phi_e, r]))
			else:
				u = np.array([[-0.29783216, -0.04068342, -2.08793568, -0.13452709]]).dot(np.array([y, v_y, phi_e, r]))
				# u = np.array([[-1.54779052, -0.61979645, -5.11666195, -0.28547278]]).dot(np.array([m, n, p, q]))
				# u = np.array([[-1.33827126, -0.06189693, -1.9722377,  -0.47614016]]).dot(np.array([m, n, p, q])) 
			trajectory.append(state)
			state, _, _ = env.step(u)

	fig = plt.figure(0, figsize=(6, 4))
	ax1 = fig.add_subplot(121)
	ax2 = fig.add_subplot(122)	

	BarrierValue = np.array(BarrierValue)
	LyapunovValue = np.array(LyapunovValue)
	# print(BarrierValue.shape, LyapunovValue.shape)
	BarrierValue = np.reshape(BarrierValue, (N, -1))
	LyapunovValue = np.reshape(LyapunovValue, (N, -1))
	# print(BarrierValue.shape, LyapunovValue.shape)
	Bmean = np.mean(BarrierValue, axis=0)
	Bstd = np.std(BarrierValue, axis=0)
	Vmean = np.mean(LyapunovValue, axis=0)
	Vstd = np.std(LyapunovValue, axis=0)
	# print(Bmean, Bstd, Vmean, Vstd)	
	ax2.plot(np.arange(len(Bmean))*0.02, Bmean, label='Barrier function')
	ax2.fill_between(np.arange(len(Bmean))*0.02, Bmean - Bstd, Bmean + Bstd, alpha=0.2)
	ax2.plot(np.arange(len(Vmean))*0.02, Vmean, label='Lyapunov function')
	ax2.fill_between(np.arange(len(Vmean))*0.02, Vmean - Vstd, Vmean + Vstd, alpha=0.2)
	# ax2.ylim([-1, max(Bmean)+1])
	ax2.legend()
	# plt.savefig('LK_B_V_7.pdf', bbox_inches='tight')
	# assert False
	# plt.figure(0)
	# The contour plot is not a valid one because we cannot plot 4-dimension systems 
	# m = np.linspace(-1, 2, 150)
	# n = np.linspace(-10, 10, 150)
	# p = np.linspace(-1, 1, 150)
	# q = np.linspace(-3, 3, 50)
	# m,  p = np.meshgrid(m, p)
	# z = B.dot(np.array([1, m, 0, p, 0, 0, m*p, 0, 0, 0, 0, m**2, m**3, m**4], dtype=object))
	# levels = np.array([0])
	# cs = plt.contour(m, p, z, levels)

	circle1 = plt.Circle((0.4, 2), 0.2)
	circle2 = plt.Circle((2, 2), 1, color='r')
	ax1.add_patch(circle1)
	ax1.add_patch(circle2)

	trajectory = np.array(trajectory)
	for i in range(N):
		if i >= 5:
			ax1.plot(trajectory[i*env.max_iteration:(i+1)*env.max_iteration, 0], trajectory[i*env.max_iteration:(i+1)*env.max_iteration, 1], color='#2ca02c')
		else:
			ax1.plot(trajectory[i*env.max_iteration:(i+1)*env.max_iteration, 0], trajectory[i*env.max_iteration:(i+1)*env.max_iteration, 1], color='#ff7f0e')
	ax1.legend(handles=[SVG_patch, Ours_patch])
	plt.xlim([-0.5, 1.5])
	plt.grid(True)
	plt.savefig(figname, bbox_inches='tight')


def LyapunovConsGenerate():

	def generateConstraints(exp1, exp2, file, degree):
		for i in range(degree+1):
			for j in range(degree+1):
				for k in range(degree+1):
					for g in range(degree+1):
						if i + j + k + g <= degree:
							if exp1.coeff(y, i).coeff(v_y, j).coeff(phi_e, k).coeff(r, g) != 0:
								if exp2.coeff(y, i).coeff(v_y, j).coeff(phi_e, k).coeff(r, g) != 0:
									file.write('constraints += [' + str(exp1.coeff(y, i).coeff(v_y, j).coeff(phi_e, k).coeff(r, g)) + ' <= ' + str(exp2.coeff(y, i).coeff(v_y, j).coeff(phi_e, k).coeff(r, g)) + '+ objc' + ']\n')
									file.write('constraints += [' + str(exp1.coeff(y, i).coeff(v_y, j).coeff(phi_e, k).coeff(r, g)) + ' >= ' + str(exp2.coeff(y, i).coeff(v_y, j).coeff(phi_e, k).coeff(r, g)) + '- objc' + ']\n')
								else:
									file.write('constraints += [' + str(exp1.coeff(y, i).coeff(v_y, j).coeff(phi_e, k).coeff(r, g)) + ' == ' + str(exp2.coeff(y, i).coeff(v_y, j).coeff(phi_e, k).coeff(r, g)) + ']\n')
									

	y, v_y, phi_e, r, f, g = symbols('y, v_y, phi_e, r, f, g')
	X = [y, v_y, phi_e, r]
	monomial = monomial_generation(2, X)
	monomial_list = Matrix(monomial)
	# Vbase = Matrix([m**2, n**2, p**2, q**2, m*n, m*p, m*q, n*p, n*q, p*q])
	# ele = Matrix([m, n, p, q])
	Poly = [y+3, v_y+3, phi_e+3, r+3, 3-y, 3-v_y, 3-phi_e, 3-r]
	V = MatrixSymbol('V', 1, len(monomial))

	poly_list = Matrix(possible_handelman_generation(2, Poly))
	lambda_init = MatrixSymbol('lambda_1',1 ,len(poly_list))

	lhs_init = V*monomial_list - 0.001*Matrix([y**2+v_y**2+phi_e**2+r**2])
	lhs_init = expand(lhs_init[0, 0])

	rhs_init = lambda_init*poly_list
	rhs_init = expand(rhs_init[0, 0])

	file = open("Ly_deg2.txt","w")
	file.write("#-------------------The initial conditions-------------------\n")
	generateConstraints(rhs_init, lhs_init, file, degree=2)

	poly_der_list = Matrix(possible_handelman_generation(2, Poly))
	lambda_der = MatrixSymbol('lambda_2',1 ,len(poly_der_list))
	

	### Lie derivative
	file.write("\n")
	file.write("#-------------------The derivative conditions-------------------\n")
	theta = MatrixSymbol('t', 1, 4)
	uBase = Matrix([[y, v_y, phi_e, r]])
	u = theta * uBase.T
	u = expand(u[0, 0])
	
	Amatrix = Matrix([[0,1,13.4,0], [0,	-6.5, 0, f],[0, 0, 0, 1], [0, 0.925, 0,	g]])
	Bmatrix = Matrix([[0], [40], [0], [16.3]])
	dynamics = Amatrix*Matrix([[y], [v_y], [phi_e], [r]]) + Bmatrix*u
	monomial_der = GetDerivative(dynamics, monomial, X)

	lhs_der = -V*monomial_der - 0.05*Matrix([y**2+v_y**2+phi_e**2+r**2])
	lhs_der = expand(lhs_der[0, 0])

	rhs_der = lambda_der * poly_der_list
	rhs_der = expand(rhs_der[0, 0])
	generateConstraints(rhs_der, lhs_der, file, degree=2)
	file.write("\n")
	file.write("#------------------Monomial and Polynomial Terms------------------\n")
	file.write("polynomial terms:"+str(monomial_list)+"\n")
	file.write("number of polynomial terms:"+str(len(monomial_list))+"\n")
	file.write("number of lambda_1: "+str(len(poly_list))+"\n")
	file.write("number of lambda_2: "+str(len(poly_der_list))+"\n")
	file.write("\n")
	file.write("#------------------Lie Derivative test------------------\n")
	temp = V*monomial_der
	file.write(str(expand(temp[0, 0]))+"\n")
	file.close()


def BarrierConsGenerate():
	### X0
	def generateConstraints(exp1, exp2, file, degree):
		for i in range(degree+1):
			for j in range(degree+1):
				for k in range(degree+1):
					for g in range(degree+1):
						if i + j + k + g <= degree:
							if exp1.coeff(y, i).coeff(v_y, j).coeff(phi_e, k).coeff(r, g) != 0:
								if exp2.coeff(y, i).coeff(v_y, j).coeff(phi_e, k).coeff(r, g) != 0:
									file.write('constraints += [' + str(exp1.coeff(y, i).coeff(v_y, j).coeff(phi_e, k).coeff(r, g)) + ' <= ' + str(exp2.coeff(y, i).coeff(v_y, j).coeff(phi_e, k).coeff(r, g)) + '+ objc' + ']\n')
									file.write('constraints += [' + str(exp1.coeff(y, i).coeff(v_y, j).coeff(phi_e, k).coeff(r, g)) + ' >= ' + str(exp2.coeff(y, i).coeff(v_y, j).coeff(phi_e, k).coeff(r, g)) + '- objc' + ']\n')
								else:
									file.write('constraints += [' + str(exp1.coeff(y, i).coeff(v_y, j).coeff(phi_e, k).coeff(r, g)) + ' == ' + str(exp2.coeff(y, i).coeff(v_y, j).coeff(phi_e, k).coeff(r, g)) + ']\n')
									
	y, v_y, phi_e, r, l, k, g = symbols('y, v_y, phi_e, r, l, k, g')
	X = [y, v_y, phi_e, r]
	
	initial_set = [y-0.3, v_y-1.9, phi_e-0.4, r+0.1]
	# print("setting up")
	# Generate the possible handelman product to the power defined
	init_poly_list = Matrix(possible_handelman_generation(6, initial_set))
	# print("generating poly_list")
	# incorporate the interval with handelman basis
	monomial = [1, y, v_y, phi_e, r, y*v_y, y*phi_e, y*r, v_y*phi_e, v_y*r, phi_e*r, y**2, v_y**2, phi_e**2, r**2, y**4, v_y**4, phi_e**4, r**4, y**6, v_y**6, phi_e**6, r**6]
	# monomial.remove(1)
	monomial_list = Matrix(monomial)
	# print("generating monomial terms")
	# print(monomial_list)
	B = MatrixSymbol('B', 1, len(monomial_list))
	lambda_poly_init = MatrixSymbol('lambda_1', 1, len(init_poly_list))
	print("the length of the lambda_1 is", len(init_poly_list))
	lhs_init = B * monomial_list
	# lhs_init = V * monomial_list
	lhs_init = lhs_init[0, 0].expand()
	# print("Get done the left hand side mul")
	
	rhs_init = lambda_poly_init * init_poly_list
	# print("Get done the right hand side mul")
	rhs_init = rhs_init[0, 0].expand()
	file = open("barrier_deg6.txt","w")
	file.write("#-------------------The Initial Set Conditions-------------------\n")
	generateConstraints(rhs_init, lhs_init, file, degree=6)
		# f.close()
	# theta = MatrixSymbol('theta',1 ,2)
	u0Base = Matrix([[y, v_y, phi_e, r]])
	t0 = MatrixSymbol('t', 1, 4)
	a_e = t0*u0Base.T
	a_e = expand(a_e[0, 0])

	Amatrix = Matrix([[0,1,13.4,0], [0,	-6.5, 0, k],[0, 0, 0, 1], [0, 0.925, 0,	g]])
	Bmatrix = Matrix([[0], [40], [0], [16.3]])
	dynamics = Amatrix*Matrix([[y], [v_y], [phi_e], [r]]) + Bmatrix*a_e
	monomial_der = GetDerivative(dynamics, monomial, X)

	lhs_der = B * monomial_der - l*B*monomial_list - 0.01*Matrix([(y**2 + v_y**2 + phi_e**2 + r**2)]) 
	lhs_der = lhs_der[0,0].expand()

	# lie_poly_list = [1/9*(y**2+v_y**2+phi_e**2+r**2), 1-1/9*(y**2+v_y**2+phi_e**2+r**2)]
	lie_poly_list = [y+3, v_y+3, phi_e+3, r+3]
	lie_poly = Matrix(possible_handelman_generation(6, lie_poly_list))
	lambda_poly_der = MatrixSymbol('lambda_2', 1, len(lie_poly))
	print("the length of the lambda_2 is", len(lie_poly))
	rhs_der = lambda_poly_der * lie_poly
	rhs_der = rhs_der[0,0].expand()

	# with open('cons.txt', 'a+') as f:
	file.write("\n")
	file.write("#------------------The Lie Derivative conditions------------------\n")
	generateConstraints(rhs_der, lhs_der, file, degree=6)
	file.write("\n")

	unsafe_poly_list = [y-1, v_y-1, phi_e+1, r]
	unsafe_poly = Matrix(possible_handelman_generation(6, unsafe_poly_list))
	lambda_poly_unsafe = MatrixSymbol('lambda_3', 1, len(unsafe_poly))
	print("the length of the lambda_3 is", len(unsafe_poly))

	rhs_unsafe = lambda_poly_unsafe * unsafe_poly
	rhs_unsafe = rhs_unsafe[0,0].expand()

	lhs_unsafe = -B*monomial_list - 0.01*Matrix([(y)**2 + (v_y)**2 + (phi_e)**2 + (r)**2])
	# lhs_unsafe = -B * monomial_list
	lhs_unsafe = lhs_unsafe[0,0].expand()

	file.write("\n")
	file.write("#------------------The Unsafe conditions------------------\n")
	generateConstraints(rhs_unsafe, lhs_unsafe, file, degree=6)
	file.write("\n")


	file.write("#------------------Monomial and Polynomial Terms------------------\n")
	file.write("polynomial terms:"+str(monomial)+"\n")
	file.write("number of polynomial terms:"+str(len(monomial_list))+"\n")
	file.write("the length of the lambda_1 is "+str(len(init_poly_list))+"\n")
	file.write("the length of the lambda_2 is "+str(len(lie_poly))+"\n")
	file.write("the length of the lambda_3 is "+str(len(unsafe_poly))+"\n")
	# file.write(str(len(monomial))+"\n")
	file.write("\n")
	file.write("#------------------Lie Derivative test------------------\n")
	temp1 = B*monomial_der
	temp2 = l*B*monomial_list
	file.write(str(expand(temp1[0, 0])-expand(temp2[0, 0]))+"\n")
	file.close()


if __name__ == '__main__':
	

	def ours():
		f = np.random.uniform(low=-15, high=-5)
		g = np.random.uniform(low=-1, high=-10)
		# control_param = np.array([0, 0, 0, 0], dtype='float64')
		control_param = np.array([-0.91258054, -0.24937938, -4.09259951, -0.35854284], dtype='float64')
		for i in range(100):
			BarGrad, LyaGrad = np.array([0, 0, 0, 0]), np.array([0, 0, 0, 0])
			Bslack, Vslack = 100, 100
			vtheta, final_state, f, g = SVG(control_param, f*0.02, 1-g*0.02)
			try: 
				B, BarGrad, Bslack, initTest, unsafeTest, BlieTest, init, unsafe, lie = BarrierLP(control_param, l=-100, k=f, g=g)
				print("The iteration number: ", i)
				print("initTest: ", initTest, init, "unsafeTest: ", unsafeTest, unsafe, "BlieTest: ", BlieTest, lie)
				print("The Barrier gradient is: ", BarGrad, "The Barrier slack variable is: ", Bslack)
				print("THe barrier funtion is:", B)
				V, LyaGrad, Vslack, stateTest,  VlieTest = LyaLP(control_param, f, g)
				# print(initTest, unsafeTest, BlieTest, stateTest,  VlieTest)
				print("Lya_iniTest: ", stateTest, "LieTest: ", VlieTest)
				print("The Lyapunov gradient is: ", LyaGrad, "The Lyapunov slack variable is: ", Vslack)
				print("The Lyapunov funtion is:", V)
				print("The vtheta is:", vtheta[0])
				print("The control parameter is: ", control_param)
				print("The final state is: ", final_state)
				print("============================================\n")
				print("\n")
				if initTest and unsafeTest and BlieTest and stateTest and VlieTest and LA.norm(final_state) <= 0.1:
					print('Successfully learn a controller with its barrier certificate and Lyapunov function')
					print('Controller: ', control_param)
					print('Valid Barrier is: ', B)
					print('Valid Lyapunov is: ', V) 
					plot(control_param, V, B, figname='Tra_LK_ours_1.pdf')
					break
			except Exception as e:
				print(e)
			control_param += 1e-2*np.clip(vtheta[0], -2e2, 2e2)
			control_param -= np.clip(BarGrad, -1, 1)
			# control_param -= 0.1*np.sign(BarGrad)
			control_param -= np.clip(LyaGrad, -1, 1)
			# print(final_state, BarGrad, Bslack, LyaGrad, Vslack)

	def SVGOnly():
		f = np.random.uniform(low=-15, high=-5)
		g = np.random.uniform(low=-1, high=-10)
		control_param = np.array([-0.1, -0.1, -0.1, -0.1], dtype='float64')
		weight = np.linspace(0, 2, 100)
		for i in range(100):
			vtheta, final_state, f, g = SVG(control_param, f*0.02, 1-g*0.02, weight[i])
			control_param += 1e-3 * np.clip(vtheta[0], -2e3, 2e3)
			try:
				# V, LyaGrad, Vslack, stateTest,  VlieTest = LyaSDP(control_param, f, g, SVGOnly=True)
				# B, BarGrad, Bslack, initTest, unsafeTest, BlieTest = BarrierSDP(control_param, l=-1, SVGOnly=True, k=f, g=g)
				B = highOrderBarSDP(control_param, l=-1,  k=f, g=g)
				# print(stateTest, VlieTest, initTest, unsafeTest, BlieTest, final_state)
				stateTest, VlieTest = True, True
				if initTest and unsafeTest and BlieTest and stateTest and VlieTest and abs(final_state[0])<0.05 and abs(final_state[2])<0.05 and abs(final_state[1]) < 0.1 and abs(final_state[3]) < 0.1:
					print('Success for SVG only!')
					break
			except Exception as e:
				print(e)
		print(control_param)
		# plot(control_param, V=0, B=0, figname='Tra_LK.pdf', SVG=True)
	
	# print('baseline starts here')
	# SVGOnly()
	# print('')
	# print('Our approach starts here')
	ours()
	# LyapunovConsGenerate()
	# BarrierConsGenerate()
	
	