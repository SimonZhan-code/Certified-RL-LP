#-------------------The Initial Set Conditions-------------------
constraints += [-109.25*lambda_1[0, 0] + 110.25*lambda_1[0, 1] + 11935.5625*lambda_1[0, 2] + 12155.0625*lambda_1[0, 3] - 12044.8125*lambda_1[0, 4] <= B[0, 0]+ objc]
constraints += [-109.25*lambda_1[0, 0] + 110.25*lambda_1[0, 1] + 11935.5625*lambda_1[0, 2] + 12155.0625*lambda_1[0, 3] - 12044.8125*lambda_1[0, 4] >= B[0, 0]- objc]
constraints += [-25*lambda_1[0, 0] + 25*lambda_1[0, 1] + 5462.5*lambda_1[0, 2] + 5512.5*lambda_1[0, 3] - 5487.5*lambda_1[0, 4] <= B[0, 5]+ objc]
constraints += [-25*lambda_1[0, 0] + 25*lambda_1[0, 1] + 5462.5*lambda_1[0, 2] + 5512.5*lambda_1[0, 3] - 5487.5*lambda_1[0, 4] >= B[0, 5]- objc]
constraints += [625.0*lambda_1[0, 2] + 625.0*lambda_1[0, 3] - 625*lambda_1[0, 4] <= B[0, 13]+ objc]
constraints += [625.0*lambda_1[0, 2] + 625.0*lambda_1[0, 3] - 625*lambda_1[0, 4] >= B[0, 13]- objc]
constraints += [25.0*lambda_1[0, 0] - 25.0*lambda_1[0, 1] - 5462.5*lambda_1[0, 2] - 5512.5*lambda_1[0, 3] + 5487.5*lambda_1[0, 4] <= B[0, 2]+ objc]
constraints += [25.0*lambda_1[0, 0] - 25.0*lambda_1[0, 1] - 5462.5*lambda_1[0, 2] - 5512.5*lambda_1[0, 3] + 5487.5*lambda_1[0, 4] >= B[0, 2]- objc]
constraints += [-1250.0*lambda_1[0, 2] - 1250.0*lambda_1[0, 3] + 1250.0*lambda_1[0, 4] <= B[0, 23]+ objc]
constraints += [-1250.0*lambda_1[0, 2] - 1250.0*lambda_1[0, 3] + 1250.0*lambda_1[0, 4] >= B[0, 23]- objc]
constraints += [-25*lambda_1[0, 0] + 25*lambda_1[0, 1] + 6087.5*lambda_1[0, 2] + 6137.5*lambda_1[0, 3] - 6112.5*lambda_1[0, 4] <= B[0, 6]+ objc]
constraints += [-25*lambda_1[0, 0] + 25*lambda_1[0, 1] + 6087.5*lambda_1[0, 2] + 6137.5*lambda_1[0, 3] - 6112.5*lambda_1[0, 4] >= B[0, 6]- objc]
constraints += [1250.0*lambda_1[0, 2] + 1250.0*lambda_1[0, 3] - 1250*lambda_1[0, 4] <= B[0, 47]+ objc]
constraints += [1250.0*lambda_1[0, 2] + 1250.0*lambda_1[0, 3] - 1250*lambda_1[0, 4] >= B[0, 47]- objc]
constraints += [-1250.0*lambda_1[0, 2] - 1250.0*lambda_1[0, 3] + 1250.0*lambda_1[0, 4] <= B[0, 10]+ objc]
constraints += [-1250.0*lambda_1[0, 2] - 1250.0*lambda_1[0, 3] + 1250.0*lambda_1[0, 4] >= B[0, 10]- objc]
constraints += [625.0*lambda_1[0, 2] + 625.0*lambda_1[0, 3] - 625*lambda_1[0, 4] <= B[0, 14]+ objc]
constraints += [625.0*lambda_1[0, 2] + 625.0*lambda_1[0, 3] - 625*lambda_1[0, 4] >= B[0, 14]- objc]
constraints += [100*lambda_1[0, 0] - 100*lambda_1[0, 1] - 21850.0*lambda_1[0, 2] - 22050.0*lambda_1[0, 3] + 21950.0*lambda_1[0, 4] <= B[0, 3]+ objc]
constraints += [100*lambda_1[0, 0] - 100*lambda_1[0, 1] - 21850.0*lambda_1[0, 2] - 22050.0*lambda_1[0, 3] + 21950.0*lambda_1[0, 4] >= B[0, 3]- objc]
constraints += [-5000.0*lambda_1[0, 2] - 5000.0*lambda_1[0, 3] + 5000*lambda_1[0, 4] <= B[0, 25]+ objc]
constraints += [-5000.0*lambda_1[0, 2] - 5000.0*lambda_1[0, 3] + 5000*lambda_1[0, 4] >= B[0, 25]- objc]
constraints += [5000.0*lambda_1[0, 2] + 5000.0*lambda_1[0, 3] - 5000.0*lambda_1[0, 4] <= B[0, 19]+ objc]
constraints += [5000.0*lambda_1[0, 2] + 5000.0*lambda_1[0, 3] - 5000.0*lambda_1[0, 4] >= B[0, 19]- objc]
constraints += [-5000.0*lambda_1[0, 2] - 5000.0*lambda_1[0, 3] + 5000*lambda_1[0, 4] <= B[0, 26]+ objc]
constraints += [-5000.0*lambda_1[0, 2] - 5000.0*lambda_1[0, 3] + 5000*lambda_1[0, 4] >= B[0, 26]- objc]
constraints += [-25*lambda_1[0, 0] + 25*lambda_1[0, 1] + 15462.5*lambda_1[0, 2] + 15512.5*lambda_1[0, 3] - 15487.5*lambda_1[0, 4] <= B[0, 7]+ objc]
constraints += [-25*lambda_1[0, 0] + 25*lambda_1[0, 1] + 15462.5*lambda_1[0, 2] + 15512.5*lambda_1[0, 3] - 15487.5*lambda_1[0, 4] >= B[0, 7]- objc]
constraints += [1250.0*lambda_1[0, 2] + 1250.0*lambda_1[0, 3] - 1250*lambda_1[0, 4] <= B[0, 48]+ objc]
constraints += [1250.0*lambda_1[0, 2] + 1250.0*lambda_1[0, 3] - 1250*lambda_1[0, 4] >= B[0, 48]- objc]
constraints += [-1250.0*lambda_1[0, 2] - 1250.0*lambda_1[0, 3] + 1250.0*lambda_1[0, 4] <= B[0, 28]+ objc]
constraints += [-1250.0*lambda_1[0, 2] - 1250.0*lambda_1[0, 3] + 1250.0*lambda_1[0, 4] >= B[0, 28]- objc]
constraints += [1250.0*lambda_1[0, 2] + 1250.0*lambda_1[0, 3] - 1250*lambda_1[0, 4] <= B[0, 49]+ objc]
constraints += [1250.0*lambda_1[0, 2] + 1250.0*lambda_1[0, 3] - 1250*lambda_1[0, 4] >= B[0, 49]- objc]
constraints += [-5000.0*lambda_1[0, 2] - 5000.0*lambda_1[0, 3] + 5000*lambda_1[0, 4] <= B[0, 11]+ objc]
constraints += [-5000.0*lambda_1[0, 2] - 5000.0*lambda_1[0, 3] + 5000*lambda_1[0, 4] >= B[0, 11]- objc]
constraints += [625.0*lambda_1[0, 2] + 625.0*lambda_1[0, 3] - 625*lambda_1[0, 4] <= B[0, 15]+ objc]
constraints += [625.0*lambda_1[0, 2] + 625.0*lambda_1[0, 3] - 625*lambda_1[0, 4] >= B[0, 15]- objc]
constraints += [20.0*lambda_1[0, 0] - 20.0*lambda_1[0, 1] - 4370.0*lambda_1[0, 2] - 4410.0*lambda_1[0, 3] + 4390.0*lambda_1[0, 4] <= B[0, 4]+ objc]
constraints += [20.0*lambda_1[0, 0] - 20.0*lambda_1[0, 1] - 4370.0*lambda_1[0, 2] - 4410.0*lambda_1[0, 3] + 4390.0*lambda_1[0, 4] >= B[0, 4]- objc]
constraints += [-1000.0*lambda_1[0, 2] - 1000.0*lambda_1[0, 3] + 1000.0*lambda_1[0, 4] <= B[0, 29]+ objc]
constraints += [-1000.0*lambda_1[0, 2] - 1000.0*lambda_1[0, 3] + 1000.0*lambda_1[0, 4] >= B[0, 29]- objc]
constraints += [1000.0*lambda_1[0, 2] + 1000.0*lambda_1[0, 3] - 1000.0*lambda_1[0, 4] <= B[0, 21]+ objc]
constraints += [1000.0*lambda_1[0, 2] + 1000.0*lambda_1[0, 3] - 1000.0*lambda_1[0, 4] >= B[0, 21]- objc]
constraints += [-1000.0*lambda_1[0, 2] - 1000.0*lambda_1[0, 3] + 1000.0*lambda_1[0, 4] <= B[0, 30]+ objc]
constraints += [-1000.0*lambda_1[0, 2] - 1000.0*lambda_1[0, 3] + 1000.0*lambda_1[0, 4] >= B[0, 30]- objc]
constraints += [4000.0*lambda_1[0, 2] + 4000.0*lambda_1[0, 3] - 4000.0*lambda_1[0, 4] <= B[0, 22]+ objc]
constraints += [4000.0*lambda_1[0, 2] + 4000.0*lambda_1[0, 3] - 4000.0*lambda_1[0, 4] >= B[0, 22]- objc]
constraints += [-1000.0*lambda_1[0, 2] - 1000.0*lambda_1[0, 3] + 1000.0*lambda_1[0, 4] <= B[0, 31]+ objc]
constraints += [-1000.0*lambda_1[0, 2] - 1000.0*lambda_1[0, 3] + 1000.0*lambda_1[0, 4] >= B[0, 31]- objc]
constraints += [-25*lambda_1[0, 0] + 25*lambda_1[0, 1] + 5862.5*lambda_1[0, 2] + 5912.5*lambda_1[0, 3] - 5887.5*lambda_1[0, 4] <= B[0, 8]+ objc]
constraints += [-25*lambda_1[0, 0] + 25*lambda_1[0, 1] + 5862.5*lambda_1[0, 2] + 5912.5*lambda_1[0, 3] - 5887.5*lambda_1[0, 4] >= B[0, 8]- objc]
constraints += [1250.0*lambda_1[0, 2] + 1250.0*lambda_1[0, 3] - 1250*lambda_1[0, 4] <= B[0, 50]+ objc]
constraints += [1250.0*lambda_1[0, 2] + 1250.0*lambda_1[0, 3] - 1250*lambda_1[0, 4] >= B[0, 50]- objc]
constraints += [-1250.0*lambda_1[0, 2] - 1250.0*lambda_1[0, 3] + 1250.0*lambda_1[0, 4] <= B[0, 33]+ objc]
constraints += [-1250.0*lambda_1[0, 2] - 1250.0*lambda_1[0, 3] + 1250.0*lambda_1[0, 4] >= B[0, 33]- objc]
constraints += [1250.0*lambda_1[0, 2] + 1250.0*lambda_1[0, 3] - 1250*lambda_1[0, 4] <= B[0, 51]+ objc]
constraints += [1250.0*lambda_1[0, 2] + 1250.0*lambda_1[0, 3] - 1250*lambda_1[0, 4] >= B[0, 51]- objc]
constraints += [-5000.0*lambda_1[0, 2] - 5000.0*lambda_1[0, 3] + 5000*lambda_1[0, 4] <= B[0, 34]+ objc]
constraints += [-5000.0*lambda_1[0, 2] - 5000.0*lambda_1[0, 3] + 5000*lambda_1[0, 4] >= B[0, 34]- objc]
constraints += [1250.0*lambda_1[0, 2] + 1250.0*lambda_1[0, 3] - 1250*lambda_1[0, 4] <= B[0, 52]+ objc]
constraints += [1250.0*lambda_1[0, 2] + 1250.0*lambda_1[0, 3] - 1250*lambda_1[0, 4] >= B[0, 52]- objc]
constraints += [-1000.0*lambda_1[0, 2] - 1000.0*lambda_1[0, 3] + 1000.0*lambda_1[0, 4] <= B[0, 12]+ objc]
constraints += [-1000.0*lambda_1[0, 2] - 1000.0*lambda_1[0, 3] + 1000.0*lambda_1[0, 4] >= B[0, 12]- objc]
constraints += [625.0*lambda_1[0, 2] + 625.0*lambda_1[0, 3] - 625*lambda_1[0, 4] <= B[0, 16]+ objc]
constraints += [625.0*lambda_1[0, 2] + 625.0*lambda_1[0, 3] - 625*lambda_1[0, 4] >= B[0, 16]- objc]

#------------------The Lie Derivative conditions------------------
constraints += [lambda_2[0, 0] + lambda_2[0, 2] <= -l*B[0, 0]+ objc]
constraints += [lambda_2[0, 0] + lambda_2[0, 2] >= -l*B[0, 0]- objc]
constraints += [-0.111111111111111*lambda_2[0, 0] + 0.111111111111111*lambda_2[0, 1] - 0.222222222222222*lambda_2[0, 2] + 0.111111111111111*lambda_2[0, 4] <= 2*g*B[0, 5] + k*B[0, 18] - l*B[0, 5] + 32.6*B[0, 5]*t[0, 3] + B[0, 17] + 40*B[0, 18]*t[0, 3] - 0.001+ objc]
constraints += [-0.111111111111111*lambda_2[0, 0] + 0.111111111111111*lambda_2[0, 1] - 0.222222222222222*lambda_2[0, 2] + 0.111111111111111*lambda_2[0, 4] >= 2*g*B[0, 5] + k*B[0, 18] - l*B[0, 5] + 32.6*B[0, 5]*t[0, 3] + B[0, 17] + 40*B[0, 18]*t[0, 3] - 0.001- objc]
constraints += [0.0123456790123457*lambda_2[0, 2] + 0.0123456790123457*lambda_2[0, 3] - 0.0123456790123457*lambda_2[0, 4] <= 4*g*B[0, 13] + k*B[0, 37] - l*B[0, 13] + 65.2*B[0, 13]*t[0, 3] + B[0, 35] + 40*B[0, 37]*t[0, 3]+ objc]
constraints += [0.0123456790123457*lambda_2[0, 2] + 0.0123456790123457*lambda_2[0, 3] - 0.0123456790123457*lambda_2[0, 4] >= 4*g*B[0, 13] + k*B[0, 37] - l*B[0, 13] + 65.2*B[0, 13]*t[0, 3] + B[0, 35] + 40*B[0, 37]*t[0, 3]- objc]
constraints += [-0.111111111111111*lambda_2[0, 0] + 0.111111111111111*lambda_2[0, 1] - 0.222222222222222*lambda_2[0, 2] + 0.111111111111111*lambda_2[0, 4] <= -l*B[0, 6] + 16.3*B[0, 17]*t[0, 2] + 40*B[0, 19]*t[0, 2] + 13.4*B[0, 21] - 0.001+ objc]
constraints += [-0.111111111111111*lambda_2[0, 0] + 0.111111111111111*lambda_2[0, 1] - 0.222222222222222*lambda_2[0, 2] + 0.111111111111111*lambda_2[0, 4] >= -l*B[0, 6] + 16.3*B[0, 17]*t[0, 2] + 40*B[0, 19]*t[0, 2] + 13.4*B[0, 21] - 0.001- objc]
constraints += [0.0246913580246914*lambda_2[0, 2] + 0.0246913580246914*lambda_2[0, 3] - 0.0246913580246914*lambda_2[0, 4] <= 2*g*B[0, 47] + k*B[0, 58] - l*B[0, 47] + 48.9*B[0, 35]*t[0, 2] + 3*B[0, 36] + 32.6*B[0, 47]*t[0, 3] + 40*B[0, 57]*t[0, 2] + 40*B[0, 58]*t[0, 3] + 13.4*B[0, 60]+ objc]
constraints += [0.0246913580246914*lambda_2[0, 2] + 0.0246913580246914*lambda_2[0, 3] - 0.0246913580246914*lambda_2[0, 4] >= 2*g*B[0, 47] + k*B[0, 58] - l*B[0, 47] + 48.9*B[0, 35]*t[0, 2] + 3*B[0, 36] + 32.6*B[0, 47]*t[0, 3] + 40*B[0, 57]*t[0, 2] + 40*B[0, 58]*t[0, 3] + 13.4*B[0, 60]- objc]
constraints += [0.0123456790123457*lambda_2[0, 2] + 0.0123456790123457*lambda_2[0, 3] - 0.0123456790123457*lambda_2[0, 4] <= -l*B[0, 14] + 16.3*B[0, 36]*t[0, 2] + 40*B[0, 38]*t[0, 2] + 13.4*B[0, 42]+ objc]
constraints += [0.0123456790123457*lambda_2[0, 2] + 0.0123456790123457*lambda_2[0, 3] - 0.0123456790123457*lambda_2[0, 4] >= -l*B[0, 14] + 16.3*B[0, 36]*t[0, 2] + 40*B[0, 38]*t[0, 2] + 13.4*B[0, 42]- objc]
constraints += [-0.111111111111111*lambda_2[0, 0] + 0.111111111111111*lambda_2[0, 1] - 0.222222222222222*lambda_2[0, 2] + 0.111111111111111*lambda_2[0, 4] <= -l*B[0, 7] + 80*B[0, 7]*t[0, 1] - 13.0*B[0, 7] + 16.3*B[0, 18]*t[0, 1] + 0.925*B[0, 18] + B[0, 22] - 0.001+ objc]
constraints += [-0.111111111111111*lambda_2[0, 0] + 0.111111111111111*lambda_2[0, 1] - 0.222222222222222*lambda_2[0, 2] + 0.111111111111111*lambda_2[0, 4] >= -l*B[0, 7] + 80*B[0, 7]*t[0, 1] - 13.0*B[0, 7] + 16.3*B[0, 18]*t[0, 1] + 0.925*B[0, 18] + B[0, 22] - 0.001- objc]
constraints += [0.0246913580246914*lambda_2[0, 2] + 0.0246913580246914*lambda_2[0, 3] - 0.0246913580246914*lambda_2[0, 4] <= 2*g*B[0, 48] + 3*k*B[0, 39] - l*B[0, 48] + 48.9*B[0, 37]*t[0, 1] + 2.775*B[0, 37] + 120*B[0, 39]*t[0, 3] + 80*B[0, 48]*t[0, 1] + 32.6*B[0, 48]*t[0, 3] - 13.0*B[0, 48] + B[0, 59] + B[0, 62]+ objc]
constraints += [0.0246913580246914*lambda_2[0, 2] + 0.0246913580246914*lambda_2[0, 3] - 0.0246913580246914*lambda_2[0, 4] >= 2*g*B[0, 48] + 3*k*B[0, 39] - l*B[0, 48] + 48.9*B[0, 37]*t[0, 1] + 2.775*B[0, 37] + 120*B[0, 39]*t[0, 3] + 80*B[0, 48]*t[0, 1] + 32.6*B[0, 48]*t[0, 3] - 13.0*B[0, 48] + B[0, 59] + B[0, 62]- objc]
constraints += [0.0246913580246914*lambda_2[0, 2] + 0.0246913580246914*lambda_2[0, 3] - 0.0246913580246914*lambda_2[0, 4] <= -l*B[0, 49] + 120*B[0, 40]*t[0, 2] + 80*B[0, 49]*t[0, 1] - 13.0*B[0, 49] + 16.3*B[0, 58]*t[0, 1] + 0.925*B[0, 58] + 16.3*B[0, 59]*t[0, 2] + B[0, 63] + 13.4*B[0, 65]+ objc]
constraints += [0.0246913580246914*lambda_2[0, 2] + 0.0246913580246914*lambda_2[0, 3] - 0.0246913580246914*lambda_2[0, 4] >= -l*B[0, 49] + 120*B[0, 40]*t[0, 2] + 80*B[0, 49]*t[0, 1] - 13.0*B[0, 49] + 16.3*B[0, 58]*t[0, 1] + 0.925*B[0, 58] + 16.3*B[0, 59]*t[0, 2] + B[0, 63] + 13.4*B[0, 65]- objc]
constraints += [0.0123456790123457*lambda_2[0, 2] + 0.0123456790123457*lambda_2[0, 3] - 0.0123456790123457*lambda_2[0, 4] <= -l*B[0, 15] + 160*B[0, 15]*t[0, 1] - 26.0*B[0, 15] + 16.3*B[0, 39]*t[0, 1] + 0.925*B[0, 39] + B[0, 43]+ objc]
constraints += [0.0123456790123457*lambda_2[0, 2] + 0.0123456790123457*lambda_2[0, 3] - 0.0123456790123457*lambda_2[0, 4] >= -l*B[0, 15] + 160*B[0, 15]*t[0, 1] - 26.0*B[0, 15] + 16.3*B[0, 39]*t[0, 1] + 0.925*B[0, 39] + B[0, 43]- objc]
constraints += [-0.111111111111111*lambda_2[0, 0] + 0.111111111111111*lambda_2[0, 1] - 0.222222222222222*lambda_2[0, 2] + 0.111111111111111*lambda_2[0, 4] <= -l*B[0, 8] + 16.3*B[0, 20]*t[0, 0] + 40*B[0, 22]*t[0, 0] - 0.001+ objc]
constraints += [-0.111111111111111*lambda_2[0, 0] + 0.111111111111111*lambda_2[0, 1] - 0.222222222222222*lambda_2[0, 2] + 0.111111111111111*lambda_2[0, 4] >= -l*B[0, 8] + 16.3*B[0, 20]*t[0, 0] + 40*B[0, 22]*t[0, 0] - 0.001- objc]
constraints += [0.0246913580246914*lambda_2[0, 2] + 0.0246913580246914*lambda_2[0, 3] - 0.0246913580246914*lambda_2[0, 4] <= 2*g*B[0, 50] + k*B[0, 67] - l*B[0, 50] + 48.9*B[0, 41]*t[0, 0] + 32.6*B[0, 50]*t[0, 3] + 40*B[0, 62]*t[0, 0] + B[0, 66] + 40*B[0, 67]*t[0, 3]+ objc]
constraints += [0.0246913580246914*lambda_2[0, 2] + 0.0246913580246914*lambda_2[0, 3] - 0.0246913580246914*lambda_2[0, 4] >= 2*g*B[0, 50] + k*B[0, 67] - l*B[0, 50] + 48.9*B[0, 41]*t[0, 0] + 32.6*B[0, 50]*t[0, 3] + 40*B[0, 62]*t[0, 0] + B[0, 66] + 40*B[0, 67]*t[0, 3]- objc]
constraints += [0.0246913580246914*lambda_2[0, 2] + 0.0246913580246914*lambda_2[0, 3] - 0.0246913580246914*lambda_2[0, 4] <= -l*B[0, 51] + 40.2*B[0, 45] + 16.3*B[0, 61]*t[0, 0] + 40*B[0, 63]*t[0, 0] + 16.3*B[0, 66]*t[0, 2] + 40*B[0, 68]*t[0, 2]+ objc]
constraints += [0.0246913580246914*lambda_2[0, 2] + 0.0246913580246914*lambda_2[0, 3] - 0.0246913580246914*lambda_2[0, 4] >= -l*B[0, 51] + 40.2*B[0, 45] + 16.3*B[0, 61]*t[0, 0] + 40*B[0, 63]*t[0, 0] + 16.3*B[0, 66]*t[0, 2] + 40*B[0, 68]*t[0, 2]- objc]
constraints += [0.0246913580246914*lambda_2[0, 2] + 0.0246913580246914*lambda_2[0, 3] - 0.0246913580246914*lambda_2[0, 4] <= -l*B[0, 52] + 120*B[0, 43]*t[0, 0] + 3*B[0, 46] + 80*B[0, 52]*t[0, 1] - 13.0*B[0, 52] + 16.3*B[0, 64]*t[0, 0] + 16.3*B[0, 67]*t[0, 1] + 0.925*B[0, 67]+ objc]
constraints += [0.0246913580246914*lambda_2[0, 2] + 0.0246913580246914*lambda_2[0, 3] - 0.0246913580246914*lambda_2[0, 4] >= -l*B[0, 52] + 120*B[0, 43]*t[0, 0] + 3*B[0, 46] + 80*B[0, 52]*t[0, 1] - 13.0*B[0, 52] + 16.3*B[0, 64]*t[0, 0] + 16.3*B[0, 67]*t[0, 1] + 0.925*B[0, 67]- objc]
constraints += [0.0123456790123457*lambda_2[0, 2] + 0.0123456790123457*lambda_2[0, 3] - 0.0123456790123457*lambda_2[0, 4] <= -l*B[0, 16] + 16.3*B[0, 44]*t[0, 0] + 40*B[0, 46]*t[0, 0]+ objc]
constraints += [0.0123456790123457*lambda_2[0, 2] + 0.0123456790123457*lambda_2[0, 3] - 0.0123456790123457*lambda_2[0, 4] >= -l*B[0, 16] + 16.3*B[0, 44]*t[0, 0] + 40*B[0, 46]*t[0, 0]- objc]


#------------------The Unsafe conditions------------------
constraints += [-8*lambda_3[0, 0] + 9*lambda_3[0, 1] + 64*lambda_3[0, 2] + 81*lambda_3[0, 3] - 72*lambda_3[0, 4] <= -B[0, 0]+ objc]
constraints += [-8*lambda_3[0, 0] + 9*lambda_3[0, 1] + 64*lambda_3[0, 2] + 81*lambda_3[0, 3] - 72*lambda_3[0, 4] >= -B[0, 0]- objc]
constraints += [2*lambda_3[0, 0] - 2*lambda_3[0, 1] - 32*lambda_3[0, 2] - 36*lambda_3[0, 3] + 34*lambda_3[0, 4] <= -B[0, 1]+ objc]
constraints += [2*lambda_3[0, 0] - 2*lambda_3[0, 1] - 32*lambda_3[0, 2] - 36*lambda_3[0, 3] + 34*lambda_3[0, 4] >= -B[0, 1]- objc]
constraints += [-lambda_3[0, 0] + lambda_3[0, 1] + 20*lambda_3[0, 2] + 22*lambda_3[0, 3] - 21*lambda_3[0, 4] <= -B[0, 5] - 0.0001+ objc]
constraints += [-lambda_3[0, 0] + lambda_3[0, 1] + 20*lambda_3[0, 2] + 22*lambda_3[0, 3] - 21*lambda_3[0, 4] >= -B[0, 5] - 0.0001- objc]
constraints += [-4*lambda_3[0, 2] - 4*lambda_3[0, 3] + 4*lambda_3[0, 4] <= -B[0, 9]+ objc]
constraints += [-4*lambda_3[0, 2] - 4*lambda_3[0, 3] + 4*lambda_3[0, 4] >= -B[0, 9]- objc]
constraints += [lambda_3[0, 2] + lambda_3[0, 3] - lambda_3[0, 4] <= -B[0, 13]+ objc]
constraints += [lambda_3[0, 2] + lambda_3[0, 3] - lambda_3[0, 4] >= -B[0, 13]- objc]
constraints += [-lambda_3[0, 0] + lambda_3[0, 1] + 16*lambda_3[0, 2] + 18*lambda_3[0, 3] - 17*lambda_3[0, 4] <= -B[0, 6] - 0.0001+ objc]
constraints += [-lambda_3[0, 0] + lambda_3[0, 1] + 16*lambda_3[0, 2] + 18*lambda_3[0, 3] - 17*lambda_3[0, 4] >= -B[0, 6] - 0.0001- objc]
constraints += [-4*lambda_3[0, 2] - 4*lambda_3[0, 3] + 4*lambda_3[0, 4] <= -B[0, 24]+ objc]
constraints += [-4*lambda_3[0, 2] - 4*lambda_3[0, 3] + 4*lambda_3[0, 4] >= -B[0, 24]- objc]
constraints += [2*lambda_3[0, 2] + 2*lambda_3[0, 3] - 2*lambda_3[0, 4] <= -B[0, 47]+ objc]
constraints += [2*lambda_3[0, 2] + 2*lambda_3[0, 3] - 2*lambda_3[0, 4] >= -B[0, 47]- objc]
constraints += [lambda_3[0, 2] + lambda_3[0, 3] - lambda_3[0, 4] <= -B[0, 14]+ objc]
constraints += [lambda_3[0, 2] + lambda_3[0, 3] - lambda_3[0, 4] >= -B[0, 14]- objc]
constraints += [4*lambda_3[0, 0] - 4*lambda_3[0, 1] - 64*lambda_3[0, 2] - 72*lambda_3[0, 3] + 68*lambda_3[0, 4] <= -B[0, 3]+ objc]
constraints += [4*lambda_3[0, 0] - 4*lambda_3[0, 1] - 64*lambda_3[0, 2] - 72*lambda_3[0, 3] + 68*lambda_3[0, 4] >= -B[0, 3]- objc]
constraints += [16*lambda_3[0, 2] + 16*lambda_3[0, 3] - 16*lambda_3[0, 4] <= -B[0, 18]+ objc]
constraints += [16*lambda_3[0, 2] + 16*lambda_3[0, 3] - 16*lambda_3[0, 4] >= -B[0, 18]- objc]
constraints += [-8*lambda_3[0, 2] - 8*lambda_3[0, 3] + 8*lambda_3[0, 4] <= -B[0, 25]+ objc]
constraints += [-8*lambda_3[0, 2] - 8*lambda_3[0, 3] + 8*lambda_3[0, 4] >= -B[0, 25]- objc]
constraints += [-8*lambda_3[0, 2] - 8*lambda_3[0, 3] + 8*lambda_3[0, 4] <= -B[0, 26]+ objc]
constraints += [-8*lambda_3[0, 2] - 8*lambda_3[0, 3] + 8*lambda_3[0, 4] >= -B[0, 26]- objc]
constraints += [-lambda_3[0, 0] + lambda_3[0, 1] + 32*lambda_3[0, 2] + 34*lambda_3[0, 3] - 33*lambda_3[0, 4] <= -B[0, 7] - 0.0001+ objc]
constraints += [-lambda_3[0, 0] + lambda_3[0, 1] + 32*lambda_3[0, 2] + 34*lambda_3[0, 3] - 33*lambda_3[0, 4] >= -B[0, 7] - 0.0001- objc]
constraints += [-4*lambda_3[0, 2] - 4*lambda_3[0, 3] + 4*lambda_3[0, 4] <= -B[0, 27]+ objc]
constraints += [-4*lambda_3[0, 2] - 4*lambda_3[0, 3] + 4*lambda_3[0, 4] >= -B[0, 27]- objc]
constraints += [2*lambda_3[0, 2] + 2*lambda_3[0, 3] - 2*lambda_3[0, 4] <= -B[0, 48]+ objc]
constraints += [2*lambda_3[0, 2] + 2*lambda_3[0, 3] - 2*lambda_3[0, 4] >= -B[0, 48]- objc]
constraints += [2*lambda_3[0, 2] + 2*lambda_3[0, 3] - 2*lambda_3[0, 4] <= -B[0, 49]+ objc]
constraints += [2*lambda_3[0, 2] + 2*lambda_3[0, 3] - 2*lambda_3[0, 4] >= -B[0, 49]- objc]
constraints += [-8*lambda_3[0, 2] - 8*lambda_3[0, 3] + 8*lambda_3[0, 4] <= -B[0, 11]+ objc]
constraints += [-8*lambda_3[0, 2] - 8*lambda_3[0, 3] + 8*lambda_3[0, 4] >= -B[0, 11]- objc]
constraints += [lambda_3[0, 2] + lambda_3[0, 3] - lambda_3[0, 4] <= -B[0, 15]+ objc]
constraints += [lambda_3[0, 2] + lambda_3[0, 3] - lambda_3[0, 4] >= -B[0, 15]- objc]
constraints += [4*lambda_3[0, 0] - 4*lambda_3[0, 1] - 64*lambda_3[0, 2] - 72*lambda_3[0, 3] + 68*lambda_3[0, 4] <= -B[0, 4]+ objc]
constraints += [4*lambda_3[0, 0] - 4*lambda_3[0, 1] - 64*lambda_3[0, 2] - 72*lambda_3[0, 3] + 68*lambda_3[0, 4] >= -B[0, 4]- objc]
constraints += [16*lambda_3[0, 2] + 16*lambda_3[0, 3] - 16*lambda_3[0, 4] <= -B[0, 20]+ objc]
constraints += [16*lambda_3[0, 2] + 16*lambda_3[0, 3] - 16*lambda_3[0, 4] >= -B[0, 20]- objc]
constraints += [-8*lambda_3[0, 2] - 8*lambda_3[0, 3] + 8*lambda_3[0, 4] <= -B[0, 29]+ objc]
constraints += [-8*lambda_3[0, 2] - 8*lambda_3[0, 3] + 8*lambda_3[0, 4] >= -B[0, 29]- objc]
constraints += [-8*lambda_3[0, 2] - 8*lambda_3[0, 3] + 8*lambda_3[0, 4] <= -B[0, 30]+ objc]
constraints += [-8*lambda_3[0, 2] - 8*lambda_3[0, 3] + 8*lambda_3[0, 4] >= -B[0, 30]- objc]
constraints += [32*lambda_3[0, 2] + 32*lambda_3[0, 3] - 32*lambda_3[0, 4] <= -B[0, 22]+ objc]
constraints += [32*lambda_3[0, 2] + 32*lambda_3[0, 3] - 32*lambda_3[0, 4] >= -B[0, 22]- objc]
constraints += [-8*lambda_3[0, 2] - 8*lambda_3[0, 3] + 8*lambda_3[0, 4] <= -B[0, 31]+ objc]
constraints += [-8*lambda_3[0, 2] - 8*lambda_3[0, 3] + 8*lambda_3[0, 4] >= -B[0, 31]- objc]
constraints += [-lambda_3[0, 0] + lambda_3[0, 1] + 32*lambda_3[0, 2] + 34*lambda_3[0, 3] - 33*lambda_3[0, 4] <= -B[0, 8] - 0.0001+ objc]
constraints += [-lambda_3[0, 0] + lambda_3[0, 1] + 32*lambda_3[0, 2] + 34*lambda_3[0, 3] - 33*lambda_3[0, 4] >= -B[0, 8] - 0.0001- objc]
constraints += [-4*lambda_3[0, 2] - 4*lambda_3[0, 3] + 4*lambda_3[0, 4] <= -B[0, 32]+ objc]
constraints += [-4*lambda_3[0, 2] - 4*lambda_3[0, 3] + 4*lambda_3[0, 4] >= -B[0, 32]- objc]
constraints += [2*lambda_3[0, 2] + 2*lambda_3[0, 3] - 2*lambda_3[0, 4] <= -B[0, 50]+ objc]
constraints += [2*lambda_3[0, 2] + 2*lambda_3[0, 3] - 2*lambda_3[0, 4] >= -B[0, 50]- objc]
constraints += [2*lambda_3[0, 2] + 2*lambda_3[0, 3] - 2*lambda_3[0, 4] <= -B[0, 51]+ objc]
constraints += [2*lambda_3[0, 2] + 2*lambda_3[0, 3] - 2*lambda_3[0, 4] >= -B[0, 51]- objc]
constraints += [-8*lambda_3[0, 2] - 8*lambda_3[0, 3] + 8*lambda_3[0, 4] <= -B[0, 34]+ objc]
constraints += [-8*lambda_3[0, 2] - 8*lambda_3[0, 3] + 8*lambda_3[0, 4] >= -B[0, 34]- objc]
constraints += [2*lambda_3[0, 2] + 2*lambda_3[0, 3] - 2*lambda_3[0, 4] <= -B[0, 52]+ objc]
constraints += [2*lambda_3[0, 2] + 2*lambda_3[0, 3] - 2*lambda_3[0, 4] >= -B[0, 52]- objc]
constraints += [-8*lambda_3[0, 2] - 8*lambda_3[0, 3] + 8*lambda_3[0, 4] <= -B[0, 12]+ objc]
constraints += [-8*lambda_3[0, 2] - 8*lambda_3[0, 3] + 8*lambda_3[0, 4] >= -B[0, 12]- objc]
constraints += [lambda_3[0, 2] + lambda_3[0, 3] - lambda_3[0, 4] <= -B[0, 16]+ objc]
constraints += [lambda_3[0, 2] + lambda_3[0, 3] - lambda_3[0, 4] >= -B[0, 16]- objc]

#------------------Monomial and Polynomial Terms------------------
polynomial terms:[1, r, phi_e, v_y, y, r**2, phi_e**2, v_y**2, y**2, r**3, phi_e**3, v_y**3, y**3, r**4, phi_e**4, v_y**4, y**4, phi_e*r, r*v_y, phi_e*v_y, r*y, phi_e*y, v_y*y, phi_e*r**2, phi_e**2*r, r**2*v_y, phi_e**2*v_y, r*v_y**2, phi_e*v_y**2, r**2*y, phi_e**2*y, v_y**2*y, r*y**2, phi_e*y**2, v_y*y**2, phi_e*r**3, phi_e**3*r, r**3*v_y, phi_e**3*v_y, r*v_y**3, phi_e*v_y**3, r**3*y, phi_e**3*y, v_y**3*y, r*y**3, phi_e*y**3, v_y*y**3, phi_e**2*r**2, r**2*v_y**2, phi_e**2*v_y**2, r**2*y**2, phi_e**2*y**2, v_y**2*y**2, phi_e*r*v_y, phi_e*r*y, r*v_y*y, phi_e*v_y*y, phi_e*r**2*v_y, phi_e**2*r*v_y, phi_e*r*v_y**2, phi_e*r**2*y, phi_e**2*r*y, r**2*v_y*y, phi_e**2*v_y*y, r*v_y**2*y, phi_e*v_y**2*y, phi_e*r*y**2, r*v_y*y**2, phi_e*v_y*y**2, phi_e*r*v_y*y]
number of polynomial terms:70
the length of the lambda_1 is5
the length of the lambda_2 is5
the length of the lambda_3 is5

#------------------Lie Derivative test------------------
g*phi_e**3*r*B[0, 36] + 2*g*phi_e**2*r**2*B[0, 47] + g*phi_e**2*r*v_y*B[0, 58] + g*phi_e**2*r*y*B[0, 61] + g*phi_e**2*r*B[0, 24] + 3*g*phi_e*r**3*B[0, 35] + 2*g*phi_e*r**2*v_y*B[0, 57] + 2*g*phi_e*r**2*y*B[0, 60] + 2*g*phi_e*r**2*B[0, 23] + g*phi_e*r*v_y**2*B[0, 59] + g*phi_e*r*v_y*y*B[0, 69] + g*phi_e*r*v_y*B[0, 53] + g*phi_e*r*y**2*B[0, 66] + g*phi_e*r*y*B[0, 54] + g*phi_e*r*B[0, 17] + 4*g*r**4*B[0, 13] + 3*g*r**3*v_y*B[0, 37] + 3*g*r**3*y*B[0, 41] + 3*g*r**3*B[0, 9] + 2*g*r**2*v_y**2*B[0, 48] + 2*g*r**2*v_y*y*B[0, 62] + 2*g*r**2*v_y*B[0, 25] + 2*g*r**2*y**2*B[0, 50] + 2*g*r**2*y*B[0, 29] + 2*g*r**2*B[0, 5] + g*r*v_y**3*B[0, 39] + g*r*v_y**2*y*B[0, 64] + g*r*v_y**2*B[0, 27] + g*r*v_y*y**2*B[0, 67] + g*r*v_y*y*B[0, 55] + g*r*v_y*B[0, 18] + g*r*y**3*B[0, 44] + g*r*y**2*B[0, 32] + g*r*y*B[0, 20] + g*r*B[0, 1] + k*phi_e**3*r*B[0, 38] + k*phi_e**2*r**2*B[0, 58] + 2*k*phi_e**2*r*v_y*B[0, 49] + k*phi_e**2*r*y*B[0, 63] + k*phi_e**2*r*B[0, 26] + k*phi_e*r**3*B[0, 57] + 2*k*phi_e*r**2*v_y*B[0, 59] + k*phi_e*r**2*y*B[0, 69] + k*phi_e*r**2*B[0, 53] + 3*k*phi_e*r*v_y**2*B[0, 40] + 2*k*phi_e*r*v_y*y*B[0, 65] + 2*k*phi_e*r*v_y*B[0, 28] + k*phi_e*r*y**2*B[0, 68] + k*phi_e*r*y*B[0, 56] + k*phi_e*r*B[0, 19] + k*r**4*B[0, 37] + 2*k*r**3*v_y*B[0, 48] + k*r**3*y*B[0, 62] + k*r**3*B[0, 25] + 3*k*r**2*v_y**2*B[0, 39] + 2*k*r**2*v_y*y*B[0, 64] + 2*k*r**2*v_y*B[0, 27] + k*r**2*y**2*B[0, 67] + k*r**2*y*B[0, 55] + k*r**2*B[0, 18] + 4*k*r*v_y**3*B[0, 15] + 3*k*r*v_y**2*y*B[0, 43] + 3*k*r*v_y**2*B[0, 11] + 2*k*r*v_y*y**2*B[0, 52] + 2*k*r*v_y*y*B[0, 31] + 2*k*r*v_y*B[0, 7] + k*r*y**3*B[0, 46] + k*r*y**2*B[0, 34] + k*r*y*B[0, 22] + k*r*B[0, 3] - l*phi_e**4*B[0, 14] - l*phi_e**3*r*B[0, 36] - l*phi_e**3*v_y*B[0, 38] - l*phi_e**3*y*B[0, 42] - l*phi_e**3*B[0, 10] - l*phi_e**2*r**2*B[0, 47] - l*phi_e**2*r*v_y*B[0, 58] - l*phi_e**2*r*y*B[0, 61] - l*phi_e**2*r*B[0, 24] - l*phi_e**2*v_y**2*B[0, 49] - l*phi_e**2*v_y*y*B[0, 63] - l*phi_e**2*v_y*B[0, 26] - l*phi_e**2*y**2*B[0, 51] - l*phi_e**2*y*B[0, 30] - l*phi_e**2*B[0, 6] - l*phi_e*r**3*B[0, 35] - l*phi_e*r**2*v_y*B[0, 57] - l*phi_e*r**2*y*B[0, 60] - l*phi_e*r**2*B[0, 23] - l*phi_e*r*v_y**2*B[0, 59] - l*phi_e*r*v_y*y*B[0, 69] - l*phi_e*r*v_y*B[0, 53] - l*phi_e*r*y**2*B[0, 66] - l*phi_e*r*y*B[0, 54] - l*phi_e*r*B[0, 17] - l*phi_e*v_y**3*B[0, 40] - l*phi_e*v_y**2*y*B[0, 65] - l*phi_e*v_y**2*B[0, 28] - l*phi_e*v_y*y**2*B[0, 68] - l*phi_e*v_y*y*B[0, 56] - l*phi_e*v_y*B[0, 19] - l*phi_e*y**3*B[0, 45] - l*phi_e*y**2*B[0, 33] - l*phi_e*y*B[0, 21] - l*phi_e*B[0, 2] - l*r**4*B[0, 13] - l*r**3*v_y*B[0, 37] - l*r**3*y*B[0, 41] - l*r**3*B[0, 9] - l*r**2*v_y**2*B[0, 48] - l*r**2*v_y*y*B[0, 62] - l*r**2*v_y*B[0, 25] - l*r**2*y**2*B[0, 50] - l*r**2*y*B[0, 29] - l*r**2*B[0, 5] - l*r*v_y**3*B[0, 39] - l*r*v_y**2*y*B[0, 64] - l*r*v_y**2*B[0, 27] - l*r*v_y*y**2*B[0, 67] - l*r*v_y*y*B[0, 55] - l*r*v_y*B[0, 18] - l*r*y**3*B[0, 44] - l*r*y**2*B[0, 32] - l*r*y*B[0, 20] - l*r*B[0, 1] - l*v_y**4*B[0, 15] - l*v_y**3*y*B[0, 43] - l*v_y**3*B[0, 11] - l*v_y**2*y**2*B[0, 52] - l*v_y**2*y*B[0, 31] - l*v_y**2*B[0, 7] - l*v_y*y**3*B[0, 46] - l*v_y*y**2*B[0, 34] - l*v_y*y*B[0, 22] - l*v_y*B[0, 3] - l*y**4*B[0, 16] - l*y**3*B[0, 12] - l*y**2*B[0, 8] - l*y*B[0, 4] - l*B[0, 0] + 16.3*phi_e**4*B[0, 36]*t[0, 2] + 40*phi_e**4*B[0, 38]*t[0, 2] + 13.4*phi_e**4*B[0, 42] + 4*phi_e**3*r*B[0, 14] + 16.3*phi_e**3*r*B[0, 36]*t[0, 3] + 40*phi_e**3*r*B[0, 38]*t[0, 3] + 32.6*phi_e**3*r*B[0, 47]*t[0, 2] + 40*phi_e**3*r*B[0, 58]*t[0, 2] + 13.4*phi_e**3*r*B[0, 61] + 16.3*phi_e**3*v_y*B[0, 36]*t[0, 1] + 0.925*phi_e**3*v_y*B[0, 36] + 40*phi_e**3*v_y*B[0, 38]*t[0, 1] - 6.5*phi_e**3*v_y*B[0, 38] + phi_e**3*v_y*B[0, 42] + 80*phi_e**3*v_y*B[0, 49]*t[0, 2] + 16.3*phi_e**3*v_y*B[0, 58]*t[0, 2] + 13.4*phi_e**3*v_y*B[0, 63] + 16.3*phi_e**3*y*B[0, 36]*t[0, 0] + 40*phi_e**3*y*B[0, 38]*t[0, 0] + 26.8*phi_e**3*y*B[0, 51] + 16.3*phi_e**3*y*B[0, 61]*t[0, 2] + 40*phi_e**3*y*B[0, 63]*t[0, 2] + 16.3*phi_e**3*B[0, 24]*t[0, 2] + 40*phi_e**3*B[0, 26]*t[0, 2] + 13.4*phi_e**3*B[0, 30] + 48.9*phi_e**2*r**2*B[0, 35]*t[0, 2] + 3*phi_e**2*r**2*B[0, 36] + 32.6*phi_e**2*r**2*B[0, 47]*t[0, 3] + 40*phi_e**2*r**2*B[0, 57]*t[0, 2] + 40*phi_e**2*r**2*B[0, 58]*t[0, 3] + 13.4*phi_e**2*r**2*B[0, 60] + 3*phi_e**2*r*v_y*B[0, 38] + 32.6*phi_e**2*r*v_y*B[0, 47]*t[0, 1] + 1.85*phi_e**2*r*v_y*B[0, 47] + 80*phi_e**2*r*v_y*B[0, 49]*t[0, 3] + 32.6*phi_e**2*r*v_y*B[0, 57]*t[0, 2] + 40*phi_e**2*r*v_y*B[0, 58]*t[0, 1] + 16.3*phi_e**2*r*v_y*B[0, 58]*t[0, 3] - 6.5*phi_e**2*r*v_y*B[0, 58] + 80*phi_e**2*r*v_y*B[0, 59]*t[0, 2] + phi_e**2*r*v_y*B[0, 61] + 13.4*phi_e**2*r*v_y*B[0, 69] + 3*phi_e**2*r*y*B[0, 42] + 32.6*phi_e**2*r*y*B[0, 47]*t[0, 0] + 40*phi_e**2*r*y*B[0, 58]*t[0, 0] + 32.6*phi_e**2*r*y*B[0, 60]*t[0, 2] + 16.3*phi_e**2*r*y*B[0, 61]*t[0, 3] + 40*phi_e**2*r*y*B[0, 63]*t[0, 3] + 26.8*phi_e**2*r*y*B[0, 66] + 40*phi_e**2*r*y*B[0, 69]*t[0, 2] + 3*phi_e**2*r*B[0, 10] + 32.6*phi_e**2*r*B[0, 23]*t[0, 2] + 16.3*phi_e**2*r*B[0, 24]*t[0, 3] + 40*phi_e**2*r*B[0, 26]*t[0, 3] + 40*phi_e**2*r*B[0, 53]*t[0, 2] + 13.4*phi_e**2*r*B[0, 54] + 120*phi_e**2*v_y**2*B[0, 40]*t[0, 2] + 80*phi_e**2*v_y**2*B[0, 49]*t[0, 1] - 13.0*phi_e**2*v_y**2*B[0, 49] + 16.3*phi_e**2*v_y**2*B[0, 58]*t[0, 1] + 0.925*phi_e**2*v_y**2*B[0, 58] + 16.3*phi_e**2*v_y**2*B[0, 59]*t[0, 2] + phi_e**2*v_y**2*B[0, 63] + 13.4*phi_e**2*v_y**2*B[0, 65] + 80*phi_e**2*v_y*y*B[0, 49]*t[0, 0] + 2*phi_e**2*v_y*y*B[0, 51] + 16.3*phi_e**2*v_y*y*B[0, 58]*t[0, 0] + 16.3*phi_e**2*v_y*y*B[0, 61]*t[0, 1] + 0.925*phi_e**2*v_y*y*B[0, 61] + 40*phi_e**2*v_y*y*B[0, 63]*t[0, 1] - 6.5*phi_e**2*v_y*y*B[0, 63] + 80*phi_e**2*v_y*y*B[0, 65]*t[0, 2] + 26.8*phi_e**2*v_y*y*B[0, 68] + 16.3*phi_e**2*v_y*y*B[0, 69]*t[0, 2] + 16.3*phi_e**2*v_y*B[0, 24]*t[0, 1] + 0.925*phi_e**2*v_y*B[0, 24] + 40*phi_e**2*v_y*B[0, 26]*t[0, 1] - 6.5*phi_e**2*v_y*B[0, 26] + 80*phi_e**2*v_y*B[0, 28]*t[0, 2] + phi_e**2*v_y*B[0, 30] + 16.3*phi_e**2*v_y*B[0, 53]*t[0, 2] + 13.4*phi_e**2*v_y*B[0, 56] + 40.2*phi_e**2*y**2*B[0, 45] + 16.3*phi_e**2*y**2*B[0, 61]*t[0, 0] + 40*phi_e**2*y**2*B[0, 63]*t[0, 0] + 16.3*phi_e**2*y**2*B[0, 66]*t[0, 2] + 40*phi_e**2*y**2*B[0, 68]*t[0, 2] + 16.3*phi_e**2*y*B[0, 24]*t[0, 0] + 40*phi_e**2*y*B[0, 26]*t[0, 0] + 26.8*phi_e**2*y*B[0, 33] + 16.3*phi_e**2*y*B[0, 54]*t[0, 2] + 40*phi_e**2*y*B[0, 56]*t[0, 2] + 16.3*phi_e**2*B[0, 17]*t[0, 2] + 40*phi_e**2*B[0, 19]*t[0, 2] + 13.4*phi_e**2*B[0, 21] + 65.2*phi_e*r**3*B[0, 13]*t[0, 2] + 48.9*phi_e*r**3*B[0, 35]*t[0, 3] + 40*phi_e*r**3*B[0, 37]*t[0, 2] + 13.4*phi_e*r**3*B[0, 41] + 2*phi_e*r**3*B[0, 47] + 40*phi_e*r**3*B[0, 57]*t[0, 3] + 48.9*phi_e*r**2*v_y*B[0, 35]*t[0, 1] + 2.775*phi_e*r**2*v_y*B[0, 35] + 48.9*phi_e*r**2*v_y*B[0, 37]*t[0, 2] + 80*phi_e*r**2*v_y*B[0, 48]*t[0, 2] + 40*phi_e*r**2*v_y*B[0, 57]*t[0, 1] + 32.6*phi_e*r**2*v_y*B[0, 57]*t[0, 3] - 6.5*phi_e*r**2*v_y*B[0, 57] + 2*phi_e*r**2*v_y*B[0, 58] + 80*phi_e*r**2*v_y*B[0, 59]*t[0, 3] + phi_e*r**2*v_y*B[0, 60] + 13.4*phi_e*r**2*v_y*B[0, 62] + 48.9*phi_e*r**2*y*B[0, 35]*t[0, 0] + 48.9*phi_e*r**2*y*B[0, 41]*t[0, 2] + 26.8*phi_e*r**2*y*B[0, 50] + 40*phi_e*r**2*y*B[0, 57]*t[0, 0] + 32.6*phi_e*r**2*y*B[0, 60]*t[0, 3] + 2*phi_e*r**2*y*B[0, 61] + 40*phi_e*r**2*y*B[0, 62]*t[0, 2] + 40*phi_e*r**2*y*B[0, 69]*t[0, 3] + 48.9*phi_e*r**2*B[0, 9]*t[0, 2] + 32.6*phi_e*r**2*B[0, 23]*t[0, 3] + 2*phi_e*r**2*B[0, 24] + 40*phi_e*r**2*B[0, 25]*t[0, 2] + 13.4*phi_e*r**2*B[0, 29] + 40*phi_e*r**2*B[0, 53]*t[0, 3] + 120*phi_e*r*v_y**2*B[0, 39]*t[0, 2] + 120*phi_e*r*v_y**2*B[0, 40]*t[0, 3] + 32.6*phi_e*r*v_y**2*B[0, 48]*t[0, 2] + 2*phi_e*r*v_y**2*B[0, 49] + 32.6*phi_e*r*v_y**2*B[0, 57]*t[0, 1] + 1.85*phi_e*r*v_y**2*B[0, 57] + 80*phi_e*r*v_y**2*B[0, 59]*t[0, 1] + 16.3*phi_e*r*v_y**2*B[0, 59]*t[0, 3] - 13.0*phi_e*r*v_y**2*B[0, 59] + 13.4*phi_e*r*v_y**2*B[0, 64] + phi_e*r*v_y**2*B[0, 69] + 32.6*phi_e*r*v_y*y*B[0, 57]*t[0, 0] + 80*phi_e*r*v_y*y*B[0, 59]*t[0, 0] + 32.6*phi_e*r*v_y*y*B[0, 60]*t[0, 1] + 1.85*phi_e*r*v_y*y*B[0, 60] + 32.6*phi_e*r*v_y*y*B[0, 62]*t[0, 2] + 2*phi_e*r*v_y*y*B[0, 63] + 80*phi_e*r*v_y*y*B[0, 64]*t[0, 2] + 80*phi_e*r*v_y*y*B[0, 65]*t[0, 3] + 2*phi_e*r*v_y*y*B[0, 66] + 26.8*phi_e*r*v_y*y*B[0, 67] + 40*phi_e*r*v_y*y*B[0, 69]*t[0, 1] + 16.3*phi_e*r*v_y*y*B[0, 69]*t[0, 3] - 6.5*phi_e*r*v_y*y*B[0, 69] + 32.6*phi_e*r*v_y*B[0, 23]*t[0, 1] + 1.85*phi_e*r*v_y*B[0, 23] + 32.6*phi_e*r*v_y*B[0, 25]*t[0, 2] + 2*phi_e*r*v_y*B[0, 26] + 80*phi_e*r*v_y*B[0, 27]*t[0, 2] + 80*phi_e*r*v_y*B[0, 28]*t[0, 3] + 40*phi_e*r*v_y*B[0, 53]*t[0, 1] + 16.3*phi_e*r*v_y*B[0, 53]*t[0, 3] - 6.5*phi_e*r*v_y*B[0, 53] + phi_e*r*v_y*B[0, 54] + 13.4*phi_e*r*v_y*B[0, 55] + 40.2*phi_e*r*y**2*B[0, 44] + 32.6*phi_e*r*y**2*B[0, 50]*t[0, 2] + 2*phi_e*r*y**2*B[0, 51] + 32.6*phi_e*r*y**2*B[0, 60]*t[0, 0] + 16.3*phi_e*r*y**2*B[0, 66]*t[0, 3] + 40*phi_e*r*y**2*B[0, 67]*t[0, 2] + 40*phi_e*r*y**2*B[0, 68]*t[0, 3] + 40*phi_e*r*y**2*B[0, 69]*t[0, 0] + 32.6*phi_e*r*y*B[0, 23]*t[0, 0] + 32.6*phi_e*r*y*B[0, 29]*t[0, 2] + 2*phi_e*r*y*B[0, 30] + 26.8*phi_e*r*y*B[0, 32] + 40*phi_e*r*y*B[0, 53]*t[0, 0] + 16.3*phi_e*r*y*B[0, 54]*t[0, 3] + 40*phi_e*r*y*B[0, 55]*t[0, 2] + 40*phi_e*r*y*B[0, 56]*t[0, 3] + 32.6*phi_e*r*B[0, 5]*t[0, 2] + 2*phi_e*r*B[0, 6] + 16.3*phi_e*r*B[0, 17]*t[0, 3] + 40*phi_e*r*B[0, 18]*t[0, 2] + 40*phi_e*r*B[0, 19]*t[0, 3] + 13.4*phi_e*r*B[0, 20] + 160*phi_e*v_y**3*B[0, 15]*t[0, 2] + 16.3*phi_e*v_y**3*B[0, 39]*t[0, 2] + 120*phi_e*v_y**3*B[0, 40]*t[0, 1] - 19.5*phi_e*v_y**3*B[0, 40] + 13.4*phi_e*v_y**3*B[0, 43] + 16.3*phi_e*v_y**3*B[0, 59]*t[0, 1] + 0.925*phi_e*v_y**3*B[0, 59] + phi_e*v_y**3*B[0, 65] + 120*phi_e*v_y**2*y*B[0, 40]*t[0, 0] + 120*phi_e*v_y**2*y*B[0, 43]*t[0, 2] + 26.8*phi_e*v_y**2*y*B[0, 52] + 16.3*phi_e*v_y**2*y*B[0, 59]*t[0, 0] + 16.3*phi_e*v_y**2*y*B[0, 64]*t[0, 2] + 80*phi_e*v_y**2*y*B[0, 65]*t[0, 1] - 13.0*phi_e*v_y**2*y*B[0, 65] + 2*phi_e*v_y**2*y*B[0, 68] + 16.3*phi_e*v_y**2*y*B[0, 69]*t[0, 1] + 0.925*phi_e*v_y**2*y*B[0, 69] + 120*phi_e*v_y**2*B[0, 11]*t[0, 2] + 16.3*phi_e*v_y**2*B[0, 27]*t[0, 2] + 80*phi_e*v_y**2*B[0, 28]*t[0, 1] - 13.0*phi_e*v_y**2*B[0, 28] + 13.4*phi_e*v_y**2*B[0, 31] + 16.3*phi_e*v_y**2*B[0, 53]*t[0, 1] + 0.925*phi_e*v_y**2*B[0, 53] + phi_e*v_y**2*B[0, 56] + 3*phi_e*v_y*y**2*B[0, 45] + 40.2*phi_e*v_y*y**2*B[0, 46] + 80*phi_e*v_y*y**2*B[0, 52]*t[0, 2] + 80*phi_e*v_y*y**2*B[0, 65]*t[0, 0] + 16.3*phi_e*v_y*y**2*B[0, 66]*t[0, 1] + 0.925*phi_e*v_y*y**2*B[0, 66] + 16.3*phi_e*v_y*y**2*B[0, 67]*t[0, 2] + 40*phi_e*v_y*y**2*B[0, 68]*t[0, 1] - 6.5*phi_e*v_y*y**2*B[0, 68] + 16.3*phi_e*v_y*y**2*B[0, 69]*t[0, 0] + 80*phi_e*v_y*y*B[0, 28]*t[0, 0] + 80*phi_e*v_y*y*B[0, 31]*t[0, 2] + 2*phi_e*v_y*y*B[0, 33] + 26.8*phi_e*v_y*y*B[0, 34] + 16.3*phi_e*v_y*y*B[0, 53]*t[0, 0] + 16.3*phi_e*v_y*y*B[0, 54]*t[0, 1] + 0.925*phi_e*v_y*y*B[0, 54] + 16.3*phi_e*v_y*y*B[0, 55]*t[0, 2] + 40*phi_e*v_y*y*B[0, 56]*t[0, 1] - 6.5*phi_e*v_y*y*B[0, 56] + 80*phi_e*v_y*B[0, 7]*t[0, 2] + 16.3*phi_e*v_y*B[0, 17]*t[0, 1] + 0.925*phi_e*v_y*B[0, 17] + 16.3*phi_e*v_y*B[0, 18]*t[0, 2] + 40*phi_e*v_y*B[0, 19]*t[0, 1] - 6.5*phi_e*v_y*B[0, 19] + phi_e*v_y*B[0, 21] + 13.4*phi_e*v_y*B[0, 22] + 53.6*phi_e*y**3*B[0, 16] + 16.3*phi_e*y**3*B[0, 44]*t[0, 2] + 40*phi_e*y**3*B[0, 46]*t[0, 2] + 16.3*phi_e*y**3*B[0, 66]*t[0, 0] + 40*phi_e*y**3*B[0, 68]*t[0, 0] + 40.2*phi_e*y**2*B[0, 12] + 16.3*phi_e*y**2*B[0, 32]*t[0, 2] + 40*phi_e*y**2*B[0, 34]*t[0, 2] + 16.3*phi_e*y**2*B[0, 54]*t[0, 0] + 40*phi_e*y**2*B[0, 56]*t[0, 0] + 26.8*phi_e*y*B[0, 8] + 16.3*phi_e*y*B[0, 17]*t[0, 0] + 40*phi_e*y*B[0, 19]*t[0, 0] + 16.3*phi_e*y*B[0, 20]*t[0, 2] + 40*phi_e*y*B[0, 22]*t[0, 2] + 16.3*phi_e*B[0, 1]*t[0, 2] + 40*phi_e*B[0, 3]*t[0, 2] + 13.4*phi_e*B[0, 4] + 65.2*r**4*B[0, 13]*t[0, 3] + r**4*B[0, 35] + 40*r**4*B[0, 37]*t[0, 3] + 65.2*r**3*v_y*B[0, 13]*t[0, 1] + 3.7*r**3*v_y*B[0, 13] + 40*r**3*v_y*B[0, 37]*t[0, 1] + 48.9*r**3*v_y*B[0, 37]*t[0, 3] - 6.5*r**3*v_y*B[0, 37] + r**3*v_y*B[0, 41] + 80*r**3*v_y*B[0, 48]*t[0, 3] + r**3*v_y*B[0, 57] + 65.2*r**3*y*B[0, 13]*t[0, 0] + 40*r**3*y*B[0, 37]*t[0, 0] + 48.9*r**3*y*B[0, 41]*t[0, 3] + r**3*y*B[0, 60] + 40*r**3*y*B[0, 62]*t[0, 3] + 48.9*r**3*B[0, 9]*t[0, 3] + r**3*B[0, 23] + 40*r**3*B[0, 25]*t[0, 3] + 48.9*r**2*v_y**2*B[0, 37]*t[0, 1] + 2.775*r**2*v_y**2*B[0, 37] + 120*r**2*v_y**2*B[0, 39]*t[0, 3] + 80*r**2*v_y**2*B[0, 48]*t[0, 1] + 32.6*r**2*v_y**2*B[0, 48]*t[0, 3] - 13.0*r**2*v_y**2*B[0, 48] + r**2*v_y**2*B[0, 59] + r**2*v_y**2*B[0, 62] + 48.9*r**2*v_y*y*B[0, 37]*t[0, 0] + 48.9*r**2*v_y*y*B[0, 41]*t[0, 1] + 2.775*r**2*v_y*y*B[0, 41] + 80*r**2*v_y*y*B[0, 48]*t[0, 0] + 2*r**2*v_y*y*B[0, 50] + 40*r**2*v_y*y*B[0, 62]*t[0, 1] + 32.6*r**2*v_y*y*B[0, 62]*t[0, 3] - 6.5*r**2*v_y*y*B[0, 62] + 80*r**2*v_y*y*B[0, 64]*t[0, 3] + r**2*v_y*y*B[0, 69] + 48.9*r**2*v_y*B[0, 9]*t[0, 1] + 2.775*r**2*v_y*B[0, 9] + 40*r**2*v_y*B[0, 25]*t[0, 1] + 32.6*r**2*v_y*B[0, 25]*t[0, 3] - 6.5*r**2*v_y*B[0, 25] + 80*r**2*v_y*B[0, 27]*t[0, 3] + r**2*v_y*B[0, 29] + r**2*v_y*B[0, 53] + 48.9*r**2*y**2*B[0, 41]*t[0, 0] + 32.6*r**2*y**2*B[0, 50]*t[0, 3] + 40*r**2*y**2*B[0, 62]*t[0, 0] + r**2*y**2*B[0, 66] + 40*r**2*y**2*B[0, 67]*t[0, 3] + 48.9*r**2*y*B[0, 9]*t[0, 0] + 40*r**2*y*B[0, 25]*t[0, 0] + 32.6*r**2*y*B[0, 29]*t[0, 3] + r**2*y*B[0, 54] + 40*r**2*y*B[0, 55]*t[0, 3] + 32.6*r**2*B[0, 5]*t[0, 3] + r**2*B[0, 17] + 40*r**2*B[0, 18]*t[0, 3] + 160*r*v_y**3*B[0, 15]*t[0, 3] + 120*r*v_y**3*B[0, 39]*t[0, 1] + 16.3*r*v_y**3*B[0, 39]*t[0, 3] - 19.5*r*v_y**3*B[0, 39] + r*v_y**3*B[0, 40] + 32.6*r*v_y**3*B[0, 48]*t[0, 1] + 1.85*r*v_y**3*B[0, 48] + r*v_y**3*B[0, 64] + 120*r*v_y**2*y*B[0, 39]*t[0, 0] + 120*r*v_y**2*y*B[0, 43]*t[0, 3] + 32.6*r*v_y**2*y*B[0, 48]*t[0, 0] + 32.6*r*v_y**2*y*B[0, 62]*t[0, 1] + 1.85*r*v_y**2*y*B[0, 62] + 80*r*v_y**2*y*B[0, 64]*t[0, 1] + 16.3*r*v_y**2*y*B[0, 64]*t[0, 3] - 13.0*r*v_y**2*y*B[0, 64] + r*v_y**2*y*B[0, 65] + 2*r*v_y**2*y*B[0, 67] + 120*r*v_y**2*B[0, 11]*t[0, 3] + 32.6*r*v_y**2*B[0, 25]*t[0, 1] + 1.85*r*v_y**2*B[0, 25] + 80*r*v_y**2*B[0, 27]*t[0, 1] + 16.3*r*v_y**2*B[0, 27]*t[0, 3] - 13.0*r*v_y**2*B[0, 27] + r*v_y**2*B[0, 28] + r*v_y**2*B[0, 55] + 3*r*v_y*y**2*B[0, 44] + 32.6*r*v_y*y**2*B[0, 50]*t[0, 1] + 1.85*r*v_y*y**2*B[0, 50] + 80*r*v_y*y**2*B[0, 52]*t[0, 3] + 32.6*r*v_y*y**2*B[0, 62]*t[0, 0] + 80*r*v_y*y**2*B[0, 64]*t[0, 0] + 40*r*v_y*y**2*B[0, 67]*t[0, 1] + 16.3*r*v_y*y**2*B[0, 67]*t[0, 3] - 6.5*r*v_y*y**2*B[0, 67] + r*v_y*y**2*B[0, 68] + 32.6*r*v_y*y*B[0, 25]*t[0, 0] + 80*r*v_y*y*B[0, 27]*t[0, 0] + 32.6*r*v_y*y*B[0, 29]*t[0, 1] + 1.85*r*v_y*y*B[0, 29] + 80*r*v_y*y*B[0, 31]*t[0, 3] + 2*r*v_y*y*B[0, 32] + 40*r*v_y*y*B[0, 55]*t[0, 1] + 16.3*r*v_y*y*B[0, 55]*t[0, 3] - 6.5*r*v_y*y*B[0, 55] + r*v_y*y*B[0, 56] + 32.6*r*v_y*B[0, 5]*t[0, 1] + 1.85*r*v_y*B[0, 5] + 80*r*v_y*B[0, 7]*t[0, 3] + 40*r*v_y*B[0, 18]*t[0, 1] + 16.3*r*v_y*B[0, 18]*t[0, 3] - 6.5*r*v_y*B[0, 18] + r*v_y*B[0, 19] + r*v_y*B[0, 20] + 16.3*r*y**3*B[0, 44]*t[0, 3] + r*y**3*B[0, 45] + 40*r*y**3*B[0, 46]*t[0, 3] + 32.6*r*y**3*B[0, 50]*t[0, 0] + 40*r*y**3*B[0, 67]*t[0, 0] + 32.6*r*y**2*B[0, 29]*t[0, 0] + 16.3*r*y**2*B[0, 32]*t[0, 3] + r*y**2*B[0, 33] + 40*r*y**2*B[0, 34]*t[0, 3] + 40*r*y**2*B[0, 55]*t[0, 0] + 32.6*r*y*B[0, 5]*t[0, 0] + 40*r*y*B[0, 18]*t[0, 0] + 16.3*r*y*B[0, 20]*t[0, 3] + r*y*B[0, 21] + 40*r*y*B[0, 22]*t[0, 3] + 16.3*r*B[0, 1]*t[0, 3] + r*B[0, 2] + 40*r*B[0, 3]*t[0, 3] + 160*v_y**4*B[0, 15]*t[0, 1] - 26.0*v_y**4*B[0, 15] + 16.3*v_y**4*B[0, 39]*t[0, 1] + 0.925*v_y**4*B[0, 39] + v_y**4*B[0, 43] + 160*v_y**3*y*B[0, 15]*t[0, 0] + 16.3*v_y**3*y*B[0, 39]*t[0, 0] + 120*v_y**3*y*B[0, 43]*t[0, 1] - 19.5*v_y**3*y*B[0, 43] + 2*v_y**3*y*B[0, 52] + 16.3*v_y**3*y*B[0, 64]*t[0, 1] + 0.925*v_y**3*y*B[0, 64] + 120*v_y**3*B[0, 11]*t[0, 1] - 19.5*v_y**3*B[0, 11] + 16.3*v_y**3*B[0, 27]*t[0, 1] + 0.925*v_y**3*B[0, 27] + v_y**3*B[0, 31] + 120*v_y**2*y**2*B[0, 43]*t[0, 0] + 3*v_y**2*y**2*B[0, 46] + 80*v_y**2*y**2*B[0, 52]*t[0, 1] - 13.0*v_y**2*y**2*B[0, 52] + 16.3*v_y**2*y**2*B[0, 64]*t[0, 0] + 16.3*v_y**2*y**2*B[0, 67]*t[0, 1] + 0.925*v_y**2*y**2*B[0, 67] + 120*v_y**2*y*B[0, 11]*t[0, 0] + 16.3*v_y**2*y*B[0, 27]*t[0, 0] + 80*v_y**2*y*B[0, 31]*t[0, 1] - 13.0*v_y**2*y*B[0, 31] + 2*v_y**2*y*B[0, 34] + 16.3*v_y**2*y*B[0, 55]*t[0, 1] + 0.925*v_y**2*y*B[0, 55] + 80*v_y**2*B[0, 7]*t[0, 1] - 13.0*v_y**2*B[0, 7] + 16.3*v_y**2*B[0, 18]*t[0, 1] + 0.925*v_y**2*B[0, 18] + v_y**2*B[0, 22] + 4*v_y*y**3*B[0, 16] + 16.3*v_y*y**3*B[0, 44]*t[0, 1] + 0.925*v_y*y**3*B[0, 44] + 40*v_y*y**3*B[0, 46]*t[0, 1] - 6.5*v_y*y**3*B[0, 46] + 80*v_y*y**3*B[0, 52]*t[0, 0] + 16.3*v_y*y**3*B[0, 67]*t[0, 0] + 3*v_y*y**2*B[0, 12] + 80*v_y*y**2*B[0, 31]*t[0, 0] + 16.3*v_y*y**2*B[0, 32]*t[0, 1] + 0.925*v_y*y**2*B[0, 32] + 40*v_y*y**2*B[0, 34]*t[0, 1] - 6.5*v_y*y**2*B[0, 34] + 16.3*v_y*y**2*B[0, 55]*t[0, 0] + 80*v_y*y*B[0, 7]*t[0, 0] + 2*v_y*y*B[0, 8] + 16.3*v_y*y*B[0, 18]*t[0, 0] + 16.3*v_y*y*B[0, 20]*t[0, 1] + 0.925*v_y*y*B[0, 20] + 40*v_y*y*B[0, 22]*t[0, 1] - 6.5*v_y*y*B[0, 22] + 16.3*v_y*B[0, 1]*t[0, 1] + 0.925*v_y*B[0, 1] + 40*v_y*B[0, 3]*t[0, 1] - 6.5*v_y*B[0, 3] + v_y*B[0, 4] + 16.3*y**4*B[0, 44]*t[0, 0] + 40*y**4*B[0, 46]*t[0, 0] + 16.3*y**3*B[0, 32]*t[0, 0] + 40*y**3*B[0, 34]*t[0, 0] + 16.3*y**2*B[0, 20]*t[0, 0] + 40*y**2*B[0, 22]*t[0, 0] + 16.3*y*B[0, 1]*t[0, 0] + 40*y*B[0, 3]*t[0, 0]
